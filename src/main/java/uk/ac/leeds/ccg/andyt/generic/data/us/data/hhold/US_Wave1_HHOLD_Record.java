/**
 * Source code generated by uk.ac.leeds.ccg.andyt.generic.data.us.process.US_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.generic.data.us.data.hhold;
public class US_Wave1_HHOLD_Record extends US_Wave1Or2_HHOLD_Record {
protected byte A_ADOPTCH01;
protected byte A_ADOPTCH02;
protected byte A_ADOPTCH03;
protected byte A_ADOPTCH04;
protected byte A_ADOPTCH05;
protected byte A_ADOPTCH06;
protected boolean A_ADOPTCH07;
protected boolean A_ADOPTCH08;
protected boolean A_ADOPTCH09;
protected boolean A_ADOPTCH10;
protected boolean A_ADOPTCH11;
protected boolean A_ADOPTCH12;
protected boolean A_ADOPTCH13;
protected boolean A_ADOPTCH14;
protected boolean A_ADOPTCH15;
protected boolean A_ADOPTCH16;
protected byte A_ADRESP17;
protected byte A_AGEEST;
protected byte A_AGEGR10_DV;
protected byte A_AGEGR13_DV;
protected byte A_AGEGR5_DV;
protected byte A_AGELH;
protected byte A_AGE_DV;
protected byte A_AIDEFT;
protected byte A_AIDHH;
protected byte A_AIDHRS;
protected byte A_AIDHU1;
protected byte A_AIDHU2;
protected byte A_AIDHUA1;
protected byte A_AIDHUA10;
protected byte A_AIDHUA11;
protected byte A_AIDHUA12;
protected byte A_AIDHUA13;
protected byte A_AIDHUA14;
protected byte A_AIDHUA15;
protected byte A_AIDHUA16;
protected byte A_AIDHUA2;
protected byte A_AIDHUA3;
protected byte A_AIDHUA4;
protected byte A_AIDHUA5;
protected byte A_AIDHUA6;
protected byte A_AIDHUA7;
protected byte A_AIDHUA8;
protected byte A_AIDHUA9;
protected byte A_AIDXHH;
protected byte A_ALLCH01;
protected byte A_ALLCH02;
protected byte A_ALLCH03;
protected byte A_ALLCH04;
protected byte A_ALLCH05;
protected byte A_ALLCH06;
protected byte A_ALLCH07;
protected byte A_ALLCH08;
protected byte A_ALLCH09;
protected byte A_ALLCH10;
protected boolean A_ALLCH11;
protected boolean A_ALLCH12;
protected boolean A_ALLCH13;
protected boolean A_ALLCH14;
protected boolean A_ALLCH15;
protected boolean A_ALLCH16;
protected byte A_ATTACKEDW11;
protected byte A_ATTACKEDW12;
protected byte A_ATTACKEDW13;
protected byte A_ATTACKEDW14;
protected byte A_ATTACKEDW15;
protected byte A_ATTACKEDW16;
protected byte A_ATTACKEDW17;
protected byte A_ATTACKEDW196;
protected byte A_ATTACKEDW197;
protected byte A_ATTACKED_DV;
protected byte A_AVOIDANCEW11;
protected byte A_AVOIDANCEW12;
protected byte A_AVOIDANCEW13;
protected byte A_AVOIDANCEW14;
protected byte A_AVOIDANCEW15;
protected byte A_AVOIDANCEW16;
protected byte A_AVOIDANCEW17;
protected byte A_AVOIDANCEW196;
protected byte A_AVOIDANCEW197;
protected byte A_AVOIDED_DV;
protected byte A_BASNSA;
protected double A_BASRATE;
protected byte A_BASREST;
protected byte A_BENCB;
protected byte A_BENCTC;
protected byte A_BENDIS1;
protected byte A_BENDIS10;
protected byte A_BENDIS11;
protected byte A_BENDIS2;
protected byte A_BENDIS3;
protected byte A_BENDIS4;
protected byte A_BENDIS5;
protected byte A_BENDIS6;
protected byte A_BENDIS7;
protected byte A_BENDIS8;
protected byte A_BENDIS9;
protected byte A_BENDIS96;
protected int A_BENEFIT_TM;
protected byte A_BENFAM1;
protected byte A_BENFAM2;
protected byte A_BENFAM3;
protected byte A_BENFAM4;
protected byte A_BENFAM5;
protected byte A_BENFAM96;
protected byte A_BENHOU1;
protected byte A_BENHOU2;
protected byte A_BENHOU3;
protected byte A_BENHOU4;
protected byte A_BENHOU96;
protected byte A_BENPEN1;
protected byte A_BENPEN2;
protected byte A_BENPEN3;
protected byte A_BENPEN4;
protected byte A_BENPEN5;
protected byte A_BENPEN6;
protected byte A_BENPEN7;
protected byte A_BENPEN8;
protected byte A_BENPEN96;
protected byte A_BENSTA1;
protected byte A_BENSTA2;
protected byte A_BENSTA3;
protected byte A_BENSTA4;
protected byte A_BENSTA5;
protected byte A_BENSTA6;
protected byte A_BENSTA7;
protected byte A_BENSTA8;
protected byte A_BENSTA96;
protected byte A_BENTAX1;
protected byte A_BENTAX2;
protected byte A_BENTAX3;
protected byte A_BENTAX4;
protected byte A_BENTAX5;
protected byte A_BENTAX96;
protected byte A_BENUNEMP1;
protected byte A_BENUNEMP2;
protected byte A_BENUNEMP96;
protected short A_BIRTHY;
protected double A_BMI_DV;
protected byte A_BRITID;
protected byte A_BTYPE1;
protected byte A_BTYPE2;
protected byte A_BTYPE3;
protected byte A_BTYPE4;
protected byte A_BTYPE5;
protected byte A_BTYPE6;
protected byte A_BTYPE7;
protected byte A_BTYPE8;
protected byte A_BTYPE9;
protected byte A_BTYPE96;
protected byte A_BUNO_DV;
protected int A_CARING_TM;
protected int A_CARMILES;
protected byte A_CARUSE;
protected byte A_CCARE;
protected byte A_CCWORK;
protected short A_CH1BY4;
protected byte A_CHCON;
protected byte A_CHFAR;
protected int A_CHILDCARE_TM;
protected byte A_CHSEE;
protected byte A_CITZN1;
protected byte A_CITZN2;
protected byte A_CITZN3;
protected boolean A_COHAB_DV;
protected int A_CONSENT_TM;
protected byte A_COUNTRY;
protected byte A_CTADD1_CODE;
protected byte A_CTADD2_CODE;
protected byte A_CTCNTY_CODE;
protected byte A_CTEMAIL_CODE;
protected byte A_CTPCODE_CODE;
protected byte A_CTTEL1_CODE;
protected byte A_CTTEL2_CODE;
protected byte A_CTTOWN_CODE;
protected byte A_CUDDLEKID;
protected int A_DEMOG_TM;
protected boolean A_DEPCHL_DV;
protected byte A_DINNER;
protected int A_DISCRIMINATION_TM;
protected byte A_DISDIF1;
protected byte A_DISDIF10;
protected byte A_DISDIF11;
protected byte A_DISDIF12;
protected byte A_DISDIF2;
protected byte A_DISDIF3;
protected byte A_DISDIF4;
protected byte A_DISDIF5;
protected byte A_DISDIF6;
protected byte A_DISDIF7;
protected byte A_DISDIF8;
protected byte A_DISDIF9;
protected byte A_DISDIF96;
protected short A_DOBY_DV;
protected byte A_DRIVE;
protected byte A_DVAGE;
protected byte A_EDASP;
protected byte A_EDLINKB;
protected byte A_EDTYPE;
protected byte A_EED12;
protected boolean A_EMBOOST;
protected byte A_EMPLOY;
protected int A_EMPLOYMENT_TM;
protected int A_EMPSTAT_TM;
protected byte A_ENGFORM;
protected byte A_ENGLANG;
protected byte A_ENGREAD;
protected byte A_ENGSPK;
protected byte A_ENGTEL;
protected byte A_ENVHABIT1;
protected byte A_ENVHABIT10;
protected byte A_ENVHABIT11;
protected byte A_ENVHABIT2;
protected byte A_ENVHABIT3;
protected byte A_ENVHABIT4;
protected byte A_ENVHABIT5;
protected byte A_ENVHABIT6;
protected byte A_ENVHABIT7;
protected byte A_ENVHABIT8;
protected byte A_ENVHABIT9;
protected int A_ENVIRON_TM;
protected byte A_ETHNIC1;
protected byte A_ETHNIC10;
protected byte A_ETHNIC11;
protected byte A_ETHNIC12;
protected byte A_ETHNIC13;
protected byte A_ETHNIC14;
protected byte A_ETHNIC2;
protected byte A_ETHNIC3;
protected byte A_ETHNIC4;
protected byte A_ETHNIC5;
protected byte A_ETHNIC6;
protected byte A_ETHNIC7;
protected byte A_ETHNIC8;
protected byte A_ETHNIC9;
protected byte A_ETHNIC96;
protected int A_ETHNIC_TM;
protected byte A_ETHN_DV;
protected byte A_EXTNSA;
protected double A_EXTRATE;
protected byte A_EXTREST;
protected int A_FAMILY_TM;
protected byte A_FARKID;
protected byte A_FEDLIK;
protected byte A_FEDNT;
protected byte A_FEEND;
protected byte A_FENOW;
protected int A_FERTILITY_TM;
protected double A_FIBENOTHR_DV;
protected double A_FIBENOTHR_IF;
protected boolean A_FIBENOTHR_TC;
protected double A_FIMNGRS_DV;
protected double A_FIMNGRS_IF;
protected boolean A_FIMNGRS_TC;
protected double A_FIMNINVNET_DV;
protected double A_FIMNLABGRS_DV;
protected double A_FIMNLABGRS_IF;
protected boolean A_FIMNLABGRS_TC;
protected double A_FIMNLABNET_DV;
protected boolean A_FIMNLABNET_TC;
protected double A_FIMNMISC_DV;
protected double A_FIMNNET_DV;
protected double A_FIMNPEN_DV;
protected double A_FIMNPRBEN_DV;
protected double A_FIMNSBEN_DV;
protected int A_FINANCES_TM;
protected byte A_FINFUT;
protected int A_FININT_TM;
protected byte A_FINNOW;
protected byte A_FIYRDB1;
protected byte A_FIYRDB2;
protected byte A_FIYRDB3;
protected byte A_FIYRDB4;
protected byte A_FIYRDB5;
protected byte A_FIYRDB6;
protected int A_FIYRDIA;
protected double A_FIYRINVINC_DV;
protected byte A_FIYRINVINC_IF;
protected boolean A_FIYRINVINC_TC;
protected byte A_FLAGLINK;
protected int A_FNPID;
protected byte A_FNPNO;
protected int A_FNSPID;
protected byte A_FNSPNO;
protected byte A_FORMDIF;
protected int A_FTEXV;
protected byte A_FTEXW;
protected byte A_GOR_DV;
protected boolean A_GPCOMP;
protected int A_GRFPID;
protected byte A_GRFPNO;
protected int A_GRMPID;
protected byte A_GRMPNO;
protected int A_HARASSMENT_TM;
protected byte A_HCOND1;
protected byte A_HCOND10;
protected byte A_HCOND11;
protected byte A_HCOND12;
protected byte A_HCOND13;
protected byte A_HCOND14;
protected byte A_HCOND15;
protected byte A_HCOND16;
protected byte A_HCOND17;
protected byte A_HCOND2;
protected byte A_HCOND3;
protected byte A_HCOND4;
protected byte A_HCOND5;
protected byte A_HCOND6;
protected byte A_HCOND7;
protected byte A_HCOND8;
protected byte A_HCOND9;
protected byte A_HCOND96;
protected byte A_HCONDA01;
protected byte A_HCONDA02;
protected byte A_HCONDA03;
protected byte A_HCONDA04;
protected byte A_HCONDA05;
protected byte A_HCONDA06;
protected byte A_HCONDA07;
protected byte A_HCONDA08;
protected byte A_HCONDA09;
protected byte A_HCONDA10;
protected byte A_HCONDA11;
protected byte A_HCONDA12;
protected byte A_HCONDA13;
protected byte A_HCONDA14;
protected byte A_HCONDA15;
protected byte A_HCONDA16;
protected byte A_HCONDA17;
protected byte A_HCONDS01;
protected byte A_HCONDS02;
protected byte A_HCONDS03;
protected byte A_HCONDS04;
protected byte A_HCONDS05;
protected boolean A_HCONDS06;
protected boolean A_HCONDS07;
protected byte A_HCONDS08;
protected byte A_HCONDS09;
protected byte A_HCONDS10;
protected byte A_HCONDS11;
protected byte A_HCONDS12;
protected byte A_HCONDS13;
protected byte A_HCONDS14;
protected byte A_HCONDS15;
protected byte A_HCONDS16;
protected byte A_HCONDS17;
protected byte A_HEALTH;
protected byte A_HEALTHLINK;
protected int A_HEALTH_TM;
protected byte A_HGADOPTF;
protected byte A_HGADOPTM;
protected byte A_HGBIOF;
protected byte A_HGBIOM;
protected byte A_HGPART;
protected int A_HHGRID_TM;
protected byte A_HHORIG;
protected int A_HHQRE_TM;
protected byte A_HHRESP_DV;
protected int A_HHSTTIME_TM;
protected byte A_HHTYPE_DV;
protected int A_HIDP;
protected byte A_HIQUAL_DV;
protected byte A_HLHT;
protected short A_HLHTC;
protected byte A_HLHTF;
protected byte A_HLHTI;
protected byte A_HLPHMWK;
protected byte A_HLWT;
protected byte A_HLWTE;
protected short A_HLWTK;
protected byte A_HLWTL;
protected byte A_HLWTP;
protected byte A_HLWTS;
protected byte A_HOWLNG;
protected int A_HRPID;
protected byte A_HRPNO;
protected byte A_IENDDATHH;
protected byte A_IENDDATMM;
protected byte A_IENDDATSS;
protected byte A_IMPEVENT1;
protected byte A_IMPEVENT1S;
protected byte A_IMPEVENT2;
protected byte A_IMPEVENT2S;
protected byte A_IMPEVENT3;
protected byte A_IMPEVENT3S;
protected byte A_IMPEVENT4;
protected byte A_IMPEVENT4S;
protected double A_IND5MUS_XW;
protected double A_INDINUS_XW;
protected double A_INDPXUS_XW;
protected double A_INDSCUS_XW;
protected int A_INITIAL_TM;
protected byte A_INSULTEDW11;
protected byte A_INSULTEDW12;
protected byte A_INSULTEDW13;
protected byte A_INSULTEDW14;
protected byte A_INSULTEDW15;
protected byte A_INSULTEDW16;
protected byte A_INSULTEDW17;
protected byte A_INSULTEDW196;
protected byte A_INSULTEDW197;
protected byte A_INSULTED_DV;
protected byte A_INTDATD_DV;
protected byte A_INTDATM_DV;
protected short A_INTDATY_DV;
protected byte A_IOUTCOME;
protected byte A_ISTRTDATD;
protected byte A_ISTRTDATHH;
protected byte A_ISTRTDATM;
protected byte A_ISTRTDATMM;
protected byte A_ISTRTDATSS;
protected short A_ISTRTDATY;
protected byte A_IVAFFCT11;
protected byte A_IVAFFCT12;
protected byte A_IVAFFCT13;
protected byte A_IVAFFCT14;
protected byte A_IVAFFCT15;
protected byte A_IVAFFCT17;
protected byte A_IVAFFCT21;
protected byte A_IVAFFCT22;
protected byte A_IVAFFCT23;
protected byte A_IVAFFCT27;
protected byte A_IVAFFCT30;
protected byte A_IVAFFCT97;
protected byte A_IVCOOP;
protected boolean A_IVFIO;
protected byte A_IVINFNCE;
protected byte A_IVINTLANG;
protected byte A_IVPRSNT;
protected byte A_IVTRANS;
protected byte A_IVWHOINT;
protected byte A_J1NSSEC5_DV;
protected short A_J1SOC00_CC;
protected short A_J1SOC10_CC;
protected byte A_J1SOC90_CC;
protected byte A_J2HAS;
protected short A_J2HRS;
protected int A_J2PAY;
protected double A_J2PAYNET_DV;
protected double A_J2PAY_DV;
protected byte A_J2PAY_IF;
protected byte A_J2SEMP;
protected byte A_JBBGD;
protected byte A_JBBGM;
protected short A_JBBGY;
protected byte A_JBES2000;
protected byte A_JBFT_DV;
protected byte A_JBHAD;
protected byte A_JBHAS;
protected double A_JBHRS;
protected byte A_JBIINDB_DV;
protected short A_JBISCO88_CC;
protected byte A_JBMNGR;
protected byte A_JBNSSEC3_DV;
protected byte A_JBNSSEC5_DV;
protected byte A_JBNSSEC8_DV;
protected byte A_JBNSSEC_DV;
protected byte A_JBOFF;
protected byte A_JBOFFY;
protected byte A_JBOT;
protected byte A_JBOTPD;
protected byte A_JBPEN;
protected byte A_JBPENM;
protected byte A_JBPL;
protected byte A_JBRGSC_DV;
protected byte A_JBSAT;
protected byte A_JBSECT;
protected byte A_JBSECTPUB;
protected byte A_JBSEG_DV;
protected byte A_JBSEMP;
protected byte A_JBSIC07_CC;
protected byte A_JBSIZE;
protected short A_JBSOC00_CC;
protected byte A_JBSOCGR_DV;
protected byte A_JBSTAT;
protected byte A_JBTERM1;
protected byte A_JBTERM2;
protected short A_JBTTWT;
protected byte A_JLBOSS;
protected byte A_JLENDM;
protected short A_JLENDY;
protected byte A_JLES2000;
protected byte A_JLIINDB_DV;
protected short A_JLISCO88_CC;
protected byte A_JLMNGR;
protected byte A_JLNSSEC3_DV;
protected byte A_JLNSSEC5_DV;
protected byte A_JLNSSEC8_DV;
protected byte A_JLNSSEC_DV;
protected byte A_JLRGSC_DV;
protected byte A_JLSEG_DV;
protected byte A_JLSEMP;
protected byte A_JLSIC07_CC;
protected byte A_JLSIZE;
protected short A_JLSOC00_CC;
protected byte A_JOBDENY;
protected byte A_JOBLOOK;
protected int A_JOB_TM;
protected byte A_JSACCS;
protected byte A_JSBOSS;
protected byte A_JSHRS;
protected byte A_JSPART;
protected int A_JSPAYU;
protected byte A_JSPAYW;
protected byte A_JSPL;
protected byte A_JSPRBM;
protected short A_JSPRBY4;
protected byte A_JSPREM;
protected short A_JSPREY4;
protected int A_JSPRF;
protected byte A_JSPRLS;
protected byte A_JSPRNI;
protected byte A_JSPRTX;
protected byte A_JSPYNI;
protected byte A_JSPYTX;
protected byte A_JSSIZE;
protected byte A_JSTTWT;
protected short A_JSTTWTB;
protected byte A_JSTYPEB;
protected short A_JSWORKDIS;
protected byte A_JSWORKTRAV;
protected byte A_JUBGN;
protected byte A_JULK4WK;
protected byte A_JULK4X1;
protected byte A_JULK4X2;
protected byte A_JULK4X3;
protected byte A_JULK4X4;
protected byte A_JULK4X5;
protected byte A_JULK4X6;
protected byte A_JULK4X96;
protected byte A_JULKJB;
protected byte A_K2UCPN1;
protected byte A_K2UCPN2;
protected byte A_K2UCPN3;
protected byte A_K2UCPN4;
protected byte A_K2UCPN5;
protected byte A_KID2UNI1;
protected byte A_KID2UNI2;
protected byte A_KID2UNI3;
protected byte A_KID2UNI4;
protected byte A_KID2UNI5;
protected byte A_KIDSPT;
protected byte A_LADOPT;
protected byte A_LCHMOR;
protected byte A_LCHMORN;
protected byte A_LCMARM;
protected short A_LCMARY4;
protected byte A_LCMCBM;
protected short A_LCMCBY4;
protected byte A_LCMCOH;
protected byte A_LCMSPM;
protected short A_LCMSPY4;
protected byte A_LCOH;
protected boolean A_LDA;
protected boolean A_LDAFLAG;
protected double A_LENINDINTV;
protected byte A_LEVELIMP;
protected byte A_LGAPED;
protected byte A_LINGUA;
protected byte A_LIVESP;
protected boolean A_LIVESP_DV;
protected byte A_LIVEWITH;
protected byte A_LKMOVE;
protected byte A_LNADOPT;
protected byte A_LNCOH;
protected byte A_LNPRNT;
protected byte A_LPRNT;
protected byte A_LVAG14;
protected byte A_LVAG16;
protected byte A_LVREL1;
protected byte A_LVREL2;
protected byte A_LVREL3;
protected byte A_LVREL4;
protected byte A_LVREL5;
protected byte A_LVREL6;
protected byte A_LVREL7;
protected byte A_LVREL8;
protected byte A_LVREL96;
protected byte A_MAAGE;
protected byte A_MABROAD;
protected byte A_MACOB;
protected byte A_MACON;
protected byte A_MAEDQF;
protected byte A_MAFAR;
protected byte A_MAID;
protected byte A_MAINTALIM;
protected byte A_MAJU;
protected byte A_MANSSEC5_DV;
protected byte A_MARSTAT;
protected byte A_MASEE;
protected short A_MASOC00_CC;
protected short A_MASOC10_CC;
protected byte A_MASOC90_CC;
protected byte A_MASTAT_DV;
protected byte A_MAYRUK;
protected short A_MAYRUK1;
protected byte A_MEMORIG;
protected byte A_MGMROB;
protected byte A_MGPROB;
protected int A_MIGRATION_TM;
protected byte A_MINDIRECT;
protected byte A_MLIVED;
protected byte A_MLIVEDIST;
protected byte A_MLIVEDIST5;
protected byte A_MLIVEDISTF;
protected byte A_MLSTAT;
protected byte A_MLSTATCHK;
protected byte A_MNABROAD;
protected byte A_MNLIVED;
protected byte A_MNMOVES;
protected byte A_MNOTHERC;
protected int A_MNPID;
protected byte A_MNPNO;
protected int A_MNSPID;
protected byte A_MNSPNO;
protected byte A_MOBUSE;
protected byte A_MONTH;
protected byte A_MOVEAGE;
protected byte A_MPNO;
protected byte A_MRETURNED;
protected byte A_MVEVER;
protected byte A_MVMNTH;
protected short A_MVYR;
protected byte A_NADOPTCH;
protected byte A_NAIDXHH;
protected byte A_NATCH01;
protected byte A_NATCH02;
protected byte A_NATCH03;
protected byte A_NATCH04;
protected byte A_NATCH05;
protected byte A_NATCH06;
protected byte A_NATCH07;
protected byte A_NATCH08;
protected byte A_NATCH09;
protected byte A_NATCH10;
protected byte A_NATCH11;
protected byte A_NATCH12;
protected boolean A_NATCH13;
protected boolean A_NATCH14;
protected boolean A_NATCH15;
protected boolean A_NATCH16;
protected byte A_NATID1;
protected byte A_NATID2;
protected byte A_NATID3;
protected byte A_NATID4;
protected byte A_NATID5;
protected byte A_NATID6;
protected byte A_NATID97;
protected double A_NBRSNCI_DV;
protected byte A_NCH10TO15;
protected byte A_NCH14RESP;
protected byte A_NCH415RESP;
protected byte A_NCH5TO15;
protected byte A_NCHILD_DV;
protected byte A_NCHRESP;
protected byte A_NCHUND18RESP;
protected byte A_NCHUNDER16;
protected byte A_NDEPCHL_DV;
protected byte A_NETUSE;
protected int A_NETWORKS_TM;
protected byte A_NGRP_DV;
protected byte A_NIACT;
protected byte A_NIREL;
protected byte A_NISERPS;
protected byte A_NMAR;
protected byte A_NNATCH;
protected byte A_NNSIB_DV;
protected byte A_NNSSIB_DV;
protected int A_NONEMP_TM;
protected byte A_NPENSIONER_DV;
protected byte A_NPNS_DV;
protected byte A_NPN_DV;
protected byte A_NQFHIGH_DV;
protected byte A_NRELSW11;
protected byte A_NRELSW12;
protected byte A_NRELSW13;
protected byte A_NRELSW14;
protected byte A_NRELSW15;
protected byte A_NRELSW16;
protected int A_OBSERVE_TM;
protected byte A_OHCH16;
protected byte A_OPRLG;
protected byte A_OPRLG0;
protected byte A_OPRLG0NI;
protected byte A_OPRLG1;
protected byte A_OPRLG2;
protected byte A_OPRLG3;
protected byte A_OVTNSA;
protected byte A_OVTPAY;
protected double A_OVTRATE;
protected byte A_OVTREST;
protected byte A_PAAGE;
protected byte A_PACOB;
protected byte A_PACON;
protected byte A_PAEDQF;
protected byte A_PAFAR;
protected byte A_PAID;
protected byte A_PAJU;
protected byte A_PANSSEC5_DV;
protected int A_PARCHILD_TM;
protected byte A_PARMAR;
protected int A_PARTNER_TM;
protected byte A_PASEE;
protected short A_PASOC00_CC;
protected short A_PASOC10_CC;
protected byte A_PASOC90_CC;
protected byte A_PAYFAM;
protected int A_PAYGL;
protected double A_PAYGU_DV;
protected byte A_PAYGU_IF;
protected byte A_PAYGWC;
protected double A_PAYG_DV;
protected int A_PAYNL;
protected double A_PAYNU_DV;
protected byte A_PAYNU_IF;
protected byte A_PAYNWC;
protected double A_PAYN_DV;
protected byte A_PAYRUK;
protected short A_PAYRUK1;
protected byte A_PAYTYP;
protected int A_PAYU;
protected byte A_PAYUG;
protected byte A_PAYUSL;
protected byte A_PAYUWC;
protected double A_PAYU_DV;
protected byte A_PBNFT1;
protected byte A_PBNFT10;
protected byte A_PBNFT11;
protected byte A_PBNFT12;
protected byte A_PBNFT2;
protected byte A_PBNFT3;
protected byte A_PBNFT4;
protected byte A_PBNFT5;
protected byte A_PBNFT6;
protected byte A_PBNFT7;
protected byte A_PBNFT8;
protected byte A_PBNFT9;
protected byte A_PBNFT96;
protected boolean A_PENSIONER_DV;
protected byte A_PGMROB;
protected byte A_PGPROB;
protected int A_PHONE_TM;
protected byte A_PJBPTFT;
protected byte A_PJSPTFT;
protected byte A_PJULK4WK;
protected byte A_PLBORNC;
protected int A_PN1PID;
protected byte A_PN1PNO;
protected byte A_PN1SEX;
protected int A_PN2PID;
protected byte A_PN2PNO;
protected byte A_PN2SEX;
protected byte A_PNO;
protected int A_PNS1PID;
protected byte A_PNS1PNO;
protected byte A_PNS1SEX;
protected int A_PNS2PID;
protected byte A_PNS2PNO;
protected byte A_PNS2SEX;
protected int A_POLITICAL_TM;
protected int A_PPID;
protected byte A_PPNO;
protected byte A_PPSEX;
protected byte A_PRAISEKID;
protected byte A_PREARN;
protected byte A_PREARNA;
protected byte A_PREARNW;
protected byte A_PREASON;
protected byte A_PREL;
protected byte A_PRFITB;
protected byte A_PRFITBA;
protected byte A_PRFITBW;
protected byte A_PRIPN;
protected byte A_PRIVPEN;
protected byte A_PROMODENY;
protected int A_PROXY_TM;
protected byte A_PRSEX;
protected int A_PSU;
protected byte A_QFHIGH;
protected boolean A_QFHIGHFL_DV;
protected byte A_QFHIGH_DV;
protected byte A_QFVOC1;
protected byte A_QFVOC10;
protected byte A_QFVOC11;
protected byte A_QFVOC12;
protected byte A_QFVOC13;
protected byte A_QFVOC14;
protected byte A_QFVOC15;
protected byte A_QFVOC2;
protected byte A_QFVOC3;
protected byte A_QFVOC4;
protected byte A_QFVOC5;
protected byte A_QFVOC6;
protected byte A_QFVOC7;
protected byte A_QFVOC8;
protected byte A_QFVOC9;
protected byte A_QFVOC96;
protected int A_QSIGNIN_TM;
protected byte A_QUALOC;
protected byte A_QUARREL;
protected byte A_RACEL;
protected short A_RACELO_CODE;
protected byte A_RACEL_DV;
protected byte A_RACH16_DV;
protected byte A_READDIF;
protected byte A_REASREF;
protected int A_RELATIONSHIPS_TM;
protected int A_RELIGION_TM;
protected byte A_RELKID;
protected byte A_REMAIL_CODE;
protected short A_REMCNTRY1;
protected short A_REMCNTRY2;
protected short A_REMCNTRY3;
protected short A_REMCNTRY4;
protected byte A_REMIT1;
protected byte A_REMIT2;
protected byte A_REMIT3;
protected byte A_REMIT4;
protected byte A_REMIT5;
protected short A_REMITAMT1;
protected short A_REMITAMT2;
protected short A_REMITAMT3;
protected short A_REMITAMT4;
protected byte A_REMITFREQ1;
protected byte A_REMITFREQ2;
protected byte A_REMITFREQ3;
protected byte A_REMITFREQ4;
protected byte A_REMITREG1;
protected byte A_REMITREG2;
protected byte A_REMITREG3;
protected byte A_REMITREG4;
protected int A_REMITTANCE_TM;
protected byte A_REMITUSUAL1;
protected byte A_REMITUSUAL2;
protected byte A_REMITUSUAL3;
protected byte A_REMITUSUAL4;
protected boolean A_REMUSAMT1;
protected short A_REMUSAMT2;
protected short A_REMUSAMT3;
protected short A_REMUSAMT4;
protected byte A_RESATTACKED_1_1;
protected byte A_RESATTACKED_1_2;
protected byte A_RESATTACKED_1_3;
protected byte A_RESATTACKED_1_4;
protected byte A_RESATTACKED_1_5;
protected byte A_RESATTACKED_1_6;
protected byte A_RESATTACKED_1_7;
protected byte A_RESATTACKED_1_8;
protected byte A_RESATTACKED_1_9;
protected byte A_RESATTACKED_1_96;
protected byte A_RESATTACKED_1_97;
protected byte A_RESATTACKED_2_1;
protected byte A_RESATTACKED_2_2;
protected byte A_RESATTACKED_2_3;
protected byte A_RESATTACKED_2_4;
protected byte A_RESATTACKED_2_5;
protected byte A_RESATTACKED_2_6;
protected byte A_RESATTACKED_2_7;
protected byte A_RESATTACKED_2_8;
protected byte A_RESATTACKED_2_9;
protected byte A_RESATTACKED_2_96;
protected byte A_RESATTACKED_2_97;
protected byte A_RESATTACKED_3_1;
protected byte A_RESATTACKED_3_2;
protected byte A_RESATTACKED_3_3;
protected byte A_RESATTACKED_3_4;
protected byte A_RESATTACKED_3_5;
protected byte A_RESATTACKED_3_6;
protected byte A_RESATTACKED_3_7;
protected byte A_RESATTACKED_3_8;
protected byte A_RESATTACKED_3_9;
protected byte A_RESATTACKED_3_96;
protected byte A_RESATTACKED_3_97;
protected byte A_RESATTACKED_4_1;
protected byte A_RESATTACKED_4_2;
protected byte A_RESATTACKED_4_3;
protected byte A_RESATTACKED_4_4;
protected byte A_RESATTACKED_4_5;
protected byte A_RESATTACKED_4_6;
protected byte A_RESATTACKED_4_7;
protected byte A_RESATTACKED_4_8;
protected byte A_RESATTACKED_4_9;
protected byte A_RESATTACKED_4_96;
protected byte A_RESATTACKED_4_97;
protected byte A_RESATTACKED_5_1;
protected byte A_RESATTACKED_5_2;
protected byte A_RESATTACKED_5_3;
protected byte A_RESATTACKED_5_4;
protected byte A_RESATTACKED_5_5;
protected byte A_RESATTACKED_5_6;
protected byte A_RESATTACKED_5_7;
protected byte A_RESATTACKED_5_8;
protected byte A_RESATTACKED_5_9;
protected byte A_RESATTACKED_5_96;
protected byte A_RESATTACKED_5_97;
protected byte A_RESATTACKED_6_1;
protected byte A_RESATTACKED_6_2;
protected byte A_RESATTACKED_6_3;
protected byte A_RESATTACKED_6_4;
protected byte A_RESATTACKED_6_5;
protected byte A_RESATTACKED_6_6;
protected byte A_RESATTACKED_6_7;
protected byte A_RESATTACKED_6_8;
protected byte A_RESATTACKED_6_9;
protected byte A_RESATTACKED_6_96;
protected byte A_RESATTACKED_6_97;
protected byte A_RESATTACKED_7_1;
protected byte A_RESATTACKED_7_2;
protected byte A_RESATTACKED_7_3;
protected byte A_RESATTACKED_7_4;
protected byte A_RESATTACKED_7_5;
protected byte A_RESATTACKED_7_6;
protected byte A_RESATTACKED_7_7;
protected byte A_RESATTACKED_7_8;
protected byte A_RESATTACKED_7_9;
protected byte A_RESATTACKED_7_96;
protected byte A_RESATTACKED_7_97;
protected byte A_RESATTACKED_97_1;
protected byte A_RESATTACKED_97_2;
protected byte A_RESATTACKED_97_3;
protected byte A_RESATTACKED_97_4;
protected byte A_RESATTACKED_97_5;
protected byte A_RESATTACKED_97_6;
protected byte A_RESATTACKED_97_7;
protected byte A_RESATTACKED_97_8;
protected byte A_RESATTACKED_97_9;
protected byte A_RESATTACKED_97_96;
protected byte A_RESATTACKED_97_97;
protected byte A_RESAVOID_1_1;
protected byte A_RESAVOID_1_2;
protected byte A_RESAVOID_1_3;
protected byte A_RESAVOID_1_4;
protected byte A_RESAVOID_1_5;
protected byte A_RESAVOID_1_6;
protected byte A_RESAVOID_1_7;
protected byte A_RESAVOID_1_8;
protected byte A_RESAVOID_1_9;
protected byte A_RESAVOID_1_96;
protected byte A_RESAVOID_1_97;
protected byte A_RESAVOID_2_1;
protected byte A_RESAVOID_2_2;
protected byte A_RESAVOID_2_3;
protected byte A_RESAVOID_2_4;
protected byte A_RESAVOID_2_5;
protected byte A_RESAVOID_2_6;
protected byte A_RESAVOID_2_7;
protected byte A_RESAVOID_2_8;
protected byte A_RESAVOID_2_9;
protected byte A_RESAVOID_2_96;
protected byte A_RESAVOID_2_97;
protected byte A_RESAVOID_3_1;
protected byte A_RESAVOID_3_2;
protected byte A_RESAVOID_3_3;
protected byte A_RESAVOID_3_4;
protected byte A_RESAVOID_3_5;
protected byte A_RESAVOID_3_6;
protected byte A_RESAVOID_3_7;
protected byte A_RESAVOID_3_8;
protected byte A_RESAVOID_3_9;
protected byte A_RESAVOID_3_96;
protected byte A_RESAVOID_3_97;
protected byte A_RESAVOID_4_1;
protected byte A_RESAVOID_4_2;
protected byte A_RESAVOID_4_3;
protected byte A_RESAVOID_4_4;
protected byte A_RESAVOID_4_5;
protected byte A_RESAVOID_4_6;
protected byte A_RESAVOID_4_7;
protected byte A_RESAVOID_4_8;
protected byte A_RESAVOID_4_9;
protected byte A_RESAVOID_4_96;
protected byte A_RESAVOID_4_97;
protected byte A_RESAVOID_5_1;
protected byte A_RESAVOID_5_2;
protected byte A_RESAVOID_5_3;
protected byte A_RESAVOID_5_4;
protected byte A_RESAVOID_5_5;
protected byte A_RESAVOID_5_6;
protected byte A_RESAVOID_5_7;
protected byte A_RESAVOID_5_8;
protected byte A_RESAVOID_5_9;
protected byte A_RESAVOID_5_96;
protected byte A_RESAVOID_5_97;
protected byte A_RESAVOID_6_1;
protected byte A_RESAVOID_6_2;
protected byte A_RESAVOID_6_3;
protected byte A_RESAVOID_6_4;
protected byte A_RESAVOID_6_5;
protected byte A_RESAVOID_6_6;
protected byte A_RESAVOID_6_7;
protected byte A_RESAVOID_6_8;
protected byte A_RESAVOID_6_9;
protected byte A_RESAVOID_6_96;
protected byte A_RESAVOID_6_97;
protected byte A_RESAVOID_7_1;
protected byte A_RESAVOID_7_2;
protected byte A_RESAVOID_7_3;
protected byte A_RESAVOID_7_4;
protected byte A_RESAVOID_7_5;
protected byte A_RESAVOID_7_6;
protected byte A_RESAVOID_7_7;
protected byte A_RESAVOID_7_8;
protected byte A_RESAVOID_7_9;
protected byte A_RESAVOID_7_96;
protected byte A_RESAVOID_7_97;
protected byte A_RESAVOID_97_1;
protected byte A_RESAVOID_97_2;
protected byte A_RESAVOID_97_3;
protected byte A_RESAVOID_97_4;
protected byte A_RESAVOID_97_5;
protected byte A_RESAVOID_97_6;
protected byte A_RESAVOID_97_7;
protected byte A_RESAVOID_97_8;
protected byte A_RESAVOID_97_9;
protected byte A_RESAVOID_97_96;
protected byte A_RESAVOID_97_97;
protected byte A_RESINSULTED_1_1;
protected byte A_RESINSULTED_1_2;
protected byte A_RESINSULTED_1_3;
protected byte A_RESINSULTED_1_4;
protected byte A_RESINSULTED_1_5;
protected byte A_RESINSULTED_1_6;
protected byte A_RESINSULTED_1_7;
protected byte A_RESINSULTED_1_8;
protected byte A_RESINSULTED_1_9;
protected byte A_RESINSULTED_1_96;
protected byte A_RESINSULTED_1_97;
protected byte A_RESINSULTED_2_1;
protected byte A_RESINSULTED_2_2;
protected byte A_RESINSULTED_2_3;
protected byte A_RESINSULTED_2_4;
protected byte A_RESINSULTED_2_5;
protected byte A_RESINSULTED_2_6;
protected byte A_RESINSULTED_2_7;
protected byte A_RESINSULTED_2_8;
protected byte A_RESINSULTED_2_9;
protected byte A_RESINSULTED_2_96;
protected byte A_RESINSULTED_2_97;
protected byte A_RESINSULTED_3_1;
protected byte A_RESINSULTED_3_2;
protected byte A_RESINSULTED_3_3;
protected byte A_RESINSULTED_3_4;
protected byte A_RESINSULTED_3_5;
protected byte A_RESINSULTED_3_6;
protected byte A_RESINSULTED_3_7;
protected byte A_RESINSULTED_3_8;
protected byte A_RESINSULTED_3_9;
protected byte A_RESINSULTED_3_96;
protected byte A_RESINSULTED_3_97;
protected byte A_RESINSULTED_4_1;
protected byte A_RESINSULTED_4_2;
protected byte A_RESINSULTED_4_3;
protected byte A_RESINSULTED_4_4;
protected byte A_RESINSULTED_4_5;
protected byte A_RESINSULTED_4_6;
protected byte A_RESINSULTED_4_7;
protected byte A_RESINSULTED_4_8;
protected byte A_RESINSULTED_4_9;
protected byte A_RESINSULTED_4_96;
protected byte A_RESINSULTED_4_97;
protected byte A_RESINSULTED_5_1;
protected byte A_RESINSULTED_5_2;
protected byte A_RESINSULTED_5_3;
protected byte A_RESINSULTED_5_4;
protected byte A_RESINSULTED_5_5;
protected byte A_RESINSULTED_5_6;
protected byte A_RESINSULTED_5_7;
protected byte A_RESINSULTED_5_8;
protected byte A_RESINSULTED_5_9;
protected byte A_RESINSULTED_5_96;
protected byte A_RESINSULTED_5_97;
protected byte A_RESINSULTED_6_1;
protected byte A_RESINSULTED_6_2;
protected byte A_RESINSULTED_6_3;
protected byte A_RESINSULTED_6_4;
protected byte A_RESINSULTED_6_5;
protected byte A_RESINSULTED_6_6;
protected byte A_RESINSULTED_6_7;
protected byte A_RESINSULTED_6_8;
protected byte A_RESINSULTED_6_9;
protected byte A_RESINSULTED_6_96;
protected byte A_RESINSULTED_6_97;
protected byte A_RESINSULTED_7_1;
protected byte A_RESINSULTED_7_2;
protected byte A_RESINSULTED_7_3;
protected byte A_RESINSULTED_7_4;
protected byte A_RESINSULTED_7_5;
protected byte A_RESINSULTED_7_6;
protected byte A_RESINSULTED_7_7;
protected byte A_RESINSULTED_7_8;
protected byte A_RESINSULTED_7_9;
protected byte A_RESINSULTED_7_96;
protected byte A_RESINSULTED_7_97;
protected byte A_RESINSULTED_97_1;
protected byte A_RESINSULTED_97_2;
protected byte A_RESINSULTED_97_3;
protected byte A_RESINSULTED_97_4;
protected byte A_RESINSULTED_97_5;
protected byte A_RESINSULTED_97_6;
protected byte A_RESINSULTED_97_7;
protected byte A_RESINSULTED_97_8;
protected byte A_RESINSULTED_97_9;
protected byte A_RESINSULTED_97_96;
protected byte A_RESINSULTED_97_97;
protected byte A_RESJOBDENY1;
protected byte A_RESJOBDENY2;
protected byte A_RESJOBDENY3;
protected byte A_RESJOBDENY4;
protected byte A_RESJOBDENY5;
protected byte A_RESJOBDENY6;
protected byte A_RESJOBDENY7;
protected byte A_RESJOBDENY8;
protected byte A_RESJOBDENY9;
protected byte A_RESJOBDENY96;
protected byte A_RESJOBDENY97;
protected boolean A_RESPF16;
protected boolean A_RESPF16_DV;
protected boolean A_RESPM16;
protected boolean A_RESPM16_DV;
protected byte A_RESPROMODENY1;
protected byte A_RESPROMODENY2;
protected byte A_RESPROMODENY3;
protected byte A_RESPROMODENY4;
protected byte A_RESPROMODENY5;
protected byte A_RESPROMODENY6;
protected byte A_RESPROMODENY7;
protected byte A_RESPROMODENY8;
protected byte A_RESPROMODENY9;
protected byte A_RESPROMODENY96;
protected byte A_RESPROMODENY97;
protected byte A_RESTRAINDENY1;
protected byte A_RESTRAINDENY2;
protected byte A_RESTRAINDENY3;
protected byte A_RESTRAINDENY4;
protected byte A_RESTRAINDENY5;
protected byte A_RESTRAINDENY6;
protected byte A_RESTRAINDENY7;
protected byte A_RESTRAINDENY8;
protected byte A_RESTRAINDENY9;
protected byte A_RESTRAINDENY96;
protected byte A_RESTRAINDENY97;
protected byte A_RESUNSAFE_1_1;
protected byte A_RESUNSAFE_1_2;
protected byte A_RESUNSAFE_1_3;
protected byte A_RESUNSAFE_1_4;
protected byte A_RESUNSAFE_1_5;
protected byte A_RESUNSAFE_1_6;
protected byte A_RESUNSAFE_1_7;
protected byte A_RESUNSAFE_1_8;
protected byte A_RESUNSAFE_1_9;
protected byte A_RESUNSAFE_1_96;
protected byte A_RESUNSAFE_1_97;
protected byte A_RESUNSAFE_2_1;
protected byte A_RESUNSAFE_2_2;
protected byte A_RESUNSAFE_2_3;
protected byte A_RESUNSAFE_2_4;
protected byte A_RESUNSAFE_2_5;
protected byte A_RESUNSAFE_2_6;
protected byte A_RESUNSAFE_2_7;
protected byte A_RESUNSAFE_2_8;
protected byte A_RESUNSAFE_2_9;
protected byte A_RESUNSAFE_2_96;
protected byte A_RESUNSAFE_2_97;
protected byte A_RESUNSAFE_3_1;
protected byte A_RESUNSAFE_3_2;
protected byte A_RESUNSAFE_3_3;
protected byte A_RESUNSAFE_3_4;
protected byte A_RESUNSAFE_3_5;
protected byte A_RESUNSAFE_3_6;
protected byte A_RESUNSAFE_3_7;
protected byte A_RESUNSAFE_3_8;
protected byte A_RESUNSAFE_3_9;
protected byte A_RESUNSAFE_3_96;
protected byte A_RESUNSAFE_3_97;
protected byte A_RESUNSAFE_4_1;
protected byte A_RESUNSAFE_4_2;
protected byte A_RESUNSAFE_4_3;
protected byte A_RESUNSAFE_4_4;
protected byte A_RESUNSAFE_4_5;
protected byte A_RESUNSAFE_4_6;
protected byte A_RESUNSAFE_4_7;
protected byte A_RESUNSAFE_4_8;
protected byte A_RESUNSAFE_4_9;
protected byte A_RESUNSAFE_4_96;
protected byte A_RESUNSAFE_4_97;
protected byte A_RESUNSAFE_5_1;
protected byte A_RESUNSAFE_5_2;
protected byte A_RESUNSAFE_5_3;
protected byte A_RESUNSAFE_5_4;
protected byte A_RESUNSAFE_5_5;
protected byte A_RESUNSAFE_5_6;
protected byte A_RESUNSAFE_5_7;
protected byte A_RESUNSAFE_5_8;
protected byte A_RESUNSAFE_5_9;
protected byte A_RESUNSAFE_5_96;
protected byte A_RESUNSAFE_5_97;
protected byte A_RESUNSAFE_6_1;
protected byte A_RESUNSAFE_6_2;
protected byte A_RESUNSAFE_6_3;
protected byte A_RESUNSAFE_6_4;
protected byte A_RESUNSAFE_6_5;
protected byte A_RESUNSAFE_6_6;
protected byte A_RESUNSAFE_6_7;
protected byte A_RESUNSAFE_6_8;
protected byte A_RESUNSAFE_6_9;
protected byte A_RESUNSAFE_6_96;
protected byte A_RESUNSAFE_6_97;
protected byte A_RESUNSAFE_7_1;
protected byte A_RESUNSAFE_7_2;
protected byte A_RESUNSAFE_7_3;
protected byte A_RESUNSAFE_7_4;
protected byte A_RESUNSAFE_7_5;
protected byte A_RESUNSAFE_7_6;
protected byte A_RESUNSAFE_7_7;
protected byte A_RESUNSAFE_7_8;
protected byte A_RESUNSAFE_7_9;
protected byte A_RESUNSAFE_7_96;
protected byte A_RESUNSAFE_7_97;
protected byte A_RESUNSAFE_97_1;
protected byte A_RESUNSAFE_97_2;
protected byte A_RESUNSAFE_97_3;
protected byte A_RESUNSAFE_97_4;
protected byte A_RESUNSAFE_97_5;
protected byte A_RESUNSAFE_97_6;
protected byte A_RESUNSAFE_97_7;
protected byte A_RESUNSAFE_97_8;
protected byte A_RESUNSAFE_97_9;
protected byte A_RESUNSAFE_97_96;
protected byte A_RESUNSAFE_97_97;
protected byte A_RETDATEM;
protected short A_RETDATEY;
protected byte A_RHLAND_CODE;
protected byte A_RPHMOB_CODE;
protected byte A_RPHWRK_CODE;
protected byte A_RULESKID;
protected byte A_SAMPST;
protected byte A_SAMSCH;
protected byte A_SCDASCOH_DV;
protected byte A_SCDASSAT_DV;
protected short A_SCDOBY4;
protected byte A_SCEND;
protected byte A_SCENV_BCON;
protected byte A_SCENV_BRIT;
protected byte A_SCENV_CCLS;
protected byte A_SCENV_CFIT;
protected byte A_SCENV_CHWO;
protected byte A_SCENV_CRLF;
protected byte A_SCENV_DSTR;
protected byte A_SCENV_EXAG;
protected byte A_SCENV_FTST;
protected byte A_SCENV_FUTR;
protected byte A_SCENV_GRN;
protected byte A_SCENV_PMRE;
protected byte A_SCFLAG_DV;
protected byte A_SCGHQ1_DV;
protected byte A_SCGHQ2_DV;
protected byte A_SCGHQA;
protected byte A_SCGHQB;
protected byte A_SCGHQC;
protected byte A_SCGHQD;
protected byte A_SCGHQE;
protected byte A_SCGHQF;
protected byte A_SCGHQG;
protected byte A_SCGHQH;
protected byte A_SCGHQI;
protected byte A_SCGHQJ;
protected byte A_SCGHQK;
protected byte A_SCGHQL;
protected byte A_SCHLLOC;
protected byte A_SCHOOL;
protected byte A_SCHRS_SLPH;
protected byte A_SCHRS_SLPM;
protected byte A_SCLFSAT1;
protected byte A_SCLFSAT2;
protected byte A_SCLFSAT7;
protected byte A_SCLFSATO;
protected byte A_SCMED_SLP;
protected byte A_SCMOLWP;
protected byte A_SCOPECL200;
protected byte A_SCOPECL30;
protected byte A_SCOPNGBHA;
protected byte A_SCOPNGBHB;
protected byte A_SCOPNGBHC;
protected byte A_SCOPNGBHD;
protected byte A_SCOPNGBHE;
protected byte A_SCOPNGBHF;
protected byte A_SCOPNGBHG;
protected byte A_SCOPNGBHH;
protected byte A_SCPAROUTINT;
protected byte A_SCRELHAPPY;
protected byte A_SCRELPARAR;
protected byte A_SCRELPARCD;
protected byte A_SCRELPARDS;
protected byte A_SCRELPAREI;
protected byte A_SCRELPARIR;
protected byte A_SCRELPARKS;
protected byte A_SCRELPARRG;
protected byte A_SCRELPARWT;
protected byte A_SCRISKA;
protected byte A_SCRISKB;
protected byte A_SCSEX;
protected byte A_SCSLP_QUAL;
protected byte A_SCTRUST;
protected byte A_SCTSLP_30M;
protected byte A_SCTSLP_CGH;
protected byte A_SCTSLP_WAK;
protected byte A_SCTSTA_AWK;
protected byte A_SCWEMWBA;
protected byte A_SCWEMWBB;
protected byte A_SCWEMWBC;
protected byte A_SCWEMWBD;
protected byte A_SCWEMWBE;
protected byte A_SCWEMWBF;
protected byte A_SCWEMWBG;
protected int A_SECJOB_TM;
protected double A_SEEARNGRS_DV;
protected byte A_SEEARNGRS_IF;
protected double A_SEEARNNET_DV;
protected byte A_SEEKID;
protected int A_SELFEMP_TM;
protected boolean A_SEX;
protected byte A_SEX_DV;
protected byte A_SF1;
protected double A_SF12MCS_DV;
protected double A_SF12PCS_DV;
protected byte A_SF2A;
protected byte A_SF2B;
protected byte A_SF3A;
protected byte A_SF3B;
protected byte A_SF4A;
protected byte A_SF4B;
protected byte A_SF5;
protected byte A_SF6A;
protected byte A_SF6B;
protected byte A_SF6C;
protected byte A_SF7;
protected boolean A_SINGLE_DV;
protected byte A_SLAPKID;
protected byte A_SMAID;
protected byte A_SOCIALKID;
protected byte A_SPAID;
protected byte A_SPKDIF;
protected int A_SPPID;
protected byte A_SPPNO;
protected int A_STABLE_TM;
protected short A_STRATA;
protected byte A_SUSP;
protected byte A_SWEMWBS_DV;
protected byte A_TALKMATTER;
protected byte A_TELDIF;
protected byte A_TRAINDENY;
protected byte A_UKBORN;
protected byte A_UNDQUS;
protected byte A_UNSAFEW11;
protected byte A_UNSAFEW12;
protected byte A_UNSAFEW13;
protected byte A_UNSAFEW14;
protected byte A_UNSAFEW15;
protected byte A_UNSAFEW16;
protected byte A_UNSAFEW17;
protected byte A_UNSAFEW196;
protected byte A_UNSAFEW197;
protected byte A_UNSAFE_DV;
protected boolean A_URBAN_DV;
protected byte A_VOTE1;
protected byte A_VOTE2;
protected byte A_VOTE3;
protected byte A_VOTE4;
protected byte A_VOTE5;
protected byte A_VOTE6;
protected byte A_WEKID;
protected byte A_WLSH1;
protected byte A_WLSH2;
protected byte A_WLSH3;
protected byte A_WLSH4;
protected byte A_WLSH96;
protected byte A_WLSHUA;
protected byte A_WLSHUB;
protected byte A_WLSHUC;
protected byte A_WLSHUD;
protected byte A_WLSHUE;
protected short A_WORKDIS;
protected byte A_WORKTRAV;
protected byte A_XPMOVE;
protected byte A_XTRA5MIN_DV;
protected byte A_YELLKID;
protected byte A_YNLP14;
protected short A_YR2UK4;
protected final void initA_ADOPTCH01(String s) {
if (!s.trim().isEmpty()) {
A_ADOPTCH01 = Byte.parseByte(s);
} else {
A_ADOPTCH01 = Byte.MIN_VALUE;
}
}

protected final void initA_ADOPTCH02(String s) {
if (!s.trim().isEmpty()) {
A_ADOPTCH02 = Byte.parseByte(s);
} else {
A_ADOPTCH02 = Byte.MIN_VALUE;
}
}

protected final void initA_ADOPTCH03(String s) {
if (!s.trim().isEmpty()) {
A_ADOPTCH03 = Byte.parseByte(s);
} else {
A_ADOPTCH03 = Byte.MIN_VALUE;
}
}

protected final void initA_ADOPTCH04(String s) {
if (!s.trim().isEmpty()) {
A_ADOPTCH04 = Byte.parseByte(s);
} else {
A_ADOPTCH04 = Byte.MIN_VALUE;
}
}

protected final void initA_ADOPTCH05(String s) {
if (!s.trim().isEmpty()) {
A_ADOPTCH05 = Byte.parseByte(s);
} else {
A_ADOPTCH05 = Byte.MIN_VALUE;
}
}

protected final void initA_ADOPTCH06(String s) {
if (!s.trim().isEmpty()) {
A_ADOPTCH06 = Byte.parseByte(s);
} else {
A_ADOPTCH06 = Byte.MIN_VALUE;
}
}

protected final void initA_ADOPTCH07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH07 = false;
} else {
A_ADOPTCH07 = true;
}
}
}

protected final void initA_ADOPTCH08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH08 = false;
} else {
A_ADOPTCH08 = true;
}
}
}

protected final void initA_ADOPTCH09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH09 = false;
} else {
A_ADOPTCH09 = true;
}
}
}

protected final void initA_ADOPTCH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH10 = false;
} else {
A_ADOPTCH10 = true;
}
}
}

protected final void initA_ADOPTCH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH11 = false;
} else {
A_ADOPTCH11 = true;
}
}
}

protected final void initA_ADOPTCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH12 = false;
} else {
A_ADOPTCH12 = true;
}
}
}

protected final void initA_ADOPTCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH13 = false;
} else {
A_ADOPTCH13 = true;
}
}
}

protected final void initA_ADOPTCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH14 = false;
} else {
A_ADOPTCH14 = true;
}
}
}

protected final void initA_ADOPTCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH15 = false;
} else {
A_ADOPTCH15 = true;
}
}
}

protected final void initA_ADOPTCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ADOPTCH16 = false;
} else {
A_ADOPTCH16 = true;
}
}
}

protected final void initA_ADRESP17(String s) {
if (!s.trim().isEmpty()) {
A_ADRESP17 = Byte.parseByte(s);
} else {
A_ADRESP17 = Byte.MIN_VALUE;
}
}

protected final void initA_AGEEST(String s) {
if (!s.trim().isEmpty()) {
A_AGEEST = Byte.parseByte(s);
} else {
A_AGEEST = Byte.MIN_VALUE;
}
}

protected final void initA_AGEGR10_DV(String s) {
if (!s.trim().isEmpty()) {
A_AGEGR10_DV = Byte.parseByte(s);
} else {
A_AGEGR10_DV = Byte.MIN_VALUE;
}
}

protected final void initA_AGEGR13_DV(String s) {
if (!s.trim().isEmpty()) {
A_AGEGR13_DV = Byte.parseByte(s);
} else {
A_AGEGR13_DV = Byte.MIN_VALUE;
}
}

protected final void initA_AGEGR5_DV(String s) {
if (!s.trim().isEmpty()) {
A_AGEGR5_DV = Byte.parseByte(s);
} else {
A_AGEGR5_DV = Byte.MIN_VALUE;
}
}

protected final void initA_AGELH(String s) {
if (!s.trim().isEmpty()) {
A_AGELH = Byte.parseByte(s);
} else {
A_AGELH = Byte.MIN_VALUE;
}
}

protected final void initA_AGE_DV(String s) {
if (!s.trim().isEmpty()) {
A_AGE_DV = Byte.parseByte(s);
} else {
A_AGE_DV = Byte.MIN_VALUE;
}
}

protected final void initA_AIDEFT(String s) {
if (!s.trim().isEmpty()) {
A_AIDEFT = Byte.parseByte(s);
} else {
A_AIDEFT = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHH(String s) {
if (!s.trim().isEmpty()) {
A_AIDHH = Byte.parseByte(s);
} else {
A_AIDHH = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHRS(String s) {
if (!s.trim().isEmpty()) {
A_AIDHRS = Byte.parseByte(s);
} else {
A_AIDHRS = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHU1(String s) {
if (!s.trim().isEmpty()) {
A_AIDHU1 = Byte.parseByte(s);
} else {
A_AIDHU1 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHU2(String s) {
if (!s.trim().isEmpty()) {
A_AIDHU2 = Byte.parseByte(s);
} else {
A_AIDHU2 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA1(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA1 = Byte.parseByte(s);
} else {
A_AIDHUA1 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA10(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA10 = Byte.parseByte(s);
} else {
A_AIDHUA10 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA11(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA11 = Byte.parseByte(s);
} else {
A_AIDHUA11 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA12(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA12 = Byte.parseByte(s);
} else {
A_AIDHUA12 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA13(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA13 = Byte.parseByte(s);
} else {
A_AIDHUA13 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA14(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA14 = Byte.parseByte(s);
} else {
A_AIDHUA14 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA15(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA15 = Byte.parseByte(s);
} else {
A_AIDHUA15 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA16(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA16 = Byte.parseByte(s);
} else {
A_AIDHUA16 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA2(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA2 = Byte.parseByte(s);
} else {
A_AIDHUA2 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA3(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA3 = Byte.parseByte(s);
} else {
A_AIDHUA3 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA4(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA4 = Byte.parseByte(s);
} else {
A_AIDHUA4 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA5(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA5 = Byte.parseByte(s);
} else {
A_AIDHUA5 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA6(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA6 = Byte.parseByte(s);
} else {
A_AIDHUA6 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA7(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA7 = Byte.parseByte(s);
} else {
A_AIDHUA7 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA8(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA8 = Byte.parseByte(s);
} else {
A_AIDHUA8 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDHUA9(String s) {
if (!s.trim().isEmpty()) {
A_AIDHUA9 = Byte.parseByte(s);
} else {
A_AIDHUA9 = Byte.MIN_VALUE;
}
}

protected final void initA_AIDXHH(String s) {
if (!s.trim().isEmpty()) {
A_AIDXHH = Byte.parseByte(s);
} else {
A_AIDXHH = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH01(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH01 = Byte.parseByte(s);
} else {
A_ALLCH01 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH02(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH02 = Byte.parseByte(s);
} else {
A_ALLCH02 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH03(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH03 = Byte.parseByte(s);
} else {
A_ALLCH03 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH04(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH04 = Byte.parseByte(s);
} else {
A_ALLCH04 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH05(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH05 = Byte.parseByte(s);
} else {
A_ALLCH05 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH06(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH06 = Byte.parseByte(s);
} else {
A_ALLCH06 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH07(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH07 = Byte.parseByte(s);
} else {
A_ALLCH07 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH08(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH08 = Byte.parseByte(s);
} else {
A_ALLCH08 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH09(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH09 = Byte.parseByte(s);
} else {
A_ALLCH09 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH10(String s) {
if (!s.trim().isEmpty()) {
A_ALLCH10 = Byte.parseByte(s);
} else {
A_ALLCH10 = Byte.MIN_VALUE;
}
}

protected final void initA_ALLCH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ALLCH11 = false;
} else {
A_ALLCH11 = true;
}
}
}

protected final void initA_ALLCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ALLCH12 = false;
} else {
A_ALLCH12 = true;
}
}
}

protected final void initA_ALLCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ALLCH13 = false;
} else {
A_ALLCH13 = true;
}
}
}

protected final void initA_ALLCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ALLCH14 = false;
} else {
A_ALLCH14 = true;
}
}
}

protected final void initA_ALLCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ALLCH15 = false;
} else {
A_ALLCH15 = true;
}
}
}

protected final void initA_ALLCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_ALLCH16 = false;
} else {
A_ALLCH16 = true;
}
}
}

protected final void initA_ATTACKEDW11(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW11 = Byte.parseByte(s);
} else {
A_ATTACKEDW11 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKEDW12(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW12 = Byte.parseByte(s);
} else {
A_ATTACKEDW12 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKEDW13(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW13 = Byte.parseByte(s);
} else {
A_ATTACKEDW13 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKEDW14(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW14 = Byte.parseByte(s);
} else {
A_ATTACKEDW14 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKEDW15(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW15 = Byte.parseByte(s);
} else {
A_ATTACKEDW15 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKEDW16(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW16 = Byte.parseByte(s);
} else {
A_ATTACKEDW16 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKEDW17(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW17 = Byte.parseByte(s);
} else {
A_ATTACKEDW17 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKEDW196(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW196 = Byte.parseByte(s);
} else {
A_ATTACKEDW196 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKEDW197(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKEDW197 = Byte.parseByte(s);
} else {
A_ATTACKEDW197 = Byte.MIN_VALUE;
}
}

protected final void initA_ATTACKED_DV(String s) {
if (!s.trim().isEmpty()) {
A_ATTACKED_DV = Byte.parseByte(s);
} else {
A_ATTACKED_DV = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW11(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW11 = Byte.parseByte(s);
} else {
A_AVOIDANCEW11 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW12(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW12 = Byte.parseByte(s);
} else {
A_AVOIDANCEW12 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW13(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW13 = Byte.parseByte(s);
} else {
A_AVOIDANCEW13 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW14(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW14 = Byte.parseByte(s);
} else {
A_AVOIDANCEW14 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW15(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW15 = Byte.parseByte(s);
} else {
A_AVOIDANCEW15 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW16(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW16 = Byte.parseByte(s);
} else {
A_AVOIDANCEW16 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW17(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW17 = Byte.parseByte(s);
} else {
A_AVOIDANCEW17 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW196(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW196 = Byte.parseByte(s);
} else {
A_AVOIDANCEW196 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDANCEW197(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDANCEW197 = Byte.parseByte(s);
} else {
A_AVOIDANCEW197 = Byte.MIN_VALUE;
}
}

protected final void initA_AVOIDED_DV(String s) {
if (!s.trim().isEmpty()) {
A_AVOIDED_DV = Byte.parseByte(s);
} else {
A_AVOIDED_DV = Byte.MIN_VALUE;
}
}

protected final void initA_BASNSA(String s) {
if (!s.trim().isEmpty()) {
A_BASNSA = Byte.parseByte(s);
} else {
A_BASNSA = Byte.MIN_VALUE;
}
}

protected final void initA_BASRATE(String s) {
if (!s.trim().isEmpty()) {
A_BASRATE = Double.parseDouble(s);
} else {
A_BASRATE = Double.NaN;
}
}

protected final void initA_BASREST(String s) {
if (!s.trim().isEmpty()) {
A_BASREST = Byte.parseByte(s);
} else {
A_BASREST = Byte.MIN_VALUE;
}
}

protected final void initA_BENCB(String s) {
if (!s.trim().isEmpty()) {
A_BENCB = Byte.parseByte(s);
} else {
A_BENCB = Byte.MIN_VALUE;
}
}

protected final void initA_BENCTC(String s) {
if (!s.trim().isEmpty()) {
A_BENCTC = Byte.parseByte(s);
} else {
A_BENCTC = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS1(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS1 = Byte.parseByte(s);
} else {
A_BENDIS1 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS10(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS10 = Byte.parseByte(s);
} else {
A_BENDIS10 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS11(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS11 = Byte.parseByte(s);
} else {
A_BENDIS11 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS2(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS2 = Byte.parseByte(s);
} else {
A_BENDIS2 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS3(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS3 = Byte.parseByte(s);
} else {
A_BENDIS3 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS4(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS4 = Byte.parseByte(s);
} else {
A_BENDIS4 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS5(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS5 = Byte.parseByte(s);
} else {
A_BENDIS5 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS6(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS6 = Byte.parseByte(s);
} else {
A_BENDIS6 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS7(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS7 = Byte.parseByte(s);
} else {
A_BENDIS7 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS8(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS8 = Byte.parseByte(s);
} else {
A_BENDIS8 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS9(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS9 = Byte.parseByte(s);
} else {
A_BENDIS9 = Byte.MIN_VALUE;
}
}

protected final void initA_BENDIS96(String s) {
if (!s.trim().isEmpty()) {
A_BENDIS96 = Byte.parseByte(s);
} else {
A_BENDIS96 = Byte.MIN_VALUE;
}
}

protected final void initA_BENEFIT_TM(String s) {
if (!s.trim().isEmpty()) {
A_BENEFIT_TM = Integer.parseInt(s);
} else {
A_BENEFIT_TM = Integer.MIN_VALUE;
}
}

protected final void initA_BENFAM1(String s) {
if (!s.trim().isEmpty()) {
A_BENFAM1 = Byte.parseByte(s);
} else {
A_BENFAM1 = Byte.MIN_VALUE;
}
}

protected final void initA_BENFAM2(String s) {
if (!s.trim().isEmpty()) {
A_BENFAM2 = Byte.parseByte(s);
} else {
A_BENFAM2 = Byte.MIN_VALUE;
}
}

protected final void initA_BENFAM3(String s) {
if (!s.trim().isEmpty()) {
A_BENFAM3 = Byte.parseByte(s);
} else {
A_BENFAM3 = Byte.MIN_VALUE;
}
}

protected final void initA_BENFAM4(String s) {
if (!s.trim().isEmpty()) {
A_BENFAM4 = Byte.parseByte(s);
} else {
A_BENFAM4 = Byte.MIN_VALUE;
}
}

protected final void initA_BENFAM5(String s) {
if (!s.trim().isEmpty()) {
A_BENFAM5 = Byte.parseByte(s);
} else {
A_BENFAM5 = Byte.MIN_VALUE;
}
}

protected final void initA_BENFAM96(String s) {
if (!s.trim().isEmpty()) {
A_BENFAM96 = Byte.parseByte(s);
} else {
A_BENFAM96 = Byte.MIN_VALUE;
}
}

protected final void initA_BENHOU1(String s) {
if (!s.trim().isEmpty()) {
A_BENHOU1 = Byte.parseByte(s);
} else {
A_BENHOU1 = Byte.MIN_VALUE;
}
}

protected final void initA_BENHOU2(String s) {
if (!s.trim().isEmpty()) {
A_BENHOU2 = Byte.parseByte(s);
} else {
A_BENHOU2 = Byte.MIN_VALUE;
}
}

protected final void initA_BENHOU3(String s) {
if (!s.trim().isEmpty()) {
A_BENHOU3 = Byte.parseByte(s);
} else {
A_BENHOU3 = Byte.MIN_VALUE;
}
}

protected final void initA_BENHOU4(String s) {
if (!s.trim().isEmpty()) {
A_BENHOU4 = Byte.parseByte(s);
} else {
A_BENHOU4 = Byte.MIN_VALUE;
}
}

protected final void initA_BENHOU96(String s) {
if (!s.trim().isEmpty()) {
A_BENHOU96 = Byte.parseByte(s);
} else {
A_BENHOU96 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN1(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN1 = Byte.parseByte(s);
} else {
A_BENPEN1 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN2(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN2 = Byte.parseByte(s);
} else {
A_BENPEN2 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN3(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN3 = Byte.parseByte(s);
} else {
A_BENPEN3 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN4(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN4 = Byte.parseByte(s);
} else {
A_BENPEN4 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN5(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN5 = Byte.parseByte(s);
} else {
A_BENPEN5 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN6(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN6 = Byte.parseByte(s);
} else {
A_BENPEN6 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN7(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN7 = Byte.parseByte(s);
} else {
A_BENPEN7 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN8(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN8 = Byte.parseByte(s);
} else {
A_BENPEN8 = Byte.MIN_VALUE;
}
}

protected final void initA_BENPEN96(String s) {
if (!s.trim().isEmpty()) {
A_BENPEN96 = Byte.parseByte(s);
} else {
A_BENPEN96 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA1(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA1 = Byte.parseByte(s);
} else {
A_BENSTA1 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA2(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA2 = Byte.parseByte(s);
} else {
A_BENSTA2 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA3(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA3 = Byte.parseByte(s);
} else {
A_BENSTA3 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA4(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA4 = Byte.parseByte(s);
} else {
A_BENSTA4 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA5(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA5 = Byte.parseByte(s);
} else {
A_BENSTA5 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA6(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA6 = Byte.parseByte(s);
} else {
A_BENSTA6 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA7(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA7 = Byte.parseByte(s);
} else {
A_BENSTA7 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA8(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA8 = Byte.parseByte(s);
} else {
A_BENSTA8 = Byte.MIN_VALUE;
}
}

protected final void initA_BENSTA96(String s) {
if (!s.trim().isEmpty()) {
A_BENSTA96 = Byte.parseByte(s);
} else {
A_BENSTA96 = Byte.MIN_VALUE;
}
}

protected final void initA_BENTAX1(String s) {
if (!s.trim().isEmpty()) {
A_BENTAX1 = Byte.parseByte(s);
} else {
A_BENTAX1 = Byte.MIN_VALUE;
}
}

protected final void initA_BENTAX2(String s) {
if (!s.trim().isEmpty()) {
A_BENTAX2 = Byte.parseByte(s);
} else {
A_BENTAX2 = Byte.MIN_VALUE;
}
}

protected final void initA_BENTAX3(String s) {
if (!s.trim().isEmpty()) {
A_BENTAX3 = Byte.parseByte(s);
} else {
A_BENTAX3 = Byte.MIN_VALUE;
}
}

protected final void initA_BENTAX4(String s) {
if (!s.trim().isEmpty()) {
A_BENTAX4 = Byte.parseByte(s);
} else {
A_BENTAX4 = Byte.MIN_VALUE;
}
}

protected final void initA_BENTAX5(String s) {
if (!s.trim().isEmpty()) {
A_BENTAX5 = Byte.parseByte(s);
} else {
A_BENTAX5 = Byte.MIN_VALUE;
}
}

protected final void initA_BENTAX96(String s) {
if (!s.trim().isEmpty()) {
A_BENTAX96 = Byte.parseByte(s);
} else {
A_BENTAX96 = Byte.MIN_VALUE;
}
}

protected final void initA_BENUNEMP1(String s) {
if (!s.trim().isEmpty()) {
A_BENUNEMP1 = Byte.parseByte(s);
} else {
A_BENUNEMP1 = Byte.MIN_VALUE;
}
}

protected final void initA_BENUNEMP2(String s) {
if (!s.trim().isEmpty()) {
A_BENUNEMP2 = Byte.parseByte(s);
} else {
A_BENUNEMP2 = Byte.MIN_VALUE;
}
}

protected final void initA_BENUNEMP96(String s) {
if (!s.trim().isEmpty()) {
A_BENUNEMP96 = Byte.parseByte(s);
} else {
A_BENUNEMP96 = Byte.MIN_VALUE;
}
}

protected final void initA_BIRTHY(String s) {
if (!s.trim().isEmpty()) {
A_BIRTHY = Short.parseShort(s);
} else {
A_BIRTHY = Short.MIN_VALUE;
}
}

protected final void initA_BMI_DV(String s) {
if (!s.trim().isEmpty()) {
A_BMI_DV = Double.parseDouble(s);
} else {
A_BMI_DV = Double.NaN;
}
}

protected final void initA_BRITID(String s) {
if (!s.trim().isEmpty()) {
A_BRITID = Byte.parseByte(s);
} else {
A_BRITID = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE1(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE1 = Byte.parseByte(s);
} else {
A_BTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE2(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE2 = Byte.parseByte(s);
} else {
A_BTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE3(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE3 = Byte.parseByte(s);
} else {
A_BTYPE3 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE4(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE4 = Byte.parseByte(s);
} else {
A_BTYPE4 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE5(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE5 = Byte.parseByte(s);
} else {
A_BTYPE5 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE6(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE6 = Byte.parseByte(s);
} else {
A_BTYPE6 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE7(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE7 = Byte.parseByte(s);
} else {
A_BTYPE7 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE8(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE8 = Byte.parseByte(s);
} else {
A_BTYPE8 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE9(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE9 = Byte.parseByte(s);
} else {
A_BTYPE9 = Byte.MIN_VALUE;
}
}

protected final void initA_BTYPE96(String s) {
if (!s.trim().isEmpty()) {
A_BTYPE96 = Byte.parseByte(s);
} else {
A_BTYPE96 = Byte.MIN_VALUE;
}
}

protected final void initA_BUNO_DV(String s) {
if (!s.trim().isEmpty()) {
A_BUNO_DV = Byte.parseByte(s);
} else {
A_BUNO_DV = Byte.MIN_VALUE;
}
}

protected final void initA_CARING_TM(String s) {
if (!s.trim().isEmpty()) {
A_CARING_TM = Integer.parseInt(s);
} else {
A_CARING_TM = Integer.MIN_VALUE;
}
}

protected final void initA_CARMILES(String s) {
if (!s.trim().isEmpty()) {
A_CARMILES = Integer.parseInt(s);
} else {
A_CARMILES = Integer.MIN_VALUE;
}
}

protected final void initA_CARUSE(String s) {
if (!s.trim().isEmpty()) {
A_CARUSE = Byte.parseByte(s);
} else {
A_CARUSE = Byte.MIN_VALUE;
}
}

protected final void initA_CCARE(String s) {
if (!s.trim().isEmpty()) {
A_CCARE = Byte.parseByte(s);
} else {
A_CCARE = Byte.MIN_VALUE;
}
}

protected final void initA_CCWORK(String s) {
if (!s.trim().isEmpty()) {
A_CCWORK = Byte.parseByte(s);
} else {
A_CCWORK = Byte.MIN_VALUE;
}
}

protected final void initA_CH1BY4(String s) {
if (!s.trim().isEmpty()) {
A_CH1BY4 = Short.parseShort(s);
} else {
A_CH1BY4 = Short.MIN_VALUE;
}
}

protected final void initA_CHCON(String s) {
if (!s.trim().isEmpty()) {
A_CHCON = Byte.parseByte(s);
} else {
A_CHCON = Byte.MIN_VALUE;
}
}

protected final void initA_CHFAR(String s) {
if (!s.trim().isEmpty()) {
A_CHFAR = Byte.parseByte(s);
} else {
A_CHFAR = Byte.MIN_VALUE;
}
}

protected final void initA_CHILDCARE_TM(String s) {
if (!s.trim().isEmpty()) {
A_CHILDCARE_TM = Integer.parseInt(s);
} else {
A_CHILDCARE_TM = Integer.MIN_VALUE;
}
}

protected final void initA_CHSEE(String s) {
if (!s.trim().isEmpty()) {
A_CHSEE = Byte.parseByte(s);
} else {
A_CHSEE = Byte.MIN_VALUE;
}
}

protected final void initA_CITZN1(String s) {
if (!s.trim().isEmpty()) {
A_CITZN1 = Byte.parseByte(s);
} else {
A_CITZN1 = Byte.MIN_VALUE;
}
}

protected final void initA_CITZN2(String s) {
if (!s.trim().isEmpty()) {
A_CITZN2 = Byte.parseByte(s);
} else {
A_CITZN2 = Byte.MIN_VALUE;
}
}

protected final void initA_CITZN3(String s) {
if (!s.trim().isEmpty()) {
A_CITZN3 = Byte.parseByte(s);
} else {
A_CITZN3 = Byte.MIN_VALUE;
}
}

protected final void initA_COHAB_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_COHAB_DV = false;
} else {
A_COHAB_DV = true;
}
}
}

protected final void initA_CONSENT_TM(String s) {
if (!s.trim().isEmpty()) {
A_CONSENT_TM = Integer.parseInt(s);
} else {
A_CONSENT_TM = Integer.MIN_VALUE;
}
}

protected final void initA_COUNTRY(String s) {
if (!s.trim().isEmpty()) {
A_COUNTRY = Byte.parseByte(s);
} else {
A_COUNTRY = Byte.MIN_VALUE;
}
}

protected final void initA_CTADD1_CODE(String s) {
if (!s.trim().isEmpty()) {
A_CTADD1_CODE = Byte.parseByte(s);
} else {
A_CTADD1_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_CTADD2_CODE(String s) {
if (!s.trim().isEmpty()) {
A_CTADD2_CODE = Byte.parseByte(s);
} else {
A_CTADD2_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_CTCNTY_CODE(String s) {
if (!s.trim().isEmpty()) {
A_CTCNTY_CODE = Byte.parseByte(s);
} else {
A_CTCNTY_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_CTEMAIL_CODE(String s) {
if (!s.trim().isEmpty()) {
A_CTEMAIL_CODE = Byte.parseByte(s);
} else {
A_CTEMAIL_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_CTPCODE_CODE(String s) {
if (!s.trim().isEmpty()) {
A_CTPCODE_CODE = Byte.parseByte(s);
} else {
A_CTPCODE_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_CTTEL1_CODE(String s) {
if (!s.trim().isEmpty()) {
A_CTTEL1_CODE = Byte.parseByte(s);
} else {
A_CTTEL1_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_CTTEL2_CODE(String s) {
if (!s.trim().isEmpty()) {
A_CTTEL2_CODE = Byte.parseByte(s);
} else {
A_CTTEL2_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_CTTOWN_CODE(String s) {
if (!s.trim().isEmpty()) {
A_CTTOWN_CODE = Byte.parseByte(s);
} else {
A_CTTOWN_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_CUDDLEKID(String s) {
if (!s.trim().isEmpty()) {
A_CUDDLEKID = Byte.parseByte(s);
} else {
A_CUDDLEKID = Byte.MIN_VALUE;
}
}

protected final void initA_DEMOG_TM(String s) {
if (!s.trim().isEmpty()) {
A_DEMOG_TM = Integer.parseInt(s);
} else {
A_DEMOG_TM = Integer.MIN_VALUE;
}
}

protected final void initA_DEPCHL_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_DEPCHL_DV = false;
} else {
A_DEPCHL_DV = true;
}
}
}

protected final void initA_DINNER(String s) {
if (!s.trim().isEmpty()) {
A_DINNER = Byte.parseByte(s);
} else {
A_DINNER = Byte.MIN_VALUE;
}
}

protected final void initA_DISCRIMINATION_TM(String s) {
if (!s.trim().isEmpty()) {
A_DISCRIMINATION_TM = Integer.parseInt(s);
} else {
A_DISCRIMINATION_TM = Integer.MIN_VALUE;
}
}

protected final void initA_DISDIF1(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF1 = Byte.parseByte(s);
} else {
A_DISDIF1 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF10(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF10 = Byte.parseByte(s);
} else {
A_DISDIF10 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF11(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF11 = Byte.parseByte(s);
} else {
A_DISDIF11 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF12(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF12 = Byte.parseByte(s);
} else {
A_DISDIF12 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF2(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF2 = Byte.parseByte(s);
} else {
A_DISDIF2 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF3(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF3 = Byte.parseByte(s);
} else {
A_DISDIF3 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF4(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF4 = Byte.parseByte(s);
} else {
A_DISDIF4 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF5(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF5 = Byte.parseByte(s);
} else {
A_DISDIF5 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF6(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF6 = Byte.parseByte(s);
} else {
A_DISDIF6 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF7(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF7 = Byte.parseByte(s);
} else {
A_DISDIF7 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF8(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF8 = Byte.parseByte(s);
} else {
A_DISDIF8 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF9(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF9 = Byte.parseByte(s);
} else {
A_DISDIF9 = Byte.MIN_VALUE;
}
}

protected final void initA_DISDIF96(String s) {
if (!s.trim().isEmpty()) {
A_DISDIF96 = Byte.parseByte(s);
} else {
A_DISDIF96 = Byte.MIN_VALUE;
}
}

protected final void initA_DOBY_DV(String s) {
if (!s.trim().isEmpty()) {
A_DOBY_DV = Short.parseShort(s);
} else {
A_DOBY_DV = Short.MIN_VALUE;
}
}

protected final void initA_DRIVE(String s) {
if (!s.trim().isEmpty()) {
A_DRIVE = Byte.parseByte(s);
} else {
A_DRIVE = Byte.MIN_VALUE;
}
}

protected final void initA_DVAGE(String s) {
if (!s.trim().isEmpty()) {
A_DVAGE = Byte.parseByte(s);
} else {
A_DVAGE = Byte.MIN_VALUE;
}
}

protected final void initA_EDASP(String s) {
if (!s.trim().isEmpty()) {
A_EDASP = Byte.parseByte(s);
} else {
A_EDASP = Byte.MIN_VALUE;
}
}

protected final void initA_EDLINKB(String s) {
if (!s.trim().isEmpty()) {
A_EDLINKB = Byte.parseByte(s);
} else {
A_EDLINKB = Byte.MIN_VALUE;
}
}

protected final void initA_EDTYPE(String s) {
if (!s.trim().isEmpty()) {
A_EDTYPE = Byte.parseByte(s);
} else {
A_EDTYPE = Byte.MIN_VALUE;
}
}

protected final void initA_EED12(String s) {
if (!s.trim().isEmpty()) {
A_EED12 = Byte.parseByte(s);
} else {
A_EED12 = Byte.MIN_VALUE;
}
}

protected final void initA_EMBOOST(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_EMBOOST = false;
} else {
A_EMBOOST = true;
}
}
}

protected final void initA_EMPLOY(String s) {
if (!s.trim().isEmpty()) {
A_EMPLOY = Byte.parseByte(s);
} else {
A_EMPLOY = Byte.MIN_VALUE;
}
}

protected final void initA_EMPLOYMENT_TM(String s) {
if (!s.trim().isEmpty()) {
A_EMPLOYMENT_TM = Integer.parseInt(s);
} else {
A_EMPLOYMENT_TM = Integer.MIN_VALUE;
}
}

protected final void initA_EMPSTAT_TM(String s) {
if (!s.trim().isEmpty()) {
A_EMPSTAT_TM = Integer.parseInt(s);
} else {
A_EMPSTAT_TM = Integer.MIN_VALUE;
}
}

protected final void initA_ENGFORM(String s) {
if (!s.trim().isEmpty()) {
A_ENGFORM = Byte.parseByte(s);
} else {
A_ENGFORM = Byte.MIN_VALUE;
}
}

protected final void initA_ENGLANG(String s) {
if (!s.trim().isEmpty()) {
A_ENGLANG = Byte.parseByte(s);
} else {
A_ENGLANG = Byte.MIN_VALUE;
}
}

protected final void initA_ENGREAD(String s) {
if (!s.trim().isEmpty()) {
A_ENGREAD = Byte.parseByte(s);
} else {
A_ENGREAD = Byte.MIN_VALUE;
}
}

protected final void initA_ENGSPK(String s) {
if (!s.trim().isEmpty()) {
A_ENGSPK = Byte.parseByte(s);
} else {
A_ENGSPK = Byte.MIN_VALUE;
}
}

protected final void initA_ENGTEL(String s) {
if (!s.trim().isEmpty()) {
A_ENGTEL = Byte.parseByte(s);
} else {
A_ENGTEL = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT1(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT1 = Byte.parseByte(s);
} else {
A_ENVHABIT1 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT10(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT10 = Byte.parseByte(s);
} else {
A_ENVHABIT10 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT11(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT11 = Byte.parseByte(s);
} else {
A_ENVHABIT11 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT2(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT2 = Byte.parseByte(s);
} else {
A_ENVHABIT2 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT3(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT3 = Byte.parseByte(s);
} else {
A_ENVHABIT3 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT4(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT4 = Byte.parseByte(s);
} else {
A_ENVHABIT4 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT5(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT5 = Byte.parseByte(s);
} else {
A_ENVHABIT5 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT6(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT6 = Byte.parseByte(s);
} else {
A_ENVHABIT6 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT7(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT7 = Byte.parseByte(s);
} else {
A_ENVHABIT7 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT8(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT8 = Byte.parseByte(s);
} else {
A_ENVHABIT8 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVHABIT9(String s) {
if (!s.trim().isEmpty()) {
A_ENVHABIT9 = Byte.parseByte(s);
} else {
A_ENVHABIT9 = Byte.MIN_VALUE;
}
}

protected final void initA_ENVIRON_TM(String s) {
if (!s.trim().isEmpty()) {
A_ENVIRON_TM = Integer.parseInt(s);
} else {
A_ENVIRON_TM = Integer.MIN_VALUE;
}
}

protected final void initA_ETHNIC1(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC1 = Byte.parseByte(s);
} else {
A_ETHNIC1 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC10(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC10 = Byte.parseByte(s);
} else {
A_ETHNIC10 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC11(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC11 = Byte.parseByte(s);
} else {
A_ETHNIC11 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC12(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC12 = Byte.parseByte(s);
} else {
A_ETHNIC12 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC13(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC13 = Byte.parseByte(s);
} else {
A_ETHNIC13 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC14(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC14 = Byte.parseByte(s);
} else {
A_ETHNIC14 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC2(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC2 = Byte.parseByte(s);
} else {
A_ETHNIC2 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC3(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC3 = Byte.parseByte(s);
} else {
A_ETHNIC3 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC4(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC4 = Byte.parseByte(s);
} else {
A_ETHNIC4 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC5(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC5 = Byte.parseByte(s);
} else {
A_ETHNIC5 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC6(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC6 = Byte.parseByte(s);
} else {
A_ETHNIC6 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC7(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC7 = Byte.parseByte(s);
} else {
A_ETHNIC7 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC8(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC8 = Byte.parseByte(s);
} else {
A_ETHNIC8 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC9(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC9 = Byte.parseByte(s);
} else {
A_ETHNIC9 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC96(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC96 = Byte.parseByte(s);
} else {
A_ETHNIC96 = Byte.MIN_VALUE;
}
}

protected final void initA_ETHNIC_TM(String s) {
if (!s.trim().isEmpty()) {
A_ETHNIC_TM = Integer.parseInt(s);
} else {
A_ETHNIC_TM = Integer.MIN_VALUE;
}
}

protected final void initA_ETHN_DV(String s) {
if (!s.trim().isEmpty()) {
A_ETHN_DV = Byte.parseByte(s);
} else {
A_ETHN_DV = Byte.MIN_VALUE;
}
}

protected final void initA_EXTNSA(String s) {
if (!s.trim().isEmpty()) {
A_EXTNSA = Byte.parseByte(s);
} else {
A_EXTNSA = Byte.MIN_VALUE;
}
}

protected final void initA_EXTRATE(String s) {
if (!s.trim().isEmpty()) {
A_EXTRATE = Double.parseDouble(s);
} else {
A_EXTRATE = Double.NaN;
}
}

protected final void initA_EXTREST(String s) {
if (!s.trim().isEmpty()) {
A_EXTREST = Byte.parseByte(s);
} else {
A_EXTREST = Byte.MIN_VALUE;
}
}

protected final void initA_FAMILY_TM(String s) {
if (!s.trim().isEmpty()) {
A_FAMILY_TM = Integer.parseInt(s);
} else {
A_FAMILY_TM = Integer.MIN_VALUE;
}
}

protected final void initA_FARKID(String s) {
if (!s.trim().isEmpty()) {
A_FARKID = Byte.parseByte(s);
} else {
A_FARKID = Byte.MIN_VALUE;
}
}

protected final void initA_FEDLIK(String s) {
if (!s.trim().isEmpty()) {
A_FEDLIK = Byte.parseByte(s);
} else {
A_FEDLIK = Byte.MIN_VALUE;
}
}

protected final void initA_FEDNT(String s) {
if (!s.trim().isEmpty()) {
A_FEDNT = Byte.parseByte(s);
} else {
A_FEDNT = Byte.MIN_VALUE;
}
}

protected final void initA_FEEND(String s) {
if (!s.trim().isEmpty()) {
A_FEEND = Byte.parseByte(s);
} else {
A_FEEND = Byte.MIN_VALUE;
}
}

protected final void initA_FENOW(String s) {
if (!s.trim().isEmpty()) {
A_FENOW = Byte.parseByte(s);
} else {
A_FENOW = Byte.MIN_VALUE;
}
}

protected final void initA_FERTILITY_TM(String s) {
if (!s.trim().isEmpty()) {
A_FERTILITY_TM = Integer.parseInt(s);
} else {
A_FERTILITY_TM = Integer.MIN_VALUE;
}
}

protected final void initA_FIBENOTHR_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIBENOTHR_DV = Double.parseDouble(s);
} else {
A_FIBENOTHR_DV = Double.NaN;
}
}

protected final void initA_FIBENOTHR_IF(String s) {
if (!s.trim().isEmpty()) {
A_FIBENOTHR_IF = Double.parseDouble(s);
} else {
A_FIBENOTHR_IF = Double.NaN;
}
}

protected final void initA_FIBENOTHR_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_FIBENOTHR_TC = false;
} else {
A_FIBENOTHR_TC = true;
}
}
}

protected final void initA_FIMNGRS_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNGRS_DV = Double.parseDouble(s);
} else {
A_FIMNGRS_DV = Double.NaN;
}
}

protected final void initA_FIMNGRS_IF(String s) {
if (!s.trim().isEmpty()) {
A_FIMNGRS_IF = Double.parseDouble(s);
} else {
A_FIMNGRS_IF = Double.NaN;
}
}

protected final void initA_FIMNGRS_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_FIMNGRS_TC = false;
} else {
A_FIMNGRS_TC = true;
}
}
}

protected final void initA_FIMNINVNET_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNINVNET_DV = Double.parseDouble(s);
} else {
A_FIMNINVNET_DV = Double.NaN;
}
}

protected final void initA_FIMNLABGRS_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNLABGRS_DV = Double.parseDouble(s);
} else {
A_FIMNLABGRS_DV = Double.NaN;
}
}

protected final void initA_FIMNLABGRS_IF(String s) {
if (!s.trim().isEmpty()) {
A_FIMNLABGRS_IF = Double.parseDouble(s);
} else {
A_FIMNLABGRS_IF = Double.NaN;
}
}

protected final void initA_FIMNLABGRS_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_FIMNLABGRS_TC = false;
} else {
A_FIMNLABGRS_TC = true;
}
}
}

protected final void initA_FIMNLABNET_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNLABNET_DV = Double.parseDouble(s);
} else {
A_FIMNLABNET_DV = Double.NaN;
}
}

protected final void initA_FIMNLABNET_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_FIMNLABNET_TC = false;
} else {
A_FIMNLABNET_TC = true;
}
}
}

protected final void initA_FIMNMISC_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNMISC_DV = Double.parseDouble(s);
} else {
A_FIMNMISC_DV = Double.NaN;
}
}

protected final void initA_FIMNNET_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNNET_DV = Double.parseDouble(s);
} else {
A_FIMNNET_DV = Double.NaN;
}
}

protected final void initA_FIMNPEN_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNPEN_DV = Double.parseDouble(s);
} else {
A_FIMNPEN_DV = Double.NaN;
}
}

protected final void initA_FIMNPRBEN_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNPRBEN_DV = Double.parseDouble(s);
} else {
A_FIMNPRBEN_DV = Double.NaN;
}
}

protected final void initA_FIMNSBEN_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIMNSBEN_DV = Double.parseDouble(s);
} else {
A_FIMNSBEN_DV = Double.NaN;
}
}

protected final void initA_FINANCES_TM(String s) {
if (!s.trim().isEmpty()) {
A_FINANCES_TM = Integer.parseInt(s);
} else {
A_FINANCES_TM = Integer.MIN_VALUE;
}
}

protected final void initA_FINFUT(String s) {
if (!s.trim().isEmpty()) {
A_FINFUT = Byte.parseByte(s);
} else {
A_FINFUT = Byte.MIN_VALUE;
}
}

protected final void initA_FININT_TM(String s) {
if (!s.trim().isEmpty()) {
A_FININT_TM = Integer.parseInt(s);
} else {
A_FININT_TM = Integer.MIN_VALUE;
}
}

protected final void initA_FINNOW(String s) {
if (!s.trim().isEmpty()) {
A_FINNOW = Byte.parseByte(s);
} else {
A_FINNOW = Byte.MIN_VALUE;
}
}

protected final void initA_FIYRDB1(String s) {
if (!s.trim().isEmpty()) {
A_FIYRDB1 = Byte.parseByte(s);
} else {
A_FIYRDB1 = Byte.MIN_VALUE;
}
}

protected final void initA_FIYRDB2(String s) {
if (!s.trim().isEmpty()) {
A_FIYRDB2 = Byte.parseByte(s);
} else {
A_FIYRDB2 = Byte.MIN_VALUE;
}
}

protected final void initA_FIYRDB3(String s) {
if (!s.trim().isEmpty()) {
A_FIYRDB3 = Byte.parseByte(s);
} else {
A_FIYRDB3 = Byte.MIN_VALUE;
}
}

protected final void initA_FIYRDB4(String s) {
if (!s.trim().isEmpty()) {
A_FIYRDB4 = Byte.parseByte(s);
} else {
A_FIYRDB4 = Byte.MIN_VALUE;
}
}

protected final void initA_FIYRDB5(String s) {
if (!s.trim().isEmpty()) {
A_FIYRDB5 = Byte.parseByte(s);
} else {
A_FIYRDB5 = Byte.MIN_VALUE;
}
}

protected final void initA_FIYRDB6(String s) {
if (!s.trim().isEmpty()) {
A_FIYRDB6 = Byte.parseByte(s);
} else {
A_FIYRDB6 = Byte.MIN_VALUE;
}
}

protected final void initA_FIYRDIA(String s) {
if (!s.trim().isEmpty()) {
A_FIYRDIA = Integer.parseInt(s);
} else {
A_FIYRDIA = Integer.MIN_VALUE;
}
}

protected final void initA_FIYRINVINC_DV(String s) {
if (!s.trim().isEmpty()) {
A_FIYRINVINC_DV = Double.parseDouble(s);
} else {
A_FIYRINVINC_DV = Double.NaN;
}
}

protected final void initA_FIYRINVINC_IF(String s) {
if (!s.trim().isEmpty()) {
A_FIYRINVINC_IF = Byte.parseByte(s);
} else {
A_FIYRINVINC_IF = Byte.MIN_VALUE;
}
}

protected final void initA_FIYRINVINC_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_FIYRINVINC_TC = false;
} else {
A_FIYRINVINC_TC = true;
}
}
}

protected final void initA_FLAGLINK(String s) {
if (!s.trim().isEmpty()) {
A_FLAGLINK = Byte.parseByte(s);
} else {
A_FLAGLINK = Byte.MIN_VALUE;
}
}

protected final void initA_FNPID(String s) {
if (!s.trim().isEmpty()) {
A_FNPID = Integer.parseInt(s);
} else {
A_FNPID = Integer.MIN_VALUE;
}
}

protected final void initA_FNPNO(String s) {
if (!s.trim().isEmpty()) {
A_FNPNO = Byte.parseByte(s);
} else {
A_FNPNO = Byte.MIN_VALUE;
}
}

protected final void initA_FNSPID(String s) {
if (!s.trim().isEmpty()) {
A_FNSPID = Integer.parseInt(s);
} else {
A_FNSPID = Integer.MIN_VALUE;
}
}

protected final void initA_FNSPNO(String s) {
if (!s.trim().isEmpty()) {
A_FNSPNO = Byte.parseByte(s);
} else {
A_FNSPNO = Byte.MIN_VALUE;
}
}

protected final void initA_FORMDIF(String s) {
if (!s.trim().isEmpty()) {
A_FORMDIF = Byte.parseByte(s);
} else {
A_FORMDIF = Byte.MIN_VALUE;
}
}

protected final void initA_FTEXV(String s) {
if (!s.trim().isEmpty()) {
A_FTEXV = Integer.parseInt(s);
} else {
A_FTEXV = Integer.MIN_VALUE;
}
}

protected final void initA_FTEXW(String s) {
if (!s.trim().isEmpty()) {
A_FTEXW = Byte.parseByte(s);
} else {
A_FTEXW = Byte.MIN_VALUE;
}
}

protected final void initA_GOR_DV(String s) {
if (!s.trim().isEmpty()) {
A_GOR_DV = Byte.parseByte(s);
} else {
A_GOR_DV = Byte.MIN_VALUE;
}
}

protected final void initA_GPCOMP(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_GPCOMP = false;
} else {
A_GPCOMP = true;
}
}
}

protected final void initA_GRFPID(String s) {
if (!s.trim().isEmpty()) {
A_GRFPID = Integer.parseInt(s);
} else {
A_GRFPID = Integer.MIN_VALUE;
}
}

protected final void initA_GRFPNO(String s) {
if (!s.trim().isEmpty()) {
A_GRFPNO = Byte.parseByte(s);
} else {
A_GRFPNO = Byte.MIN_VALUE;
}
}

protected final void initA_GRMPID(String s) {
if (!s.trim().isEmpty()) {
A_GRMPID = Integer.parseInt(s);
} else {
A_GRMPID = Integer.MIN_VALUE;
}
}

protected final void initA_GRMPNO(String s) {
if (!s.trim().isEmpty()) {
A_GRMPNO = Byte.parseByte(s);
} else {
A_GRMPNO = Byte.MIN_VALUE;
}
}

protected final void initA_HARASSMENT_TM(String s) {
if (!s.trim().isEmpty()) {
A_HARASSMENT_TM = Integer.parseInt(s);
} else {
A_HARASSMENT_TM = Integer.MIN_VALUE;
}
}

protected final void initA_HCOND1(String s) {
if (!s.trim().isEmpty()) {
A_HCOND1 = Byte.parseByte(s);
} else {
A_HCOND1 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND10(String s) {
if (!s.trim().isEmpty()) {
A_HCOND10 = Byte.parseByte(s);
} else {
A_HCOND10 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND11(String s) {
if (!s.trim().isEmpty()) {
A_HCOND11 = Byte.parseByte(s);
} else {
A_HCOND11 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND12(String s) {
if (!s.trim().isEmpty()) {
A_HCOND12 = Byte.parseByte(s);
} else {
A_HCOND12 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND13(String s) {
if (!s.trim().isEmpty()) {
A_HCOND13 = Byte.parseByte(s);
} else {
A_HCOND13 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND14(String s) {
if (!s.trim().isEmpty()) {
A_HCOND14 = Byte.parseByte(s);
} else {
A_HCOND14 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND15(String s) {
if (!s.trim().isEmpty()) {
A_HCOND15 = Byte.parseByte(s);
} else {
A_HCOND15 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND16(String s) {
if (!s.trim().isEmpty()) {
A_HCOND16 = Byte.parseByte(s);
} else {
A_HCOND16 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND17(String s) {
if (!s.trim().isEmpty()) {
A_HCOND17 = Byte.parseByte(s);
} else {
A_HCOND17 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND2(String s) {
if (!s.trim().isEmpty()) {
A_HCOND2 = Byte.parseByte(s);
} else {
A_HCOND2 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND3(String s) {
if (!s.trim().isEmpty()) {
A_HCOND3 = Byte.parseByte(s);
} else {
A_HCOND3 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND4(String s) {
if (!s.trim().isEmpty()) {
A_HCOND4 = Byte.parseByte(s);
} else {
A_HCOND4 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND5(String s) {
if (!s.trim().isEmpty()) {
A_HCOND5 = Byte.parseByte(s);
} else {
A_HCOND5 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND6(String s) {
if (!s.trim().isEmpty()) {
A_HCOND6 = Byte.parseByte(s);
} else {
A_HCOND6 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND7(String s) {
if (!s.trim().isEmpty()) {
A_HCOND7 = Byte.parseByte(s);
} else {
A_HCOND7 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND8(String s) {
if (!s.trim().isEmpty()) {
A_HCOND8 = Byte.parseByte(s);
} else {
A_HCOND8 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND9(String s) {
if (!s.trim().isEmpty()) {
A_HCOND9 = Byte.parseByte(s);
} else {
A_HCOND9 = Byte.MIN_VALUE;
}
}

protected final void initA_HCOND96(String s) {
if (!s.trim().isEmpty()) {
A_HCOND96 = Byte.parseByte(s);
} else {
A_HCOND96 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA01(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA01 = Byte.parseByte(s);
} else {
A_HCONDA01 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA02(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA02 = Byte.parseByte(s);
} else {
A_HCONDA02 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA03(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA03 = Byte.parseByte(s);
} else {
A_HCONDA03 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA04(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA04 = Byte.parseByte(s);
} else {
A_HCONDA04 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA05(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA05 = Byte.parseByte(s);
} else {
A_HCONDA05 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA06(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA06 = Byte.parseByte(s);
} else {
A_HCONDA06 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA07(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA07 = Byte.parseByte(s);
} else {
A_HCONDA07 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA08(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA08 = Byte.parseByte(s);
} else {
A_HCONDA08 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA09(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA09 = Byte.parseByte(s);
} else {
A_HCONDA09 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA10(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA10 = Byte.parseByte(s);
} else {
A_HCONDA10 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA11(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA11 = Byte.parseByte(s);
} else {
A_HCONDA11 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA12(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA12 = Byte.parseByte(s);
} else {
A_HCONDA12 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA13(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA13 = Byte.parseByte(s);
} else {
A_HCONDA13 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA14(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA14 = Byte.parseByte(s);
} else {
A_HCONDA14 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA15(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA15 = Byte.parseByte(s);
} else {
A_HCONDA15 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA16(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA16 = Byte.parseByte(s);
} else {
A_HCONDA16 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDA17(String s) {
if (!s.trim().isEmpty()) {
A_HCONDA17 = Byte.parseByte(s);
} else {
A_HCONDA17 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS01(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS01 = Byte.parseByte(s);
} else {
A_HCONDS01 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS02(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS02 = Byte.parseByte(s);
} else {
A_HCONDS02 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS03(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS03 = Byte.parseByte(s);
} else {
A_HCONDS03 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS04(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS04 = Byte.parseByte(s);
} else {
A_HCONDS04 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS05(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS05 = Byte.parseByte(s);
} else {
A_HCONDS05 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS06(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
A_HCONDS06 = false;
} else {
A_HCONDS06 = true;
}
}
}

protected final void initA_HCONDS07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
A_HCONDS07 = false;
} else {
A_HCONDS07 = true;
}
}
}

protected final void initA_HCONDS08(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS08 = Byte.parseByte(s);
} else {
A_HCONDS08 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS09(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS09 = Byte.parseByte(s);
} else {
A_HCONDS09 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS10(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS10 = Byte.parseByte(s);
} else {
A_HCONDS10 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS11(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS11 = Byte.parseByte(s);
} else {
A_HCONDS11 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS12(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS12 = Byte.parseByte(s);
} else {
A_HCONDS12 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS13(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS13 = Byte.parseByte(s);
} else {
A_HCONDS13 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS14(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS14 = Byte.parseByte(s);
} else {
A_HCONDS14 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS15(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS15 = Byte.parseByte(s);
} else {
A_HCONDS15 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS16(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS16 = Byte.parseByte(s);
} else {
A_HCONDS16 = Byte.MIN_VALUE;
}
}

protected final void initA_HCONDS17(String s) {
if (!s.trim().isEmpty()) {
A_HCONDS17 = Byte.parseByte(s);
} else {
A_HCONDS17 = Byte.MIN_VALUE;
}
}

protected final void initA_HEALTH(String s) {
if (!s.trim().isEmpty()) {
A_HEALTH = Byte.parseByte(s);
} else {
A_HEALTH = Byte.MIN_VALUE;
}
}

protected final void initA_HEALTHLINK(String s) {
if (!s.trim().isEmpty()) {
A_HEALTHLINK = Byte.parseByte(s);
} else {
A_HEALTHLINK = Byte.MIN_VALUE;
}
}

protected final void initA_HEALTH_TM(String s) {
if (!s.trim().isEmpty()) {
A_HEALTH_TM = Integer.parseInt(s);
} else {
A_HEALTH_TM = Integer.MIN_VALUE;
}
}

protected final void initA_HGADOPTF(String s) {
if (!s.trim().isEmpty()) {
A_HGADOPTF = Byte.parseByte(s);
} else {
A_HGADOPTF = Byte.MIN_VALUE;
}
}

protected final void initA_HGADOPTM(String s) {
if (!s.trim().isEmpty()) {
A_HGADOPTM = Byte.parseByte(s);
} else {
A_HGADOPTM = Byte.MIN_VALUE;
}
}

protected final void initA_HGBIOF(String s) {
if (!s.trim().isEmpty()) {
A_HGBIOF = Byte.parseByte(s);
} else {
A_HGBIOF = Byte.MIN_VALUE;
}
}

protected final void initA_HGBIOM(String s) {
if (!s.trim().isEmpty()) {
A_HGBIOM = Byte.parseByte(s);
} else {
A_HGBIOM = Byte.MIN_VALUE;
}
}

protected final void initA_HGPART(String s) {
if (!s.trim().isEmpty()) {
A_HGPART = Byte.parseByte(s);
} else {
A_HGPART = Byte.MIN_VALUE;
}
}

protected final void initA_HHGRID_TM(String s) {
if (!s.trim().isEmpty()) {
A_HHGRID_TM = Integer.parseInt(s);
} else {
A_HHGRID_TM = Integer.MIN_VALUE;
}
}

protected final void initA_HHORIG(String s) {
if (!s.trim().isEmpty()) {
A_HHORIG = Byte.parseByte(s);
} else {
A_HHORIG = Byte.MIN_VALUE;
}
}

protected final void initA_HHQRE_TM(String s) {
if (!s.trim().isEmpty()) {
A_HHQRE_TM = Integer.parseInt(s);
} else {
A_HHQRE_TM = Integer.MIN_VALUE;
}
}

protected final void initA_HHRESP_DV(String s) {
if (!s.trim().isEmpty()) {
A_HHRESP_DV = Byte.parseByte(s);
} else {
A_HHRESP_DV = Byte.MIN_VALUE;
}
}

protected final void initA_HHSTTIME_TM(String s) {
if (!s.trim().isEmpty()) {
A_HHSTTIME_TM = Integer.parseInt(s);
} else {
A_HHSTTIME_TM = Integer.MIN_VALUE;
}
}

protected final void initA_HHTYPE_DV(String s) {
if (!s.trim().isEmpty()) {
A_HHTYPE_DV = Byte.parseByte(s);
} else {
A_HHTYPE_DV = Byte.MIN_VALUE;
}
}

protected final void initA_HIDP(String s) {
if (!s.trim().isEmpty()) {
A_HIDP = Integer.parseInt(s);
} else {
A_HIDP = Integer.MIN_VALUE;
}
}

protected final void initA_HIQUAL_DV(String s) {
if (!s.trim().isEmpty()) {
A_HIQUAL_DV = Byte.parseByte(s);
} else {
A_HIQUAL_DV = Byte.MIN_VALUE;
}
}

protected final void initA_HLHT(String s) {
if (!s.trim().isEmpty()) {
A_HLHT = Byte.parseByte(s);
} else {
A_HLHT = Byte.MIN_VALUE;
}
}

protected final void initA_HLHTC(String s) {
if (!s.trim().isEmpty()) {
A_HLHTC = Short.parseShort(s);
} else {
A_HLHTC = Short.MIN_VALUE;
}
}

protected final void initA_HLHTF(String s) {
if (!s.trim().isEmpty()) {
A_HLHTF = Byte.parseByte(s);
} else {
A_HLHTF = Byte.MIN_VALUE;
}
}

protected final void initA_HLHTI(String s) {
if (!s.trim().isEmpty()) {
A_HLHTI = Byte.parseByte(s);
} else {
A_HLHTI = Byte.MIN_VALUE;
}
}

protected final void initA_HLPHMWK(String s) {
if (!s.trim().isEmpty()) {
A_HLPHMWK = Byte.parseByte(s);
} else {
A_HLPHMWK = Byte.MIN_VALUE;
}
}

protected final void initA_HLWT(String s) {
if (!s.trim().isEmpty()) {
A_HLWT = Byte.parseByte(s);
} else {
A_HLWT = Byte.MIN_VALUE;
}
}

protected final void initA_HLWTE(String s) {
if (!s.trim().isEmpty()) {
A_HLWTE = Byte.parseByte(s);
} else {
A_HLWTE = Byte.MIN_VALUE;
}
}

protected final void initA_HLWTK(String s) {
if (!s.trim().isEmpty()) {
A_HLWTK = Short.parseShort(s);
} else {
A_HLWTK = Short.MIN_VALUE;
}
}

protected final void initA_HLWTL(String s) {
if (!s.trim().isEmpty()) {
A_HLWTL = Byte.parseByte(s);
} else {
A_HLWTL = Byte.MIN_VALUE;
}
}

protected final void initA_HLWTP(String s) {
if (!s.trim().isEmpty()) {
A_HLWTP = Byte.parseByte(s);
} else {
A_HLWTP = Byte.MIN_VALUE;
}
}

protected final void initA_HLWTS(String s) {
if (!s.trim().isEmpty()) {
A_HLWTS = Byte.parseByte(s);
} else {
A_HLWTS = Byte.MIN_VALUE;
}
}

protected final void initA_HOWLNG(String s) {
if (!s.trim().isEmpty()) {
A_HOWLNG = Byte.parseByte(s);
} else {
A_HOWLNG = Byte.MIN_VALUE;
}
}

protected final void initA_HRPID(String s) {
if (!s.trim().isEmpty()) {
A_HRPID = Integer.parseInt(s);
} else {
A_HRPID = Integer.MIN_VALUE;
}
}

protected final void initA_HRPNO(String s) {
if (!s.trim().isEmpty()) {
A_HRPNO = Byte.parseByte(s);
} else {
A_HRPNO = Byte.MIN_VALUE;
}
}

protected final void initA_IENDDATHH(String s) {
if (!s.trim().isEmpty()) {
A_IENDDATHH = Byte.parseByte(s);
} else {
A_IENDDATHH = Byte.MIN_VALUE;
}
}

protected final void initA_IENDDATMM(String s) {
if (!s.trim().isEmpty()) {
A_IENDDATMM = Byte.parseByte(s);
} else {
A_IENDDATMM = Byte.MIN_VALUE;
}
}

protected final void initA_IENDDATSS(String s) {
if (!s.trim().isEmpty()) {
A_IENDDATSS = Byte.parseByte(s);
} else {
A_IENDDATSS = Byte.MIN_VALUE;
}
}

protected final void initA_IMPEVENT1(String s) {
if (!s.trim().isEmpty()) {
A_IMPEVENT1 = Byte.parseByte(s);
} else {
A_IMPEVENT1 = Byte.MIN_VALUE;
}
}

protected final void initA_IMPEVENT1S(String s) {
if (!s.trim().isEmpty()) {
A_IMPEVENT1S = Byte.parseByte(s);
} else {
A_IMPEVENT1S = Byte.MIN_VALUE;
}
}

protected final void initA_IMPEVENT2(String s) {
if (!s.trim().isEmpty()) {
A_IMPEVENT2 = Byte.parseByte(s);
} else {
A_IMPEVENT2 = Byte.MIN_VALUE;
}
}

protected final void initA_IMPEVENT2S(String s) {
if (!s.trim().isEmpty()) {
A_IMPEVENT2S = Byte.parseByte(s);
} else {
A_IMPEVENT2S = Byte.MIN_VALUE;
}
}

protected final void initA_IMPEVENT3(String s) {
if (!s.trim().isEmpty()) {
A_IMPEVENT3 = Byte.parseByte(s);
} else {
A_IMPEVENT3 = Byte.MIN_VALUE;
}
}

protected final void initA_IMPEVENT3S(String s) {
if (!s.trim().isEmpty()) {
A_IMPEVENT3S = Byte.parseByte(s);
} else {
A_IMPEVENT3S = Byte.MIN_VALUE;
}
}

protected final void initA_IMPEVENT4(String s) {
if (!s.trim().isEmpty()) {
A_IMPEVENT4 = Byte.parseByte(s);
} else {
A_IMPEVENT4 = Byte.MIN_VALUE;
}
}

protected final void initA_IMPEVENT4S(String s) {
if (!s.trim().isEmpty()) {
A_IMPEVENT4S = Byte.parseByte(s);
} else {
A_IMPEVENT4S = Byte.MIN_VALUE;
}
}

protected final void initA_IND5MUS_XW(String s) {
if (!s.trim().isEmpty()) {
A_IND5MUS_XW = Double.parseDouble(s);
} else {
A_IND5MUS_XW = Double.NaN;
}
}

protected final void initA_INDINUS_XW(String s) {
if (!s.trim().isEmpty()) {
A_INDINUS_XW = Double.parseDouble(s);
} else {
A_INDINUS_XW = Double.NaN;
}
}

protected final void initA_INDPXUS_XW(String s) {
if (!s.trim().isEmpty()) {
A_INDPXUS_XW = Double.parseDouble(s);
} else {
A_INDPXUS_XW = Double.NaN;
}
}

protected final void initA_INDSCUS_XW(String s) {
if (!s.trim().isEmpty()) {
A_INDSCUS_XW = Double.parseDouble(s);
} else {
A_INDSCUS_XW = Double.NaN;
}
}

protected final void initA_INITIAL_TM(String s) {
if (!s.trim().isEmpty()) {
A_INITIAL_TM = Integer.parseInt(s);
} else {
A_INITIAL_TM = Integer.MIN_VALUE;
}
}

protected final void initA_INSULTEDW11(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW11 = Byte.parseByte(s);
} else {
A_INSULTEDW11 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTEDW12(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW12 = Byte.parseByte(s);
} else {
A_INSULTEDW12 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTEDW13(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW13 = Byte.parseByte(s);
} else {
A_INSULTEDW13 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTEDW14(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW14 = Byte.parseByte(s);
} else {
A_INSULTEDW14 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTEDW15(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW15 = Byte.parseByte(s);
} else {
A_INSULTEDW15 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTEDW16(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW16 = Byte.parseByte(s);
} else {
A_INSULTEDW16 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTEDW17(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW17 = Byte.parseByte(s);
} else {
A_INSULTEDW17 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTEDW196(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW196 = Byte.parseByte(s);
} else {
A_INSULTEDW196 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTEDW197(String s) {
if (!s.trim().isEmpty()) {
A_INSULTEDW197 = Byte.parseByte(s);
} else {
A_INSULTEDW197 = Byte.MIN_VALUE;
}
}

protected final void initA_INSULTED_DV(String s) {
if (!s.trim().isEmpty()) {
A_INSULTED_DV = Byte.parseByte(s);
} else {
A_INSULTED_DV = Byte.MIN_VALUE;
}
}

protected final void initA_INTDATD_DV(String s) {
if (!s.trim().isEmpty()) {
A_INTDATD_DV = Byte.parseByte(s);
} else {
A_INTDATD_DV = Byte.MIN_VALUE;
}
}

protected final void initA_INTDATM_DV(String s) {
if (!s.trim().isEmpty()) {
A_INTDATM_DV = Byte.parseByte(s);
} else {
A_INTDATM_DV = Byte.MIN_VALUE;
}
}

protected final void initA_INTDATY_DV(String s) {
if (!s.trim().isEmpty()) {
A_INTDATY_DV = Short.parseShort(s);
} else {
A_INTDATY_DV = Short.MIN_VALUE;
}
}

protected final void initA_IOUTCOME(String s) {
if (!s.trim().isEmpty()) {
A_IOUTCOME = Byte.parseByte(s);
} else {
A_IOUTCOME = Byte.MIN_VALUE;
}
}

protected final void initA_ISTRTDATD(String s) {
if (!s.trim().isEmpty()) {
A_ISTRTDATD = Byte.parseByte(s);
} else {
A_ISTRTDATD = Byte.MIN_VALUE;
}
}

protected final void initA_ISTRTDATHH(String s) {
if (!s.trim().isEmpty()) {
A_ISTRTDATHH = Byte.parseByte(s);
} else {
A_ISTRTDATHH = Byte.MIN_VALUE;
}
}

protected final void initA_ISTRTDATM(String s) {
if (!s.trim().isEmpty()) {
A_ISTRTDATM = Byte.parseByte(s);
} else {
A_ISTRTDATM = Byte.MIN_VALUE;
}
}

protected final void initA_ISTRTDATMM(String s) {
if (!s.trim().isEmpty()) {
A_ISTRTDATMM = Byte.parseByte(s);
} else {
A_ISTRTDATMM = Byte.MIN_VALUE;
}
}

protected final void initA_ISTRTDATSS(String s) {
if (!s.trim().isEmpty()) {
A_ISTRTDATSS = Byte.parseByte(s);
} else {
A_ISTRTDATSS = Byte.MIN_VALUE;
}
}

protected final void initA_ISTRTDATY(String s) {
if (!s.trim().isEmpty()) {
A_ISTRTDATY = Short.parseShort(s);
} else {
A_ISTRTDATY = Short.MIN_VALUE;
}
}

protected final void initA_IVAFFCT11(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT11 = Byte.parseByte(s);
} else {
A_IVAFFCT11 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT12(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT12 = Byte.parseByte(s);
} else {
A_IVAFFCT12 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT13(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT13 = Byte.parseByte(s);
} else {
A_IVAFFCT13 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT14(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT14 = Byte.parseByte(s);
} else {
A_IVAFFCT14 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT15(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT15 = Byte.parseByte(s);
} else {
A_IVAFFCT15 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT17(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT17 = Byte.parseByte(s);
} else {
A_IVAFFCT17 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT21(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT21 = Byte.parseByte(s);
} else {
A_IVAFFCT21 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT22(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT22 = Byte.parseByte(s);
} else {
A_IVAFFCT22 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT23(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT23 = Byte.parseByte(s);
} else {
A_IVAFFCT23 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT27(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT27 = Byte.parseByte(s);
} else {
A_IVAFFCT27 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT30(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT30 = Byte.parseByte(s);
} else {
A_IVAFFCT30 = Byte.MIN_VALUE;
}
}

protected final void initA_IVAFFCT97(String s) {
if (!s.trim().isEmpty()) {
A_IVAFFCT97 = Byte.parseByte(s);
} else {
A_IVAFFCT97 = Byte.MIN_VALUE;
}
}

protected final void initA_IVCOOP(String s) {
if (!s.trim().isEmpty()) {
A_IVCOOP = Byte.parseByte(s);
} else {
A_IVCOOP = Byte.MIN_VALUE;
}
}

protected final void initA_IVFIO(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_IVFIO = false;
} else {
A_IVFIO = true;
}
}
}

protected final void initA_IVINFNCE(String s) {
if (!s.trim().isEmpty()) {
A_IVINFNCE = Byte.parseByte(s);
} else {
A_IVINFNCE = Byte.MIN_VALUE;
}
}

protected final void initA_IVINTLANG(String s) {
if (!s.trim().isEmpty()) {
A_IVINTLANG = Byte.parseByte(s);
} else {
A_IVINTLANG = Byte.MIN_VALUE;
}
}

protected final void initA_IVPRSNT(String s) {
if (!s.trim().isEmpty()) {
A_IVPRSNT = Byte.parseByte(s);
} else {
A_IVPRSNT = Byte.MIN_VALUE;
}
}

protected final void initA_IVTRANS(String s) {
if (!s.trim().isEmpty()) {
A_IVTRANS = Byte.parseByte(s);
} else {
A_IVTRANS = Byte.MIN_VALUE;
}
}

protected final void initA_IVWHOINT(String s) {
if (!s.trim().isEmpty()) {
A_IVWHOINT = Byte.parseByte(s);
} else {
A_IVWHOINT = Byte.MIN_VALUE;
}
}

protected final void initA_J1NSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
A_J1NSSEC5_DV = Byte.parseByte(s);
} else {
A_J1NSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initA_J1SOC00_CC(String s) {
if (!s.trim().isEmpty()) {
A_J1SOC00_CC = Short.parseShort(s);
} else {
A_J1SOC00_CC = Short.MIN_VALUE;
}
}

protected final void initA_J1SOC10_CC(String s) {
if (!s.trim().isEmpty()) {
A_J1SOC10_CC = Short.parseShort(s);
} else {
A_J1SOC10_CC = Short.MIN_VALUE;
}
}

protected final void initA_J1SOC90_CC(String s) {
if (!s.trim().isEmpty()) {
A_J1SOC90_CC = Byte.parseByte(s);
} else {
A_J1SOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initA_J2HAS(String s) {
if (!s.trim().isEmpty()) {
A_J2HAS = Byte.parseByte(s);
} else {
A_J2HAS = Byte.MIN_VALUE;
}
}

protected final void initA_J2HRS(String s) {
if (!s.trim().isEmpty()) {
A_J2HRS = Short.parseShort(s);
} else {
A_J2HRS = Short.MIN_VALUE;
}
}

protected final void initA_J2PAY(String s) {
if (!s.trim().isEmpty()) {
A_J2PAY = Integer.parseInt(s);
} else {
A_J2PAY = Integer.MIN_VALUE;
}
}

protected final void initA_J2PAYNET_DV(String s) {
if (!s.trim().isEmpty()) {
A_J2PAYNET_DV = Double.parseDouble(s);
} else {
A_J2PAYNET_DV = Double.NaN;
}
}

protected final void initA_J2PAY_DV(String s) {
if (!s.trim().isEmpty()) {
A_J2PAY_DV = Double.parseDouble(s);
} else {
A_J2PAY_DV = Double.NaN;
}
}

protected final void initA_J2PAY_IF(String s) {
if (!s.trim().isEmpty()) {
A_J2PAY_IF = Byte.parseByte(s);
} else {
A_J2PAY_IF = Byte.MIN_VALUE;
}
}

protected final void initA_J2SEMP(String s) {
if (!s.trim().isEmpty()) {
A_J2SEMP = Byte.parseByte(s);
} else {
A_J2SEMP = Byte.MIN_VALUE;
}
}

protected final void initA_JBBGD(String s) {
if (!s.trim().isEmpty()) {
A_JBBGD = Byte.parseByte(s);
} else {
A_JBBGD = Byte.MIN_VALUE;
}
}

protected final void initA_JBBGM(String s) {
if (!s.trim().isEmpty()) {
A_JBBGM = Byte.parseByte(s);
} else {
A_JBBGM = Byte.MIN_VALUE;
}
}

protected final void initA_JBBGY(String s) {
if (!s.trim().isEmpty()) {
A_JBBGY = Short.parseShort(s);
} else {
A_JBBGY = Short.MIN_VALUE;
}
}

protected final void initA_JBES2000(String s) {
if (!s.trim().isEmpty()) {
A_JBES2000 = Byte.parseByte(s);
} else {
A_JBES2000 = Byte.MIN_VALUE;
}
}

protected final void initA_JBFT_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBFT_DV = Byte.parseByte(s);
} else {
A_JBFT_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBHAD(String s) {
if (!s.trim().isEmpty()) {
A_JBHAD = Byte.parseByte(s);
} else {
A_JBHAD = Byte.MIN_VALUE;
}
}

protected final void initA_JBHAS(String s) {
if (!s.trim().isEmpty()) {
A_JBHAS = Byte.parseByte(s);
} else {
A_JBHAS = Byte.MIN_VALUE;
}
}

protected final void initA_JBHRS(String s) {
if (!s.trim().isEmpty()) {
A_JBHRS = Double.parseDouble(s);
} else {
A_JBHRS = Double.NaN;
}
}

protected final void initA_JBIINDB_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBIINDB_DV = Byte.parseByte(s);
} else {
A_JBIINDB_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBISCO88_CC(String s) {
if (!s.trim().isEmpty()) {
A_JBISCO88_CC = Short.parseShort(s);
} else {
A_JBISCO88_CC = Short.MIN_VALUE;
}
}

protected final void initA_JBMNGR(String s) {
if (!s.trim().isEmpty()) {
A_JBMNGR = Byte.parseByte(s);
} else {
A_JBMNGR = Byte.MIN_VALUE;
}
}

protected final void initA_JBNSSEC3_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBNSSEC3_DV = Byte.parseByte(s);
} else {
A_JBNSSEC3_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBNSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBNSSEC5_DV = Byte.parseByte(s);
} else {
A_JBNSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBNSSEC8_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBNSSEC8_DV = Byte.parseByte(s);
} else {
A_JBNSSEC8_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBNSSEC_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBNSSEC_DV = Byte.parseByte(s);
} else {
A_JBNSSEC_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBOFF(String s) {
if (!s.trim().isEmpty()) {
A_JBOFF = Byte.parseByte(s);
} else {
A_JBOFF = Byte.MIN_VALUE;
}
}

protected final void initA_JBOFFY(String s) {
if (!s.trim().isEmpty()) {
A_JBOFFY = Byte.parseByte(s);
} else {
A_JBOFFY = Byte.MIN_VALUE;
}
}

protected final void initA_JBOT(String s) {
if (!s.trim().isEmpty()) {
A_JBOT = Byte.parseByte(s);
} else {
A_JBOT = Byte.MIN_VALUE;
}
}

protected final void initA_JBOTPD(String s) {
if (!s.trim().isEmpty()) {
A_JBOTPD = Byte.parseByte(s);
} else {
A_JBOTPD = Byte.MIN_VALUE;
}
}

protected final void initA_JBPEN(String s) {
if (!s.trim().isEmpty()) {
A_JBPEN = Byte.parseByte(s);
} else {
A_JBPEN = Byte.MIN_VALUE;
}
}

protected final void initA_JBPENM(String s) {
if (!s.trim().isEmpty()) {
A_JBPENM = Byte.parseByte(s);
} else {
A_JBPENM = Byte.MIN_VALUE;
}
}

protected final void initA_JBPL(String s) {
if (!s.trim().isEmpty()) {
A_JBPL = Byte.parseByte(s);
} else {
A_JBPL = Byte.MIN_VALUE;
}
}

protected final void initA_JBRGSC_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBRGSC_DV = Byte.parseByte(s);
} else {
A_JBRGSC_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBSAT(String s) {
if (!s.trim().isEmpty()) {
A_JBSAT = Byte.parseByte(s);
} else {
A_JBSAT = Byte.MIN_VALUE;
}
}

protected final void initA_JBSECT(String s) {
if (!s.trim().isEmpty()) {
A_JBSECT = Byte.parseByte(s);
} else {
A_JBSECT = Byte.MIN_VALUE;
}
}

protected final void initA_JBSECTPUB(String s) {
if (!s.trim().isEmpty()) {
A_JBSECTPUB = Byte.parseByte(s);
} else {
A_JBSECTPUB = Byte.MIN_VALUE;
}
}

protected final void initA_JBSEG_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBSEG_DV = Byte.parseByte(s);
} else {
A_JBSEG_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBSEMP(String s) {
if (!s.trim().isEmpty()) {
A_JBSEMP = Byte.parseByte(s);
} else {
A_JBSEMP = Byte.MIN_VALUE;
}
}

protected final void initA_JBSIC07_CC(String s) {
if (!s.trim().isEmpty()) {
A_JBSIC07_CC = Byte.parseByte(s);
} else {
A_JBSIC07_CC = Byte.MIN_VALUE;
}
}

protected final void initA_JBSIZE(String s) {
if (!s.trim().isEmpty()) {
A_JBSIZE = Byte.parseByte(s);
} else {
A_JBSIZE = Byte.MIN_VALUE;
}
}

protected final void initA_JBSOC00_CC(String s) {
if (!s.trim().isEmpty()) {
A_JBSOC00_CC = Short.parseShort(s);
} else {
A_JBSOC00_CC = Short.MIN_VALUE;
}
}

protected final void initA_JBSOCGR_DV(String s) {
if (!s.trim().isEmpty()) {
A_JBSOCGR_DV = Byte.parseByte(s);
} else {
A_JBSOCGR_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JBSTAT(String s) {
if (!s.trim().isEmpty()) {
A_JBSTAT = Byte.parseByte(s);
} else {
A_JBSTAT = Byte.MIN_VALUE;
}
}

protected final void initA_JBTERM1(String s) {
if (!s.trim().isEmpty()) {
A_JBTERM1 = Byte.parseByte(s);
} else {
A_JBTERM1 = Byte.MIN_VALUE;
}
}

protected final void initA_JBTERM2(String s) {
if (!s.trim().isEmpty()) {
A_JBTERM2 = Byte.parseByte(s);
} else {
A_JBTERM2 = Byte.MIN_VALUE;
}
}

protected final void initA_JBTTWT(String s) {
if (!s.trim().isEmpty()) {
A_JBTTWT = Short.parseShort(s);
} else {
A_JBTTWT = Short.MIN_VALUE;
}
}

protected final void initA_JLBOSS(String s) {
if (!s.trim().isEmpty()) {
A_JLBOSS = Byte.parseByte(s);
} else {
A_JLBOSS = Byte.MIN_VALUE;
}
}

protected final void initA_JLENDM(String s) {
if (!s.trim().isEmpty()) {
A_JLENDM = Byte.parseByte(s);
} else {
A_JLENDM = Byte.MIN_VALUE;
}
}

protected final void initA_JLENDY(String s) {
if (!s.trim().isEmpty()) {
A_JLENDY = Short.parseShort(s);
} else {
A_JLENDY = Short.MIN_VALUE;
}
}

protected final void initA_JLES2000(String s) {
if (!s.trim().isEmpty()) {
A_JLES2000 = Byte.parseByte(s);
} else {
A_JLES2000 = Byte.MIN_VALUE;
}
}

protected final void initA_JLIINDB_DV(String s) {
if (!s.trim().isEmpty()) {
A_JLIINDB_DV = Byte.parseByte(s);
} else {
A_JLIINDB_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JLISCO88_CC(String s) {
if (!s.trim().isEmpty()) {
A_JLISCO88_CC = Short.parseShort(s);
} else {
A_JLISCO88_CC = Short.MIN_VALUE;
}
}

protected final void initA_JLMNGR(String s) {
if (!s.trim().isEmpty()) {
A_JLMNGR = Byte.parseByte(s);
} else {
A_JLMNGR = Byte.MIN_VALUE;
}
}

protected final void initA_JLNSSEC3_DV(String s) {
if (!s.trim().isEmpty()) {
A_JLNSSEC3_DV = Byte.parseByte(s);
} else {
A_JLNSSEC3_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JLNSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
A_JLNSSEC5_DV = Byte.parseByte(s);
} else {
A_JLNSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JLNSSEC8_DV(String s) {
if (!s.trim().isEmpty()) {
A_JLNSSEC8_DV = Byte.parseByte(s);
} else {
A_JLNSSEC8_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JLNSSEC_DV(String s) {
if (!s.trim().isEmpty()) {
A_JLNSSEC_DV = Byte.parseByte(s);
} else {
A_JLNSSEC_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JLRGSC_DV(String s) {
if (!s.trim().isEmpty()) {
A_JLRGSC_DV = Byte.parseByte(s);
} else {
A_JLRGSC_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JLSEG_DV(String s) {
if (!s.trim().isEmpty()) {
A_JLSEG_DV = Byte.parseByte(s);
} else {
A_JLSEG_DV = Byte.MIN_VALUE;
}
}

protected final void initA_JLSEMP(String s) {
if (!s.trim().isEmpty()) {
A_JLSEMP = Byte.parseByte(s);
} else {
A_JLSEMP = Byte.MIN_VALUE;
}
}

protected final void initA_JLSIC07_CC(String s) {
if (!s.trim().isEmpty()) {
A_JLSIC07_CC = Byte.parseByte(s);
} else {
A_JLSIC07_CC = Byte.MIN_VALUE;
}
}

protected final void initA_JLSIZE(String s) {
if (!s.trim().isEmpty()) {
A_JLSIZE = Byte.parseByte(s);
} else {
A_JLSIZE = Byte.MIN_VALUE;
}
}

protected final void initA_JLSOC00_CC(String s) {
if (!s.trim().isEmpty()) {
A_JLSOC00_CC = Short.parseShort(s);
} else {
A_JLSOC00_CC = Short.MIN_VALUE;
}
}

protected final void initA_JOBDENY(String s) {
if (!s.trim().isEmpty()) {
A_JOBDENY = Byte.parseByte(s);
} else {
A_JOBDENY = Byte.MIN_VALUE;
}
}

protected final void initA_JOBLOOK(String s) {
if (!s.trim().isEmpty()) {
A_JOBLOOK = Byte.parseByte(s);
} else {
A_JOBLOOK = Byte.MIN_VALUE;
}
}

protected final void initA_JOB_TM(String s) {
if (!s.trim().isEmpty()) {
A_JOB_TM = Integer.parseInt(s);
} else {
A_JOB_TM = Integer.MIN_VALUE;
}
}

protected final void initA_JSACCS(String s) {
if (!s.trim().isEmpty()) {
A_JSACCS = Byte.parseByte(s);
} else {
A_JSACCS = Byte.MIN_VALUE;
}
}

protected final void initA_JSBOSS(String s) {
if (!s.trim().isEmpty()) {
A_JSBOSS = Byte.parseByte(s);
} else {
A_JSBOSS = Byte.MIN_VALUE;
}
}

protected final void initA_JSHRS(String s) {
if (!s.trim().isEmpty()) {
A_JSHRS = Byte.parseByte(s);
} else {
A_JSHRS = Byte.MIN_VALUE;
}
}

protected final void initA_JSPART(String s) {
if (!s.trim().isEmpty()) {
A_JSPART = Byte.parseByte(s);
} else {
A_JSPART = Byte.MIN_VALUE;
}
}

protected final void initA_JSPAYU(String s) {
if (!s.trim().isEmpty()) {
A_JSPAYU = Integer.parseInt(s);
} else {
A_JSPAYU = Integer.MIN_VALUE;
}
}

protected final void initA_JSPAYW(String s) {
if (!s.trim().isEmpty()) {
A_JSPAYW = Byte.parseByte(s);
} else {
A_JSPAYW = Byte.MIN_VALUE;
}
}

protected final void initA_JSPL(String s) {
if (!s.trim().isEmpty()) {
A_JSPL = Byte.parseByte(s);
} else {
A_JSPL = Byte.MIN_VALUE;
}
}

protected final void initA_JSPRBM(String s) {
if (!s.trim().isEmpty()) {
A_JSPRBM = Byte.parseByte(s);
} else {
A_JSPRBM = Byte.MIN_VALUE;
}
}

protected final void initA_JSPRBY4(String s) {
if (!s.trim().isEmpty()) {
A_JSPRBY4 = Short.parseShort(s);
} else {
A_JSPRBY4 = Short.MIN_VALUE;
}
}

protected final void initA_JSPREM(String s) {
if (!s.trim().isEmpty()) {
A_JSPREM = Byte.parseByte(s);
} else {
A_JSPREM = Byte.MIN_VALUE;
}
}

protected final void initA_JSPREY4(String s) {
if (!s.trim().isEmpty()) {
A_JSPREY4 = Short.parseShort(s);
} else {
A_JSPREY4 = Short.MIN_VALUE;
}
}

protected final void initA_JSPRF(String s) {
if (!s.trim().isEmpty()) {
A_JSPRF = Integer.parseInt(s);
} else {
A_JSPRF = Integer.MIN_VALUE;
}
}

protected final void initA_JSPRLS(String s) {
if (!s.trim().isEmpty()) {
A_JSPRLS = Byte.parseByte(s);
} else {
A_JSPRLS = Byte.MIN_VALUE;
}
}

protected final void initA_JSPRNI(String s) {
if (!s.trim().isEmpty()) {
A_JSPRNI = Byte.parseByte(s);
} else {
A_JSPRNI = Byte.MIN_VALUE;
}
}

protected final void initA_JSPRTX(String s) {
if (!s.trim().isEmpty()) {
A_JSPRTX = Byte.parseByte(s);
} else {
A_JSPRTX = Byte.MIN_VALUE;
}
}

protected final void initA_JSPYNI(String s) {
if (!s.trim().isEmpty()) {
A_JSPYNI = Byte.parseByte(s);
} else {
A_JSPYNI = Byte.MIN_VALUE;
}
}

protected final void initA_JSPYTX(String s) {
if (!s.trim().isEmpty()) {
A_JSPYTX = Byte.parseByte(s);
} else {
A_JSPYTX = Byte.MIN_VALUE;
}
}

protected final void initA_JSSIZE(String s) {
if (!s.trim().isEmpty()) {
A_JSSIZE = Byte.parseByte(s);
} else {
A_JSSIZE = Byte.MIN_VALUE;
}
}

protected final void initA_JSTTWT(String s) {
if (!s.trim().isEmpty()) {
A_JSTTWT = Byte.parseByte(s);
} else {
A_JSTTWT = Byte.MIN_VALUE;
}
}

protected final void initA_JSTTWTB(String s) {
if (!s.trim().isEmpty()) {
A_JSTTWTB = Short.parseShort(s);
} else {
A_JSTTWTB = Short.MIN_VALUE;
}
}

protected final void initA_JSTYPEB(String s) {
if (!s.trim().isEmpty()) {
A_JSTYPEB = Byte.parseByte(s);
} else {
A_JSTYPEB = Byte.MIN_VALUE;
}
}

protected final void initA_JSWORKDIS(String s) {
if (!s.trim().isEmpty()) {
A_JSWORKDIS = Short.parseShort(s);
} else {
A_JSWORKDIS = Short.MIN_VALUE;
}
}

protected final void initA_JSWORKTRAV(String s) {
if (!s.trim().isEmpty()) {
A_JSWORKTRAV = Byte.parseByte(s);
} else {
A_JSWORKTRAV = Byte.MIN_VALUE;
}
}

protected final void initA_JUBGN(String s) {
if (!s.trim().isEmpty()) {
A_JUBGN = Byte.parseByte(s);
} else {
A_JUBGN = Byte.MIN_VALUE;
}
}

protected final void initA_JULK4WK(String s) {
if (!s.trim().isEmpty()) {
A_JULK4WK = Byte.parseByte(s);
} else {
A_JULK4WK = Byte.MIN_VALUE;
}
}

protected final void initA_JULK4X1(String s) {
if (!s.trim().isEmpty()) {
A_JULK4X1 = Byte.parseByte(s);
} else {
A_JULK4X1 = Byte.MIN_VALUE;
}
}

protected final void initA_JULK4X2(String s) {
if (!s.trim().isEmpty()) {
A_JULK4X2 = Byte.parseByte(s);
} else {
A_JULK4X2 = Byte.MIN_VALUE;
}
}

protected final void initA_JULK4X3(String s) {
if (!s.trim().isEmpty()) {
A_JULK4X3 = Byte.parseByte(s);
} else {
A_JULK4X3 = Byte.MIN_VALUE;
}
}

protected final void initA_JULK4X4(String s) {
if (!s.trim().isEmpty()) {
A_JULK4X4 = Byte.parseByte(s);
} else {
A_JULK4X4 = Byte.MIN_VALUE;
}
}

protected final void initA_JULK4X5(String s) {
if (!s.trim().isEmpty()) {
A_JULK4X5 = Byte.parseByte(s);
} else {
A_JULK4X5 = Byte.MIN_VALUE;
}
}

protected final void initA_JULK4X6(String s) {
if (!s.trim().isEmpty()) {
A_JULK4X6 = Byte.parseByte(s);
} else {
A_JULK4X6 = Byte.MIN_VALUE;
}
}

protected final void initA_JULK4X96(String s) {
if (!s.trim().isEmpty()) {
A_JULK4X96 = Byte.parseByte(s);
} else {
A_JULK4X96 = Byte.MIN_VALUE;
}
}

protected final void initA_JULKJB(String s) {
if (!s.trim().isEmpty()) {
A_JULKJB = Byte.parseByte(s);
} else {
A_JULKJB = Byte.MIN_VALUE;
}
}

protected final void initA_K2UCPN1(String s) {
if (!s.trim().isEmpty()) {
A_K2UCPN1 = Byte.parseByte(s);
} else {
A_K2UCPN1 = Byte.MIN_VALUE;
}
}

protected final void initA_K2UCPN2(String s) {
if (!s.trim().isEmpty()) {
A_K2UCPN2 = Byte.parseByte(s);
} else {
A_K2UCPN2 = Byte.MIN_VALUE;
}
}

protected final void initA_K2UCPN3(String s) {
if (!s.trim().isEmpty()) {
A_K2UCPN3 = Byte.parseByte(s);
} else {
A_K2UCPN3 = Byte.MIN_VALUE;
}
}

protected final void initA_K2UCPN4(String s) {
if (!s.trim().isEmpty()) {
A_K2UCPN4 = Byte.parseByte(s);
} else {
A_K2UCPN4 = Byte.MIN_VALUE;
}
}

protected final void initA_K2UCPN5(String s) {
if (!s.trim().isEmpty()) {
A_K2UCPN5 = Byte.parseByte(s);
} else {
A_K2UCPN5 = Byte.MIN_VALUE;
}
}

protected final void initA_KID2UNI1(String s) {
if (!s.trim().isEmpty()) {
A_KID2UNI1 = Byte.parseByte(s);
} else {
A_KID2UNI1 = Byte.MIN_VALUE;
}
}

protected final void initA_KID2UNI2(String s) {
if (!s.trim().isEmpty()) {
A_KID2UNI2 = Byte.parseByte(s);
} else {
A_KID2UNI2 = Byte.MIN_VALUE;
}
}

protected final void initA_KID2UNI3(String s) {
if (!s.trim().isEmpty()) {
A_KID2UNI3 = Byte.parseByte(s);
} else {
A_KID2UNI3 = Byte.MIN_VALUE;
}
}

protected final void initA_KID2UNI4(String s) {
if (!s.trim().isEmpty()) {
A_KID2UNI4 = Byte.parseByte(s);
} else {
A_KID2UNI4 = Byte.MIN_VALUE;
}
}

protected final void initA_KID2UNI5(String s) {
if (!s.trim().isEmpty()) {
A_KID2UNI5 = Byte.parseByte(s);
} else {
A_KID2UNI5 = Byte.MIN_VALUE;
}
}

protected final void initA_KIDSPT(String s) {
if (!s.trim().isEmpty()) {
A_KIDSPT = Byte.parseByte(s);
} else {
A_KIDSPT = Byte.MIN_VALUE;
}
}

protected final void initA_LADOPT(String s) {
if (!s.trim().isEmpty()) {
A_LADOPT = Byte.parseByte(s);
} else {
A_LADOPT = Byte.MIN_VALUE;
}
}

protected final void initA_LCHMOR(String s) {
if (!s.trim().isEmpty()) {
A_LCHMOR = Byte.parseByte(s);
} else {
A_LCHMOR = Byte.MIN_VALUE;
}
}

protected final void initA_LCHMORN(String s) {
if (!s.trim().isEmpty()) {
A_LCHMORN = Byte.parseByte(s);
} else {
A_LCHMORN = Byte.MIN_VALUE;
}
}

protected final void initA_LCMARM(String s) {
if (!s.trim().isEmpty()) {
A_LCMARM = Byte.parseByte(s);
} else {
A_LCMARM = Byte.MIN_VALUE;
}
}

protected final void initA_LCMARY4(String s) {
if (!s.trim().isEmpty()) {
A_LCMARY4 = Short.parseShort(s);
} else {
A_LCMARY4 = Short.MIN_VALUE;
}
}

protected final void initA_LCMCBM(String s) {
if (!s.trim().isEmpty()) {
A_LCMCBM = Byte.parseByte(s);
} else {
A_LCMCBM = Byte.MIN_VALUE;
}
}

protected final void initA_LCMCBY4(String s) {
if (!s.trim().isEmpty()) {
A_LCMCBY4 = Short.parseShort(s);
} else {
A_LCMCBY4 = Short.MIN_VALUE;
}
}

protected final void initA_LCMCOH(String s) {
if (!s.trim().isEmpty()) {
A_LCMCOH = Byte.parseByte(s);
} else {
A_LCMCOH = Byte.MIN_VALUE;
}
}

protected final void initA_LCMSPM(String s) {
if (!s.trim().isEmpty()) {
A_LCMSPM = Byte.parseByte(s);
} else {
A_LCMSPM = Byte.MIN_VALUE;
}
}

protected final void initA_LCMSPY4(String s) {
if (!s.trim().isEmpty()) {
A_LCMSPY4 = Short.parseShort(s);
} else {
A_LCMSPY4 = Short.MIN_VALUE;
}
}

protected final void initA_LCOH(String s) {
if (!s.trim().isEmpty()) {
A_LCOH = Byte.parseByte(s);
} else {
A_LCOH = Byte.MIN_VALUE;
}
}

protected final void initA_LDA(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_LDA = false;
} else {
A_LDA = true;
}
}
}

protected final void initA_LDAFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_LDAFLAG = false;
} else {
A_LDAFLAG = true;
}
}
}

protected final void initA_LENINDINTV(String s) {
if (!s.trim().isEmpty()) {
A_LENINDINTV = Double.parseDouble(s);
} else {
A_LENINDINTV = Double.NaN;
}
}

protected final void initA_LEVELIMP(String s) {
if (!s.trim().isEmpty()) {
A_LEVELIMP = Byte.parseByte(s);
} else {
A_LEVELIMP = Byte.MIN_VALUE;
}
}

protected final void initA_LGAPED(String s) {
if (!s.trim().isEmpty()) {
A_LGAPED = Byte.parseByte(s);
} else {
A_LGAPED = Byte.MIN_VALUE;
}
}

protected final void initA_LINGUA(String s) {
if (!s.trim().isEmpty()) {
A_LINGUA = Byte.parseByte(s);
} else {
A_LINGUA = Byte.MIN_VALUE;
}
}

protected final void initA_LIVESP(String s) {
if (!s.trim().isEmpty()) {
A_LIVESP = Byte.parseByte(s);
} else {
A_LIVESP = Byte.MIN_VALUE;
}
}

protected final void initA_LIVESP_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_LIVESP_DV = false;
} else {
A_LIVESP_DV = true;
}
}
}

protected final void initA_LIVEWITH(String s) {
if (!s.trim().isEmpty()) {
A_LIVEWITH = Byte.parseByte(s);
} else {
A_LIVEWITH = Byte.MIN_VALUE;
}
}

protected final void initA_LKMOVE(String s) {
if (!s.trim().isEmpty()) {
A_LKMOVE = Byte.parseByte(s);
} else {
A_LKMOVE = Byte.MIN_VALUE;
}
}

protected final void initA_LNADOPT(String s) {
if (!s.trim().isEmpty()) {
A_LNADOPT = Byte.parseByte(s);
} else {
A_LNADOPT = Byte.MIN_VALUE;
}
}

protected final void initA_LNCOH(String s) {
if (!s.trim().isEmpty()) {
A_LNCOH = Byte.parseByte(s);
} else {
A_LNCOH = Byte.MIN_VALUE;
}
}

protected final void initA_LNPRNT(String s) {
if (!s.trim().isEmpty()) {
A_LNPRNT = Byte.parseByte(s);
} else {
A_LNPRNT = Byte.MIN_VALUE;
}
}

protected final void initA_LPRNT(String s) {
if (!s.trim().isEmpty()) {
A_LPRNT = Byte.parseByte(s);
} else {
A_LPRNT = Byte.MIN_VALUE;
}
}

protected final void initA_LVAG14(String s) {
if (!s.trim().isEmpty()) {
A_LVAG14 = Byte.parseByte(s);
} else {
A_LVAG14 = Byte.MIN_VALUE;
}
}

protected final void initA_LVAG16(String s) {
if (!s.trim().isEmpty()) {
A_LVAG16 = Byte.parseByte(s);
} else {
A_LVAG16 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL1(String s) {
if (!s.trim().isEmpty()) {
A_LVREL1 = Byte.parseByte(s);
} else {
A_LVREL1 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL2(String s) {
if (!s.trim().isEmpty()) {
A_LVREL2 = Byte.parseByte(s);
} else {
A_LVREL2 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL3(String s) {
if (!s.trim().isEmpty()) {
A_LVREL3 = Byte.parseByte(s);
} else {
A_LVREL3 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL4(String s) {
if (!s.trim().isEmpty()) {
A_LVREL4 = Byte.parseByte(s);
} else {
A_LVREL4 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL5(String s) {
if (!s.trim().isEmpty()) {
A_LVREL5 = Byte.parseByte(s);
} else {
A_LVREL5 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL6(String s) {
if (!s.trim().isEmpty()) {
A_LVREL6 = Byte.parseByte(s);
} else {
A_LVREL6 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL7(String s) {
if (!s.trim().isEmpty()) {
A_LVREL7 = Byte.parseByte(s);
} else {
A_LVREL7 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL8(String s) {
if (!s.trim().isEmpty()) {
A_LVREL8 = Byte.parseByte(s);
} else {
A_LVREL8 = Byte.MIN_VALUE;
}
}

protected final void initA_LVREL96(String s) {
if (!s.trim().isEmpty()) {
A_LVREL96 = Byte.parseByte(s);
} else {
A_LVREL96 = Byte.MIN_VALUE;
}
}

protected final void initA_MAAGE(String s) {
if (!s.trim().isEmpty()) {
A_MAAGE = Byte.parseByte(s);
} else {
A_MAAGE = Byte.MIN_VALUE;
}
}

protected final void initA_MABROAD(String s) {
if (!s.trim().isEmpty()) {
A_MABROAD = Byte.parseByte(s);
} else {
A_MABROAD = Byte.MIN_VALUE;
}
}

protected final void initA_MACOB(String s) {
if (!s.trim().isEmpty()) {
A_MACOB = Byte.parseByte(s);
} else {
A_MACOB = Byte.MIN_VALUE;
}
}

protected final void initA_MACON(String s) {
if (!s.trim().isEmpty()) {
A_MACON = Byte.parseByte(s);
} else {
A_MACON = Byte.MIN_VALUE;
}
}

protected final void initA_MAEDQF(String s) {
if (!s.trim().isEmpty()) {
A_MAEDQF = Byte.parseByte(s);
} else {
A_MAEDQF = Byte.MIN_VALUE;
}
}

protected final void initA_MAFAR(String s) {
if (!s.trim().isEmpty()) {
A_MAFAR = Byte.parseByte(s);
} else {
A_MAFAR = Byte.MIN_VALUE;
}
}

protected final void initA_MAID(String s) {
if (!s.trim().isEmpty()) {
A_MAID = Byte.parseByte(s);
} else {
A_MAID = Byte.MIN_VALUE;
}
}

protected final void initA_MAINTALIM(String s) {
if (!s.trim().isEmpty()) {
A_MAINTALIM = Byte.parseByte(s);
} else {
A_MAINTALIM = Byte.MIN_VALUE;
}
}

protected final void initA_MAJU(String s) {
if (!s.trim().isEmpty()) {
A_MAJU = Byte.parseByte(s);
} else {
A_MAJU = Byte.MIN_VALUE;
}
}

protected final void initA_MANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
A_MANSSEC5_DV = Byte.parseByte(s);
} else {
A_MANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initA_MARSTAT(String s) {
if (!s.trim().isEmpty()) {
A_MARSTAT = Byte.parseByte(s);
} else {
A_MARSTAT = Byte.MIN_VALUE;
}
}

protected final void initA_MASEE(String s) {
if (!s.trim().isEmpty()) {
A_MASEE = Byte.parseByte(s);
} else {
A_MASEE = Byte.MIN_VALUE;
}
}

protected final void initA_MASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
A_MASOC00_CC = Short.parseShort(s);
} else {
A_MASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initA_MASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
A_MASOC10_CC = Short.parseShort(s);
} else {
A_MASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initA_MASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
A_MASOC90_CC = Byte.parseByte(s);
} else {
A_MASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initA_MASTAT_DV(String s) {
if (!s.trim().isEmpty()) {
A_MASTAT_DV = Byte.parseByte(s);
} else {
A_MASTAT_DV = Byte.MIN_VALUE;
}
}

protected final void initA_MAYRUK(String s) {
if (!s.trim().isEmpty()) {
A_MAYRUK = Byte.parseByte(s);
} else {
A_MAYRUK = Byte.MIN_VALUE;
}
}

protected final void initA_MAYRUK1(String s) {
if (!s.trim().isEmpty()) {
A_MAYRUK1 = Short.parseShort(s);
} else {
A_MAYRUK1 = Short.MIN_VALUE;
}
}

protected final void initA_MEMORIG(String s) {
if (!s.trim().isEmpty()) {
A_MEMORIG = Byte.parseByte(s);
} else {
A_MEMORIG = Byte.MIN_VALUE;
}
}

protected final void initA_MGMROB(String s) {
if (!s.trim().isEmpty()) {
A_MGMROB = Byte.parseByte(s);
} else {
A_MGMROB = Byte.MIN_VALUE;
}
}

protected final void initA_MGPROB(String s) {
if (!s.trim().isEmpty()) {
A_MGPROB = Byte.parseByte(s);
} else {
A_MGPROB = Byte.MIN_VALUE;
}
}

protected final void initA_MIGRATION_TM(String s) {
if (!s.trim().isEmpty()) {
A_MIGRATION_TM = Integer.parseInt(s);
} else {
A_MIGRATION_TM = Integer.MIN_VALUE;
}
}

protected final void initA_MINDIRECT(String s) {
if (!s.trim().isEmpty()) {
A_MINDIRECT = Byte.parseByte(s);
} else {
A_MINDIRECT = Byte.MIN_VALUE;
}
}

protected final void initA_MLIVED(String s) {
if (!s.trim().isEmpty()) {
A_MLIVED = Byte.parseByte(s);
} else {
A_MLIVED = Byte.MIN_VALUE;
}
}

protected final void initA_MLIVEDIST(String s) {
if (!s.trim().isEmpty()) {
A_MLIVEDIST = Byte.parseByte(s);
} else {
A_MLIVEDIST = Byte.MIN_VALUE;
}
}

protected final void initA_MLIVEDIST5(String s) {
if (!s.trim().isEmpty()) {
A_MLIVEDIST5 = Byte.parseByte(s);
} else {
A_MLIVEDIST5 = Byte.MIN_VALUE;
}
}

protected final void initA_MLIVEDISTF(String s) {
if (!s.trim().isEmpty()) {
A_MLIVEDISTF = Byte.parseByte(s);
} else {
A_MLIVEDISTF = Byte.MIN_VALUE;
}
}

protected final void initA_MLSTAT(String s) {
if (!s.trim().isEmpty()) {
A_MLSTAT = Byte.parseByte(s);
} else {
A_MLSTAT = Byte.MIN_VALUE;
}
}

protected final void initA_MLSTATCHK(String s) {
if (!s.trim().isEmpty()) {
A_MLSTATCHK = Byte.parseByte(s);
} else {
A_MLSTATCHK = Byte.MIN_VALUE;
}
}

protected final void initA_MNABROAD(String s) {
if (!s.trim().isEmpty()) {
A_MNABROAD = Byte.parseByte(s);
} else {
A_MNABROAD = Byte.MIN_VALUE;
}
}

protected final void initA_MNLIVED(String s) {
if (!s.trim().isEmpty()) {
A_MNLIVED = Byte.parseByte(s);
} else {
A_MNLIVED = Byte.MIN_VALUE;
}
}

protected final void initA_MNMOVES(String s) {
if (!s.trim().isEmpty()) {
A_MNMOVES = Byte.parseByte(s);
} else {
A_MNMOVES = Byte.MIN_VALUE;
}
}

protected final void initA_MNOTHERC(String s) {
if (!s.trim().isEmpty()) {
A_MNOTHERC = Byte.parseByte(s);
} else {
A_MNOTHERC = Byte.MIN_VALUE;
}
}

protected final void initA_MNPID(String s) {
if (!s.trim().isEmpty()) {
A_MNPID = Integer.parseInt(s);
} else {
A_MNPID = Integer.MIN_VALUE;
}
}

protected final void initA_MNPNO(String s) {
if (!s.trim().isEmpty()) {
A_MNPNO = Byte.parseByte(s);
} else {
A_MNPNO = Byte.MIN_VALUE;
}
}

protected final void initA_MNSPID(String s) {
if (!s.trim().isEmpty()) {
A_MNSPID = Integer.parseInt(s);
} else {
A_MNSPID = Integer.MIN_VALUE;
}
}

protected final void initA_MNSPNO(String s) {
if (!s.trim().isEmpty()) {
A_MNSPNO = Byte.parseByte(s);
} else {
A_MNSPNO = Byte.MIN_VALUE;
}
}

protected final void initA_MOBUSE(String s) {
if (!s.trim().isEmpty()) {
A_MOBUSE = Byte.parseByte(s);
} else {
A_MOBUSE = Byte.MIN_VALUE;
}
}

protected final void initA_MONTH(String s) {
if (!s.trim().isEmpty()) {
A_MONTH = Byte.parseByte(s);
} else {
A_MONTH = Byte.MIN_VALUE;
}
}

protected final void initA_MOVEAGE(String s) {
if (!s.trim().isEmpty()) {
A_MOVEAGE = Byte.parseByte(s);
} else {
A_MOVEAGE = Byte.MIN_VALUE;
}
}

protected final void initA_MPNO(String s) {
if (!s.trim().isEmpty()) {
A_MPNO = Byte.parseByte(s);
} else {
A_MPNO = Byte.MIN_VALUE;
}
}

protected final void initA_MRETURNED(String s) {
if (!s.trim().isEmpty()) {
A_MRETURNED = Byte.parseByte(s);
} else {
A_MRETURNED = Byte.MIN_VALUE;
}
}

protected final void initA_MVEVER(String s) {
if (!s.trim().isEmpty()) {
A_MVEVER = Byte.parseByte(s);
} else {
A_MVEVER = Byte.MIN_VALUE;
}
}

protected final void initA_MVMNTH(String s) {
if (!s.trim().isEmpty()) {
A_MVMNTH = Byte.parseByte(s);
} else {
A_MVMNTH = Byte.MIN_VALUE;
}
}

protected final void initA_MVYR(String s) {
if (!s.trim().isEmpty()) {
A_MVYR = Short.parseShort(s);
} else {
A_MVYR = Short.MIN_VALUE;
}
}

protected final void initA_NADOPTCH(String s) {
if (!s.trim().isEmpty()) {
A_NADOPTCH = Byte.parseByte(s);
} else {
A_NADOPTCH = Byte.MIN_VALUE;
}
}

protected final void initA_NAIDXHH(String s) {
if (!s.trim().isEmpty()) {
A_NAIDXHH = Byte.parseByte(s);
} else {
A_NAIDXHH = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH01(String s) {
if (!s.trim().isEmpty()) {
A_NATCH01 = Byte.parseByte(s);
} else {
A_NATCH01 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH02(String s) {
if (!s.trim().isEmpty()) {
A_NATCH02 = Byte.parseByte(s);
} else {
A_NATCH02 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH03(String s) {
if (!s.trim().isEmpty()) {
A_NATCH03 = Byte.parseByte(s);
} else {
A_NATCH03 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH04(String s) {
if (!s.trim().isEmpty()) {
A_NATCH04 = Byte.parseByte(s);
} else {
A_NATCH04 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH05(String s) {
if (!s.trim().isEmpty()) {
A_NATCH05 = Byte.parseByte(s);
} else {
A_NATCH05 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH06(String s) {
if (!s.trim().isEmpty()) {
A_NATCH06 = Byte.parseByte(s);
} else {
A_NATCH06 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH07(String s) {
if (!s.trim().isEmpty()) {
A_NATCH07 = Byte.parseByte(s);
} else {
A_NATCH07 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH08(String s) {
if (!s.trim().isEmpty()) {
A_NATCH08 = Byte.parseByte(s);
} else {
A_NATCH08 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH09(String s) {
if (!s.trim().isEmpty()) {
A_NATCH09 = Byte.parseByte(s);
} else {
A_NATCH09 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH10(String s) {
if (!s.trim().isEmpty()) {
A_NATCH10 = Byte.parseByte(s);
} else {
A_NATCH10 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH11(String s) {
if (!s.trim().isEmpty()) {
A_NATCH11 = Byte.parseByte(s);
} else {
A_NATCH11 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH12(String s) {
if (!s.trim().isEmpty()) {
A_NATCH12 = Byte.parseByte(s);
} else {
A_NATCH12 = Byte.MIN_VALUE;
}
}

protected final void initA_NATCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_NATCH13 = false;
} else {
A_NATCH13 = true;
}
}
}

protected final void initA_NATCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_NATCH14 = false;
} else {
A_NATCH14 = true;
}
}
}

protected final void initA_NATCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_NATCH15 = false;
} else {
A_NATCH15 = true;
}
}
}

protected final void initA_NATCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
A_NATCH16 = false;
} else {
A_NATCH16 = true;
}
}
}

protected final void initA_NATID1(String s) {
if (!s.trim().isEmpty()) {
A_NATID1 = Byte.parseByte(s);
} else {
A_NATID1 = Byte.MIN_VALUE;
}
}

protected final void initA_NATID2(String s) {
if (!s.trim().isEmpty()) {
A_NATID2 = Byte.parseByte(s);
} else {
A_NATID2 = Byte.MIN_VALUE;
}
}

protected final void initA_NATID3(String s) {
if (!s.trim().isEmpty()) {
A_NATID3 = Byte.parseByte(s);
} else {
A_NATID3 = Byte.MIN_VALUE;
}
}

protected final void initA_NATID4(String s) {
if (!s.trim().isEmpty()) {
A_NATID4 = Byte.parseByte(s);
} else {
A_NATID4 = Byte.MIN_VALUE;
}
}

protected final void initA_NATID5(String s) {
if (!s.trim().isEmpty()) {
A_NATID5 = Byte.parseByte(s);
} else {
A_NATID5 = Byte.MIN_VALUE;
}
}

protected final void initA_NATID6(String s) {
if (!s.trim().isEmpty()) {
A_NATID6 = Byte.parseByte(s);
} else {
A_NATID6 = Byte.MIN_VALUE;
}
}

protected final void initA_NATID97(String s) {
if (!s.trim().isEmpty()) {
A_NATID97 = Byte.parseByte(s);
} else {
A_NATID97 = Byte.MIN_VALUE;
}
}

protected final void initA_NBRSNCI_DV(String s) {
if (!s.trim().isEmpty()) {
A_NBRSNCI_DV = Double.parseDouble(s);
} else {
A_NBRSNCI_DV = Double.NaN;
}
}

protected final void initA_NCH10TO15(String s) {
if (!s.trim().isEmpty()) {
A_NCH10TO15 = Byte.parseByte(s);
} else {
A_NCH10TO15 = Byte.MIN_VALUE;
}
}

protected final void initA_NCH14RESP(String s) {
if (!s.trim().isEmpty()) {
A_NCH14RESP = Byte.parseByte(s);
} else {
A_NCH14RESP = Byte.MIN_VALUE;
}
}

protected final void initA_NCH415RESP(String s) {
if (!s.trim().isEmpty()) {
A_NCH415RESP = Byte.parseByte(s);
} else {
A_NCH415RESP = Byte.MIN_VALUE;
}
}

protected final void initA_NCH5TO15(String s) {
if (!s.trim().isEmpty()) {
A_NCH5TO15 = Byte.parseByte(s);
} else {
A_NCH5TO15 = Byte.MIN_VALUE;
}
}

protected final void initA_NCHILD_DV(String s) {
if (!s.trim().isEmpty()) {
A_NCHILD_DV = Byte.parseByte(s);
} else {
A_NCHILD_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NCHRESP(String s) {
if (!s.trim().isEmpty()) {
A_NCHRESP = Byte.parseByte(s);
} else {
A_NCHRESP = Byte.MIN_VALUE;
}
}

protected final void initA_NCHUND18RESP(String s) {
if (!s.trim().isEmpty()) {
A_NCHUND18RESP = Byte.parseByte(s);
} else {
A_NCHUND18RESP = Byte.MIN_VALUE;
}
}

protected final void initA_NCHUNDER16(String s) {
if (!s.trim().isEmpty()) {
A_NCHUNDER16 = Byte.parseByte(s);
} else {
A_NCHUNDER16 = Byte.MIN_VALUE;
}
}

protected final void initA_NDEPCHL_DV(String s) {
if (!s.trim().isEmpty()) {
A_NDEPCHL_DV = Byte.parseByte(s);
} else {
A_NDEPCHL_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NETUSE(String s) {
if (!s.trim().isEmpty()) {
A_NETUSE = Byte.parseByte(s);
} else {
A_NETUSE = Byte.MIN_VALUE;
}
}

protected final void initA_NETWORKS_TM(String s) {
if (!s.trim().isEmpty()) {
A_NETWORKS_TM = Integer.parseInt(s);
} else {
A_NETWORKS_TM = Integer.MIN_VALUE;
}
}

protected final void initA_NGRP_DV(String s) {
if (!s.trim().isEmpty()) {
A_NGRP_DV = Byte.parseByte(s);
} else {
A_NGRP_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NIACT(String s) {
if (!s.trim().isEmpty()) {
A_NIACT = Byte.parseByte(s);
} else {
A_NIACT = Byte.MIN_VALUE;
}
}

protected final void initA_NIREL(String s) {
if (!s.trim().isEmpty()) {
A_NIREL = Byte.parseByte(s);
} else {
A_NIREL = Byte.MIN_VALUE;
}
}

protected final void initA_NISERPS(String s) {
if (!s.trim().isEmpty()) {
A_NISERPS = Byte.parseByte(s);
} else {
A_NISERPS = Byte.MIN_VALUE;
}
}

protected final void initA_NMAR(String s) {
if (!s.trim().isEmpty()) {
A_NMAR = Byte.parseByte(s);
} else {
A_NMAR = Byte.MIN_VALUE;
}
}

protected final void initA_NNATCH(String s) {
if (!s.trim().isEmpty()) {
A_NNATCH = Byte.parseByte(s);
} else {
A_NNATCH = Byte.MIN_VALUE;
}
}

protected final void initA_NNSIB_DV(String s) {
if (!s.trim().isEmpty()) {
A_NNSIB_DV = Byte.parseByte(s);
} else {
A_NNSIB_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NNSSIB_DV(String s) {
if (!s.trim().isEmpty()) {
A_NNSSIB_DV = Byte.parseByte(s);
} else {
A_NNSSIB_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NONEMP_TM(String s) {
if (!s.trim().isEmpty()) {
A_NONEMP_TM = Integer.parseInt(s);
} else {
A_NONEMP_TM = Integer.MIN_VALUE;
}
}

protected final void initA_NPENSIONER_DV(String s) {
if (!s.trim().isEmpty()) {
A_NPENSIONER_DV = Byte.parseByte(s);
} else {
A_NPENSIONER_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NPNS_DV(String s) {
if (!s.trim().isEmpty()) {
A_NPNS_DV = Byte.parseByte(s);
} else {
A_NPNS_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NPN_DV(String s) {
if (!s.trim().isEmpty()) {
A_NPN_DV = Byte.parseByte(s);
} else {
A_NPN_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NQFHIGH_DV(String s) {
if (!s.trim().isEmpty()) {
A_NQFHIGH_DV = Byte.parseByte(s);
} else {
A_NQFHIGH_DV = Byte.MIN_VALUE;
}
}

protected final void initA_NRELSW11(String s) {
if (!s.trim().isEmpty()) {
A_NRELSW11 = Byte.parseByte(s);
} else {
A_NRELSW11 = Byte.MIN_VALUE;
}
}

protected final void initA_NRELSW12(String s) {
if (!s.trim().isEmpty()) {
A_NRELSW12 = Byte.parseByte(s);
} else {
A_NRELSW12 = Byte.MIN_VALUE;
}
}

protected final void initA_NRELSW13(String s) {
if (!s.trim().isEmpty()) {
A_NRELSW13 = Byte.parseByte(s);
} else {
A_NRELSW13 = Byte.MIN_VALUE;
}
}

protected final void initA_NRELSW14(String s) {
if (!s.trim().isEmpty()) {
A_NRELSW14 = Byte.parseByte(s);
} else {
A_NRELSW14 = Byte.MIN_VALUE;
}
}

protected final void initA_NRELSW15(String s) {
if (!s.trim().isEmpty()) {
A_NRELSW15 = Byte.parseByte(s);
} else {
A_NRELSW15 = Byte.MIN_VALUE;
}
}

protected final void initA_NRELSW16(String s) {
if (!s.trim().isEmpty()) {
A_NRELSW16 = Byte.parseByte(s);
} else {
A_NRELSW16 = Byte.MIN_VALUE;
}
}

protected final void initA_OBSERVE_TM(String s) {
if (!s.trim().isEmpty()) {
A_OBSERVE_TM = Integer.parseInt(s);
} else {
A_OBSERVE_TM = Integer.MIN_VALUE;
}
}

protected final void initA_OHCH16(String s) {
if (!s.trim().isEmpty()) {
A_OHCH16 = Byte.parseByte(s);
} else {
A_OHCH16 = Byte.MIN_VALUE;
}
}

protected final void initA_OPRLG(String s) {
if (!s.trim().isEmpty()) {
A_OPRLG = Byte.parseByte(s);
} else {
A_OPRLG = Byte.MIN_VALUE;
}
}

protected final void initA_OPRLG0(String s) {
if (!s.trim().isEmpty()) {
A_OPRLG0 = Byte.parseByte(s);
} else {
A_OPRLG0 = Byte.MIN_VALUE;
}
}

protected final void initA_OPRLG0NI(String s) {
if (!s.trim().isEmpty()) {
A_OPRLG0NI = Byte.parseByte(s);
} else {
A_OPRLG0NI = Byte.MIN_VALUE;
}
}

protected final void initA_OPRLG1(String s) {
if (!s.trim().isEmpty()) {
A_OPRLG1 = Byte.parseByte(s);
} else {
A_OPRLG1 = Byte.MIN_VALUE;
}
}

protected final void initA_OPRLG2(String s) {
if (!s.trim().isEmpty()) {
A_OPRLG2 = Byte.parseByte(s);
} else {
A_OPRLG2 = Byte.MIN_VALUE;
}
}

protected final void initA_OPRLG3(String s) {
if (!s.trim().isEmpty()) {
A_OPRLG3 = Byte.parseByte(s);
} else {
A_OPRLG3 = Byte.MIN_VALUE;
}
}

protected final void initA_OVTNSA(String s) {
if (!s.trim().isEmpty()) {
A_OVTNSA = Byte.parseByte(s);
} else {
A_OVTNSA = Byte.MIN_VALUE;
}
}

protected final void initA_OVTPAY(String s) {
if (!s.trim().isEmpty()) {
A_OVTPAY = Byte.parseByte(s);
} else {
A_OVTPAY = Byte.MIN_VALUE;
}
}

protected final void initA_OVTRATE(String s) {
if (!s.trim().isEmpty()) {
A_OVTRATE = Double.parseDouble(s);
} else {
A_OVTRATE = Double.NaN;
}
}

protected final void initA_OVTREST(String s) {
if (!s.trim().isEmpty()) {
A_OVTREST = Byte.parseByte(s);
} else {
A_OVTREST = Byte.MIN_VALUE;
}
}

protected final void initA_PAAGE(String s) {
if (!s.trim().isEmpty()) {
A_PAAGE = Byte.parseByte(s);
} else {
A_PAAGE = Byte.MIN_VALUE;
}
}

protected final void initA_PACOB(String s) {
if (!s.trim().isEmpty()) {
A_PACOB = Byte.parseByte(s);
} else {
A_PACOB = Byte.MIN_VALUE;
}
}

protected final void initA_PACON(String s) {
if (!s.trim().isEmpty()) {
A_PACON = Byte.parseByte(s);
} else {
A_PACON = Byte.MIN_VALUE;
}
}

protected final void initA_PAEDQF(String s) {
if (!s.trim().isEmpty()) {
A_PAEDQF = Byte.parseByte(s);
} else {
A_PAEDQF = Byte.MIN_VALUE;
}
}

protected final void initA_PAFAR(String s) {
if (!s.trim().isEmpty()) {
A_PAFAR = Byte.parseByte(s);
} else {
A_PAFAR = Byte.MIN_VALUE;
}
}

protected final void initA_PAID(String s) {
if (!s.trim().isEmpty()) {
A_PAID = Byte.parseByte(s);
} else {
A_PAID = Byte.MIN_VALUE;
}
}

protected final void initA_PAJU(String s) {
if (!s.trim().isEmpty()) {
A_PAJU = Byte.parseByte(s);
} else {
A_PAJU = Byte.MIN_VALUE;
}
}

protected final void initA_PANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
A_PANSSEC5_DV = Byte.parseByte(s);
} else {
A_PANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initA_PARCHILD_TM(String s) {
if (!s.trim().isEmpty()) {
A_PARCHILD_TM = Integer.parseInt(s);
} else {
A_PARCHILD_TM = Integer.MIN_VALUE;
}
}

protected final void initA_PARMAR(String s) {
if (!s.trim().isEmpty()) {
A_PARMAR = Byte.parseByte(s);
} else {
A_PARMAR = Byte.MIN_VALUE;
}
}

protected final void initA_PARTNER_TM(String s) {
if (!s.trim().isEmpty()) {
A_PARTNER_TM = Integer.parseInt(s);
} else {
A_PARTNER_TM = Integer.MIN_VALUE;
}
}

protected final void initA_PASEE(String s) {
if (!s.trim().isEmpty()) {
A_PASEE = Byte.parseByte(s);
} else {
A_PASEE = Byte.MIN_VALUE;
}
}

protected final void initA_PASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
A_PASOC00_CC = Short.parseShort(s);
} else {
A_PASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initA_PASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
A_PASOC10_CC = Short.parseShort(s);
} else {
A_PASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initA_PASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
A_PASOC90_CC = Byte.parseByte(s);
} else {
A_PASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initA_PAYFAM(String s) {
if (!s.trim().isEmpty()) {
A_PAYFAM = Byte.parseByte(s);
} else {
A_PAYFAM = Byte.MIN_VALUE;
}
}

protected final void initA_PAYGL(String s) {
if (!s.trim().isEmpty()) {
A_PAYGL = Integer.parseInt(s);
} else {
A_PAYGL = Integer.MIN_VALUE;
}
}

protected final void initA_PAYGU_DV(String s) {
if (!s.trim().isEmpty()) {
A_PAYGU_DV = Double.parseDouble(s);
} else {
A_PAYGU_DV = Double.NaN;
}
}

protected final void initA_PAYGU_IF(String s) {
if (!s.trim().isEmpty()) {
A_PAYGU_IF = Byte.parseByte(s);
} else {
A_PAYGU_IF = Byte.MIN_VALUE;
}
}

protected final void initA_PAYGWC(String s) {
if (!s.trim().isEmpty()) {
A_PAYGWC = Byte.parseByte(s);
} else {
A_PAYGWC = Byte.MIN_VALUE;
}
}

protected final void initA_PAYG_DV(String s) {
if (!s.trim().isEmpty()) {
A_PAYG_DV = Double.parseDouble(s);
} else {
A_PAYG_DV = Double.NaN;
}
}

protected final void initA_PAYNL(String s) {
if (!s.trim().isEmpty()) {
A_PAYNL = Integer.parseInt(s);
} else {
A_PAYNL = Integer.MIN_VALUE;
}
}

protected final void initA_PAYNU_DV(String s) {
if (!s.trim().isEmpty()) {
A_PAYNU_DV = Double.parseDouble(s);
} else {
A_PAYNU_DV = Double.NaN;
}
}

protected final void initA_PAYNU_IF(String s) {
if (!s.trim().isEmpty()) {
A_PAYNU_IF = Byte.parseByte(s);
} else {
A_PAYNU_IF = Byte.MIN_VALUE;
}
}

protected final void initA_PAYNWC(String s) {
if (!s.trim().isEmpty()) {
A_PAYNWC = Byte.parseByte(s);
} else {
A_PAYNWC = Byte.MIN_VALUE;
}
}

protected final void initA_PAYN_DV(String s) {
if (!s.trim().isEmpty()) {
A_PAYN_DV = Double.parseDouble(s);
} else {
A_PAYN_DV = Double.NaN;
}
}

protected final void initA_PAYRUK(String s) {
if (!s.trim().isEmpty()) {
A_PAYRUK = Byte.parseByte(s);
} else {
A_PAYRUK = Byte.MIN_VALUE;
}
}

protected final void initA_PAYRUK1(String s) {
if (!s.trim().isEmpty()) {
A_PAYRUK1 = Short.parseShort(s);
} else {
A_PAYRUK1 = Short.MIN_VALUE;
}
}

protected final void initA_PAYTYP(String s) {
if (!s.trim().isEmpty()) {
A_PAYTYP = Byte.parseByte(s);
} else {
A_PAYTYP = Byte.MIN_VALUE;
}
}

protected final void initA_PAYU(String s) {
if (!s.trim().isEmpty()) {
A_PAYU = Integer.parseInt(s);
} else {
A_PAYU = Integer.MIN_VALUE;
}
}

protected final void initA_PAYUG(String s) {
if (!s.trim().isEmpty()) {
A_PAYUG = Byte.parseByte(s);
} else {
A_PAYUG = Byte.MIN_VALUE;
}
}

protected final void initA_PAYUSL(String s) {
if (!s.trim().isEmpty()) {
A_PAYUSL = Byte.parseByte(s);
} else {
A_PAYUSL = Byte.MIN_VALUE;
}
}

protected final void initA_PAYUWC(String s) {
if (!s.trim().isEmpty()) {
A_PAYUWC = Byte.parseByte(s);
} else {
A_PAYUWC = Byte.MIN_VALUE;
}
}

protected final void initA_PAYU_DV(String s) {
if (!s.trim().isEmpty()) {
A_PAYU_DV = Double.parseDouble(s);
} else {
A_PAYU_DV = Double.NaN;
}
}

protected final void initA_PBNFT1(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT1 = Byte.parseByte(s);
} else {
A_PBNFT1 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT10(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT10 = Byte.parseByte(s);
} else {
A_PBNFT10 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT11(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT11 = Byte.parseByte(s);
} else {
A_PBNFT11 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT12(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT12 = Byte.parseByte(s);
} else {
A_PBNFT12 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT2(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT2 = Byte.parseByte(s);
} else {
A_PBNFT2 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT3(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT3 = Byte.parseByte(s);
} else {
A_PBNFT3 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT4(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT4 = Byte.parseByte(s);
} else {
A_PBNFT4 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT5(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT5 = Byte.parseByte(s);
} else {
A_PBNFT5 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT6(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT6 = Byte.parseByte(s);
} else {
A_PBNFT6 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT7(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT7 = Byte.parseByte(s);
} else {
A_PBNFT7 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT8(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT8 = Byte.parseByte(s);
} else {
A_PBNFT8 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT9(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT9 = Byte.parseByte(s);
} else {
A_PBNFT9 = Byte.MIN_VALUE;
}
}

protected final void initA_PBNFT96(String s) {
if (!s.trim().isEmpty()) {
A_PBNFT96 = Byte.parseByte(s);
} else {
A_PBNFT96 = Byte.MIN_VALUE;
}
}

protected final void initA_PENSIONER_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_PENSIONER_DV = false;
} else {
A_PENSIONER_DV = true;
}
}
}

protected final void initA_PGMROB(String s) {
if (!s.trim().isEmpty()) {
A_PGMROB = Byte.parseByte(s);
} else {
A_PGMROB = Byte.MIN_VALUE;
}
}

protected final void initA_PGPROB(String s) {
if (!s.trim().isEmpty()) {
A_PGPROB = Byte.parseByte(s);
} else {
A_PGPROB = Byte.MIN_VALUE;
}
}

protected final void initA_PHONE_TM(String s) {
if (!s.trim().isEmpty()) {
A_PHONE_TM = Integer.parseInt(s);
} else {
A_PHONE_TM = Integer.MIN_VALUE;
}
}

protected final void initA_PJBPTFT(String s) {
if (!s.trim().isEmpty()) {
A_PJBPTFT = Byte.parseByte(s);
} else {
A_PJBPTFT = Byte.MIN_VALUE;
}
}

protected final void initA_PJSPTFT(String s) {
if (!s.trim().isEmpty()) {
A_PJSPTFT = Byte.parseByte(s);
} else {
A_PJSPTFT = Byte.MIN_VALUE;
}
}

protected final void initA_PJULK4WK(String s) {
if (!s.trim().isEmpty()) {
A_PJULK4WK = Byte.parseByte(s);
} else {
A_PJULK4WK = Byte.MIN_VALUE;
}
}

protected final void initA_PLBORNC(String s) {
if (!s.trim().isEmpty()) {
A_PLBORNC = Byte.parseByte(s);
} else {
A_PLBORNC = Byte.MIN_VALUE;
}
}

protected final void initA_PN1PID(String s) {
if (!s.trim().isEmpty()) {
A_PN1PID = Integer.parseInt(s);
} else {
A_PN1PID = Integer.MIN_VALUE;
}
}

protected final void initA_PN1PNO(String s) {
if (!s.trim().isEmpty()) {
A_PN1PNO = Byte.parseByte(s);
} else {
A_PN1PNO = Byte.MIN_VALUE;
}
}

protected final void initA_PN1SEX(String s) {
if (!s.trim().isEmpty()) {
A_PN1SEX = Byte.parseByte(s);
} else {
A_PN1SEX = Byte.MIN_VALUE;
}
}

protected final void initA_PN2PID(String s) {
if (!s.trim().isEmpty()) {
A_PN2PID = Integer.parseInt(s);
} else {
A_PN2PID = Integer.MIN_VALUE;
}
}

protected final void initA_PN2PNO(String s) {
if (!s.trim().isEmpty()) {
A_PN2PNO = Byte.parseByte(s);
} else {
A_PN2PNO = Byte.MIN_VALUE;
}
}

protected final void initA_PN2SEX(String s) {
if (!s.trim().isEmpty()) {
A_PN2SEX = Byte.parseByte(s);
} else {
A_PN2SEX = Byte.MIN_VALUE;
}
}

protected final void initA_PNO(String s) {
if (!s.trim().isEmpty()) {
A_PNO = Byte.parseByte(s);
} else {
A_PNO = Byte.MIN_VALUE;
}
}

protected final void initA_PNS1PID(String s) {
if (!s.trim().isEmpty()) {
A_PNS1PID = Integer.parseInt(s);
} else {
A_PNS1PID = Integer.MIN_VALUE;
}
}

protected final void initA_PNS1PNO(String s) {
if (!s.trim().isEmpty()) {
A_PNS1PNO = Byte.parseByte(s);
} else {
A_PNS1PNO = Byte.MIN_VALUE;
}
}

protected final void initA_PNS1SEX(String s) {
if (!s.trim().isEmpty()) {
A_PNS1SEX = Byte.parseByte(s);
} else {
A_PNS1SEX = Byte.MIN_VALUE;
}
}

protected final void initA_PNS2PID(String s) {
if (!s.trim().isEmpty()) {
A_PNS2PID = Integer.parseInt(s);
} else {
A_PNS2PID = Integer.MIN_VALUE;
}
}

protected final void initA_PNS2PNO(String s) {
if (!s.trim().isEmpty()) {
A_PNS2PNO = Byte.parseByte(s);
} else {
A_PNS2PNO = Byte.MIN_VALUE;
}
}

protected final void initA_PNS2SEX(String s) {
if (!s.trim().isEmpty()) {
A_PNS2SEX = Byte.parseByte(s);
} else {
A_PNS2SEX = Byte.MIN_VALUE;
}
}

protected final void initA_POLITICAL_TM(String s) {
if (!s.trim().isEmpty()) {
A_POLITICAL_TM = Integer.parseInt(s);
} else {
A_POLITICAL_TM = Integer.MIN_VALUE;
}
}

protected final void initA_PPID(String s) {
if (!s.trim().isEmpty()) {
A_PPID = Integer.parseInt(s);
} else {
A_PPID = Integer.MIN_VALUE;
}
}

protected final void initA_PPNO(String s) {
if (!s.trim().isEmpty()) {
A_PPNO = Byte.parseByte(s);
} else {
A_PPNO = Byte.MIN_VALUE;
}
}

protected final void initA_PPSEX(String s) {
if (!s.trim().isEmpty()) {
A_PPSEX = Byte.parseByte(s);
} else {
A_PPSEX = Byte.MIN_VALUE;
}
}

protected final void initA_PRAISEKID(String s) {
if (!s.trim().isEmpty()) {
A_PRAISEKID = Byte.parseByte(s);
} else {
A_PRAISEKID = Byte.MIN_VALUE;
}
}

protected final void initA_PREARN(String s) {
if (!s.trim().isEmpty()) {
A_PREARN = Byte.parseByte(s);
} else {
A_PREARN = Byte.MIN_VALUE;
}
}

protected final void initA_PREARNA(String s) {
if (!s.trim().isEmpty()) {
A_PREARNA = Byte.parseByte(s);
} else {
A_PREARNA = Byte.MIN_VALUE;
}
}

protected final void initA_PREARNW(String s) {
if (!s.trim().isEmpty()) {
A_PREARNW = Byte.parseByte(s);
} else {
A_PREARNW = Byte.MIN_VALUE;
}
}

protected final void initA_PREASON(String s) {
if (!s.trim().isEmpty()) {
A_PREASON = Byte.parseByte(s);
} else {
A_PREASON = Byte.MIN_VALUE;
}
}

protected final void initA_PREL(String s) {
if (!s.trim().isEmpty()) {
A_PREL = Byte.parseByte(s);
} else {
A_PREL = Byte.MIN_VALUE;
}
}

protected final void initA_PRFITB(String s) {
if (!s.trim().isEmpty()) {
A_PRFITB = Byte.parseByte(s);
} else {
A_PRFITB = Byte.MIN_VALUE;
}
}

protected final void initA_PRFITBA(String s) {
if (!s.trim().isEmpty()) {
A_PRFITBA = Byte.parseByte(s);
} else {
A_PRFITBA = Byte.MIN_VALUE;
}
}

protected final void initA_PRFITBW(String s) {
if (!s.trim().isEmpty()) {
A_PRFITBW = Byte.parseByte(s);
} else {
A_PRFITBW = Byte.MIN_VALUE;
}
}

protected final void initA_PRIPN(String s) {
if (!s.trim().isEmpty()) {
A_PRIPN = Byte.parseByte(s);
} else {
A_PRIPN = Byte.MIN_VALUE;
}
}

protected final void initA_PRIVPEN(String s) {
if (!s.trim().isEmpty()) {
A_PRIVPEN = Byte.parseByte(s);
} else {
A_PRIVPEN = Byte.MIN_VALUE;
}
}

protected final void initA_PROMODENY(String s) {
if (!s.trim().isEmpty()) {
A_PROMODENY = Byte.parseByte(s);
} else {
A_PROMODENY = Byte.MIN_VALUE;
}
}

protected final void initA_PROXY_TM(String s) {
if (!s.trim().isEmpty()) {
A_PROXY_TM = Integer.parseInt(s);
} else {
A_PROXY_TM = Integer.MIN_VALUE;
}
}

protected final void initA_PRSEX(String s) {
if (!s.trim().isEmpty()) {
A_PRSEX = Byte.parseByte(s);
} else {
A_PRSEX = Byte.MIN_VALUE;
}
}

protected final void initA_PSU(String s) {
if (!s.trim().isEmpty()) {
A_PSU = Integer.parseInt(s);
} else {
A_PSU = Integer.MIN_VALUE;
}
}

protected final void initA_QFHIGH(String s) {
if (!s.trim().isEmpty()) {
A_QFHIGH = Byte.parseByte(s);
} else {
A_QFHIGH = Byte.MIN_VALUE;
}
}

protected final void initA_QFHIGHFL_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_QFHIGHFL_DV = false;
} else {
A_QFHIGHFL_DV = true;
}
}
}

protected final void initA_QFHIGH_DV(String s) {
if (!s.trim().isEmpty()) {
A_QFHIGH_DV = Byte.parseByte(s);
} else {
A_QFHIGH_DV = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC1(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC1 = Byte.parseByte(s);
} else {
A_QFVOC1 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC10(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC10 = Byte.parseByte(s);
} else {
A_QFVOC10 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC11(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC11 = Byte.parseByte(s);
} else {
A_QFVOC11 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC12(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC12 = Byte.parseByte(s);
} else {
A_QFVOC12 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC13(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC13 = Byte.parseByte(s);
} else {
A_QFVOC13 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC14(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC14 = Byte.parseByte(s);
} else {
A_QFVOC14 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC15(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC15 = Byte.parseByte(s);
} else {
A_QFVOC15 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC2(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC2 = Byte.parseByte(s);
} else {
A_QFVOC2 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC3(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC3 = Byte.parseByte(s);
} else {
A_QFVOC3 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC4(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC4 = Byte.parseByte(s);
} else {
A_QFVOC4 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC5(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC5 = Byte.parseByte(s);
} else {
A_QFVOC5 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC6(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC6 = Byte.parseByte(s);
} else {
A_QFVOC6 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC7(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC7 = Byte.parseByte(s);
} else {
A_QFVOC7 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC8(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC8 = Byte.parseByte(s);
} else {
A_QFVOC8 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC9(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC9 = Byte.parseByte(s);
} else {
A_QFVOC9 = Byte.MIN_VALUE;
}
}

protected final void initA_QFVOC96(String s) {
if (!s.trim().isEmpty()) {
A_QFVOC96 = Byte.parseByte(s);
} else {
A_QFVOC96 = Byte.MIN_VALUE;
}
}

protected final void initA_QSIGNIN_TM(String s) {
if (!s.trim().isEmpty()) {
A_QSIGNIN_TM = Integer.parseInt(s);
} else {
A_QSIGNIN_TM = Integer.MIN_VALUE;
}
}

protected final void initA_QUALOC(String s) {
if (!s.trim().isEmpty()) {
A_QUALOC = Byte.parseByte(s);
} else {
A_QUALOC = Byte.MIN_VALUE;
}
}

protected final void initA_QUARREL(String s) {
if (!s.trim().isEmpty()) {
A_QUARREL = Byte.parseByte(s);
} else {
A_QUARREL = Byte.MIN_VALUE;
}
}

protected final void initA_RACEL(String s) {
if (!s.trim().isEmpty()) {
A_RACEL = Byte.parseByte(s);
} else {
A_RACEL = Byte.MIN_VALUE;
}
}

protected final void initA_RACELO_CODE(String s) {
if (!s.trim().isEmpty()) {
A_RACELO_CODE = Short.parseShort(s);
} else {
A_RACELO_CODE = Short.MIN_VALUE;
}
}

protected final void initA_RACEL_DV(String s) {
if (!s.trim().isEmpty()) {
A_RACEL_DV = Byte.parseByte(s);
} else {
A_RACEL_DV = Byte.MIN_VALUE;
}
}

protected final void initA_RACH16_DV(String s) {
if (!s.trim().isEmpty()) {
A_RACH16_DV = Byte.parseByte(s);
} else {
A_RACH16_DV = Byte.MIN_VALUE;
}
}

protected final void initA_READDIF(String s) {
if (!s.trim().isEmpty()) {
A_READDIF = Byte.parseByte(s);
} else {
A_READDIF = Byte.MIN_VALUE;
}
}

protected final void initA_REASREF(String s) {
if (!s.trim().isEmpty()) {
A_REASREF = Byte.parseByte(s);
} else {
A_REASREF = Byte.MIN_VALUE;
}
}

protected final void initA_RELATIONSHIPS_TM(String s) {
if (!s.trim().isEmpty()) {
A_RELATIONSHIPS_TM = Integer.parseInt(s);
} else {
A_RELATIONSHIPS_TM = Integer.MIN_VALUE;
}
}

protected final void initA_RELIGION_TM(String s) {
if (!s.trim().isEmpty()) {
A_RELIGION_TM = Integer.parseInt(s);
} else {
A_RELIGION_TM = Integer.MIN_VALUE;
}
}

protected final void initA_RELKID(String s) {
if (!s.trim().isEmpty()) {
A_RELKID = Byte.parseByte(s);
} else {
A_RELKID = Byte.MIN_VALUE;
}
}

protected final void initA_REMAIL_CODE(String s) {
if (!s.trim().isEmpty()) {
A_REMAIL_CODE = Byte.parseByte(s);
} else {
A_REMAIL_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_REMCNTRY1(String s) {
if (!s.trim().isEmpty()) {
A_REMCNTRY1 = Short.parseShort(s);
} else {
A_REMCNTRY1 = Short.MIN_VALUE;
}
}

protected final void initA_REMCNTRY2(String s) {
if (!s.trim().isEmpty()) {
A_REMCNTRY2 = Short.parseShort(s);
} else {
A_REMCNTRY2 = Short.MIN_VALUE;
}
}

protected final void initA_REMCNTRY3(String s) {
if (!s.trim().isEmpty()) {
A_REMCNTRY3 = Short.parseShort(s);
} else {
A_REMCNTRY3 = Short.MIN_VALUE;
}
}

protected final void initA_REMCNTRY4(String s) {
if (!s.trim().isEmpty()) {
A_REMCNTRY4 = Short.parseShort(s);
} else {
A_REMCNTRY4 = Short.MIN_VALUE;
}
}

protected final void initA_REMIT1(String s) {
if (!s.trim().isEmpty()) {
A_REMIT1 = Byte.parseByte(s);
} else {
A_REMIT1 = Byte.MIN_VALUE;
}
}

protected final void initA_REMIT2(String s) {
if (!s.trim().isEmpty()) {
A_REMIT2 = Byte.parseByte(s);
} else {
A_REMIT2 = Byte.MIN_VALUE;
}
}

protected final void initA_REMIT3(String s) {
if (!s.trim().isEmpty()) {
A_REMIT3 = Byte.parseByte(s);
} else {
A_REMIT3 = Byte.MIN_VALUE;
}
}

protected final void initA_REMIT4(String s) {
if (!s.trim().isEmpty()) {
A_REMIT4 = Byte.parseByte(s);
} else {
A_REMIT4 = Byte.MIN_VALUE;
}
}

protected final void initA_REMIT5(String s) {
if (!s.trim().isEmpty()) {
A_REMIT5 = Byte.parseByte(s);
} else {
A_REMIT5 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITAMT1(String s) {
if (!s.trim().isEmpty()) {
A_REMITAMT1 = Short.parseShort(s);
} else {
A_REMITAMT1 = Short.MIN_VALUE;
}
}

protected final void initA_REMITAMT2(String s) {
if (!s.trim().isEmpty()) {
A_REMITAMT2 = Short.parseShort(s);
} else {
A_REMITAMT2 = Short.MIN_VALUE;
}
}

protected final void initA_REMITAMT3(String s) {
if (!s.trim().isEmpty()) {
A_REMITAMT3 = Short.parseShort(s);
} else {
A_REMITAMT3 = Short.MIN_VALUE;
}
}

protected final void initA_REMITAMT4(String s) {
if (!s.trim().isEmpty()) {
A_REMITAMT4 = Short.parseShort(s);
} else {
A_REMITAMT4 = Short.MIN_VALUE;
}
}

protected final void initA_REMITFREQ1(String s) {
if (!s.trim().isEmpty()) {
A_REMITFREQ1 = Byte.parseByte(s);
} else {
A_REMITFREQ1 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITFREQ2(String s) {
if (!s.trim().isEmpty()) {
A_REMITFREQ2 = Byte.parseByte(s);
} else {
A_REMITFREQ2 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITFREQ3(String s) {
if (!s.trim().isEmpty()) {
A_REMITFREQ3 = Byte.parseByte(s);
} else {
A_REMITFREQ3 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITFREQ4(String s) {
if (!s.trim().isEmpty()) {
A_REMITFREQ4 = Byte.parseByte(s);
} else {
A_REMITFREQ4 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITREG1(String s) {
if (!s.trim().isEmpty()) {
A_REMITREG1 = Byte.parseByte(s);
} else {
A_REMITREG1 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITREG2(String s) {
if (!s.trim().isEmpty()) {
A_REMITREG2 = Byte.parseByte(s);
} else {
A_REMITREG2 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITREG3(String s) {
if (!s.trim().isEmpty()) {
A_REMITREG3 = Byte.parseByte(s);
} else {
A_REMITREG3 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITREG4(String s) {
if (!s.trim().isEmpty()) {
A_REMITREG4 = Byte.parseByte(s);
} else {
A_REMITREG4 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITTANCE_TM(String s) {
if (!s.trim().isEmpty()) {
A_REMITTANCE_TM = Integer.parseInt(s);
} else {
A_REMITTANCE_TM = Integer.MIN_VALUE;
}
}

protected final void initA_REMITUSUAL1(String s) {
if (!s.trim().isEmpty()) {
A_REMITUSUAL1 = Byte.parseByte(s);
} else {
A_REMITUSUAL1 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITUSUAL2(String s) {
if (!s.trim().isEmpty()) {
A_REMITUSUAL2 = Byte.parseByte(s);
} else {
A_REMITUSUAL2 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITUSUAL3(String s) {
if (!s.trim().isEmpty()) {
A_REMITUSUAL3 = Byte.parseByte(s);
} else {
A_REMITUSUAL3 = Byte.MIN_VALUE;
}
}

protected final void initA_REMITUSUAL4(String s) {
if (!s.trim().isEmpty()) {
A_REMITUSUAL4 = Byte.parseByte(s);
} else {
A_REMITUSUAL4 = Byte.MIN_VALUE;
}
}

protected final void initA_REMUSAMT1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
A_REMUSAMT1 = false;
} else {
A_REMUSAMT1 = true;
}
}
}

protected final void initA_REMUSAMT2(String s) {
if (!s.trim().isEmpty()) {
A_REMUSAMT2 = Short.parseShort(s);
} else {
A_REMUSAMT2 = Short.MIN_VALUE;
}
}

protected final void initA_REMUSAMT3(String s) {
if (!s.trim().isEmpty()) {
A_REMUSAMT3 = Short.parseShort(s);
} else {
A_REMUSAMT3 = Short.MIN_VALUE;
}
}

protected final void initA_REMUSAMT4(String s) {
if (!s.trim().isEmpty()) {
A_REMUSAMT4 = Short.parseShort(s);
} else {
A_REMUSAMT4 = Short.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_1(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_1 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_2(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_2 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_3(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_3 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_4(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_4 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_5(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_5 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_6(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_6 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_7(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_7 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_8(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_8 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_9(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_9 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_96(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_96 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_1_97(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_1_97 = Byte.parseByte(s);
} else {
A_RESATTACKED_1_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_1(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_1 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_2(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_2 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_3(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_3 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_4(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_4 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_5(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_5 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_6(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_6 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_7(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_7 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_8(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_8 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_9(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_9 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_96(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_96 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_2_97(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_2_97 = Byte.parseByte(s);
} else {
A_RESATTACKED_2_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_1(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_1 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_2(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_2 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_3(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_3 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_4(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_4 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_5(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_5 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_6(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_6 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_7(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_7 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_8(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_8 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_9(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_9 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_96(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_96 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_3_97(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_3_97 = Byte.parseByte(s);
} else {
A_RESATTACKED_3_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_1(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_1 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_2(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_2 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_3(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_3 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_4(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_4 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_5(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_5 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_6(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_6 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_7(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_7 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_8(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_8 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_9(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_9 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_96(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_96 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_4_97(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_4_97 = Byte.parseByte(s);
} else {
A_RESATTACKED_4_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_1(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_1 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_2(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_2 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_3(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_3 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_4(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_4 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_5(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_5 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_6(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_6 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_7(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_7 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_8(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_8 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_9(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_9 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_96(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_96 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_5_97(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_5_97 = Byte.parseByte(s);
} else {
A_RESATTACKED_5_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_1(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_1 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_2(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_2 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_3(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_3 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_4(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_4 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_5(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_5 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_6(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_6 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_7(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_7 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_8(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_8 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_9(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_9 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_96(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_96 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_6_97(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_6_97 = Byte.parseByte(s);
} else {
A_RESATTACKED_6_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_1(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_1 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_2(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_2 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_3(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_3 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_4(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_4 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_5(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_5 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_6(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_6 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_7(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_7 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_8(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_8 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_9(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_9 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_96(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_96 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_7_97(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_7_97 = Byte.parseByte(s);
} else {
A_RESATTACKED_7_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_1(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_1 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_2(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_2 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_3(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_3 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_4(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_4 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_5(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_5 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_6(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_6 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_7(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_7 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_8(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_8 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_9(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_9 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_96(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_96 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESATTACKED_97_97(String s) {
if (!s.trim().isEmpty()) {
A_RESATTACKED_97_97 = Byte.parseByte(s);
} else {
A_RESATTACKED_97_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_1(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_1 = Byte.parseByte(s);
} else {
A_RESAVOID_1_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_2(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_2 = Byte.parseByte(s);
} else {
A_RESAVOID_1_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_3(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_3 = Byte.parseByte(s);
} else {
A_RESAVOID_1_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_4(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_4 = Byte.parseByte(s);
} else {
A_RESAVOID_1_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_5(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_5 = Byte.parseByte(s);
} else {
A_RESAVOID_1_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_6(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_6 = Byte.parseByte(s);
} else {
A_RESAVOID_1_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_7(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_7 = Byte.parseByte(s);
} else {
A_RESAVOID_1_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_8(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_8 = Byte.parseByte(s);
} else {
A_RESAVOID_1_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_9(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_9 = Byte.parseByte(s);
} else {
A_RESAVOID_1_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_96(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_96 = Byte.parseByte(s);
} else {
A_RESAVOID_1_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_1_97(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_1_97 = Byte.parseByte(s);
} else {
A_RESAVOID_1_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_1(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_1 = Byte.parseByte(s);
} else {
A_RESAVOID_2_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_2(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_2 = Byte.parseByte(s);
} else {
A_RESAVOID_2_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_3(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_3 = Byte.parseByte(s);
} else {
A_RESAVOID_2_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_4(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_4 = Byte.parseByte(s);
} else {
A_RESAVOID_2_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_5(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_5 = Byte.parseByte(s);
} else {
A_RESAVOID_2_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_6(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_6 = Byte.parseByte(s);
} else {
A_RESAVOID_2_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_7(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_7 = Byte.parseByte(s);
} else {
A_RESAVOID_2_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_8(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_8 = Byte.parseByte(s);
} else {
A_RESAVOID_2_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_9(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_9 = Byte.parseByte(s);
} else {
A_RESAVOID_2_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_96(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_96 = Byte.parseByte(s);
} else {
A_RESAVOID_2_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_2_97(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_2_97 = Byte.parseByte(s);
} else {
A_RESAVOID_2_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_1(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_1 = Byte.parseByte(s);
} else {
A_RESAVOID_3_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_2(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_2 = Byte.parseByte(s);
} else {
A_RESAVOID_3_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_3(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_3 = Byte.parseByte(s);
} else {
A_RESAVOID_3_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_4(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_4 = Byte.parseByte(s);
} else {
A_RESAVOID_3_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_5(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_5 = Byte.parseByte(s);
} else {
A_RESAVOID_3_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_6(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_6 = Byte.parseByte(s);
} else {
A_RESAVOID_3_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_7(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_7 = Byte.parseByte(s);
} else {
A_RESAVOID_3_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_8(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_8 = Byte.parseByte(s);
} else {
A_RESAVOID_3_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_9(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_9 = Byte.parseByte(s);
} else {
A_RESAVOID_3_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_96(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_96 = Byte.parseByte(s);
} else {
A_RESAVOID_3_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_3_97(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_3_97 = Byte.parseByte(s);
} else {
A_RESAVOID_3_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_1(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_1 = Byte.parseByte(s);
} else {
A_RESAVOID_4_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_2(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_2 = Byte.parseByte(s);
} else {
A_RESAVOID_4_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_3(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_3 = Byte.parseByte(s);
} else {
A_RESAVOID_4_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_4(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_4 = Byte.parseByte(s);
} else {
A_RESAVOID_4_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_5(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_5 = Byte.parseByte(s);
} else {
A_RESAVOID_4_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_6(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_6 = Byte.parseByte(s);
} else {
A_RESAVOID_4_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_7(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_7 = Byte.parseByte(s);
} else {
A_RESAVOID_4_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_8(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_8 = Byte.parseByte(s);
} else {
A_RESAVOID_4_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_9(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_9 = Byte.parseByte(s);
} else {
A_RESAVOID_4_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_96(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_96 = Byte.parseByte(s);
} else {
A_RESAVOID_4_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_4_97(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_4_97 = Byte.parseByte(s);
} else {
A_RESAVOID_4_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_1(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_1 = Byte.parseByte(s);
} else {
A_RESAVOID_5_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_2(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_2 = Byte.parseByte(s);
} else {
A_RESAVOID_5_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_3(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_3 = Byte.parseByte(s);
} else {
A_RESAVOID_5_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_4(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_4 = Byte.parseByte(s);
} else {
A_RESAVOID_5_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_5(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_5 = Byte.parseByte(s);
} else {
A_RESAVOID_5_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_6(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_6 = Byte.parseByte(s);
} else {
A_RESAVOID_5_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_7(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_7 = Byte.parseByte(s);
} else {
A_RESAVOID_5_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_8(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_8 = Byte.parseByte(s);
} else {
A_RESAVOID_5_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_9(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_9 = Byte.parseByte(s);
} else {
A_RESAVOID_5_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_96(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_96 = Byte.parseByte(s);
} else {
A_RESAVOID_5_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_5_97(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_5_97 = Byte.parseByte(s);
} else {
A_RESAVOID_5_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_1(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_1 = Byte.parseByte(s);
} else {
A_RESAVOID_6_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_2(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_2 = Byte.parseByte(s);
} else {
A_RESAVOID_6_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_3(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_3 = Byte.parseByte(s);
} else {
A_RESAVOID_6_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_4(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_4 = Byte.parseByte(s);
} else {
A_RESAVOID_6_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_5(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_5 = Byte.parseByte(s);
} else {
A_RESAVOID_6_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_6(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_6 = Byte.parseByte(s);
} else {
A_RESAVOID_6_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_7(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_7 = Byte.parseByte(s);
} else {
A_RESAVOID_6_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_8(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_8 = Byte.parseByte(s);
} else {
A_RESAVOID_6_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_9(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_9 = Byte.parseByte(s);
} else {
A_RESAVOID_6_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_96(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_96 = Byte.parseByte(s);
} else {
A_RESAVOID_6_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_6_97(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_6_97 = Byte.parseByte(s);
} else {
A_RESAVOID_6_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_1(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_1 = Byte.parseByte(s);
} else {
A_RESAVOID_7_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_2(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_2 = Byte.parseByte(s);
} else {
A_RESAVOID_7_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_3(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_3 = Byte.parseByte(s);
} else {
A_RESAVOID_7_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_4(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_4 = Byte.parseByte(s);
} else {
A_RESAVOID_7_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_5(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_5 = Byte.parseByte(s);
} else {
A_RESAVOID_7_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_6(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_6 = Byte.parseByte(s);
} else {
A_RESAVOID_7_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_7(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_7 = Byte.parseByte(s);
} else {
A_RESAVOID_7_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_8(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_8 = Byte.parseByte(s);
} else {
A_RESAVOID_7_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_9(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_9 = Byte.parseByte(s);
} else {
A_RESAVOID_7_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_96(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_96 = Byte.parseByte(s);
} else {
A_RESAVOID_7_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_7_97(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_7_97 = Byte.parseByte(s);
} else {
A_RESAVOID_7_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_1(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_1 = Byte.parseByte(s);
} else {
A_RESAVOID_97_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_2(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_2 = Byte.parseByte(s);
} else {
A_RESAVOID_97_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_3(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_3 = Byte.parseByte(s);
} else {
A_RESAVOID_97_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_4(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_4 = Byte.parseByte(s);
} else {
A_RESAVOID_97_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_5(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_5 = Byte.parseByte(s);
} else {
A_RESAVOID_97_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_6(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_6 = Byte.parseByte(s);
} else {
A_RESAVOID_97_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_7(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_7 = Byte.parseByte(s);
} else {
A_RESAVOID_97_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_8(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_8 = Byte.parseByte(s);
} else {
A_RESAVOID_97_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_9(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_9 = Byte.parseByte(s);
} else {
A_RESAVOID_97_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_96(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_96 = Byte.parseByte(s);
} else {
A_RESAVOID_97_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESAVOID_97_97(String s) {
if (!s.trim().isEmpty()) {
A_RESAVOID_97_97 = Byte.parseByte(s);
} else {
A_RESAVOID_97_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_1(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_1 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_2(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_2 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_3(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_3 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_4(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_4 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_5(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_5 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_6(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_6 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_7(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_7 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_8(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_8 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_9(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_9 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_96(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_96 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_1_97(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_1_97 = Byte.parseByte(s);
} else {
A_RESINSULTED_1_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_1(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_1 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_2(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_2 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_3(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_3 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_4(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_4 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_5(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_5 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_6(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_6 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_7(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_7 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_8(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_8 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_9(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_9 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_96(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_96 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_2_97(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_2_97 = Byte.parseByte(s);
} else {
A_RESINSULTED_2_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_1(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_1 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_2(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_2 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_3(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_3 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_4(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_4 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_5(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_5 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_6(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_6 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_7(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_7 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_8(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_8 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_9(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_9 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_96(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_96 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_3_97(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_3_97 = Byte.parseByte(s);
} else {
A_RESINSULTED_3_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_1(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_1 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_2(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_2 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_3(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_3 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_4(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_4 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_5(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_5 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_6(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_6 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_7(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_7 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_8(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_8 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_9(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_9 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_96(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_96 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_4_97(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_4_97 = Byte.parseByte(s);
} else {
A_RESINSULTED_4_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_1(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_1 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_2(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_2 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_3(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_3 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_4(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_4 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_5(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_5 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_6(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_6 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_7(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_7 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_8(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_8 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_9(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_9 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_96(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_96 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_5_97(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_5_97 = Byte.parseByte(s);
} else {
A_RESINSULTED_5_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_1(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_1 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_2(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_2 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_3(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_3 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_4(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_4 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_5(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_5 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_6(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_6 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_7(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_7 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_8(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_8 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_9(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_9 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_96(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_96 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_6_97(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_6_97 = Byte.parseByte(s);
} else {
A_RESINSULTED_6_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_1(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_1 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_2(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_2 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_3(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_3 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_4(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_4 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_5(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_5 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_6(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_6 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_7(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_7 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_8(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_8 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_9(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_9 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_96(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_96 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_7_97(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_7_97 = Byte.parseByte(s);
} else {
A_RESINSULTED_7_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_1(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_1 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_2(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_2 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_3(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_3 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_4(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_4 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_5(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_5 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_6(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_6 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_7(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_7 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_8(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_8 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_9(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_9 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_96(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_96 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESINSULTED_97_97(String s) {
if (!s.trim().isEmpty()) {
A_RESINSULTED_97_97 = Byte.parseByte(s);
} else {
A_RESINSULTED_97_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY1(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY1 = Byte.parseByte(s);
} else {
A_RESJOBDENY1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY2(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY2 = Byte.parseByte(s);
} else {
A_RESJOBDENY2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY3(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY3 = Byte.parseByte(s);
} else {
A_RESJOBDENY3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY4(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY4 = Byte.parseByte(s);
} else {
A_RESJOBDENY4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY5(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY5 = Byte.parseByte(s);
} else {
A_RESJOBDENY5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY6(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY6 = Byte.parseByte(s);
} else {
A_RESJOBDENY6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY7(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY7 = Byte.parseByte(s);
} else {
A_RESJOBDENY7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY8(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY8 = Byte.parseByte(s);
} else {
A_RESJOBDENY8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY9(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY9 = Byte.parseByte(s);
} else {
A_RESJOBDENY9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY96(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY96 = Byte.parseByte(s);
} else {
A_RESJOBDENY96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESJOBDENY97(String s) {
if (!s.trim().isEmpty()) {
A_RESJOBDENY97 = Byte.parseByte(s);
} else {
A_RESJOBDENY97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPF16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_RESPF16 = false;
} else {
A_RESPF16 = true;
}
}
}

protected final void initA_RESPF16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_RESPF16_DV = false;
} else {
A_RESPF16_DV = true;
}
}
}

protected final void initA_RESPM16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_RESPM16 = false;
} else {
A_RESPM16 = true;
}
}
}

protected final void initA_RESPM16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_RESPM16_DV = false;
} else {
A_RESPM16_DV = true;
}
}
}

protected final void initA_RESPROMODENY1(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY1 = Byte.parseByte(s);
} else {
A_RESPROMODENY1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY2(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY2 = Byte.parseByte(s);
} else {
A_RESPROMODENY2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY3(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY3 = Byte.parseByte(s);
} else {
A_RESPROMODENY3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY4(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY4 = Byte.parseByte(s);
} else {
A_RESPROMODENY4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY5(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY5 = Byte.parseByte(s);
} else {
A_RESPROMODENY5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY6(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY6 = Byte.parseByte(s);
} else {
A_RESPROMODENY6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY7(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY7 = Byte.parseByte(s);
} else {
A_RESPROMODENY7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY8(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY8 = Byte.parseByte(s);
} else {
A_RESPROMODENY8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY9(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY9 = Byte.parseByte(s);
} else {
A_RESPROMODENY9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY96(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY96 = Byte.parseByte(s);
} else {
A_RESPROMODENY96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESPROMODENY97(String s) {
if (!s.trim().isEmpty()) {
A_RESPROMODENY97 = Byte.parseByte(s);
} else {
A_RESPROMODENY97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY1(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY1 = Byte.parseByte(s);
} else {
A_RESTRAINDENY1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY2(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY2 = Byte.parseByte(s);
} else {
A_RESTRAINDENY2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY3(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY3 = Byte.parseByte(s);
} else {
A_RESTRAINDENY3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY4(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY4 = Byte.parseByte(s);
} else {
A_RESTRAINDENY4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY5(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY5 = Byte.parseByte(s);
} else {
A_RESTRAINDENY5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY6(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY6 = Byte.parseByte(s);
} else {
A_RESTRAINDENY6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY7(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY7 = Byte.parseByte(s);
} else {
A_RESTRAINDENY7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY8(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY8 = Byte.parseByte(s);
} else {
A_RESTRAINDENY8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY9(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY9 = Byte.parseByte(s);
} else {
A_RESTRAINDENY9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY96(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY96 = Byte.parseByte(s);
} else {
A_RESTRAINDENY96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESTRAINDENY97(String s) {
if (!s.trim().isEmpty()) {
A_RESTRAINDENY97 = Byte.parseByte(s);
} else {
A_RESTRAINDENY97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_1(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_1 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_2(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_2 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_3(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_3 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_4(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_4 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_5(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_5 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_6(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_6 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_7(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_7 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_8(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_8 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_9(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_9 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_96(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_96 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_1_97(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_1_97 = Byte.parseByte(s);
} else {
A_RESUNSAFE_1_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_1(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_1 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_2(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_2 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_3(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_3 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_4(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_4 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_5(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_5 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_6(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_6 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_7(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_7 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_8(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_8 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_9(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_9 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_96(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_96 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_2_97(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_2_97 = Byte.parseByte(s);
} else {
A_RESUNSAFE_2_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_1(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_1 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_2(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_2 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_3(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_3 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_4(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_4 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_5(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_5 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_6(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_6 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_7(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_7 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_8(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_8 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_9(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_9 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_96(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_96 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_3_97(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_3_97 = Byte.parseByte(s);
} else {
A_RESUNSAFE_3_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_1(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_1 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_2(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_2 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_3(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_3 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_4(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_4 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_5(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_5 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_6(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_6 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_7(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_7 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_8(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_8 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_9(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_9 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_96(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_96 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_4_97(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_4_97 = Byte.parseByte(s);
} else {
A_RESUNSAFE_4_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_1(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_1 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_2(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_2 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_3(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_3 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_4(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_4 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_5(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_5 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_6(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_6 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_7(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_7 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_8(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_8 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_9(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_9 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_96(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_96 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_5_97(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_5_97 = Byte.parseByte(s);
} else {
A_RESUNSAFE_5_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_1(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_1 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_2(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_2 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_3(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_3 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_4(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_4 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_5(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_5 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_6(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_6 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_7(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_7 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_8(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_8 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_9(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_9 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_96(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_96 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_6_97(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_6_97 = Byte.parseByte(s);
} else {
A_RESUNSAFE_6_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_1(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_1 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_2(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_2 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_3(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_3 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_4(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_4 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_5(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_5 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_6(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_6 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_7(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_7 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_8(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_8 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_9(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_9 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_96(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_96 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_7_97(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_7_97 = Byte.parseByte(s);
} else {
A_RESUNSAFE_7_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_1(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_1 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_1 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_2(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_2 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_2 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_3(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_3 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_3 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_4(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_4 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_4 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_5(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_5 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_5 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_6(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_6 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_6 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_7(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_7 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_7 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_8(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_8 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_8 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_9(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_9 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_9 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_96(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_96 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_96 = Byte.MIN_VALUE;
}
}

protected final void initA_RESUNSAFE_97_97(String s) {
if (!s.trim().isEmpty()) {
A_RESUNSAFE_97_97 = Byte.parseByte(s);
} else {
A_RESUNSAFE_97_97 = Byte.MIN_VALUE;
}
}

protected final void initA_RETDATEM(String s) {
if (!s.trim().isEmpty()) {
A_RETDATEM = Byte.parseByte(s);
} else {
A_RETDATEM = Byte.MIN_VALUE;
}
}

protected final void initA_RETDATEY(String s) {
if (!s.trim().isEmpty()) {
A_RETDATEY = Short.parseShort(s);
} else {
A_RETDATEY = Short.MIN_VALUE;
}
}

protected final void initA_RHLAND_CODE(String s) {
if (!s.trim().isEmpty()) {
A_RHLAND_CODE = Byte.parseByte(s);
} else {
A_RHLAND_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_RPHMOB_CODE(String s) {
if (!s.trim().isEmpty()) {
A_RPHMOB_CODE = Byte.parseByte(s);
} else {
A_RPHMOB_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_RPHWRK_CODE(String s) {
if (!s.trim().isEmpty()) {
A_RPHWRK_CODE = Byte.parseByte(s);
} else {
A_RPHWRK_CODE = Byte.MIN_VALUE;
}
}

protected final void initA_RULESKID(String s) {
if (!s.trim().isEmpty()) {
A_RULESKID = Byte.parseByte(s);
} else {
A_RULESKID = Byte.MIN_VALUE;
}
}

protected final void initA_SAMPST(String s) {
if (!s.trim().isEmpty()) {
A_SAMPST = Byte.parseByte(s);
} else {
A_SAMPST = Byte.MIN_VALUE;
}
}

protected final void initA_SAMSCH(String s) {
if (!s.trim().isEmpty()) {
A_SAMSCH = Byte.parseByte(s);
} else {
A_SAMSCH = Byte.MIN_VALUE;
}
}

protected final void initA_SCDASCOH_DV(String s) {
if (!s.trim().isEmpty()) {
A_SCDASCOH_DV = Byte.parseByte(s);
} else {
A_SCDASCOH_DV = Byte.MIN_VALUE;
}
}

protected final void initA_SCDASSAT_DV(String s) {
if (!s.trim().isEmpty()) {
A_SCDASSAT_DV = Byte.parseByte(s);
} else {
A_SCDASSAT_DV = Byte.MIN_VALUE;
}
}

protected final void initA_SCDOBY4(String s) {
if (!s.trim().isEmpty()) {
A_SCDOBY4 = Short.parseShort(s);
} else {
A_SCDOBY4 = Short.MIN_VALUE;
}
}

protected final void initA_SCEND(String s) {
if (!s.trim().isEmpty()) {
A_SCEND = Byte.parseByte(s);
} else {
A_SCEND = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_BCON(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_BCON = Byte.parseByte(s);
} else {
A_SCENV_BCON = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_BRIT(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_BRIT = Byte.parseByte(s);
} else {
A_SCENV_BRIT = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_CCLS(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_CCLS = Byte.parseByte(s);
} else {
A_SCENV_CCLS = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_CFIT(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_CFIT = Byte.parseByte(s);
} else {
A_SCENV_CFIT = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_CHWO(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_CHWO = Byte.parseByte(s);
} else {
A_SCENV_CHWO = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_CRLF(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_CRLF = Byte.parseByte(s);
} else {
A_SCENV_CRLF = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_DSTR(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_DSTR = Byte.parseByte(s);
} else {
A_SCENV_DSTR = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_EXAG(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_EXAG = Byte.parseByte(s);
} else {
A_SCENV_EXAG = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_FTST(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_FTST = Byte.parseByte(s);
} else {
A_SCENV_FTST = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_FUTR(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_FUTR = Byte.parseByte(s);
} else {
A_SCENV_FUTR = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_GRN(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_GRN = Byte.parseByte(s);
} else {
A_SCENV_GRN = Byte.MIN_VALUE;
}
}

protected final void initA_SCENV_PMRE(String s) {
if (!s.trim().isEmpty()) {
A_SCENV_PMRE = Byte.parseByte(s);
} else {
A_SCENV_PMRE = Byte.MIN_VALUE;
}
}

protected final void initA_SCFLAG_DV(String s) {
if (!s.trim().isEmpty()) {
A_SCFLAG_DV = Byte.parseByte(s);
} else {
A_SCFLAG_DV = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQ1_DV(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQ1_DV = Byte.parseByte(s);
} else {
A_SCGHQ1_DV = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQ2_DV(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQ2_DV = Byte.parseByte(s);
} else {
A_SCGHQ2_DV = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQA(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQA = Byte.parseByte(s);
} else {
A_SCGHQA = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQB(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQB = Byte.parseByte(s);
} else {
A_SCGHQB = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQC(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQC = Byte.parseByte(s);
} else {
A_SCGHQC = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQD(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQD = Byte.parseByte(s);
} else {
A_SCGHQD = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQE(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQE = Byte.parseByte(s);
} else {
A_SCGHQE = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQF(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQF = Byte.parseByte(s);
} else {
A_SCGHQF = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQG(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQG = Byte.parseByte(s);
} else {
A_SCGHQG = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQH(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQH = Byte.parseByte(s);
} else {
A_SCGHQH = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQI(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQI = Byte.parseByte(s);
} else {
A_SCGHQI = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQJ(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQJ = Byte.parseByte(s);
} else {
A_SCGHQJ = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQK(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQK = Byte.parseByte(s);
} else {
A_SCGHQK = Byte.MIN_VALUE;
}
}

protected final void initA_SCGHQL(String s) {
if (!s.trim().isEmpty()) {
A_SCGHQL = Byte.parseByte(s);
} else {
A_SCGHQL = Byte.MIN_VALUE;
}
}

protected final void initA_SCHLLOC(String s) {
if (!s.trim().isEmpty()) {
A_SCHLLOC = Byte.parseByte(s);
} else {
A_SCHLLOC = Byte.MIN_VALUE;
}
}

protected final void initA_SCHOOL(String s) {
if (!s.trim().isEmpty()) {
A_SCHOOL = Byte.parseByte(s);
} else {
A_SCHOOL = Byte.MIN_VALUE;
}
}

protected final void initA_SCHRS_SLPH(String s) {
if (!s.trim().isEmpty()) {
A_SCHRS_SLPH = Byte.parseByte(s);
} else {
A_SCHRS_SLPH = Byte.MIN_VALUE;
}
}

protected final void initA_SCHRS_SLPM(String s) {
if (!s.trim().isEmpty()) {
A_SCHRS_SLPM = Byte.parseByte(s);
} else {
A_SCHRS_SLPM = Byte.MIN_VALUE;
}
}

protected final void initA_SCLFSAT1(String s) {
if (!s.trim().isEmpty()) {
A_SCLFSAT1 = Byte.parseByte(s);
} else {
A_SCLFSAT1 = Byte.MIN_VALUE;
}
}

protected final void initA_SCLFSAT2(String s) {
if (!s.trim().isEmpty()) {
A_SCLFSAT2 = Byte.parseByte(s);
} else {
A_SCLFSAT2 = Byte.MIN_VALUE;
}
}

protected final void initA_SCLFSAT7(String s) {
if (!s.trim().isEmpty()) {
A_SCLFSAT7 = Byte.parseByte(s);
} else {
A_SCLFSAT7 = Byte.MIN_VALUE;
}
}

protected final void initA_SCLFSATO(String s) {
if (!s.trim().isEmpty()) {
A_SCLFSATO = Byte.parseByte(s);
} else {
A_SCLFSATO = Byte.MIN_VALUE;
}
}

protected final void initA_SCMED_SLP(String s) {
if (!s.trim().isEmpty()) {
A_SCMED_SLP = Byte.parseByte(s);
} else {
A_SCMED_SLP = Byte.MIN_VALUE;
}
}

protected final void initA_SCMOLWP(String s) {
if (!s.trim().isEmpty()) {
A_SCMOLWP = Byte.parseByte(s);
} else {
A_SCMOLWP = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPECL200(String s) {
if (!s.trim().isEmpty()) {
A_SCOPECL200 = Byte.parseByte(s);
} else {
A_SCOPECL200 = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPECL30(String s) {
if (!s.trim().isEmpty()) {
A_SCOPECL30 = Byte.parseByte(s);
} else {
A_SCOPECL30 = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPNGBHA(String s) {
if (!s.trim().isEmpty()) {
A_SCOPNGBHA = Byte.parseByte(s);
} else {
A_SCOPNGBHA = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPNGBHB(String s) {
if (!s.trim().isEmpty()) {
A_SCOPNGBHB = Byte.parseByte(s);
} else {
A_SCOPNGBHB = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPNGBHC(String s) {
if (!s.trim().isEmpty()) {
A_SCOPNGBHC = Byte.parseByte(s);
} else {
A_SCOPNGBHC = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPNGBHD(String s) {
if (!s.trim().isEmpty()) {
A_SCOPNGBHD = Byte.parseByte(s);
} else {
A_SCOPNGBHD = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPNGBHE(String s) {
if (!s.trim().isEmpty()) {
A_SCOPNGBHE = Byte.parseByte(s);
} else {
A_SCOPNGBHE = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPNGBHF(String s) {
if (!s.trim().isEmpty()) {
A_SCOPNGBHF = Byte.parseByte(s);
} else {
A_SCOPNGBHF = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPNGBHG(String s) {
if (!s.trim().isEmpty()) {
A_SCOPNGBHG = Byte.parseByte(s);
} else {
A_SCOPNGBHG = Byte.MIN_VALUE;
}
}

protected final void initA_SCOPNGBHH(String s) {
if (!s.trim().isEmpty()) {
A_SCOPNGBHH = Byte.parseByte(s);
} else {
A_SCOPNGBHH = Byte.MIN_VALUE;
}
}

protected final void initA_SCPAROUTINT(String s) {
if (!s.trim().isEmpty()) {
A_SCPAROUTINT = Byte.parseByte(s);
} else {
A_SCPAROUTINT = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELHAPPY(String s) {
if (!s.trim().isEmpty()) {
A_SCRELHAPPY = Byte.parseByte(s);
} else {
A_SCRELHAPPY = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELPARAR(String s) {
if (!s.trim().isEmpty()) {
A_SCRELPARAR = Byte.parseByte(s);
} else {
A_SCRELPARAR = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELPARCD(String s) {
if (!s.trim().isEmpty()) {
A_SCRELPARCD = Byte.parseByte(s);
} else {
A_SCRELPARCD = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELPARDS(String s) {
if (!s.trim().isEmpty()) {
A_SCRELPARDS = Byte.parseByte(s);
} else {
A_SCRELPARDS = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELPAREI(String s) {
if (!s.trim().isEmpty()) {
A_SCRELPAREI = Byte.parseByte(s);
} else {
A_SCRELPAREI = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELPARIR(String s) {
if (!s.trim().isEmpty()) {
A_SCRELPARIR = Byte.parseByte(s);
} else {
A_SCRELPARIR = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELPARKS(String s) {
if (!s.trim().isEmpty()) {
A_SCRELPARKS = Byte.parseByte(s);
} else {
A_SCRELPARKS = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELPARRG(String s) {
if (!s.trim().isEmpty()) {
A_SCRELPARRG = Byte.parseByte(s);
} else {
A_SCRELPARRG = Byte.MIN_VALUE;
}
}

protected final void initA_SCRELPARWT(String s) {
if (!s.trim().isEmpty()) {
A_SCRELPARWT = Byte.parseByte(s);
} else {
A_SCRELPARWT = Byte.MIN_VALUE;
}
}

protected final void initA_SCRISKA(String s) {
if (!s.trim().isEmpty()) {
A_SCRISKA = Byte.parseByte(s);
} else {
A_SCRISKA = Byte.MIN_VALUE;
}
}

protected final void initA_SCRISKB(String s) {
if (!s.trim().isEmpty()) {
A_SCRISKB = Byte.parseByte(s);
} else {
A_SCRISKB = Byte.MIN_VALUE;
}
}

protected final void initA_SCSEX(String s) {
if (!s.trim().isEmpty()) {
A_SCSEX = Byte.parseByte(s);
} else {
A_SCSEX = Byte.MIN_VALUE;
}
}

protected final void initA_SCSLP_QUAL(String s) {
if (!s.trim().isEmpty()) {
A_SCSLP_QUAL = Byte.parseByte(s);
} else {
A_SCSLP_QUAL = Byte.MIN_VALUE;
}
}

protected final void initA_SCTRUST(String s) {
if (!s.trim().isEmpty()) {
A_SCTRUST = Byte.parseByte(s);
} else {
A_SCTRUST = Byte.MIN_VALUE;
}
}

protected final void initA_SCTSLP_30M(String s) {
if (!s.trim().isEmpty()) {
A_SCTSLP_30M = Byte.parseByte(s);
} else {
A_SCTSLP_30M = Byte.MIN_VALUE;
}
}

protected final void initA_SCTSLP_CGH(String s) {
if (!s.trim().isEmpty()) {
A_SCTSLP_CGH = Byte.parseByte(s);
} else {
A_SCTSLP_CGH = Byte.MIN_VALUE;
}
}

protected final void initA_SCTSLP_WAK(String s) {
if (!s.trim().isEmpty()) {
A_SCTSLP_WAK = Byte.parseByte(s);
} else {
A_SCTSLP_WAK = Byte.MIN_VALUE;
}
}

protected final void initA_SCTSTA_AWK(String s) {
if (!s.trim().isEmpty()) {
A_SCTSTA_AWK = Byte.parseByte(s);
} else {
A_SCTSTA_AWK = Byte.MIN_VALUE;
}
}

protected final void initA_SCWEMWBA(String s) {
if (!s.trim().isEmpty()) {
A_SCWEMWBA = Byte.parseByte(s);
} else {
A_SCWEMWBA = Byte.MIN_VALUE;
}
}

protected final void initA_SCWEMWBB(String s) {
if (!s.trim().isEmpty()) {
A_SCWEMWBB = Byte.parseByte(s);
} else {
A_SCWEMWBB = Byte.MIN_VALUE;
}
}

protected final void initA_SCWEMWBC(String s) {
if (!s.trim().isEmpty()) {
A_SCWEMWBC = Byte.parseByte(s);
} else {
A_SCWEMWBC = Byte.MIN_VALUE;
}
}

protected final void initA_SCWEMWBD(String s) {
if (!s.trim().isEmpty()) {
A_SCWEMWBD = Byte.parseByte(s);
} else {
A_SCWEMWBD = Byte.MIN_VALUE;
}
}

protected final void initA_SCWEMWBE(String s) {
if (!s.trim().isEmpty()) {
A_SCWEMWBE = Byte.parseByte(s);
} else {
A_SCWEMWBE = Byte.MIN_VALUE;
}
}

protected final void initA_SCWEMWBF(String s) {
if (!s.trim().isEmpty()) {
A_SCWEMWBF = Byte.parseByte(s);
} else {
A_SCWEMWBF = Byte.MIN_VALUE;
}
}

protected final void initA_SCWEMWBG(String s) {
if (!s.trim().isEmpty()) {
A_SCWEMWBG = Byte.parseByte(s);
} else {
A_SCWEMWBG = Byte.MIN_VALUE;
}
}

protected final void initA_SECJOB_TM(String s) {
if (!s.trim().isEmpty()) {
A_SECJOB_TM = Integer.parseInt(s);
} else {
A_SECJOB_TM = Integer.MIN_VALUE;
}
}

protected final void initA_SEEARNGRS_DV(String s) {
if (!s.trim().isEmpty()) {
A_SEEARNGRS_DV = Double.parseDouble(s);
} else {
A_SEEARNGRS_DV = Double.NaN;
}
}

protected final void initA_SEEARNGRS_IF(String s) {
if (!s.trim().isEmpty()) {
A_SEEARNGRS_IF = Byte.parseByte(s);
} else {
A_SEEARNGRS_IF = Byte.MIN_VALUE;
}
}

protected final void initA_SEEARNNET_DV(String s) {
if (!s.trim().isEmpty()) {
A_SEEARNNET_DV = Double.parseDouble(s);
} else {
A_SEEARNNET_DV = Double.NaN;
}
}

protected final void initA_SEEKID(String s) {
if (!s.trim().isEmpty()) {
A_SEEKID = Byte.parseByte(s);
} else {
A_SEEKID = Byte.MIN_VALUE;
}
}

protected final void initA_SELFEMP_TM(String s) {
if (!s.trim().isEmpty()) {
A_SELFEMP_TM = Integer.parseInt(s);
} else {
A_SELFEMP_TM = Integer.MIN_VALUE;
}
}

protected final void initA_SEX(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_SEX = false;
} else {
A_SEX = true;
}
}
}

protected final void initA_SEX_DV(String s) {
if (!s.trim().isEmpty()) {
A_SEX_DV = Byte.parseByte(s);
} else {
A_SEX_DV = Byte.MIN_VALUE;
}
}

protected final void initA_SF1(String s) {
if (!s.trim().isEmpty()) {
A_SF1 = Byte.parseByte(s);
} else {
A_SF1 = Byte.MIN_VALUE;
}
}

protected final void initA_SF12MCS_DV(String s) {
if (!s.trim().isEmpty()) {
A_SF12MCS_DV = Double.parseDouble(s);
} else {
A_SF12MCS_DV = Double.NaN;
}
}

protected final void initA_SF12PCS_DV(String s) {
if (!s.trim().isEmpty()) {
A_SF12PCS_DV = Double.parseDouble(s);
} else {
A_SF12PCS_DV = Double.NaN;
}
}

protected final void initA_SF2A(String s) {
if (!s.trim().isEmpty()) {
A_SF2A = Byte.parseByte(s);
} else {
A_SF2A = Byte.MIN_VALUE;
}
}

protected final void initA_SF2B(String s) {
if (!s.trim().isEmpty()) {
A_SF2B = Byte.parseByte(s);
} else {
A_SF2B = Byte.MIN_VALUE;
}
}

protected final void initA_SF3A(String s) {
if (!s.trim().isEmpty()) {
A_SF3A = Byte.parseByte(s);
} else {
A_SF3A = Byte.MIN_VALUE;
}
}

protected final void initA_SF3B(String s) {
if (!s.trim().isEmpty()) {
A_SF3B = Byte.parseByte(s);
} else {
A_SF3B = Byte.MIN_VALUE;
}
}

protected final void initA_SF4A(String s) {
if (!s.trim().isEmpty()) {
A_SF4A = Byte.parseByte(s);
} else {
A_SF4A = Byte.MIN_VALUE;
}
}

protected final void initA_SF4B(String s) {
if (!s.trim().isEmpty()) {
A_SF4B = Byte.parseByte(s);
} else {
A_SF4B = Byte.MIN_VALUE;
}
}

protected final void initA_SF5(String s) {
if (!s.trim().isEmpty()) {
A_SF5 = Byte.parseByte(s);
} else {
A_SF5 = Byte.MIN_VALUE;
}
}

protected final void initA_SF6A(String s) {
if (!s.trim().isEmpty()) {
A_SF6A = Byte.parseByte(s);
} else {
A_SF6A = Byte.MIN_VALUE;
}
}

protected final void initA_SF6B(String s) {
if (!s.trim().isEmpty()) {
A_SF6B = Byte.parseByte(s);
} else {
A_SF6B = Byte.MIN_VALUE;
}
}

protected final void initA_SF6C(String s) {
if (!s.trim().isEmpty()) {
A_SF6C = Byte.parseByte(s);
} else {
A_SF6C = Byte.MIN_VALUE;
}
}

protected final void initA_SF7(String s) {
if (!s.trim().isEmpty()) {
A_SF7 = Byte.parseByte(s);
} else {
A_SF7 = Byte.MIN_VALUE;
}
}

protected final void initA_SINGLE_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
A_SINGLE_DV = false;
} else {
A_SINGLE_DV = true;
}
}
}

protected final void initA_SLAPKID(String s) {
if (!s.trim().isEmpty()) {
A_SLAPKID = Byte.parseByte(s);
} else {
A_SLAPKID = Byte.MIN_VALUE;
}
}

protected final void initA_SMAID(String s) {
if (!s.trim().isEmpty()) {
A_SMAID = Byte.parseByte(s);
} else {
A_SMAID = Byte.MIN_VALUE;
}
}

protected final void initA_SOCIALKID(String s) {
if (!s.trim().isEmpty()) {
A_SOCIALKID = Byte.parseByte(s);
} else {
A_SOCIALKID = Byte.MIN_VALUE;
}
}

protected final void initA_SPAID(String s) {
if (!s.trim().isEmpty()) {
A_SPAID = Byte.parseByte(s);
} else {
A_SPAID = Byte.MIN_VALUE;
}
}

protected final void initA_SPKDIF(String s) {
if (!s.trim().isEmpty()) {
A_SPKDIF = Byte.parseByte(s);
} else {
A_SPKDIF = Byte.MIN_VALUE;
}
}

protected final void initA_SPPID(String s) {
if (!s.trim().isEmpty()) {
A_SPPID = Integer.parseInt(s);
} else {
A_SPPID = Integer.MIN_VALUE;
}
}

protected final void initA_SPPNO(String s) {
if (!s.trim().isEmpty()) {
A_SPPNO = Byte.parseByte(s);
} else {
A_SPPNO = Byte.MIN_VALUE;
}
}

protected final void initA_STABLE_TM(String s) {
if (!s.trim().isEmpty()) {
A_STABLE_TM = Integer.parseInt(s);
} else {
A_STABLE_TM = Integer.MIN_VALUE;
}
}

protected final void initA_STRATA(String s) {
if (!s.trim().isEmpty()) {
A_STRATA = Short.parseShort(s);
} else {
A_STRATA = Short.MIN_VALUE;
}
}

protected final void initA_SUSP(String s) {
if (!s.trim().isEmpty()) {
A_SUSP = Byte.parseByte(s);
} else {
A_SUSP = Byte.MIN_VALUE;
}
}

protected final void initA_SWEMWBS_DV(String s) {
if (!s.trim().isEmpty()) {
A_SWEMWBS_DV = Byte.parseByte(s);
} else {
A_SWEMWBS_DV = Byte.MIN_VALUE;
}
}

protected final void initA_TALKMATTER(String s) {
if (!s.trim().isEmpty()) {
A_TALKMATTER = Byte.parseByte(s);
} else {
A_TALKMATTER = Byte.MIN_VALUE;
}
}

protected final void initA_TELDIF(String s) {
if (!s.trim().isEmpty()) {
A_TELDIF = Byte.parseByte(s);
} else {
A_TELDIF = Byte.MIN_VALUE;
}
}

protected final void initA_TRAINDENY(String s) {
if (!s.trim().isEmpty()) {
A_TRAINDENY = Byte.parseByte(s);
} else {
A_TRAINDENY = Byte.MIN_VALUE;
}
}

protected final void initA_UKBORN(String s) {
if (!s.trim().isEmpty()) {
A_UKBORN = Byte.parseByte(s);
} else {
A_UKBORN = Byte.MIN_VALUE;
}
}

protected final void initA_UNDQUS(String s) {
if (!s.trim().isEmpty()) {
A_UNDQUS = Byte.parseByte(s);
} else {
A_UNDQUS = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW11(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW11 = Byte.parseByte(s);
} else {
A_UNSAFEW11 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW12(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW12 = Byte.parseByte(s);
} else {
A_UNSAFEW12 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW13(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW13 = Byte.parseByte(s);
} else {
A_UNSAFEW13 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW14(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW14 = Byte.parseByte(s);
} else {
A_UNSAFEW14 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW15(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW15 = Byte.parseByte(s);
} else {
A_UNSAFEW15 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW16(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW16 = Byte.parseByte(s);
} else {
A_UNSAFEW16 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW17(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW17 = Byte.parseByte(s);
} else {
A_UNSAFEW17 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW196(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW196 = Byte.parseByte(s);
} else {
A_UNSAFEW196 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFEW197(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFEW197 = Byte.parseByte(s);
} else {
A_UNSAFEW197 = Byte.MIN_VALUE;
}
}

protected final void initA_UNSAFE_DV(String s) {
if (!s.trim().isEmpty()) {
A_UNSAFE_DV = Byte.parseByte(s);
} else {
A_UNSAFE_DV = Byte.MIN_VALUE;
}
}

protected final void initA_URBAN_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
A_URBAN_DV = false;
} else {
A_URBAN_DV = true;
}
}
}

protected final void initA_VOTE1(String s) {
if (!s.trim().isEmpty()) {
A_VOTE1 = Byte.parseByte(s);
} else {
A_VOTE1 = Byte.MIN_VALUE;
}
}

protected final void initA_VOTE2(String s) {
if (!s.trim().isEmpty()) {
A_VOTE2 = Byte.parseByte(s);
} else {
A_VOTE2 = Byte.MIN_VALUE;
}
}

protected final void initA_VOTE3(String s) {
if (!s.trim().isEmpty()) {
A_VOTE3 = Byte.parseByte(s);
} else {
A_VOTE3 = Byte.MIN_VALUE;
}
}

protected final void initA_VOTE4(String s) {
if (!s.trim().isEmpty()) {
A_VOTE4 = Byte.parseByte(s);
} else {
A_VOTE4 = Byte.MIN_VALUE;
}
}

protected final void initA_VOTE5(String s) {
if (!s.trim().isEmpty()) {
A_VOTE5 = Byte.parseByte(s);
} else {
A_VOTE5 = Byte.MIN_VALUE;
}
}

protected final void initA_VOTE6(String s) {
if (!s.trim().isEmpty()) {
A_VOTE6 = Byte.parseByte(s);
} else {
A_VOTE6 = Byte.MIN_VALUE;
}
}

protected final void initA_WEKID(String s) {
if (!s.trim().isEmpty()) {
A_WEKID = Byte.parseByte(s);
} else {
A_WEKID = Byte.MIN_VALUE;
}
}

protected final void initA_WLSH1(String s) {
if (!s.trim().isEmpty()) {
A_WLSH1 = Byte.parseByte(s);
} else {
A_WLSH1 = Byte.MIN_VALUE;
}
}

protected final void initA_WLSH2(String s) {
if (!s.trim().isEmpty()) {
A_WLSH2 = Byte.parseByte(s);
} else {
A_WLSH2 = Byte.MIN_VALUE;
}
}

protected final void initA_WLSH3(String s) {
if (!s.trim().isEmpty()) {
A_WLSH3 = Byte.parseByte(s);
} else {
A_WLSH3 = Byte.MIN_VALUE;
}
}

protected final void initA_WLSH4(String s) {
if (!s.trim().isEmpty()) {
A_WLSH4 = Byte.parseByte(s);
} else {
A_WLSH4 = Byte.MIN_VALUE;
}
}

protected final void initA_WLSH96(String s) {
if (!s.trim().isEmpty()) {
A_WLSH96 = Byte.parseByte(s);
} else {
A_WLSH96 = Byte.MIN_VALUE;
}
}

protected final void initA_WLSHUA(String s) {
if (!s.trim().isEmpty()) {
A_WLSHUA = Byte.parseByte(s);
} else {
A_WLSHUA = Byte.MIN_VALUE;
}
}

protected final void initA_WLSHUB(String s) {
if (!s.trim().isEmpty()) {
A_WLSHUB = Byte.parseByte(s);
} else {
A_WLSHUB = Byte.MIN_VALUE;
}
}

protected final void initA_WLSHUC(String s) {
if (!s.trim().isEmpty()) {
A_WLSHUC = Byte.parseByte(s);
} else {
A_WLSHUC = Byte.MIN_VALUE;
}
}

protected final void initA_WLSHUD(String s) {
if (!s.trim().isEmpty()) {
A_WLSHUD = Byte.parseByte(s);
} else {
A_WLSHUD = Byte.MIN_VALUE;
}
}

protected final void initA_WLSHUE(String s) {
if (!s.trim().isEmpty()) {
A_WLSHUE = Byte.parseByte(s);
} else {
A_WLSHUE = Byte.MIN_VALUE;
}
}

protected final void initA_WORKDIS(String s) {
if (!s.trim().isEmpty()) {
A_WORKDIS = Short.parseShort(s);
} else {
A_WORKDIS = Short.MIN_VALUE;
}
}

protected final void initA_WORKTRAV(String s) {
if (!s.trim().isEmpty()) {
A_WORKTRAV = Byte.parseByte(s);
} else {
A_WORKTRAV = Byte.MIN_VALUE;
}
}

protected final void initA_XPMOVE(String s) {
if (!s.trim().isEmpty()) {
A_XPMOVE = Byte.parseByte(s);
} else {
A_XPMOVE = Byte.MIN_VALUE;
}
}

protected final void initA_XTRA5MIN_DV(String s) {
if (!s.trim().isEmpty()) {
A_XTRA5MIN_DV = Byte.parseByte(s);
} else {
A_XTRA5MIN_DV = Byte.MIN_VALUE;
}
}

protected final void initA_YELLKID(String s) {
if (!s.trim().isEmpty()) {
A_YELLKID = Byte.parseByte(s);
} else {
A_YELLKID = Byte.MIN_VALUE;
}
}

protected final void initA_YNLP14(String s) {
if (!s.trim().isEmpty()) {
A_YNLP14 = Byte.parseByte(s);
} else {
A_YNLP14 = Byte.MIN_VALUE;
}
}

protected final void initA_YR2UK4(String s) {
if (!s.trim().isEmpty()) {
A_YR2UK4 = Short.parseShort(s);
} else {
A_YR2UK4 = Short.MIN_VALUE;
}
}

public byte getA_ADOPTCH01() {
return A_ADOPTCH01;
}

public byte getA_ADOPTCH02() {
return A_ADOPTCH02;
}

public byte getA_ADOPTCH03() {
return A_ADOPTCH03;
}

public byte getA_ADOPTCH04() {
return A_ADOPTCH04;
}

public byte getA_ADOPTCH05() {
return A_ADOPTCH05;
}

public byte getA_ADOPTCH06() {
return A_ADOPTCH06;
}

public boolean getA_ADOPTCH07() {
return A_ADOPTCH07;
}

public boolean getA_ADOPTCH08() {
return A_ADOPTCH08;
}

public boolean getA_ADOPTCH09() {
return A_ADOPTCH09;
}

public boolean getA_ADOPTCH10() {
return A_ADOPTCH10;
}

public boolean getA_ADOPTCH11() {
return A_ADOPTCH11;
}

public boolean getA_ADOPTCH12() {
return A_ADOPTCH12;
}

public boolean getA_ADOPTCH13() {
return A_ADOPTCH13;
}

public boolean getA_ADOPTCH14() {
return A_ADOPTCH14;
}

public boolean getA_ADOPTCH15() {
return A_ADOPTCH15;
}

public boolean getA_ADOPTCH16() {
return A_ADOPTCH16;
}

public byte getA_ADRESP17() {
return A_ADRESP17;
}

public byte getA_AGEEST() {
return A_AGEEST;
}

public byte getA_AGEGR10_DV() {
return A_AGEGR10_DV;
}

public byte getA_AGEGR13_DV() {
return A_AGEGR13_DV;
}

public byte getA_AGEGR5_DV() {
return A_AGEGR5_DV;
}

public byte getA_AGELH() {
return A_AGELH;
}

public byte getA_AGE_DV() {
return A_AGE_DV;
}

public byte getA_AIDEFT() {
return A_AIDEFT;
}

public byte getA_AIDHH() {
return A_AIDHH;
}

public byte getA_AIDHRS() {
return A_AIDHRS;
}

public byte getA_AIDHU1() {
return A_AIDHU1;
}

public byte getA_AIDHU2() {
return A_AIDHU2;
}

public byte getA_AIDHUA1() {
return A_AIDHUA1;
}

public byte getA_AIDHUA10() {
return A_AIDHUA10;
}

public byte getA_AIDHUA11() {
return A_AIDHUA11;
}

public byte getA_AIDHUA12() {
return A_AIDHUA12;
}

public byte getA_AIDHUA13() {
return A_AIDHUA13;
}

public byte getA_AIDHUA14() {
return A_AIDHUA14;
}

public byte getA_AIDHUA15() {
return A_AIDHUA15;
}

public byte getA_AIDHUA16() {
return A_AIDHUA16;
}

public byte getA_AIDHUA2() {
return A_AIDHUA2;
}

public byte getA_AIDHUA3() {
return A_AIDHUA3;
}

public byte getA_AIDHUA4() {
return A_AIDHUA4;
}

public byte getA_AIDHUA5() {
return A_AIDHUA5;
}

public byte getA_AIDHUA6() {
return A_AIDHUA6;
}

public byte getA_AIDHUA7() {
return A_AIDHUA7;
}

public byte getA_AIDHUA8() {
return A_AIDHUA8;
}

public byte getA_AIDHUA9() {
return A_AIDHUA9;
}

public byte getA_AIDXHH() {
return A_AIDXHH;
}

public byte getA_ALLCH01() {
return A_ALLCH01;
}

public byte getA_ALLCH02() {
return A_ALLCH02;
}

public byte getA_ALLCH03() {
return A_ALLCH03;
}

public byte getA_ALLCH04() {
return A_ALLCH04;
}

public byte getA_ALLCH05() {
return A_ALLCH05;
}

public byte getA_ALLCH06() {
return A_ALLCH06;
}

public byte getA_ALLCH07() {
return A_ALLCH07;
}

public byte getA_ALLCH08() {
return A_ALLCH08;
}

public byte getA_ALLCH09() {
return A_ALLCH09;
}

public byte getA_ALLCH10() {
return A_ALLCH10;
}

public boolean getA_ALLCH11() {
return A_ALLCH11;
}

public boolean getA_ALLCH12() {
return A_ALLCH12;
}

public boolean getA_ALLCH13() {
return A_ALLCH13;
}

public boolean getA_ALLCH14() {
return A_ALLCH14;
}

public boolean getA_ALLCH15() {
return A_ALLCH15;
}

public boolean getA_ALLCH16() {
return A_ALLCH16;
}

public byte getA_ATTACKEDW11() {
return A_ATTACKEDW11;
}

public byte getA_ATTACKEDW12() {
return A_ATTACKEDW12;
}

public byte getA_ATTACKEDW13() {
return A_ATTACKEDW13;
}

public byte getA_ATTACKEDW14() {
return A_ATTACKEDW14;
}

public byte getA_ATTACKEDW15() {
return A_ATTACKEDW15;
}

public byte getA_ATTACKEDW16() {
return A_ATTACKEDW16;
}

public byte getA_ATTACKEDW17() {
return A_ATTACKEDW17;
}

public byte getA_ATTACKEDW196() {
return A_ATTACKEDW196;
}

public byte getA_ATTACKEDW197() {
return A_ATTACKEDW197;
}

public byte getA_ATTACKED_DV() {
return A_ATTACKED_DV;
}

public byte getA_AVOIDANCEW11() {
return A_AVOIDANCEW11;
}

public byte getA_AVOIDANCEW12() {
return A_AVOIDANCEW12;
}

public byte getA_AVOIDANCEW13() {
return A_AVOIDANCEW13;
}

public byte getA_AVOIDANCEW14() {
return A_AVOIDANCEW14;
}

public byte getA_AVOIDANCEW15() {
return A_AVOIDANCEW15;
}

public byte getA_AVOIDANCEW16() {
return A_AVOIDANCEW16;
}

public byte getA_AVOIDANCEW17() {
return A_AVOIDANCEW17;
}

public byte getA_AVOIDANCEW196() {
return A_AVOIDANCEW196;
}

public byte getA_AVOIDANCEW197() {
return A_AVOIDANCEW197;
}

public byte getA_AVOIDED_DV() {
return A_AVOIDED_DV;
}

public byte getA_BASNSA() {
return A_BASNSA;
}

protected double A_BASRATE() {
return A_BASRATE;
}

public byte getA_BASREST() {
return A_BASREST;
}

public byte getA_BENCB() {
return A_BENCB;
}

public byte getA_BENCTC() {
return A_BENCTC;
}

public byte getA_BENDIS1() {
return A_BENDIS1;
}

public byte getA_BENDIS10() {
return A_BENDIS10;
}

public byte getA_BENDIS11() {
return A_BENDIS11;
}

public byte getA_BENDIS2() {
return A_BENDIS2;
}

public byte getA_BENDIS3() {
return A_BENDIS3;
}

public byte getA_BENDIS4() {
return A_BENDIS4;
}

public byte getA_BENDIS5() {
return A_BENDIS5;
}

public byte getA_BENDIS6() {
return A_BENDIS6;
}

public byte getA_BENDIS7() {
return A_BENDIS7;
}

public byte getA_BENDIS8() {
return A_BENDIS8;
}

public byte getA_BENDIS9() {
return A_BENDIS9;
}

public byte getA_BENDIS96() {
return A_BENDIS96;
}

public int getA_BENEFIT_TM() {
return A_BENEFIT_TM;
}

public byte getA_BENFAM1() {
return A_BENFAM1;
}

public byte getA_BENFAM2() {
return A_BENFAM2;
}

public byte getA_BENFAM3() {
return A_BENFAM3;
}

public byte getA_BENFAM4() {
return A_BENFAM4;
}

public byte getA_BENFAM5() {
return A_BENFAM5;
}

public byte getA_BENFAM96() {
return A_BENFAM96;
}

public byte getA_BENHOU1() {
return A_BENHOU1;
}

public byte getA_BENHOU2() {
return A_BENHOU2;
}

public byte getA_BENHOU3() {
return A_BENHOU3;
}

public byte getA_BENHOU4() {
return A_BENHOU4;
}

public byte getA_BENHOU96() {
return A_BENHOU96;
}

public byte getA_BENPEN1() {
return A_BENPEN1;
}

public byte getA_BENPEN2() {
return A_BENPEN2;
}

public byte getA_BENPEN3() {
return A_BENPEN3;
}

public byte getA_BENPEN4() {
return A_BENPEN4;
}

public byte getA_BENPEN5() {
return A_BENPEN5;
}

public byte getA_BENPEN6() {
return A_BENPEN6;
}

public byte getA_BENPEN7() {
return A_BENPEN7;
}

public byte getA_BENPEN8() {
return A_BENPEN8;
}

public byte getA_BENPEN96() {
return A_BENPEN96;
}

public byte getA_BENSTA1() {
return A_BENSTA1;
}

public byte getA_BENSTA2() {
return A_BENSTA2;
}

public byte getA_BENSTA3() {
return A_BENSTA3;
}

public byte getA_BENSTA4() {
return A_BENSTA4;
}

public byte getA_BENSTA5() {
return A_BENSTA5;
}

public byte getA_BENSTA6() {
return A_BENSTA6;
}

public byte getA_BENSTA7() {
return A_BENSTA7;
}

public byte getA_BENSTA8() {
return A_BENSTA8;
}

public byte getA_BENSTA96() {
return A_BENSTA96;
}

public byte getA_BENTAX1() {
return A_BENTAX1;
}

public byte getA_BENTAX2() {
return A_BENTAX2;
}

public byte getA_BENTAX3() {
return A_BENTAX3;
}

public byte getA_BENTAX4() {
return A_BENTAX4;
}

public byte getA_BENTAX5() {
return A_BENTAX5;
}

public byte getA_BENTAX96() {
return A_BENTAX96;
}

public byte getA_BENUNEMP1() {
return A_BENUNEMP1;
}

public byte getA_BENUNEMP2() {
return A_BENUNEMP2;
}

public byte getA_BENUNEMP96() {
return A_BENUNEMP96;
}

public short getA_BIRTHY() {
return A_BIRTHY;
}

protected double A_BMI_DV() {
return A_BMI_DV;
}

public byte getA_BRITID() {
return A_BRITID;
}

public byte getA_BTYPE1() {
return A_BTYPE1;
}

public byte getA_BTYPE2() {
return A_BTYPE2;
}

public byte getA_BTYPE3() {
return A_BTYPE3;
}

public byte getA_BTYPE4() {
return A_BTYPE4;
}

public byte getA_BTYPE5() {
return A_BTYPE5;
}

public byte getA_BTYPE6() {
return A_BTYPE6;
}

public byte getA_BTYPE7() {
return A_BTYPE7;
}

public byte getA_BTYPE8() {
return A_BTYPE8;
}

public byte getA_BTYPE9() {
return A_BTYPE9;
}

public byte getA_BTYPE96() {
return A_BTYPE96;
}

public byte getA_BUNO_DV() {
return A_BUNO_DV;
}

public int getA_CARING_TM() {
return A_CARING_TM;
}

public int getA_CARMILES() {
return A_CARMILES;
}

public byte getA_CARUSE() {
return A_CARUSE;
}

public byte getA_CCARE() {
return A_CCARE;
}

public byte getA_CCWORK() {
return A_CCWORK;
}

public short getA_CH1BY4() {
return A_CH1BY4;
}

public byte getA_CHCON() {
return A_CHCON;
}

public byte getA_CHFAR() {
return A_CHFAR;
}

public int getA_CHILDCARE_TM() {
return A_CHILDCARE_TM;
}

public byte getA_CHSEE() {
return A_CHSEE;
}

public byte getA_CITZN1() {
return A_CITZN1;
}

public byte getA_CITZN2() {
return A_CITZN2;
}

public byte getA_CITZN3() {
return A_CITZN3;
}

public boolean getA_COHAB_DV() {
return A_COHAB_DV;
}

public int getA_CONSENT_TM() {
return A_CONSENT_TM;
}

public byte getA_COUNTRY() {
return A_COUNTRY;
}

public byte getA_CTADD1_CODE() {
return A_CTADD1_CODE;
}

public byte getA_CTADD2_CODE() {
return A_CTADD2_CODE;
}

public byte getA_CTCNTY_CODE() {
return A_CTCNTY_CODE;
}

public byte getA_CTEMAIL_CODE() {
return A_CTEMAIL_CODE;
}

public byte getA_CTPCODE_CODE() {
return A_CTPCODE_CODE;
}

public byte getA_CTTEL1_CODE() {
return A_CTTEL1_CODE;
}

public byte getA_CTTEL2_CODE() {
return A_CTTEL2_CODE;
}

public byte getA_CTTOWN_CODE() {
return A_CTTOWN_CODE;
}

public byte getA_CUDDLEKID() {
return A_CUDDLEKID;
}

public int getA_DEMOG_TM() {
return A_DEMOG_TM;
}

public boolean getA_DEPCHL_DV() {
return A_DEPCHL_DV;
}

public byte getA_DINNER() {
return A_DINNER;
}

public int getA_DISCRIMINATION_TM() {
return A_DISCRIMINATION_TM;
}

public byte getA_DISDIF1() {
return A_DISDIF1;
}

public byte getA_DISDIF10() {
return A_DISDIF10;
}

public byte getA_DISDIF11() {
return A_DISDIF11;
}

public byte getA_DISDIF12() {
return A_DISDIF12;
}

public byte getA_DISDIF2() {
return A_DISDIF2;
}

public byte getA_DISDIF3() {
return A_DISDIF3;
}

public byte getA_DISDIF4() {
return A_DISDIF4;
}

public byte getA_DISDIF5() {
return A_DISDIF5;
}

public byte getA_DISDIF6() {
return A_DISDIF6;
}

public byte getA_DISDIF7() {
return A_DISDIF7;
}

public byte getA_DISDIF8() {
return A_DISDIF8;
}

public byte getA_DISDIF9() {
return A_DISDIF9;
}

public byte getA_DISDIF96() {
return A_DISDIF96;
}

public short getA_DOBY_DV() {
return A_DOBY_DV;
}

public byte getA_DRIVE() {
return A_DRIVE;
}

public byte getA_DVAGE() {
return A_DVAGE;
}

public byte getA_EDASP() {
return A_EDASP;
}

public byte getA_EDLINKB() {
return A_EDLINKB;
}

public byte getA_EDTYPE() {
return A_EDTYPE;
}

public byte getA_EED12() {
return A_EED12;
}

public boolean getA_EMBOOST() {
return A_EMBOOST;
}

public byte getA_EMPLOY() {
return A_EMPLOY;
}

public int getA_EMPLOYMENT_TM() {
return A_EMPLOYMENT_TM;
}

public int getA_EMPSTAT_TM() {
return A_EMPSTAT_TM;
}

public byte getA_ENGFORM() {
return A_ENGFORM;
}

public byte getA_ENGLANG() {
return A_ENGLANG;
}

public byte getA_ENGREAD() {
return A_ENGREAD;
}

public byte getA_ENGSPK() {
return A_ENGSPK;
}

public byte getA_ENGTEL() {
return A_ENGTEL;
}

public byte getA_ENVHABIT1() {
return A_ENVHABIT1;
}

public byte getA_ENVHABIT10() {
return A_ENVHABIT10;
}

public byte getA_ENVHABIT11() {
return A_ENVHABIT11;
}

public byte getA_ENVHABIT2() {
return A_ENVHABIT2;
}

public byte getA_ENVHABIT3() {
return A_ENVHABIT3;
}

public byte getA_ENVHABIT4() {
return A_ENVHABIT4;
}

public byte getA_ENVHABIT5() {
return A_ENVHABIT5;
}

public byte getA_ENVHABIT6() {
return A_ENVHABIT6;
}

public byte getA_ENVHABIT7() {
return A_ENVHABIT7;
}

public byte getA_ENVHABIT8() {
return A_ENVHABIT8;
}

public byte getA_ENVHABIT9() {
return A_ENVHABIT9;
}

public int getA_ENVIRON_TM() {
return A_ENVIRON_TM;
}

public byte getA_ETHNIC1() {
return A_ETHNIC1;
}

public byte getA_ETHNIC10() {
return A_ETHNIC10;
}

public byte getA_ETHNIC11() {
return A_ETHNIC11;
}

public byte getA_ETHNIC12() {
return A_ETHNIC12;
}

public byte getA_ETHNIC13() {
return A_ETHNIC13;
}

public byte getA_ETHNIC14() {
return A_ETHNIC14;
}

public byte getA_ETHNIC2() {
return A_ETHNIC2;
}

public byte getA_ETHNIC3() {
return A_ETHNIC3;
}

public byte getA_ETHNIC4() {
return A_ETHNIC4;
}

public byte getA_ETHNIC5() {
return A_ETHNIC5;
}

public byte getA_ETHNIC6() {
return A_ETHNIC6;
}

public byte getA_ETHNIC7() {
return A_ETHNIC7;
}

public byte getA_ETHNIC8() {
return A_ETHNIC8;
}

public byte getA_ETHNIC9() {
return A_ETHNIC9;
}

public byte getA_ETHNIC96() {
return A_ETHNIC96;
}

public int getA_ETHNIC_TM() {
return A_ETHNIC_TM;
}

public byte getA_ETHN_DV() {
return A_ETHN_DV;
}

public byte getA_EXTNSA() {
return A_EXTNSA;
}

protected double A_EXTRATE() {
return A_EXTRATE;
}

public byte getA_EXTREST() {
return A_EXTREST;
}

public int getA_FAMILY_TM() {
return A_FAMILY_TM;
}

public byte getA_FARKID() {
return A_FARKID;
}

public byte getA_FEDLIK() {
return A_FEDLIK;
}

public byte getA_FEDNT() {
return A_FEDNT;
}

public byte getA_FEEND() {
return A_FEEND;
}

public byte getA_FENOW() {
return A_FENOW;
}

public int getA_FERTILITY_TM() {
return A_FERTILITY_TM;
}

protected double A_FIBENOTHR_DV() {
return A_FIBENOTHR_DV;
}

protected double A_FIBENOTHR_IF() {
return A_FIBENOTHR_IF;
}

public boolean getA_FIBENOTHR_TC() {
return A_FIBENOTHR_TC;
}

protected double A_FIMNGRS_DV() {
return A_FIMNGRS_DV;
}

protected double A_FIMNGRS_IF() {
return A_FIMNGRS_IF;
}

public boolean getA_FIMNGRS_TC() {
return A_FIMNGRS_TC;
}

protected double A_FIMNINVNET_DV() {
return A_FIMNINVNET_DV;
}

protected double A_FIMNLABGRS_DV() {
return A_FIMNLABGRS_DV;
}

protected double A_FIMNLABGRS_IF() {
return A_FIMNLABGRS_IF;
}

public boolean getA_FIMNLABGRS_TC() {
return A_FIMNLABGRS_TC;
}

protected double A_FIMNLABNET_DV() {
return A_FIMNLABNET_DV;
}

public boolean getA_FIMNLABNET_TC() {
return A_FIMNLABNET_TC;
}

protected double A_FIMNMISC_DV() {
return A_FIMNMISC_DV;
}

protected double A_FIMNNET_DV() {
return A_FIMNNET_DV;
}

protected double A_FIMNPEN_DV() {
return A_FIMNPEN_DV;
}

protected double A_FIMNPRBEN_DV() {
return A_FIMNPRBEN_DV;
}

protected double A_FIMNSBEN_DV() {
return A_FIMNSBEN_DV;
}

public int getA_FINANCES_TM() {
return A_FINANCES_TM;
}

public byte getA_FINFUT() {
return A_FINFUT;
}

public int getA_FININT_TM() {
return A_FININT_TM;
}

public byte getA_FINNOW() {
return A_FINNOW;
}

public byte getA_FIYRDB1() {
return A_FIYRDB1;
}

public byte getA_FIYRDB2() {
return A_FIYRDB2;
}

public byte getA_FIYRDB3() {
return A_FIYRDB3;
}

public byte getA_FIYRDB4() {
return A_FIYRDB4;
}

public byte getA_FIYRDB5() {
return A_FIYRDB5;
}

public byte getA_FIYRDB6() {
return A_FIYRDB6;
}

public int getA_FIYRDIA() {
return A_FIYRDIA;
}

protected double A_FIYRINVINC_DV() {
return A_FIYRINVINC_DV;
}

public byte getA_FIYRINVINC_IF() {
return A_FIYRINVINC_IF;
}

public boolean getA_FIYRINVINC_TC() {
return A_FIYRINVINC_TC;
}

public byte getA_FLAGLINK() {
return A_FLAGLINK;
}

public int getA_FNPID() {
return A_FNPID;
}

public byte getA_FNPNO() {
return A_FNPNO;
}

public int getA_FNSPID() {
return A_FNSPID;
}

public byte getA_FNSPNO() {
return A_FNSPNO;
}

public byte getA_FORMDIF() {
return A_FORMDIF;
}

public int getA_FTEXV() {
return A_FTEXV;
}

public byte getA_FTEXW() {
return A_FTEXW;
}

public byte getA_GOR_DV() {
return A_GOR_DV;
}

public boolean getA_GPCOMP() {
return A_GPCOMP;
}

public int getA_GRFPID() {
return A_GRFPID;
}

public byte getA_GRFPNO() {
return A_GRFPNO;
}

public int getA_GRMPID() {
return A_GRMPID;
}

public byte getA_GRMPNO() {
return A_GRMPNO;
}

public int getA_HARASSMENT_TM() {
return A_HARASSMENT_TM;
}

public byte getA_HCOND1() {
return A_HCOND1;
}

public byte getA_HCOND10() {
return A_HCOND10;
}

public byte getA_HCOND11() {
return A_HCOND11;
}

public byte getA_HCOND12() {
return A_HCOND12;
}

public byte getA_HCOND13() {
return A_HCOND13;
}

public byte getA_HCOND14() {
return A_HCOND14;
}

public byte getA_HCOND15() {
return A_HCOND15;
}

public byte getA_HCOND16() {
return A_HCOND16;
}

public byte getA_HCOND17() {
return A_HCOND17;
}

public byte getA_HCOND2() {
return A_HCOND2;
}

public byte getA_HCOND3() {
return A_HCOND3;
}

public byte getA_HCOND4() {
return A_HCOND4;
}

public byte getA_HCOND5() {
return A_HCOND5;
}

public byte getA_HCOND6() {
return A_HCOND6;
}

public byte getA_HCOND7() {
return A_HCOND7;
}

public byte getA_HCOND8() {
return A_HCOND8;
}

public byte getA_HCOND9() {
return A_HCOND9;
}

public byte getA_HCOND96() {
return A_HCOND96;
}

public byte getA_HCONDA01() {
return A_HCONDA01;
}

public byte getA_HCONDA02() {
return A_HCONDA02;
}

public byte getA_HCONDA03() {
return A_HCONDA03;
}

public byte getA_HCONDA04() {
return A_HCONDA04;
}

public byte getA_HCONDA05() {
return A_HCONDA05;
}

public byte getA_HCONDA06() {
return A_HCONDA06;
}

public byte getA_HCONDA07() {
return A_HCONDA07;
}

public byte getA_HCONDA08() {
return A_HCONDA08;
}

public byte getA_HCONDA09() {
return A_HCONDA09;
}

public byte getA_HCONDA10() {
return A_HCONDA10;
}

public byte getA_HCONDA11() {
return A_HCONDA11;
}

public byte getA_HCONDA12() {
return A_HCONDA12;
}

public byte getA_HCONDA13() {
return A_HCONDA13;
}

public byte getA_HCONDA14() {
return A_HCONDA14;
}

public byte getA_HCONDA15() {
return A_HCONDA15;
}

public byte getA_HCONDA16() {
return A_HCONDA16;
}

public byte getA_HCONDA17() {
return A_HCONDA17;
}

public byte getA_HCONDS01() {
return A_HCONDS01;
}

public byte getA_HCONDS02() {
return A_HCONDS02;
}

public byte getA_HCONDS03() {
return A_HCONDS03;
}

public byte getA_HCONDS04() {
return A_HCONDS04;
}

public byte getA_HCONDS05() {
return A_HCONDS05;
}

public boolean getA_HCONDS06() {
return A_HCONDS06;
}

public boolean getA_HCONDS07() {
return A_HCONDS07;
}

public byte getA_HCONDS08() {
return A_HCONDS08;
}

public byte getA_HCONDS09() {
return A_HCONDS09;
}

public byte getA_HCONDS10() {
return A_HCONDS10;
}

public byte getA_HCONDS11() {
return A_HCONDS11;
}

public byte getA_HCONDS12() {
return A_HCONDS12;
}

public byte getA_HCONDS13() {
return A_HCONDS13;
}

public byte getA_HCONDS14() {
return A_HCONDS14;
}

public byte getA_HCONDS15() {
return A_HCONDS15;
}

public byte getA_HCONDS16() {
return A_HCONDS16;
}

public byte getA_HCONDS17() {
return A_HCONDS17;
}

public byte getA_HEALTH() {
return A_HEALTH;
}

public byte getA_HEALTHLINK() {
return A_HEALTHLINK;
}

public int getA_HEALTH_TM() {
return A_HEALTH_TM;
}

public byte getA_HGADOPTF() {
return A_HGADOPTF;
}

public byte getA_HGADOPTM() {
return A_HGADOPTM;
}

public byte getA_HGBIOF() {
return A_HGBIOF;
}

public byte getA_HGBIOM() {
return A_HGBIOM;
}

public byte getA_HGPART() {
return A_HGPART;
}

public int getA_HHGRID_TM() {
return A_HHGRID_TM;
}

public byte getA_HHORIG() {
return A_HHORIG;
}

public int getA_HHQRE_TM() {
return A_HHQRE_TM;
}

public byte getA_HHRESP_DV() {
return A_HHRESP_DV;
}

public int getA_HHSTTIME_TM() {
return A_HHSTTIME_TM;
}

public byte getA_HHTYPE_DV() {
return A_HHTYPE_DV;
}

public int getA_HIDP() {
return A_HIDP;
}

public byte getA_HIQUAL_DV() {
return A_HIQUAL_DV;
}

public byte getA_HLHT() {
return A_HLHT;
}

public short getA_HLHTC() {
return A_HLHTC;
}

public byte getA_HLHTF() {
return A_HLHTF;
}

public byte getA_HLHTI() {
return A_HLHTI;
}

public byte getA_HLPHMWK() {
return A_HLPHMWK;
}

public byte getA_HLWT() {
return A_HLWT;
}

public byte getA_HLWTE() {
return A_HLWTE;
}

public short getA_HLWTK() {
return A_HLWTK;
}

public byte getA_HLWTL() {
return A_HLWTL;
}

public byte getA_HLWTP() {
return A_HLWTP;
}

public byte getA_HLWTS() {
return A_HLWTS;
}

public byte getA_HOWLNG() {
return A_HOWLNG;
}

public int getA_HRPID() {
return A_HRPID;
}

public byte getA_HRPNO() {
return A_HRPNO;
}

public byte getA_IENDDATHH() {
return A_IENDDATHH;
}

public byte getA_IENDDATMM() {
return A_IENDDATMM;
}

public byte getA_IENDDATSS() {
return A_IENDDATSS;
}

public byte getA_IMPEVENT1() {
return A_IMPEVENT1;
}

public byte getA_IMPEVENT1S() {
return A_IMPEVENT1S;
}

public byte getA_IMPEVENT2() {
return A_IMPEVENT2;
}

public byte getA_IMPEVENT2S() {
return A_IMPEVENT2S;
}

public byte getA_IMPEVENT3() {
return A_IMPEVENT3;
}

public byte getA_IMPEVENT3S() {
return A_IMPEVENT3S;
}

public byte getA_IMPEVENT4() {
return A_IMPEVENT4;
}

public byte getA_IMPEVENT4S() {
return A_IMPEVENT4S;
}

protected double A_IND5MUS_XW() {
return A_IND5MUS_XW;
}

protected double A_INDINUS_XW() {
return A_INDINUS_XW;
}

protected double A_INDPXUS_XW() {
return A_INDPXUS_XW;
}

protected double A_INDSCUS_XW() {
return A_INDSCUS_XW;
}

public int getA_INITIAL_TM() {
return A_INITIAL_TM;
}

public byte getA_INSULTEDW11() {
return A_INSULTEDW11;
}

public byte getA_INSULTEDW12() {
return A_INSULTEDW12;
}

public byte getA_INSULTEDW13() {
return A_INSULTEDW13;
}

public byte getA_INSULTEDW14() {
return A_INSULTEDW14;
}

public byte getA_INSULTEDW15() {
return A_INSULTEDW15;
}

public byte getA_INSULTEDW16() {
return A_INSULTEDW16;
}

public byte getA_INSULTEDW17() {
return A_INSULTEDW17;
}

public byte getA_INSULTEDW196() {
return A_INSULTEDW196;
}

public byte getA_INSULTEDW197() {
return A_INSULTEDW197;
}

public byte getA_INSULTED_DV() {
return A_INSULTED_DV;
}

public byte getA_INTDATD_DV() {
return A_INTDATD_DV;
}

public byte getA_INTDATM_DV() {
return A_INTDATM_DV;
}

public short getA_INTDATY_DV() {
return A_INTDATY_DV;
}

public byte getA_IOUTCOME() {
return A_IOUTCOME;
}

public byte getA_ISTRTDATD() {
return A_ISTRTDATD;
}

public byte getA_ISTRTDATHH() {
return A_ISTRTDATHH;
}

public byte getA_ISTRTDATM() {
return A_ISTRTDATM;
}

public byte getA_ISTRTDATMM() {
return A_ISTRTDATMM;
}

public byte getA_ISTRTDATSS() {
return A_ISTRTDATSS;
}

public short getA_ISTRTDATY() {
return A_ISTRTDATY;
}

public byte getA_IVAFFCT11() {
return A_IVAFFCT11;
}

public byte getA_IVAFFCT12() {
return A_IVAFFCT12;
}

public byte getA_IVAFFCT13() {
return A_IVAFFCT13;
}

public byte getA_IVAFFCT14() {
return A_IVAFFCT14;
}

public byte getA_IVAFFCT15() {
return A_IVAFFCT15;
}

public byte getA_IVAFFCT17() {
return A_IVAFFCT17;
}

public byte getA_IVAFFCT21() {
return A_IVAFFCT21;
}

public byte getA_IVAFFCT22() {
return A_IVAFFCT22;
}

public byte getA_IVAFFCT23() {
return A_IVAFFCT23;
}

public byte getA_IVAFFCT27() {
return A_IVAFFCT27;
}

public byte getA_IVAFFCT30() {
return A_IVAFFCT30;
}

public byte getA_IVAFFCT97() {
return A_IVAFFCT97;
}

public byte getA_IVCOOP() {
return A_IVCOOP;
}

public boolean getA_IVFIO() {
return A_IVFIO;
}

public byte getA_IVINFNCE() {
return A_IVINFNCE;
}

public byte getA_IVINTLANG() {
return A_IVINTLANG;
}

public byte getA_IVPRSNT() {
return A_IVPRSNT;
}

public byte getA_IVTRANS() {
return A_IVTRANS;
}

public byte getA_IVWHOINT() {
return A_IVWHOINT;
}

public byte getA_J1NSSEC5_DV() {
return A_J1NSSEC5_DV;
}

public short getA_J1SOC00_CC() {
return A_J1SOC00_CC;
}

public short getA_J1SOC10_CC() {
return A_J1SOC10_CC;
}

public byte getA_J1SOC90_CC() {
return A_J1SOC90_CC;
}

public byte getA_J2HAS() {
return A_J2HAS;
}

public short getA_J2HRS() {
return A_J2HRS;
}

public int getA_J2PAY() {
return A_J2PAY;
}

protected double A_J2PAYNET_DV() {
return A_J2PAYNET_DV;
}

protected double A_J2PAY_DV() {
return A_J2PAY_DV;
}

public byte getA_J2PAY_IF() {
return A_J2PAY_IF;
}

public byte getA_J2SEMP() {
return A_J2SEMP;
}

public byte getA_JBBGD() {
return A_JBBGD;
}

public byte getA_JBBGM() {
return A_JBBGM;
}

public short getA_JBBGY() {
return A_JBBGY;
}

public byte getA_JBES2000() {
return A_JBES2000;
}

public byte getA_JBFT_DV() {
return A_JBFT_DV;
}

public byte getA_JBHAD() {
return A_JBHAD;
}

public byte getA_JBHAS() {
return A_JBHAS;
}

protected double A_JBHRS() {
return A_JBHRS;
}

public byte getA_JBIINDB_DV() {
return A_JBIINDB_DV;
}

public short getA_JBISCO88_CC() {
return A_JBISCO88_CC;
}

public byte getA_JBMNGR() {
return A_JBMNGR;
}

public byte getA_JBNSSEC3_DV() {
return A_JBNSSEC3_DV;
}

public byte getA_JBNSSEC5_DV() {
return A_JBNSSEC5_DV;
}

public byte getA_JBNSSEC8_DV() {
return A_JBNSSEC8_DV;
}

public byte getA_JBNSSEC_DV() {
return A_JBNSSEC_DV;
}

public byte getA_JBOFF() {
return A_JBOFF;
}

public byte getA_JBOFFY() {
return A_JBOFFY;
}

public byte getA_JBOT() {
return A_JBOT;
}

public byte getA_JBOTPD() {
return A_JBOTPD;
}

public byte getA_JBPEN() {
return A_JBPEN;
}

public byte getA_JBPENM() {
return A_JBPENM;
}

public byte getA_JBPL() {
return A_JBPL;
}

public byte getA_JBRGSC_DV() {
return A_JBRGSC_DV;
}

public byte getA_JBSAT() {
return A_JBSAT;
}

public byte getA_JBSECT() {
return A_JBSECT;
}

public byte getA_JBSECTPUB() {
return A_JBSECTPUB;
}

public byte getA_JBSEG_DV() {
return A_JBSEG_DV;
}

public byte getA_JBSEMP() {
return A_JBSEMP;
}

public byte getA_JBSIC07_CC() {
return A_JBSIC07_CC;
}

public byte getA_JBSIZE() {
return A_JBSIZE;
}

public short getA_JBSOC00_CC() {
return A_JBSOC00_CC;
}

public byte getA_JBSOCGR_DV() {
return A_JBSOCGR_DV;
}

public byte getA_JBSTAT() {
return A_JBSTAT;
}

public byte getA_JBTERM1() {
return A_JBTERM1;
}

public byte getA_JBTERM2() {
return A_JBTERM2;
}

public short getA_JBTTWT() {
return A_JBTTWT;
}

public byte getA_JLBOSS() {
return A_JLBOSS;
}

public byte getA_JLENDM() {
return A_JLENDM;
}

public short getA_JLENDY() {
return A_JLENDY;
}

public byte getA_JLES2000() {
return A_JLES2000;
}

public byte getA_JLIINDB_DV() {
return A_JLIINDB_DV;
}

public short getA_JLISCO88_CC() {
return A_JLISCO88_CC;
}

public byte getA_JLMNGR() {
return A_JLMNGR;
}

public byte getA_JLNSSEC3_DV() {
return A_JLNSSEC3_DV;
}

public byte getA_JLNSSEC5_DV() {
return A_JLNSSEC5_DV;
}

public byte getA_JLNSSEC8_DV() {
return A_JLNSSEC8_DV;
}

public byte getA_JLNSSEC_DV() {
return A_JLNSSEC_DV;
}

public byte getA_JLRGSC_DV() {
return A_JLRGSC_DV;
}

public byte getA_JLSEG_DV() {
return A_JLSEG_DV;
}

public byte getA_JLSEMP() {
return A_JLSEMP;
}

public byte getA_JLSIC07_CC() {
return A_JLSIC07_CC;
}

public byte getA_JLSIZE() {
return A_JLSIZE;
}

public short getA_JLSOC00_CC() {
return A_JLSOC00_CC;
}

public byte getA_JOBDENY() {
return A_JOBDENY;
}

public byte getA_JOBLOOK() {
return A_JOBLOOK;
}

public int getA_JOB_TM() {
return A_JOB_TM;
}

public byte getA_JSACCS() {
return A_JSACCS;
}

public byte getA_JSBOSS() {
return A_JSBOSS;
}

public byte getA_JSHRS() {
return A_JSHRS;
}

public byte getA_JSPART() {
return A_JSPART;
}

public int getA_JSPAYU() {
return A_JSPAYU;
}

public byte getA_JSPAYW() {
return A_JSPAYW;
}

public byte getA_JSPL() {
return A_JSPL;
}

public byte getA_JSPRBM() {
return A_JSPRBM;
}

public short getA_JSPRBY4() {
return A_JSPRBY4;
}

public byte getA_JSPREM() {
return A_JSPREM;
}

public short getA_JSPREY4() {
return A_JSPREY4;
}

public int getA_JSPRF() {
return A_JSPRF;
}

public byte getA_JSPRLS() {
return A_JSPRLS;
}

public byte getA_JSPRNI() {
return A_JSPRNI;
}

public byte getA_JSPRTX() {
return A_JSPRTX;
}

public byte getA_JSPYNI() {
return A_JSPYNI;
}

public byte getA_JSPYTX() {
return A_JSPYTX;
}

public byte getA_JSSIZE() {
return A_JSSIZE;
}

public byte getA_JSTTWT() {
return A_JSTTWT;
}

public short getA_JSTTWTB() {
return A_JSTTWTB;
}

public byte getA_JSTYPEB() {
return A_JSTYPEB;
}

public short getA_JSWORKDIS() {
return A_JSWORKDIS;
}

public byte getA_JSWORKTRAV() {
return A_JSWORKTRAV;
}

public byte getA_JUBGN() {
return A_JUBGN;
}

public byte getA_JULK4WK() {
return A_JULK4WK;
}

public byte getA_JULK4X1() {
return A_JULK4X1;
}

public byte getA_JULK4X2() {
return A_JULK4X2;
}

public byte getA_JULK4X3() {
return A_JULK4X3;
}

public byte getA_JULK4X4() {
return A_JULK4X4;
}

public byte getA_JULK4X5() {
return A_JULK4X5;
}

public byte getA_JULK4X6() {
return A_JULK4X6;
}

public byte getA_JULK4X96() {
return A_JULK4X96;
}

public byte getA_JULKJB() {
return A_JULKJB;
}

public byte getA_K2UCPN1() {
return A_K2UCPN1;
}

public byte getA_K2UCPN2() {
return A_K2UCPN2;
}

public byte getA_K2UCPN3() {
return A_K2UCPN3;
}

public byte getA_K2UCPN4() {
return A_K2UCPN4;
}

public byte getA_K2UCPN5() {
return A_K2UCPN5;
}

public byte getA_KID2UNI1() {
return A_KID2UNI1;
}

public byte getA_KID2UNI2() {
return A_KID2UNI2;
}

public byte getA_KID2UNI3() {
return A_KID2UNI3;
}

public byte getA_KID2UNI4() {
return A_KID2UNI4;
}

public byte getA_KID2UNI5() {
return A_KID2UNI5;
}

public byte getA_KIDSPT() {
return A_KIDSPT;
}

public byte getA_LADOPT() {
return A_LADOPT;
}

public byte getA_LCHMOR() {
return A_LCHMOR;
}

public byte getA_LCHMORN() {
return A_LCHMORN;
}

public byte getA_LCMARM() {
return A_LCMARM;
}

public short getA_LCMARY4() {
return A_LCMARY4;
}

public byte getA_LCMCBM() {
return A_LCMCBM;
}

public short getA_LCMCBY4() {
return A_LCMCBY4;
}

public byte getA_LCMCOH() {
return A_LCMCOH;
}

public byte getA_LCMSPM() {
return A_LCMSPM;
}

public short getA_LCMSPY4() {
return A_LCMSPY4;
}

public byte getA_LCOH() {
return A_LCOH;
}

public boolean getA_LDA() {
return A_LDA;
}

public boolean getA_LDAFLAG() {
return A_LDAFLAG;
}

protected double A_LENINDINTV() {
return A_LENINDINTV;
}

public byte getA_LEVELIMP() {
return A_LEVELIMP;
}

public byte getA_LGAPED() {
return A_LGAPED;
}

public byte getA_LINGUA() {
return A_LINGUA;
}

public byte getA_LIVESP() {
return A_LIVESP;
}

public boolean getA_LIVESP_DV() {
return A_LIVESP_DV;
}

public byte getA_LIVEWITH() {
return A_LIVEWITH;
}

public byte getA_LKMOVE() {
return A_LKMOVE;
}

public byte getA_LNADOPT() {
return A_LNADOPT;
}

public byte getA_LNCOH() {
return A_LNCOH;
}

public byte getA_LNPRNT() {
return A_LNPRNT;
}

public byte getA_LPRNT() {
return A_LPRNT;
}

public byte getA_LVAG14() {
return A_LVAG14;
}

public byte getA_LVAG16() {
return A_LVAG16;
}

public byte getA_LVREL1() {
return A_LVREL1;
}

public byte getA_LVREL2() {
return A_LVREL2;
}

public byte getA_LVREL3() {
return A_LVREL3;
}

public byte getA_LVREL4() {
return A_LVREL4;
}

public byte getA_LVREL5() {
return A_LVREL5;
}

public byte getA_LVREL6() {
return A_LVREL6;
}

public byte getA_LVREL7() {
return A_LVREL7;
}

public byte getA_LVREL8() {
return A_LVREL8;
}

public byte getA_LVREL96() {
return A_LVREL96;
}

public byte getA_MAAGE() {
return A_MAAGE;
}

public byte getA_MABROAD() {
return A_MABROAD;
}

public byte getA_MACOB() {
return A_MACOB;
}

public byte getA_MACON() {
return A_MACON;
}

public byte getA_MAEDQF() {
return A_MAEDQF;
}

public byte getA_MAFAR() {
return A_MAFAR;
}

public byte getA_MAID() {
return A_MAID;
}

public byte getA_MAINTALIM() {
return A_MAINTALIM;
}

public byte getA_MAJU() {
return A_MAJU;
}

public byte getA_MANSSEC5_DV() {
return A_MANSSEC5_DV;
}

public byte getA_MARSTAT() {
return A_MARSTAT;
}

public byte getA_MASEE() {
return A_MASEE;
}

public short getA_MASOC00_CC() {
return A_MASOC00_CC;
}

public short getA_MASOC10_CC() {
return A_MASOC10_CC;
}

public byte getA_MASOC90_CC() {
return A_MASOC90_CC;
}

public byte getA_MASTAT_DV() {
return A_MASTAT_DV;
}

public byte getA_MAYRUK() {
return A_MAYRUK;
}

public short getA_MAYRUK1() {
return A_MAYRUK1;
}

public byte getA_MEMORIG() {
return A_MEMORIG;
}

public byte getA_MGMROB() {
return A_MGMROB;
}

public byte getA_MGPROB() {
return A_MGPROB;
}

public int getA_MIGRATION_TM() {
return A_MIGRATION_TM;
}

public byte getA_MINDIRECT() {
return A_MINDIRECT;
}

public byte getA_MLIVED() {
return A_MLIVED;
}

public byte getA_MLIVEDIST() {
return A_MLIVEDIST;
}

public byte getA_MLIVEDIST5() {
return A_MLIVEDIST5;
}

public byte getA_MLIVEDISTF() {
return A_MLIVEDISTF;
}

public byte getA_MLSTAT() {
return A_MLSTAT;
}

public byte getA_MLSTATCHK() {
return A_MLSTATCHK;
}

public byte getA_MNABROAD() {
return A_MNABROAD;
}

public byte getA_MNLIVED() {
return A_MNLIVED;
}

public byte getA_MNMOVES() {
return A_MNMOVES;
}

public byte getA_MNOTHERC() {
return A_MNOTHERC;
}

public int getA_MNPID() {
return A_MNPID;
}

public byte getA_MNPNO() {
return A_MNPNO;
}

public int getA_MNSPID() {
return A_MNSPID;
}

public byte getA_MNSPNO() {
return A_MNSPNO;
}

public byte getA_MOBUSE() {
return A_MOBUSE;
}

public byte getA_MONTH() {
return A_MONTH;
}

public byte getA_MOVEAGE() {
return A_MOVEAGE;
}

public byte getA_MPNO() {
return A_MPNO;
}

public byte getA_MRETURNED() {
return A_MRETURNED;
}

public byte getA_MVEVER() {
return A_MVEVER;
}

public byte getA_MVMNTH() {
return A_MVMNTH;
}

public short getA_MVYR() {
return A_MVYR;
}

public byte getA_NADOPTCH() {
return A_NADOPTCH;
}

public byte getA_NAIDXHH() {
return A_NAIDXHH;
}

public byte getA_NATCH01() {
return A_NATCH01;
}

public byte getA_NATCH02() {
return A_NATCH02;
}

public byte getA_NATCH03() {
return A_NATCH03;
}

public byte getA_NATCH04() {
return A_NATCH04;
}

public byte getA_NATCH05() {
return A_NATCH05;
}

public byte getA_NATCH06() {
return A_NATCH06;
}

public byte getA_NATCH07() {
return A_NATCH07;
}

public byte getA_NATCH08() {
return A_NATCH08;
}

public byte getA_NATCH09() {
return A_NATCH09;
}

public byte getA_NATCH10() {
return A_NATCH10;
}

public byte getA_NATCH11() {
return A_NATCH11;
}

public byte getA_NATCH12() {
return A_NATCH12;
}

public boolean getA_NATCH13() {
return A_NATCH13;
}

public boolean getA_NATCH14() {
return A_NATCH14;
}

public boolean getA_NATCH15() {
return A_NATCH15;
}

public boolean getA_NATCH16() {
return A_NATCH16;
}

public byte getA_NATID1() {
return A_NATID1;
}

public byte getA_NATID2() {
return A_NATID2;
}

public byte getA_NATID3() {
return A_NATID3;
}

public byte getA_NATID4() {
return A_NATID4;
}

public byte getA_NATID5() {
return A_NATID5;
}

public byte getA_NATID6() {
return A_NATID6;
}

public byte getA_NATID97() {
return A_NATID97;
}

protected double A_NBRSNCI_DV() {
return A_NBRSNCI_DV;
}

public byte getA_NCH10TO15() {
return A_NCH10TO15;
}

public byte getA_NCH14RESP() {
return A_NCH14RESP;
}

public byte getA_NCH415RESP() {
return A_NCH415RESP;
}

public byte getA_NCH5TO15() {
return A_NCH5TO15;
}

public byte getA_NCHILD_DV() {
return A_NCHILD_DV;
}

public byte getA_NCHRESP() {
return A_NCHRESP;
}

public byte getA_NCHUND18RESP() {
return A_NCHUND18RESP;
}

public byte getA_NCHUNDER16() {
return A_NCHUNDER16;
}

public byte getA_NDEPCHL_DV() {
return A_NDEPCHL_DV;
}

public byte getA_NETUSE() {
return A_NETUSE;
}

public int getA_NETWORKS_TM() {
return A_NETWORKS_TM;
}

public byte getA_NGRP_DV() {
return A_NGRP_DV;
}

public byte getA_NIACT() {
return A_NIACT;
}

public byte getA_NIREL() {
return A_NIREL;
}

public byte getA_NISERPS() {
return A_NISERPS;
}

public byte getA_NMAR() {
return A_NMAR;
}

public byte getA_NNATCH() {
return A_NNATCH;
}

public byte getA_NNSIB_DV() {
return A_NNSIB_DV;
}

public byte getA_NNSSIB_DV() {
return A_NNSSIB_DV;
}

public int getA_NONEMP_TM() {
return A_NONEMP_TM;
}

public byte getA_NPENSIONER_DV() {
return A_NPENSIONER_DV;
}

public byte getA_NPNS_DV() {
return A_NPNS_DV;
}

public byte getA_NPN_DV() {
return A_NPN_DV;
}

public byte getA_NQFHIGH_DV() {
return A_NQFHIGH_DV;
}

public byte getA_NRELSW11() {
return A_NRELSW11;
}

public byte getA_NRELSW12() {
return A_NRELSW12;
}

public byte getA_NRELSW13() {
return A_NRELSW13;
}

public byte getA_NRELSW14() {
return A_NRELSW14;
}

public byte getA_NRELSW15() {
return A_NRELSW15;
}

public byte getA_NRELSW16() {
return A_NRELSW16;
}

public int getA_OBSERVE_TM() {
return A_OBSERVE_TM;
}

public byte getA_OHCH16() {
return A_OHCH16;
}

public byte getA_OPRLG() {
return A_OPRLG;
}

public byte getA_OPRLG0() {
return A_OPRLG0;
}

public byte getA_OPRLG0NI() {
return A_OPRLG0NI;
}

public byte getA_OPRLG1() {
return A_OPRLG1;
}

public byte getA_OPRLG2() {
return A_OPRLG2;
}

public byte getA_OPRLG3() {
return A_OPRLG3;
}

public byte getA_OVTNSA() {
return A_OVTNSA;
}

public byte getA_OVTPAY() {
return A_OVTPAY;
}

protected double A_OVTRATE() {
return A_OVTRATE;
}

public byte getA_OVTREST() {
return A_OVTREST;
}

public byte getA_PAAGE() {
return A_PAAGE;
}

public byte getA_PACOB() {
return A_PACOB;
}

public byte getA_PACON() {
return A_PACON;
}

public byte getA_PAEDQF() {
return A_PAEDQF;
}

public byte getA_PAFAR() {
return A_PAFAR;
}

public byte getA_PAID() {
return A_PAID;
}

public byte getA_PAJU() {
return A_PAJU;
}

public byte getA_PANSSEC5_DV() {
return A_PANSSEC5_DV;
}

public int getA_PARCHILD_TM() {
return A_PARCHILD_TM;
}

public byte getA_PARMAR() {
return A_PARMAR;
}

public int getA_PARTNER_TM() {
return A_PARTNER_TM;
}

public byte getA_PASEE() {
return A_PASEE;
}

public short getA_PASOC00_CC() {
return A_PASOC00_CC;
}

public short getA_PASOC10_CC() {
return A_PASOC10_CC;
}

public byte getA_PASOC90_CC() {
return A_PASOC90_CC;
}

public byte getA_PAYFAM() {
return A_PAYFAM;
}

public int getA_PAYGL() {
return A_PAYGL;
}

protected double A_PAYGU_DV() {
return A_PAYGU_DV;
}

public byte getA_PAYGU_IF() {
return A_PAYGU_IF;
}

public byte getA_PAYGWC() {
return A_PAYGWC;
}

protected double A_PAYG_DV() {
return A_PAYG_DV;
}

public int getA_PAYNL() {
return A_PAYNL;
}

protected double A_PAYNU_DV() {
return A_PAYNU_DV;
}

public byte getA_PAYNU_IF() {
return A_PAYNU_IF;
}

public byte getA_PAYNWC() {
return A_PAYNWC;
}

protected double A_PAYN_DV() {
return A_PAYN_DV;
}

public byte getA_PAYRUK() {
return A_PAYRUK;
}

public short getA_PAYRUK1() {
return A_PAYRUK1;
}

public byte getA_PAYTYP() {
return A_PAYTYP;
}

public int getA_PAYU() {
return A_PAYU;
}

public byte getA_PAYUG() {
return A_PAYUG;
}

public byte getA_PAYUSL() {
return A_PAYUSL;
}

public byte getA_PAYUWC() {
return A_PAYUWC;
}

protected double A_PAYU_DV() {
return A_PAYU_DV;
}

public byte getA_PBNFT1() {
return A_PBNFT1;
}

public byte getA_PBNFT10() {
return A_PBNFT10;
}

public byte getA_PBNFT11() {
return A_PBNFT11;
}

public byte getA_PBNFT12() {
return A_PBNFT12;
}

public byte getA_PBNFT2() {
return A_PBNFT2;
}

public byte getA_PBNFT3() {
return A_PBNFT3;
}

public byte getA_PBNFT4() {
return A_PBNFT4;
}

public byte getA_PBNFT5() {
return A_PBNFT5;
}

public byte getA_PBNFT6() {
return A_PBNFT6;
}

public byte getA_PBNFT7() {
return A_PBNFT7;
}

public byte getA_PBNFT8() {
return A_PBNFT8;
}

public byte getA_PBNFT9() {
return A_PBNFT9;
}

public byte getA_PBNFT96() {
return A_PBNFT96;
}

public boolean getA_PENSIONER_DV() {
return A_PENSIONER_DV;
}

public byte getA_PGMROB() {
return A_PGMROB;
}

public byte getA_PGPROB() {
return A_PGPROB;
}

public int getA_PHONE_TM() {
return A_PHONE_TM;
}

public byte getA_PJBPTFT() {
return A_PJBPTFT;
}

public byte getA_PJSPTFT() {
return A_PJSPTFT;
}

public byte getA_PJULK4WK() {
return A_PJULK4WK;
}

public byte getA_PLBORNC() {
return A_PLBORNC;
}

public int getA_PN1PID() {
return A_PN1PID;
}

public byte getA_PN1PNO() {
return A_PN1PNO;
}

public byte getA_PN1SEX() {
return A_PN1SEX;
}

public int getA_PN2PID() {
return A_PN2PID;
}

public byte getA_PN2PNO() {
return A_PN2PNO;
}

public byte getA_PN2SEX() {
return A_PN2SEX;
}

public byte getA_PNO() {
return A_PNO;
}

public int getA_PNS1PID() {
return A_PNS1PID;
}

public byte getA_PNS1PNO() {
return A_PNS1PNO;
}

public byte getA_PNS1SEX() {
return A_PNS1SEX;
}

public int getA_PNS2PID() {
return A_PNS2PID;
}

public byte getA_PNS2PNO() {
return A_PNS2PNO;
}

public byte getA_PNS2SEX() {
return A_PNS2SEX;
}

public int getA_POLITICAL_TM() {
return A_POLITICAL_TM;
}

public int getA_PPID() {
return A_PPID;
}

public byte getA_PPNO() {
return A_PPNO;
}

public byte getA_PPSEX() {
return A_PPSEX;
}

public byte getA_PRAISEKID() {
return A_PRAISEKID;
}

public byte getA_PREARN() {
return A_PREARN;
}

public byte getA_PREARNA() {
return A_PREARNA;
}

public byte getA_PREARNW() {
return A_PREARNW;
}

public byte getA_PREASON() {
return A_PREASON;
}

public byte getA_PREL() {
return A_PREL;
}

public byte getA_PRFITB() {
return A_PRFITB;
}

public byte getA_PRFITBA() {
return A_PRFITBA;
}

public byte getA_PRFITBW() {
return A_PRFITBW;
}

public byte getA_PRIPN() {
return A_PRIPN;
}

public byte getA_PRIVPEN() {
return A_PRIVPEN;
}

public byte getA_PROMODENY() {
return A_PROMODENY;
}

public int getA_PROXY_TM() {
return A_PROXY_TM;
}

public byte getA_PRSEX() {
return A_PRSEX;
}

public int getA_PSU() {
return A_PSU;
}

public byte getA_QFHIGH() {
return A_QFHIGH;
}

public boolean getA_QFHIGHFL_DV() {
return A_QFHIGHFL_DV;
}

public byte getA_QFHIGH_DV() {
return A_QFHIGH_DV;
}

public byte getA_QFVOC1() {
return A_QFVOC1;
}

public byte getA_QFVOC10() {
return A_QFVOC10;
}

public byte getA_QFVOC11() {
return A_QFVOC11;
}

public byte getA_QFVOC12() {
return A_QFVOC12;
}

public byte getA_QFVOC13() {
return A_QFVOC13;
}

public byte getA_QFVOC14() {
return A_QFVOC14;
}

public byte getA_QFVOC15() {
return A_QFVOC15;
}

public byte getA_QFVOC2() {
return A_QFVOC2;
}

public byte getA_QFVOC3() {
return A_QFVOC3;
}

public byte getA_QFVOC4() {
return A_QFVOC4;
}

public byte getA_QFVOC5() {
return A_QFVOC5;
}

public byte getA_QFVOC6() {
return A_QFVOC6;
}

public byte getA_QFVOC7() {
return A_QFVOC7;
}

public byte getA_QFVOC8() {
return A_QFVOC8;
}

public byte getA_QFVOC9() {
return A_QFVOC9;
}

public byte getA_QFVOC96() {
return A_QFVOC96;
}

public int getA_QSIGNIN_TM() {
return A_QSIGNIN_TM;
}

public byte getA_QUALOC() {
return A_QUALOC;
}

public byte getA_QUARREL() {
return A_QUARREL;
}

public byte getA_RACEL() {
return A_RACEL;
}

public short getA_RACELO_CODE() {
return A_RACELO_CODE;
}

public byte getA_RACEL_DV() {
return A_RACEL_DV;
}

public byte getA_RACH16_DV() {
return A_RACH16_DV;
}

public byte getA_READDIF() {
return A_READDIF;
}

public byte getA_REASREF() {
return A_REASREF;
}

public int getA_RELATIONSHIPS_TM() {
return A_RELATIONSHIPS_TM;
}

public int getA_RELIGION_TM() {
return A_RELIGION_TM;
}

public byte getA_RELKID() {
return A_RELKID;
}

public byte getA_REMAIL_CODE() {
return A_REMAIL_CODE;
}

public short getA_REMCNTRY1() {
return A_REMCNTRY1;
}

public short getA_REMCNTRY2() {
return A_REMCNTRY2;
}

public short getA_REMCNTRY3() {
return A_REMCNTRY3;
}

public short getA_REMCNTRY4() {
return A_REMCNTRY4;
}

public byte getA_REMIT1() {
return A_REMIT1;
}

public byte getA_REMIT2() {
return A_REMIT2;
}

public byte getA_REMIT3() {
return A_REMIT3;
}

public byte getA_REMIT4() {
return A_REMIT4;
}

public byte getA_REMIT5() {
return A_REMIT5;
}

public short getA_REMITAMT1() {
return A_REMITAMT1;
}

public short getA_REMITAMT2() {
return A_REMITAMT2;
}

public short getA_REMITAMT3() {
return A_REMITAMT3;
}

public short getA_REMITAMT4() {
return A_REMITAMT4;
}

public byte getA_REMITFREQ1() {
return A_REMITFREQ1;
}

public byte getA_REMITFREQ2() {
return A_REMITFREQ2;
}

public byte getA_REMITFREQ3() {
return A_REMITFREQ3;
}

public byte getA_REMITFREQ4() {
return A_REMITFREQ4;
}

public byte getA_REMITREG1() {
return A_REMITREG1;
}

public byte getA_REMITREG2() {
return A_REMITREG2;
}

public byte getA_REMITREG3() {
return A_REMITREG3;
}

public byte getA_REMITREG4() {
return A_REMITREG4;
}

public int getA_REMITTANCE_TM() {
return A_REMITTANCE_TM;
}

public byte getA_REMITUSUAL1() {
return A_REMITUSUAL1;
}

public byte getA_REMITUSUAL2() {
return A_REMITUSUAL2;
}

public byte getA_REMITUSUAL3() {
return A_REMITUSUAL3;
}

public byte getA_REMITUSUAL4() {
return A_REMITUSUAL4;
}

public boolean getA_REMUSAMT1() {
return A_REMUSAMT1;
}

public short getA_REMUSAMT2() {
return A_REMUSAMT2;
}

public short getA_REMUSAMT3() {
return A_REMUSAMT3;
}

public short getA_REMUSAMT4() {
return A_REMUSAMT4;
}

public byte getA_RESATTACKED_1_1() {
return A_RESATTACKED_1_1;
}

public byte getA_RESATTACKED_1_2() {
return A_RESATTACKED_1_2;
}

public byte getA_RESATTACKED_1_3() {
return A_RESATTACKED_1_3;
}

public byte getA_RESATTACKED_1_4() {
return A_RESATTACKED_1_4;
}

public byte getA_RESATTACKED_1_5() {
return A_RESATTACKED_1_5;
}

public byte getA_RESATTACKED_1_6() {
return A_RESATTACKED_1_6;
}

public byte getA_RESATTACKED_1_7() {
return A_RESATTACKED_1_7;
}

public byte getA_RESATTACKED_1_8() {
return A_RESATTACKED_1_8;
}

public byte getA_RESATTACKED_1_9() {
return A_RESATTACKED_1_9;
}

public byte getA_RESATTACKED_1_96() {
return A_RESATTACKED_1_96;
}

public byte getA_RESATTACKED_1_97() {
return A_RESATTACKED_1_97;
}

public byte getA_RESATTACKED_2_1() {
return A_RESATTACKED_2_1;
}

public byte getA_RESATTACKED_2_2() {
return A_RESATTACKED_2_2;
}

public byte getA_RESATTACKED_2_3() {
return A_RESATTACKED_2_3;
}

public byte getA_RESATTACKED_2_4() {
return A_RESATTACKED_2_4;
}

public byte getA_RESATTACKED_2_5() {
return A_RESATTACKED_2_5;
}

public byte getA_RESATTACKED_2_6() {
return A_RESATTACKED_2_6;
}

public byte getA_RESATTACKED_2_7() {
return A_RESATTACKED_2_7;
}

public byte getA_RESATTACKED_2_8() {
return A_RESATTACKED_2_8;
}

public byte getA_RESATTACKED_2_9() {
return A_RESATTACKED_2_9;
}

public byte getA_RESATTACKED_2_96() {
return A_RESATTACKED_2_96;
}

public byte getA_RESATTACKED_2_97() {
return A_RESATTACKED_2_97;
}

public byte getA_RESATTACKED_3_1() {
return A_RESATTACKED_3_1;
}

public byte getA_RESATTACKED_3_2() {
return A_RESATTACKED_3_2;
}

public byte getA_RESATTACKED_3_3() {
return A_RESATTACKED_3_3;
}

public byte getA_RESATTACKED_3_4() {
return A_RESATTACKED_3_4;
}

public byte getA_RESATTACKED_3_5() {
return A_RESATTACKED_3_5;
}

public byte getA_RESATTACKED_3_6() {
return A_RESATTACKED_3_6;
}

public byte getA_RESATTACKED_3_7() {
return A_RESATTACKED_3_7;
}

public byte getA_RESATTACKED_3_8() {
return A_RESATTACKED_3_8;
}

public byte getA_RESATTACKED_3_9() {
return A_RESATTACKED_3_9;
}

public byte getA_RESATTACKED_3_96() {
return A_RESATTACKED_3_96;
}

public byte getA_RESATTACKED_3_97() {
return A_RESATTACKED_3_97;
}

public byte getA_RESATTACKED_4_1() {
return A_RESATTACKED_4_1;
}

public byte getA_RESATTACKED_4_2() {
return A_RESATTACKED_4_2;
}

public byte getA_RESATTACKED_4_3() {
return A_RESATTACKED_4_3;
}

public byte getA_RESATTACKED_4_4() {
return A_RESATTACKED_4_4;
}

public byte getA_RESATTACKED_4_5() {
return A_RESATTACKED_4_5;
}

public byte getA_RESATTACKED_4_6() {
return A_RESATTACKED_4_6;
}

public byte getA_RESATTACKED_4_7() {
return A_RESATTACKED_4_7;
}

public byte getA_RESATTACKED_4_8() {
return A_RESATTACKED_4_8;
}

public byte getA_RESATTACKED_4_9() {
return A_RESATTACKED_4_9;
}

public byte getA_RESATTACKED_4_96() {
return A_RESATTACKED_4_96;
}

public byte getA_RESATTACKED_4_97() {
return A_RESATTACKED_4_97;
}

public byte getA_RESATTACKED_5_1() {
return A_RESATTACKED_5_1;
}

public byte getA_RESATTACKED_5_2() {
return A_RESATTACKED_5_2;
}

public byte getA_RESATTACKED_5_3() {
return A_RESATTACKED_5_3;
}

public byte getA_RESATTACKED_5_4() {
return A_RESATTACKED_5_4;
}

public byte getA_RESATTACKED_5_5() {
return A_RESATTACKED_5_5;
}

public byte getA_RESATTACKED_5_6() {
return A_RESATTACKED_5_6;
}

public byte getA_RESATTACKED_5_7() {
return A_RESATTACKED_5_7;
}

public byte getA_RESATTACKED_5_8() {
return A_RESATTACKED_5_8;
}

public byte getA_RESATTACKED_5_9() {
return A_RESATTACKED_5_9;
}

public byte getA_RESATTACKED_5_96() {
return A_RESATTACKED_5_96;
}

public byte getA_RESATTACKED_5_97() {
return A_RESATTACKED_5_97;
}

public byte getA_RESATTACKED_6_1() {
return A_RESATTACKED_6_1;
}

public byte getA_RESATTACKED_6_2() {
return A_RESATTACKED_6_2;
}

public byte getA_RESATTACKED_6_3() {
return A_RESATTACKED_6_3;
}

public byte getA_RESATTACKED_6_4() {
return A_RESATTACKED_6_4;
}

public byte getA_RESATTACKED_6_5() {
return A_RESATTACKED_6_5;
}

public byte getA_RESATTACKED_6_6() {
return A_RESATTACKED_6_6;
}

public byte getA_RESATTACKED_6_7() {
return A_RESATTACKED_6_7;
}

public byte getA_RESATTACKED_6_8() {
return A_RESATTACKED_6_8;
}

public byte getA_RESATTACKED_6_9() {
return A_RESATTACKED_6_9;
}

public byte getA_RESATTACKED_6_96() {
return A_RESATTACKED_6_96;
}

public byte getA_RESATTACKED_6_97() {
return A_RESATTACKED_6_97;
}

public byte getA_RESATTACKED_7_1() {
return A_RESATTACKED_7_1;
}

public byte getA_RESATTACKED_7_2() {
return A_RESATTACKED_7_2;
}

public byte getA_RESATTACKED_7_3() {
return A_RESATTACKED_7_3;
}

public byte getA_RESATTACKED_7_4() {
return A_RESATTACKED_7_4;
}

public byte getA_RESATTACKED_7_5() {
return A_RESATTACKED_7_5;
}

public byte getA_RESATTACKED_7_6() {
return A_RESATTACKED_7_6;
}

public byte getA_RESATTACKED_7_7() {
return A_RESATTACKED_7_7;
}

public byte getA_RESATTACKED_7_8() {
return A_RESATTACKED_7_8;
}

public byte getA_RESATTACKED_7_9() {
return A_RESATTACKED_7_9;
}

public byte getA_RESATTACKED_7_96() {
return A_RESATTACKED_7_96;
}

public byte getA_RESATTACKED_7_97() {
return A_RESATTACKED_7_97;
}

public byte getA_RESATTACKED_97_1() {
return A_RESATTACKED_97_1;
}

public byte getA_RESATTACKED_97_2() {
return A_RESATTACKED_97_2;
}

public byte getA_RESATTACKED_97_3() {
return A_RESATTACKED_97_3;
}

public byte getA_RESATTACKED_97_4() {
return A_RESATTACKED_97_4;
}

public byte getA_RESATTACKED_97_5() {
return A_RESATTACKED_97_5;
}

public byte getA_RESATTACKED_97_6() {
return A_RESATTACKED_97_6;
}

public byte getA_RESATTACKED_97_7() {
return A_RESATTACKED_97_7;
}

public byte getA_RESATTACKED_97_8() {
return A_RESATTACKED_97_8;
}

public byte getA_RESATTACKED_97_9() {
return A_RESATTACKED_97_9;
}

public byte getA_RESATTACKED_97_96() {
return A_RESATTACKED_97_96;
}

public byte getA_RESATTACKED_97_97() {
return A_RESATTACKED_97_97;
}

public byte getA_RESAVOID_1_1() {
return A_RESAVOID_1_1;
}

public byte getA_RESAVOID_1_2() {
return A_RESAVOID_1_2;
}

public byte getA_RESAVOID_1_3() {
return A_RESAVOID_1_3;
}

public byte getA_RESAVOID_1_4() {
return A_RESAVOID_1_4;
}

public byte getA_RESAVOID_1_5() {
return A_RESAVOID_1_5;
}

public byte getA_RESAVOID_1_6() {
return A_RESAVOID_1_6;
}

public byte getA_RESAVOID_1_7() {
return A_RESAVOID_1_7;
}

public byte getA_RESAVOID_1_8() {
return A_RESAVOID_1_8;
}

public byte getA_RESAVOID_1_9() {
return A_RESAVOID_1_9;
}

public byte getA_RESAVOID_1_96() {
return A_RESAVOID_1_96;
}

public byte getA_RESAVOID_1_97() {
return A_RESAVOID_1_97;
}

public byte getA_RESAVOID_2_1() {
return A_RESAVOID_2_1;
}

public byte getA_RESAVOID_2_2() {
return A_RESAVOID_2_2;
}

public byte getA_RESAVOID_2_3() {
return A_RESAVOID_2_3;
}

public byte getA_RESAVOID_2_4() {
return A_RESAVOID_2_4;
}

public byte getA_RESAVOID_2_5() {
return A_RESAVOID_2_5;
}

public byte getA_RESAVOID_2_6() {
return A_RESAVOID_2_6;
}

public byte getA_RESAVOID_2_7() {
return A_RESAVOID_2_7;
}

public byte getA_RESAVOID_2_8() {
return A_RESAVOID_2_8;
}

public byte getA_RESAVOID_2_9() {
return A_RESAVOID_2_9;
}

public byte getA_RESAVOID_2_96() {
return A_RESAVOID_2_96;
}

public byte getA_RESAVOID_2_97() {
return A_RESAVOID_2_97;
}

public byte getA_RESAVOID_3_1() {
return A_RESAVOID_3_1;
}

public byte getA_RESAVOID_3_2() {
return A_RESAVOID_3_2;
}

public byte getA_RESAVOID_3_3() {
return A_RESAVOID_3_3;
}

public byte getA_RESAVOID_3_4() {
return A_RESAVOID_3_4;
}

public byte getA_RESAVOID_3_5() {
return A_RESAVOID_3_5;
}

public byte getA_RESAVOID_3_6() {
return A_RESAVOID_3_6;
}

public byte getA_RESAVOID_3_7() {
return A_RESAVOID_3_7;
}

public byte getA_RESAVOID_3_8() {
return A_RESAVOID_3_8;
}

public byte getA_RESAVOID_3_9() {
return A_RESAVOID_3_9;
}

public byte getA_RESAVOID_3_96() {
return A_RESAVOID_3_96;
}

public byte getA_RESAVOID_3_97() {
return A_RESAVOID_3_97;
}

public byte getA_RESAVOID_4_1() {
return A_RESAVOID_4_1;
}

public byte getA_RESAVOID_4_2() {
return A_RESAVOID_4_2;
}

public byte getA_RESAVOID_4_3() {
return A_RESAVOID_4_3;
}

public byte getA_RESAVOID_4_4() {
return A_RESAVOID_4_4;
}

public byte getA_RESAVOID_4_5() {
return A_RESAVOID_4_5;
}

public byte getA_RESAVOID_4_6() {
return A_RESAVOID_4_6;
}

public byte getA_RESAVOID_4_7() {
return A_RESAVOID_4_7;
}

public byte getA_RESAVOID_4_8() {
return A_RESAVOID_4_8;
}

public byte getA_RESAVOID_4_9() {
return A_RESAVOID_4_9;
}

public byte getA_RESAVOID_4_96() {
return A_RESAVOID_4_96;
}

public byte getA_RESAVOID_4_97() {
return A_RESAVOID_4_97;
}

public byte getA_RESAVOID_5_1() {
return A_RESAVOID_5_1;
}

public byte getA_RESAVOID_5_2() {
return A_RESAVOID_5_2;
}

public byte getA_RESAVOID_5_3() {
return A_RESAVOID_5_3;
}

public byte getA_RESAVOID_5_4() {
return A_RESAVOID_5_4;
}

public byte getA_RESAVOID_5_5() {
return A_RESAVOID_5_5;
}

public byte getA_RESAVOID_5_6() {
return A_RESAVOID_5_6;
}

public byte getA_RESAVOID_5_7() {
return A_RESAVOID_5_7;
}

public byte getA_RESAVOID_5_8() {
return A_RESAVOID_5_8;
}

public byte getA_RESAVOID_5_9() {
return A_RESAVOID_5_9;
}

public byte getA_RESAVOID_5_96() {
return A_RESAVOID_5_96;
}

public byte getA_RESAVOID_5_97() {
return A_RESAVOID_5_97;
}

public byte getA_RESAVOID_6_1() {
return A_RESAVOID_6_1;
}

public byte getA_RESAVOID_6_2() {
return A_RESAVOID_6_2;
}

public byte getA_RESAVOID_6_3() {
return A_RESAVOID_6_3;
}

public byte getA_RESAVOID_6_4() {
return A_RESAVOID_6_4;
}

public byte getA_RESAVOID_6_5() {
return A_RESAVOID_6_5;
}

public byte getA_RESAVOID_6_6() {
return A_RESAVOID_6_6;
}

public byte getA_RESAVOID_6_7() {
return A_RESAVOID_6_7;
}

public byte getA_RESAVOID_6_8() {
return A_RESAVOID_6_8;
}

public byte getA_RESAVOID_6_9() {
return A_RESAVOID_6_9;
}

public byte getA_RESAVOID_6_96() {
return A_RESAVOID_6_96;
}

public byte getA_RESAVOID_6_97() {
return A_RESAVOID_6_97;
}

public byte getA_RESAVOID_7_1() {
return A_RESAVOID_7_1;
}

public byte getA_RESAVOID_7_2() {
return A_RESAVOID_7_2;
}

public byte getA_RESAVOID_7_3() {
return A_RESAVOID_7_3;
}

public byte getA_RESAVOID_7_4() {
return A_RESAVOID_7_4;
}

public byte getA_RESAVOID_7_5() {
return A_RESAVOID_7_5;
}

public byte getA_RESAVOID_7_6() {
return A_RESAVOID_7_6;
}

public byte getA_RESAVOID_7_7() {
return A_RESAVOID_7_7;
}

public byte getA_RESAVOID_7_8() {
return A_RESAVOID_7_8;
}

public byte getA_RESAVOID_7_9() {
return A_RESAVOID_7_9;
}

public byte getA_RESAVOID_7_96() {
return A_RESAVOID_7_96;
}

public byte getA_RESAVOID_7_97() {
return A_RESAVOID_7_97;
}

public byte getA_RESAVOID_97_1() {
return A_RESAVOID_97_1;
}

public byte getA_RESAVOID_97_2() {
return A_RESAVOID_97_2;
}

public byte getA_RESAVOID_97_3() {
return A_RESAVOID_97_3;
}

public byte getA_RESAVOID_97_4() {
return A_RESAVOID_97_4;
}

public byte getA_RESAVOID_97_5() {
return A_RESAVOID_97_5;
}

public byte getA_RESAVOID_97_6() {
return A_RESAVOID_97_6;
}

public byte getA_RESAVOID_97_7() {
return A_RESAVOID_97_7;
}

public byte getA_RESAVOID_97_8() {
return A_RESAVOID_97_8;
}

public byte getA_RESAVOID_97_9() {
return A_RESAVOID_97_9;
}

public byte getA_RESAVOID_97_96() {
return A_RESAVOID_97_96;
}

public byte getA_RESAVOID_97_97() {
return A_RESAVOID_97_97;
}

public byte getA_RESINSULTED_1_1() {
return A_RESINSULTED_1_1;
}

public byte getA_RESINSULTED_1_2() {
return A_RESINSULTED_1_2;
}

public byte getA_RESINSULTED_1_3() {
return A_RESINSULTED_1_3;
}

public byte getA_RESINSULTED_1_4() {
return A_RESINSULTED_1_4;
}

public byte getA_RESINSULTED_1_5() {
return A_RESINSULTED_1_5;
}

public byte getA_RESINSULTED_1_6() {
return A_RESINSULTED_1_6;
}

public byte getA_RESINSULTED_1_7() {
return A_RESINSULTED_1_7;
}

public byte getA_RESINSULTED_1_8() {
return A_RESINSULTED_1_8;
}

public byte getA_RESINSULTED_1_9() {
return A_RESINSULTED_1_9;
}

public byte getA_RESINSULTED_1_96() {
return A_RESINSULTED_1_96;
}

public byte getA_RESINSULTED_1_97() {
return A_RESINSULTED_1_97;
}

public byte getA_RESINSULTED_2_1() {
return A_RESINSULTED_2_1;
}

public byte getA_RESINSULTED_2_2() {
return A_RESINSULTED_2_2;
}

public byte getA_RESINSULTED_2_3() {
return A_RESINSULTED_2_3;
}

public byte getA_RESINSULTED_2_4() {
return A_RESINSULTED_2_4;
}

public byte getA_RESINSULTED_2_5() {
return A_RESINSULTED_2_5;
}

public byte getA_RESINSULTED_2_6() {
return A_RESINSULTED_2_6;
}

public byte getA_RESINSULTED_2_7() {
return A_RESINSULTED_2_7;
}

public byte getA_RESINSULTED_2_8() {
return A_RESINSULTED_2_8;
}

public byte getA_RESINSULTED_2_9() {
return A_RESINSULTED_2_9;
}

public byte getA_RESINSULTED_2_96() {
return A_RESINSULTED_2_96;
}

public byte getA_RESINSULTED_2_97() {
return A_RESINSULTED_2_97;
}

public byte getA_RESINSULTED_3_1() {
return A_RESINSULTED_3_1;
}

public byte getA_RESINSULTED_3_2() {
return A_RESINSULTED_3_2;
}

public byte getA_RESINSULTED_3_3() {
return A_RESINSULTED_3_3;
}

public byte getA_RESINSULTED_3_4() {
return A_RESINSULTED_3_4;
}

public byte getA_RESINSULTED_3_5() {
return A_RESINSULTED_3_5;
}

public byte getA_RESINSULTED_3_6() {
return A_RESINSULTED_3_6;
}

public byte getA_RESINSULTED_3_7() {
return A_RESINSULTED_3_7;
}

public byte getA_RESINSULTED_3_8() {
return A_RESINSULTED_3_8;
}

public byte getA_RESINSULTED_3_9() {
return A_RESINSULTED_3_9;
}

public byte getA_RESINSULTED_3_96() {
return A_RESINSULTED_3_96;
}

public byte getA_RESINSULTED_3_97() {
return A_RESINSULTED_3_97;
}

public byte getA_RESINSULTED_4_1() {
return A_RESINSULTED_4_1;
}

public byte getA_RESINSULTED_4_2() {
return A_RESINSULTED_4_2;
}

public byte getA_RESINSULTED_4_3() {
return A_RESINSULTED_4_3;
}

public byte getA_RESINSULTED_4_4() {
return A_RESINSULTED_4_4;
}

public byte getA_RESINSULTED_4_5() {
return A_RESINSULTED_4_5;
}

public byte getA_RESINSULTED_4_6() {
return A_RESINSULTED_4_6;
}

public byte getA_RESINSULTED_4_7() {
return A_RESINSULTED_4_7;
}

public byte getA_RESINSULTED_4_8() {
return A_RESINSULTED_4_8;
}

public byte getA_RESINSULTED_4_9() {
return A_RESINSULTED_4_9;
}

public byte getA_RESINSULTED_4_96() {
return A_RESINSULTED_4_96;
}

public byte getA_RESINSULTED_4_97() {
return A_RESINSULTED_4_97;
}

public byte getA_RESINSULTED_5_1() {
return A_RESINSULTED_5_1;
}

public byte getA_RESINSULTED_5_2() {
return A_RESINSULTED_5_2;
}

public byte getA_RESINSULTED_5_3() {
return A_RESINSULTED_5_3;
}

public byte getA_RESINSULTED_5_4() {
return A_RESINSULTED_5_4;
}

public byte getA_RESINSULTED_5_5() {
return A_RESINSULTED_5_5;
}

public byte getA_RESINSULTED_5_6() {
return A_RESINSULTED_5_6;
}

public byte getA_RESINSULTED_5_7() {
return A_RESINSULTED_5_7;
}

public byte getA_RESINSULTED_5_8() {
return A_RESINSULTED_5_8;
}

public byte getA_RESINSULTED_5_9() {
return A_RESINSULTED_5_9;
}

public byte getA_RESINSULTED_5_96() {
return A_RESINSULTED_5_96;
}

public byte getA_RESINSULTED_5_97() {
return A_RESINSULTED_5_97;
}

public byte getA_RESINSULTED_6_1() {
return A_RESINSULTED_6_1;
}

public byte getA_RESINSULTED_6_2() {
return A_RESINSULTED_6_2;
}

public byte getA_RESINSULTED_6_3() {
return A_RESINSULTED_6_3;
}

public byte getA_RESINSULTED_6_4() {
return A_RESINSULTED_6_4;
}

public byte getA_RESINSULTED_6_5() {
return A_RESINSULTED_6_5;
}

public byte getA_RESINSULTED_6_6() {
return A_RESINSULTED_6_6;
}

public byte getA_RESINSULTED_6_7() {
return A_RESINSULTED_6_7;
}

public byte getA_RESINSULTED_6_8() {
return A_RESINSULTED_6_8;
}

public byte getA_RESINSULTED_6_9() {
return A_RESINSULTED_6_9;
}

public byte getA_RESINSULTED_6_96() {
return A_RESINSULTED_6_96;
}

public byte getA_RESINSULTED_6_97() {
return A_RESINSULTED_6_97;
}

public byte getA_RESINSULTED_7_1() {
return A_RESINSULTED_7_1;
}

public byte getA_RESINSULTED_7_2() {
return A_RESINSULTED_7_2;
}

public byte getA_RESINSULTED_7_3() {
return A_RESINSULTED_7_3;
}

public byte getA_RESINSULTED_7_4() {
return A_RESINSULTED_7_4;
}

public byte getA_RESINSULTED_7_5() {
return A_RESINSULTED_7_5;
}

public byte getA_RESINSULTED_7_6() {
return A_RESINSULTED_7_6;
}

public byte getA_RESINSULTED_7_7() {
return A_RESINSULTED_7_7;
}

public byte getA_RESINSULTED_7_8() {
return A_RESINSULTED_7_8;
}

public byte getA_RESINSULTED_7_9() {
return A_RESINSULTED_7_9;
}

public byte getA_RESINSULTED_7_96() {
return A_RESINSULTED_7_96;
}

public byte getA_RESINSULTED_7_97() {
return A_RESINSULTED_7_97;
}

public byte getA_RESINSULTED_97_1() {
return A_RESINSULTED_97_1;
}

public byte getA_RESINSULTED_97_2() {
return A_RESINSULTED_97_2;
}

public byte getA_RESINSULTED_97_3() {
return A_RESINSULTED_97_3;
}

public byte getA_RESINSULTED_97_4() {
return A_RESINSULTED_97_4;
}

public byte getA_RESINSULTED_97_5() {
return A_RESINSULTED_97_5;
}

public byte getA_RESINSULTED_97_6() {
return A_RESINSULTED_97_6;
}

public byte getA_RESINSULTED_97_7() {
return A_RESINSULTED_97_7;
}

public byte getA_RESINSULTED_97_8() {
return A_RESINSULTED_97_8;
}

public byte getA_RESINSULTED_97_9() {
return A_RESINSULTED_97_9;
}

public byte getA_RESINSULTED_97_96() {
return A_RESINSULTED_97_96;
}

public byte getA_RESINSULTED_97_97() {
return A_RESINSULTED_97_97;
}

public byte getA_RESJOBDENY1() {
return A_RESJOBDENY1;
}

public byte getA_RESJOBDENY2() {
return A_RESJOBDENY2;
}

public byte getA_RESJOBDENY3() {
return A_RESJOBDENY3;
}

public byte getA_RESJOBDENY4() {
return A_RESJOBDENY4;
}

public byte getA_RESJOBDENY5() {
return A_RESJOBDENY5;
}

public byte getA_RESJOBDENY6() {
return A_RESJOBDENY6;
}

public byte getA_RESJOBDENY7() {
return A_RESJOBDENY7;
}

public byte getA_RESJOBDENY8() {
return A_RESJOBDENY8;
}

public byte getA_RESJOBDENY9() {
return A_RESJOBDENY9;
}

public byte getA_RESJOBDENY96() {
return A_RESJOBDENY96;
}

public byte getA_RESJOBDENY97() {
return A_RESJOBDENY97;
}

public boolean getA_RESPF16() {
return A_RESPF16;
}

public boolean getA_RESPF16_DV() {
return A_RESPF16_DV;
}

public boolean getA_RESPM16() {
return A_RESPM16;
}

public boolean getA_RESPM16_DV() {
return A_RESPM16_DV;
}

public byte getA_RESPROMODENY1() {
return A_RESPROMODENY1;
}

public byte getA_RESPROMODENY2() {
return A_RESPROMODENY2;
}

public byte getA_RESPROMODENY3() {
return A_RESPROMODENY3;
}

public byte getA_RESPROMODENY4() {
return A_RESPROMODENY4;
}

public byte getA_RESPROMODENY5() {
return A_RESPROMODENY5;
}

public byte getA_RESPROMODENY6() {
return A_RESPROMODENY6;
}

public byte getA_RESPROMODENY7() {
return A_RESPROMODENY7;
}

public byte getA_RESPROMODENY8() {
return A_RESPROMODENY8;
}

public byte getA_RESPROMODENY9() {
return A_RESPROMODENY9;
}

public byte getA_RESPROMODENY96() {
return A_RESPROMODENY96;
}

public byte getA_RESPROMODENY97() {
return A_RESPROMODENY97;
}

public byte getA_RESTRAINDENY1() {
return A_RESTRAINDENY1;
}

public byte getA_RESTRAINDENY2() {
return A_RESTRAINDENY2;
}

public byte getA_RESTRAINDENY3() {
return A_RESTRAINDENY3;
}

public byte getA_RESTRAINDENY4() {
return A_RESTRAINDENY4;
}

public byte getA_RESTRAINDENY5() {
return A_RESTRAINDENY5;
}

public byte getA_RESTRAINDENY6() {
return A_RESTRAINDENY6;
}

public byte getA_RESTRAINDENY7() {
return A_RESTRAINDENY7;
}

public byte getA_RESTRAINDENY8() {
return A_RESTRAINDENY8;
}

public byte getA_RESTRAINDENY9() {
return A_RESTRAINDENY9;
}

public byte getA_RESTRAINDENY96() {
return A_RESTRAINDENY96;
}

public byte getA_RESTRAINDENY97() {
return A_RESTRAINDENY97;
}

public byte getA_RESUNSAFE_1_1() {
return A_RESUNSAFE_1_1;
}

public byte getA_RESUNSAFE_1_2() {
return A_RESUNSAFE_1_2;
}

public byte getA_RESUNSAFE_1_3() {
return A_RESUNSAFE_1_3;
}

public byte getA_RESUNSAFE_1_4() {
return A_RESUNSAFE_1_4;
}

public byte getA_RESUNSAFE_1_5() {
return A_RESUNSAFE_1_5;
}

public byte getA_RESUNSAFE_1_6() {
return A_RESUNSAFE_1_6;
}

public byte getA_RESUNSAFE_1_7() {
return A_RESUNSAFE_1_7;
}

public byte getA_RESUNSAFE_1_8() {
return A_RESUNSAFE_1_8;
}

public byte getA_RESUNSAFE_1_9() {
return A_RESUNSAFE_1_9;
}

public byte getA_RESUNSAFE_1_96() {
return A_RESUNSAFE_1_96;
}

public byte getA_RESUNSAFE_1_97() {
return A_RESUNSAFE_1_97;
}

public byte getA_RESUNSAFE_2_1() {
return A_RESUNSAFE_2_1;
}

public byte getA_RESUNSAFE_2_2() {
return A_RESUNSAFE_2_2;
}

public byte getA_RESUNSAFE_2_3() {
return A_RESUNSAFE_2_3;
}

public byte getA_RESUNSAFE_2_4() {
return A_RESUNSAFE_2_4;
}

public byte getA_RESUNSAFE_2_5() {
return A_RESUNSAFE_2_5;
}

public byte getA_RESUNSAFE_2_6() {
return A_RESUNSAFE_2_6;
}

public byte getA_RESUNSAFE_2_7() {
return A_RESUNSAFE_2_7;
}

public byte getA_RESUNSAFE_2_8() {
return A_RESUNSAFE_2_8;
}

public byte getA_RESUNSAFE_2_9() {
return A_RESUNSAFE_2_9;
}

public byte getA_RESUNSAFE_2_96() {
return A_RESUNSAFE_2_96;
}

public byte getA_RESUNSAFE_2_97() {
return A_RESUNSAFE_2_97;
}

public byte getA_RESUNSAFE_3_1() {
return A_RESUNSAFE_3_1;
}

public byte getA_RESUNSAFE_3_2() {
return A_RESUNSAFE_3_2;
}

public byte getA_RESUNSAFE_3_3() {
return A_RESUNSAFE_3_3;
}

public byte getA_RESUNSAFE_3_4() {
return A_RESUNSAFE_3_4;
}

public byte getA_RESUNSAFE_3_5() {
return A_RESUNSAFE_3_5;
}

public byte getA_RESUNSAFE_3_6() {
return A_RESUNSAFE_3_6;
}

public byte getA_RESUNSAFE_3_7() {
return A_RESUNSAFE_3_7;
}

public byte getA_RESUNSAFE_3_8() {
return A_RESUNSAFE_3_8;
}

public byte getA_RESUNSAFE_3_9() {
return A_RESUNSAFE_3_9;
}

public byte getA_RESUNSAFE_3_96() {
return A_RESUNSAFE_3_96;
}

public byte getA_RESUNSAFE_3_97() {
return A_RESUNSAFE_3_97;
}

public byte getA_RESUNSAFE_4_1() {
return A_RESUNSAFE_4_1;
}

public byte getA_RESUNSAFE_4_2() {
return A_RESUNSAFE_4_2;
}

public byte getA_RESUNSAFE_4_3() {
return A_RESUNSAFE_4_3;
}

public byte getA_RESUNSAFE_4_4() {
return A_RESUNSAFE_4_4;
}

public byte getA_RESUNSAFE_4_5() {
return A_RESUNSAFE_4_5;
}

public byte getA_RESUNSAFE_4_6() {
return A_RESUNSAFE_4_6;
}

public byte getA_RESUNSAFE_4_7() {
return A_RESUNSAFE_4_7;
}

public byte getA_RESUNSAFE_4_8() {
return A_RESUNSAFE_4_8;
}

public byte getA_RESUNSAFE_4_9() {
return A_RESUNSAFE_4_9;
}

public byte getA_RESUNSAFE_4_96() {
return A_RESUNSAFE_4_96;
}

public byte getA_RESUNSAFE_4_97() {
return A_RESUNSAFE_4_97;
}

public byte getA_RESUNSAFE_5_1() {
return A_RESUNSAFE_5_1;
}

public byte getA_RESUNSAFE_5_2() {
return A_RESUNSAFE_5_2;
}

public byte getA_RESUNSAFE_5_3() {
return A_RESUNSAFE_5_3;
}

public byte getA_RESUNSAFE_5_4() {
return A_RESUNSAFE_5_4;
}

public byte getA_RESUNSAFE_5_5() {
return A_RESUNSAFE_5_5;
}

public byte getA_RESUNSAFE_5_6() {
return A_RESUNSAFE_5_6;
}

public byte getA_RESUNSAFE_5_7() {
return A_RESUNSAFE_5_7;
}

public byte getA_RESUNSAFE_5_8() {
return A_RESUNSAFE_5_8;
}

public byte getA_RESUNSAFE_5_9() {
return A_RESUNSAFE_5_9;
}

public byte getA_RESUNSAFE_5_96() {
return A_RESUNSAFE_5_96;
}

public byte getA_RESUNSAFE_5_97() {
return A_RESUNSAFE_5_97;
}

public byte getA_RESUNSAFE_6_1() {
return A_RESUNSAFE_6_1;
}

public byte getA_RESUNSAFE_6_2() {
return A_RESUNSAFE_6_2;
}

public byte getA_RESUNSAFE_6_3() {
return A_RESUNSAFE_6_3;
}

public byte getA_RESUNSAFE_6_4() {
return A_RESUNSAFE_6_4;
}

public byte getA_RESUNSAFE_6_5() {
return A_RESUNSAFE_6_5;
}

public byte getA_RESUNSAFE_6_6() {
return A_RESUNSAFE_6_6;
}

public byte getA_RESUNSAFE_6_7() {
return A_RESUNSAFE_6_7;
}

public byte getA_RESUNSAFE_6_8() {
return A_RESUNSAFE_6_8;
}

public byte getA_RESUNSAFE_6_9() {
return A_RESUNSAFE_6_9;
}

public byte getA_RESUNSAFE_6_96() {
return A_RESUNSAFE_6_96;
}

public byte getA_RESUNSAFE_6_97() {
return A_RESUNSAFE_6_97;
}

public byte getA_RESUNSAFE_7_1() {
return A_RESUNSAFE_7_1;
}

public byte getA_RESUNSAFE_7_2() {
return A_RESUNSAFE_7_2;
}

public byte getA_RESUNSAFE_7_3() {
return A_RESUNSAFE_7_3;
}

public byte getA_RESUNSAFE_7_4() {
return A_RESUNSAFE_7_4;
}

public byte getA_RESUNSAFE_7_5() {
return A_RESUNSAFE_7_5;
}

public byte getA_RESUNSAFE_7_6() {
return A_RESUNSAFE_7_6;
}

public byte getA_RESUNSAFE_7_7() {
return A_RESUNSAFE_7_7;
}

public byte getA_RESUNSAFE_7_8() {
return A_RESUNSAFE_7_8;
}

public byte getA_RESUNSAFE_7_9() {
return A_RESUNSAFE_7_9;
}

public byte getA_RESUNSAFE_7_96() {
return A_RESUNSAFE_7_96;
}

public byte getA_RESUNSAFE_7_97() {
return A_RESUNSAFE_7_97;
}

public byte getA_RESUNSAFE_97_1() {
return A_RESUNSAFE_97_1;
}

public byte getA_RESUNSAFE_97_2() {
return A_RESUNSAFE_97_2;
}

public byte getA_RESUNSAFE_97_3() {
return A_RESUNSAFE_97_3;
}

public byte getA_RESUNSAFE_97_4() {
return A_RESUNSAFE_97_4;
}

public byte getA_RESUNSAFE_97_5() {
return A_RESUNSAFE_97_5;
}

public byte getA_RESUNSAFE_97_6() {
return A_RESUNSAFE_97_6;
}

public byte getA_RESUNSAFE_97_7() {
return A_RESUNSAFE_97_7;
}

public byte getA_RESUNSAFE_97_8() {
return A_RESUNSAFE_97_8;
}

public byte getA_RESUNSAFE_97_9() {
return A_RESUNSAFE_97_9;
}

public byte getA_RESUNSAFE_97_96() {
return A_RESUNSAFE_97_96;
}

public byte getA_RESUNSAFE_97_97() {
return A_RESUNSAFE_97_97;
}

public byte getA_RETDATEM() {
return A_RETDATEM;
}

public short getA_RETDATEY() {
return A_RETDATEY;
}

public byte getA_RHLAND_CODE() {
return A_RHLAND_CODE;
}

public byte getA_RPHMOB_CODE() {
return A_RPHMOB_CODE;
}

public byte getA_RPHWRK_CODE() {
return A_RPHWRK_CODE;
}

public byte getA_RULESKID() {
return A_RULESKID;
}

public byte getA_SAMPST() {
return A_SAMPST;
}

public byte getA_SAMSCH() {
return A_SAMSCH;
}

public byte getA_SCDASCOH_DV() {
return A_SCDASCOH_DV;
}

public byte getA_SCDASSAT_DV() {
return A_SCDASSAT_DV;
}

public short getA_SCDOBY4() {
return A_SCDOBY4;
}

public byte getA_SCEND() {
return A_SCEND;
}

public byte getA_SCENV_BCON() {
return A_SCENV_BCON;
}

public byte getA_SCENV_BRIT() {
return A_SCENV_BRIT;
}

public byte getA_SCENV_CCLS() {
return A_SCENV_CCLS;
}

public byte getA_SCENV_CFIT() {
return A_SCENV_CFIT;
}

public byte getA_SCENV_CHWO() {
return A_SCENV_CHWO;
}

public byte getA_SCENV_CRLF() {
return A_SCENV_CRLF;
}

public byte getA_SCENV_DSTR() {
return A_SCENV_DSTR;
}

public byte getA_SCENV_EXAG() {
return A_SCENV_EXAG;
}

public byte getA_SCENV_FTST() {
return A_SCENV_FTST;
}

public byte getA_SCENV_FUTR() {
return A_SCENV_FUTR;
}

public byte getA_SCENV_GRN() {
return A_SCENV_GRN;
}

public byte getA_SCENV_PMRE() {
return A_SCENV_PMRE;
}

public byte getA_SCFLAG_DV() {
return A_SCFLAG_DV;
}

public byte getA_SCGHQ1_DV() {
return A_SCGHQ1_DV;
}

public byte getA_SCGHQ2_DV() {
return A_SCGHQ2_DV;
}

public byte getA_SCGHQA() {
return A_SCGHQA;
}

public byte getA_SCGHQB() {
return A_SCGHQB;
}

public byte getA_SCGHQC() {
return A_SCGHQC;
}

public byte getA_SCGHQD() {
return A_SCGHQD;
}

public byte getA_SCGHQE() {
return A_SCGHQE;
}

public byte getA_SCGHQF() {
return A_SCGHQF;
}

public byte getA_SCGHQG() {
return A_SCGHQG;
}

public byte getA_SCGHQH() {
return A_SCGHQH;
}

public byte getA_SCGHQI() {
return A_SCGHQI;
}

public byte getA_SCGHQJ() {
return A_SCGHQJ;
}

public byte getA_SCGHQK() {
return A_SCGHQK;
}

public byte getA_SCGHQL() {
return A_SCGHQL;
}

public byte getA_SCHLLOC() {
return A_SCHLLOC;
}

public byte getA_SCHOOL() {
return A_SCHOOL;
}

public byte getA_SCHRS_SLPH() {
return A_SCHRS_SLPH;
}

public byte getA_SCHRS_SLPM() {
return A_SCHRS_SLPM;
}

public byte getA_SCLFSAT1() {
return A_SCLFSAT1;
}

public byte getA_SCLFSAT2() {
return A_SCLFSAT2;
}

public byte getA_SCLFSAT7() {
return A_SCLFSAT7;
}

public byte getA_SCLFSATO() {
return A_SCLFSATO;
}

public byte getA_SCMED_SLP() {
return A_SCMED_SLP;
}

public byte getA_SCMOLWP() {
return A_SCMOLWP;
}

public byte getA_SCOPECL200() {
return A_SCOPECL200;
}

public byte getA_SCOPECL30() {
return A_SCOPECL30;
}

public byte getA_SCOPNGBHA() {
return A_SCOPNGBHA;
}

public byte getA_SCOPNGBHB() {
return A_SCOPNGBHB;
}

public byte getA_SCOPNGBHC() {
return A_SCOPNGBHC;
}

public byte getA_SCOPNGBHD() {
return A_SCOPNGBHD;
}

public byte getA_SCOPNGBHE() {
return A_SCOPNGBHE;
}

public byte getA_SCOPNGBHF() {
return A_SCOPNGBHF;
}

public byte getA_SCOPNGBHG() {
return A_SCOPNGBHG;
}

public byte getA_SCOPNGBHH() {
return A_SCOPNGBHH;
}

public byte getA_SCPAROUTINT() {
return A_SCPAROUTINT;
}

public byte getA_SCRELHAPPY() {
return A_SCRELHAPPY;
}

public byte getA_SCRELPARAR() {
return A_SCRELPARAR;
}

public byte getA_SCRELPARCD() {
return A_SCRELPARCD;
}

public byte getA_SCRELPARDS() {
return A_SCRELPARDS;
}

public byte getA_SCRELPAREI() {
return A_SCRELPAREI;
}

public byte getA_SCRELPARIR() {
return A_SCRELPARIR;
}

public byte getA_SCRELPARKS() {
return A_SCRELPARKS;
}

public byte getA_SCRELPARRG() {
return A_SCRELPARRG;
}

public byte getA_SCRELPARWT() {
return A_SCRELPARWT;
}

public byte getA_SCRISKA() {
return A_SCRISKA;
}

public byte getA_SCRISKB() {
return A_SCRISKB;
}

public byte getA_SCSEX() {
return A_SCSEX;
}

public byte getA_SCSLP_QUAL() {
return A_SCSLP_QUAL;
}

public byte getA_SCTRUST() {
return A_SCTRUST;
}

public byte getA_SCTSLP_30M() {
return A_SCTSLP_30M;
}

public byte getA_SCTSLP_CGH() {
return A_SCTSLP_CGH;
}

public byte getA_SCTSLP_WAK() {
return A_SCTSLP_WAK;
}

public byte getA_SCTSTA_AWK() {
return A_SCTSTA_AWK;
}

public byte getA_SCWEMWBA() {
return A_SCWEMWBA;
}

public byte getA_SCWEMWBB() {
return A_SCWEMWBB;
}

public byte getA_SCWEMWBC() {
return A_SCWEMWBC;
}

public byte getA_SCWEMWBD() {
return A_SCWEMWBD;
}

public byte getA_SCWEMWBE() {
return A_SCWEMWBE;
}

public byte getA_SCWEMWBF() {
return A_SCWEMWBF;
}

public byte getA_SCWEMWBG() {
return A_SCWEMWBG;
}

public int getA_SECJOB_TM() {
return A_SECJOB_TM;
}

protected double A_SEEARNGRS_DV() {
return A_SEEARNGRS_DV;
}

public byte getA_SEEARNGRS_IF() {
return A_SEEARNGRS_IF;
}

protected double A_SEEARNNET_DV() {
return A_SEEARNNET_DV;
}

public byte getA_SEEKID() {
return A_SEEKID;
}

public int getA_SELFEMP_TM() {
return A_SELFEMP_TM;
}

public boolean getA_SEX() {
return A_SEX;
}

public byte getA_SEX_DV() {
return A_SEX_DV;
}

public byte getA_SF1() {
return A_SF1;
}

protected double A_SF12MCS_DV() {
return A_SF12MCS_DV;
}

protected double A_SF12PCS_DV() {
return A_SF12PCS_DV;
}

public byte getA_SF2A() {
return A_SF2A;
}

public byte getA_SF2B() {
return A_SF2B;
}

public byte getA_SF3A() {
return A_SF3A;
}

public byte getA_SF3B() {
return A_SF3B;
}

public byte getA_SF4A() {
return A_SF4A;
}

public byte getA_SF4B() {
return A_SF4B;
}

public byte getA_SF5() {
return A_SF5;
}

public byte getA_SF6A() {
return A_SF6A;
}

public byte getA_SF6B() {
return A_SF6B;
}

public byte getA_SF6C() {
return A_SF6C;
}

public byte getA_SF7() {
return A_SF7;
}

public boolean getA_SINGLE_DV() {
return A_SINGLE_DV;
}

public byte getA_SLAPKID() {
return A_SLAPKID;
}

public byte getA_SMAID() {
return A_SMAID;
}

public byte getA_SOCIALKID() {
return A_SOCIALKID;
}

public byte getA_SPAID() {
return A_SPAID;
}

public byte getA_SPKDIF() {
return A_SPKDIF;
}

public int getA_SPPID() {
return A_SPPID;
}

public byte getA_SPPNO() {
return A_SPPNO;
}

public int getA_STABLE_TM() {
return A_STABLE_TM;
}

public short getA_STRATA() {
return A_STRATA;
}

public byte getA_SUSP() {
return A_SUSP;
}

public byte getA_SWEMWBS_DV() {
return A_SWEMWBS_DV;
}

public byte getA_TALKMATTER() {
return A_TALKMATTER;
}

public byte getA_TELDIF() {
return A_TELDIF;
}

public byte getA_TRAINDENY() {
return A_TRAINDENY;
}

public byte getA_UKBORN() {
return A_UKBORN;
}

public byte getA_UNDQUS() {
return A_UNDQUS;
}

public byte getA_UNSAFEW11() {
return A_UNSAFEW11;
}

public byte getA_UNSAFEW12() {
return A_UNSAFEW12;
}

public byte getA_UNSAFEW13() {
return A_UNSAFEW13;
}

public byte getA_UNSAFEW14() {
return A_UNSAFEW14;
}

public byte getA_UNSAFEW15() {
return A_UNSAFEW15;
}

public byte getA_UNSAFEW16() {
return A_UNSAFEW16;
}

public byte getA_UNSAFEW17() {
return A_UNSAFEW17;
}

public byte getA_UNSAFEW196() {
return A_UNSAFEW196;
}

public byte getA_UNSAFEW197() {
return A_UNSAFEW197;
}

public byte getA_UNSAFE_DV() {
return A_UNSAFE_DV;
}

public boolean getA_URBAN_DV() {
return A_URBAN_DV;
}

public byte getA_VOTE1() {
return A_VOTE1;
}

public byte getA_VOTE2() {
return A_VOTE2;
}

public byte getA_VOTE3() {
return A_VOTE3;
}

public byte getA_VOTE4() {
return A_VOTE4;
}

public byte getA_VOTE5() {
return A_VOTE5;
}

public byte getA_VOTE6() {
return A_VOTE6;
}

public byte getA_WEKID() {
return A_WEKID;
}

public byte getA_WLSH1() {
return A_WLSH1;
}

public byte getA_WLSH2() {
return A_WLSH2;
}

public byte getA_WLSH3() {
return A_WLSH3;
}

public byte getA_WLSH4() {
return A_WLSH4;
}

public byte getA_WLSH96() {
return A_WLSH96;
}

public byte getA_WLSHUA() {
return A_WLSHUA;
}

public byte getA_WLSHUB() {
return A_WLSHUB;
}

public byte getA_WLSHUC() {
return A_WLSHUC;
}

public byte getA_WLSHUD() {
return A_WLSHUD;
}

public byte getA_WLSHUE() {
return A_WLSHUE;
}

public short getA_WORKDIS() {
return A_WORKDIS;
}

public byte getA_WORKTRAV() {
return A_WORKTRAV;
}

public byte getA_XPMOVE() {
return A_XPMOVE;
}

public byte getA_XTRA5MIN_DV() {
return A_XTRA5MIN_DV;
}

public byte getA_YELLKID() {
return A_YELLKID;
}

public byte getA_YNLP14() {
return A_YNLP14;
}

public short getA_YR2UK4() {
return A_YR2UK4;
}

public US_Wave1_HHOLD_Record(String line) {
s = line.split("\t");
initPIDP(s[0]);
initA_HIDP(s[1]);
initA_PNO(s[2]);
initA_HHORIG(s[3]);
initA_MEMORIG(s[4]);
initA_PSU(s[5]);
initA_STRATA(s[6]);
initA_SAMPST(s[7]);
initA_MONTH(s[8]);
initA_IVFIO(s[9]);
initA_IOUTCOME(s[10]);
initA_SEX(s[11]);
initA_DVAGE(s[12]);
initA_BIRTHY(s[13]);
initA_ISTRTDATD(s[14]);
initA_ISTRTDATM(s[15]);
initA_ISTRTDATY(s[16]);
initA_MVEVER(s[17]);
initA_MVMNTH(s[18]);
initA_MVYR(s[19]);
initA_LKMOVE(s[20]);
initA_XPMOVE(s[21]);
initA_JBSTAT(s[22]);
initA_MLSTATCHK(s[23]);
initA_MLSTAT(s[24]);
initA_UKBORN(s[25]);
initA_PLBORNC(s[26]);
initA_YR2UK4(s[27]);
initA_CITZN1(s[28]);
initA_CITZN2(s[29]);
initA_CITZN3(s[30]);
initA_QFHIGH(s[31]);
initA_QUALOC(s[32]);
initA_QFVOC1(s[33]);
initA_QFVOC2(s[34]);
initA_QFVOC3(s[35]);
initA_QFVOC4(s[36]);
initA_QFVOC5(s[37]);
initA_QFVOC6(s[38]);
initA_QFVOC7(s[39]);
initA_QFVOC8(s[40]);
initA_QFVOC9(s[41]);
initA_QFVOC10(s[42]);
initA_QFVOC11(s[43]);
initA_QFVOC12(s[44]);
initA_QFVOC13(s[45]);
initA_QFVOC14(s[46]);
initA_QFVOC15(s[47]);
initA_QFVOC96(s[48]);
initA_SCHOOL(s[49]);
initA_SCEND(s[50]);
initA_SCHLLOC(s[51]);
initA_FENOW(s[52]);
initA_FEEND(s[53]);
initA_EDTYPE(s[54]);
initA_EDASP(s[55]);
initA_FEDLIK(s[56]);
initA_FEDNT(s[57]);
initA_WLSH1(s[58]);
initA_WLSH2(s[59]);
initA_WLSH3(s[60]);
initA_WLSH4(s[61]);
initA_WLSH96(s[62]);
initA_WLSHUA(s[63]);
initA_WLSHUB(s[64]);
initA_WLSHUC(s[65]);
initA_WLSHUD(s[66]);
initA_WLSHUE(s[67]);
initA_PAJU(s[68]);
initA_MAJU(s[69]);
initA_PACOB(s[70]);
initA_PAYRUK(s[71]);
initA_PAYRUK1(s[72]);
initA_MACOB(s[73]);
initA_MAYRUK(s[74]);
initA_MAYRUK1(s[75]);
initA_PGPROB(s[76]);
initA_PGMROB(s[77]);
initA_MGPROB(s[78]);
initA_MGMROB(s[79]);
initA_PAEDQF(s[80]);
initA_MAEDQF(s[81]);
initA_LVAG16(s[82]);
initA_AGELH(s[83]);
initA_LVAG14(s[84]);
initA_YNLP14(s[85]);
initA_NATID1(s[86]);
initA_NATID2(s[87]);
initA_NATID3(s[88]);
initA_NATID4(s[89]);
initA_NATID5(s[90]);
initA_NATID6(s[91]);
initA_NATID97(s[92]);
initA_RACEL(s[93]);
initA_RACELO_CODE(s[94]);
initA_PAID(s[95]);
initA_SPAID(s[96]);
initA_MAID(s[97]);
initA_SMAID(s[98]);
initA_BRITID(s[99]);
initA_ENGLANG(s[100]);
initA_ENGSPK(s[101]);
initA_SPKDIF(s[102]);
initA_ENGTEL(s[103]);
initA_TELDIF(s[104]);
initA_ENGREAD(s[105]);
initA_READDIF(s[106]);
initA_ENGFORM(s[107]);
initA_FORMDIF(s[108]);
initA_OPRLG(s[109]);
initA_OPRLG0(s[110]);
initA_OPRLG0NI(s[111]);
initA_OPRLG1(s[112]);
initA_NIREL(s[113]);
initA_NIACT(s[114]);
initA_OPRLG2(s[115]);
initA_OPRLG3(s[116]);
initA_MABROAD(s[117]);
initA_MNABROAD(s[118]);
initA_MINDIRECT(s[119]);
initA_MNOTHERC(s[120]);
initA_MRETURNED(s[121]);
initA_MLIVED(s[122]);
initA_MNLIVED(s[123]);
initA_MOVEAGE(s[124]);
initA_MNMOVES(s[125]);
initA_MLIVEDIST(s[126]);
initA_MLIVEDIST5(s[127]);
initA_MLIVEDISTF(s[128]);
initA_LCMARM(s[129]);
initA_LCMARY4(s[130]);
initA_MPNO(s[131]);
initA_LCMCOH(s[132]);
initA_LCMCBM(s[133]);
initA_LCMCBY4(s[134]);
initA_LCMSPM(s[135]);
initA_LCMSPY4(s[136]);
initA_NMAR(s[137]);
initA_LCOH(s[138]);
initA_LNCOH(s[139]);
initA_LADOPT(s[140]);
initA_LNADOPT(s[141]);
initA_LPRNT(s[142]);
initA_LNPRNT(s[143]);
initA_LCHMOR(s[144]);
initA_LCHMORN(s[145]);
initA_SF1(s[146]);
initA_SF2A(s[147]);
initA_SF2B(s[148]);
initA_SF3A(s[149]);
initA_SF3B(s[150]);
initA_SF4A(s[151]);
initA_SF4B(s[152]);
initA_SF5(s[153]);
initA_SF6A(s[154]);
initA_SF6B(s[155]);
initA_SF6C(s[156]);
initA_SF7(s[157]);
initA_HLHT(s[158]);
initA_HLHTF(s[159]);
initA_HLHTI(s[160]);
initA_HLHTC(s[161]);
initA_HLWT(s[162]);
initA_HLWTS(s[163]);
initA_HLWTP(s[164]);
initA_HLWTK(s[165]);
initA_HLWTE(s[166]);
initA_HLWTL(s[167]);
initA_HEALTH(s[168]);
initA_DISDIF1(s[169]);
initA_DISDIF2(s[170]);
initA_DISDIF3(s[171]);
initA_DISDIF4(s[172]);
initA_DISDIF5(s[173]);
initA_DISDIF6(s[174]);
initA_DISDIF7(s[175]);
initA_DISDIF8(s[176]);
initA_DISDIF9(s[177]);
initA_DISDIF10(s[178]);
initA_DISDIF11(s[179]);
initA_DISDIF12(s[180]);
initA_DISDIF96(s[181]);
initA_HCOND1(s[182]);
initA_HCOND2(s[183]);
initA_HCOND3(s[184]);
initA_HCOND4(s[185]);
initA_HCOND5(s[186]);
initA_HCOND6(s[187]);
initA_HCOND7(s[188]);
initA_HCOND8(s[189]);
initA_HCOND9(s[190]);
initA_HCOND10(s[191]);
initA_HCOND11(s[192]);
initA_HCOND12(s[193]);
initA_HCOND13(s[194]);
initA_HCOND14(s[195]);
initA_HCOND15(s[196]);
initA_HCOND16(s[197]);
initA_HCOND17(s[198]);
initA_HCOND96(s[199]);
initA_HCONDS01(s[200]);
initA_HCONDS02(s[201]);
initA_HCONDS03(s[202]);
initA_HCONDS04(s[203]);
initA_HCONDS05(s[204]);
initA_HCONDS06(s[205]);
initA_HCONDS07(s[206]);
initA_HCONDS08(s[207]);
initA_HCONDS09(s[208]);
initA_HCONDS10(s[209]);
initA_HCONDS11(s[210]);
initA_HCONDS12(s[211]);
initA_HCONDS13(s[212]);
initA_HCONDS14(s[213]);
initA_HCONDS15(s[214]);
initA_HCONDS16(s[215]);
initA_HCONDS17(s[216]);
initA_HCONDA01(s[217]);
initA_HCONDA02(s[218]);
initA_HCONDA03(s[219]);
initA_HCONDA04(s[220]);
initA_HCONDA05(s[221]);
initA_HCONDA06(s[222]);
initA_HCONDA07(s[223]);
initA_HCONDA08(s[224]);
initA_HCONDA09(s[225]);
initA_HCONDA10(s[226]);
initA_HCONDA11(s[227]);
initA_HCONDA12(s[228]);
initA_HCONDA13(s[229]);
initA_HCONDA14(s[230]);
initA_HCONDA15(s[231]);
initA_HCONDA16(s[232]);
initA_HCONDA17(s[233]);
initA_AIDHH(s[234]);
initA_AIDHUA1(s[235]);
initA_AIDHUA2(s[236]);
initA_AIDHUA3(s[237]);
initA_AIDHUA4(s[238]);
initA_AIDHUA5(s[239]);
initA_AIDHUA6(s[240]);
initA_AIDHUA7(s[241]);
initA_AIDHUA8(s[242]);
initA_AIDHUA9(s[243]);
initA_AIDHUA10(s[244]);
initA_AIDHUA11(s[245]);
initA_AIDHUA12(s[246]);
initA_AIDHUA13(s[247]);
initA_AIDHUA14(s[248]);
initA_AIDHUA15(s[249]);
initA_AIDHUA16(s[250]);
initA_AIDXHH(s[251]);
initA_NAIDXHH(s[252]);
initA_AIDHU1(s[253]);
initA_AIDHU2(s[254]);
initA_AIDHRS(s[255]);
initA_AIDEFT(s[256]);
initA_LGAPED(s[257]);
initA_JBHAS(s[258]);
initA_JBOFF(s[259]);
initA_JBOFFY(s[260]);
initA_JBTERM1(s[261]);
initA_JBTERM2(s[262]);
initA_JBSEMP(s[263]);
initA_JBBGD(s[264]);
initA_JBBGM(s[265]);
initA_JBBGY(s[266]);
initA_JBMNGR(s[267]);
initA_JBSIZE(s[268]);
initA_JBSECT(s[269]);
initA_JBSECTPUB(s[270]);
initA_JBHRS(s[271]);
initA_JBOT(s[272]);
initA_JBOTPD(s[273]);
initA_JBPL(s[274]);
initA_JBTTWT(s[275]);
initA_WORKDIS(s[276]);
initA_WORKTRAV(s[277]);
initA_PAYGWC(s[278]);
initA_PAYNWC(s[279]);
initA_PAYUSL(s[280]);
initA_PAYU(s[281]);
initA_PAYUWC(s[282]);
initA_PAYUG(s[283]);
initA_PAYTYP(s[284]);
initA_OVTPAY(s[285]);
initA_EXTNSA(s[286]);
initA_EXTRATE(s[287]);
initA_EXTREST(s[288]);
initA_BASNSA(s[289]);
initA_BASRATE(s[290]);
initA_BASREST(s[291]);
initA_OVTNSA(s[292]);
initA_OVTRATE(s[293]);
initA_OVTREST(s[294]);
initA_JBPEN(s[295]);
initA_JBPENM(s[296]);
initA_JSBOSS(s[297]);
initA_JSSIZE(s[298]);
initA_JSHRS(s[299]);
initA_JSTYPEB(s[300]);
initA_JSACCS(s[301]);
initA_JSPART(s[302]);
initA_JSPRBM(s[303]);
initA_JSPRBY4(s[304]);
initA_JSPREM(s[305]);
initA_JSPREY4(s[306]);
initA_JSPRLS(s[307]);
initA_JSPRTX(s[308]);
initA_JSPRNI(s[309]);
initA_JSPAYU(s[310]);
initA_JSPAYW(s[311]);
initA_JSPYTX(s[312]);
initA_JSPYNI(s[313]);
initA_JSPL(s[314]);
initA_JSTTWT(s[315]);
initA_JSTTWTB(s[316]);
initA_JSWORKDIS(s[317]);
initA_JSWORKTRAV(s[318]);
initA_JBSAT(s[319]);
initA_JULK4WK(s[320]);
initA_JULK4X1(s[321]);
initA_JULK4X2(s[322]);
initA_JULK4X3(s[323]);
initA_JULK4X4(s[324]);
initA_JULK4X5(s[325]);
initA_JULK4X6(s[326]);
initA_JULK4X96(s[327]);
initA_JULKJB(s[328]);
initA_JUBGN(s[329]);
initA_JBHAD(s[330]);
initA_RETDATEY(s[331]);
initA_RETDATEM(s[332]);
initA_JLENDY(s[333]);
initA_JLENDM(s[334]);
initA_JLSEMP(s[335]);
initA_JLBOSS(s[336]);
initA_JLMNGR(s[337]);
initA_JLSIZE(s[338]);
initA_J2HAS(s[339]);
initA_J2SEMP(s[340]);
initA_J2HRS(s[341]);
initA_J2PAY(s[342]);
initA_JOBLOOK(s[343]);
initA_JOBDENY(s[344]);
initA_RESJOBDENY1(s[345]);
initA_RESJOBDENY2(s[346]);
initA_RESJOBDENY3(s[347]);
initA_RESJOBDENY4(s[348]);
initA_RESJOBDENY5(s[349]);
initA_RESJOBDENY6(s[350]);
initA_RESJOBDENY7(s[351]);
initA_RESJOBDENY8(s[352]);
initA_RESJOBDENY9(s[353]);
initA_RESJOBDENY96(s[354]);
initA_RESJOBDENY97(s[355]);
initA_EED12(s[356]);
initA_PROMODENY(s[357]);
initA_RESPROMODENY1(s[358]);
initA_RESPROMODENY2(s[359]);
initA_RESPROMODENY3(s[360]);
initA_RESPROMODENY4(s[361]);
initA_RESPROMODENY5(s[362]);
initA_RESPROMODENY6(s[363]);
initA_RESPROMODENY7(s[364]);
initA_RESPROMODENY8(s[365]);
initA_RESPROMODENY9(s[366]);
initA_RESPROMODENY96(s[367]);
initA_RESPROMODENY97(s[368]);
initA_TRAINDENY(s[369]);
initA_RESTRAINDENY1(s[370]);
initA_RESTRAINDENY2(s[371]);
initA_RESTRAINDENY3(s[372]);
initA_RESTRAINDENY4(s[373]);
initA_RESTRAINDENY5(s[374]);
initA_RESTRAINDENY6(s[375]);
initA_RESTRAINDENY7(s[376]);
initA_RESTRAINDENY8(s[377]);
initA_RESTRAINDENY9(s[378]);
initA_RESTRAINDENY96(s[379]);
initA_RESTRAINDENY97(s[380]);
initA_CCARE(s[381]);
initA_CCWORK(s[382]);
initA_HLPHMWK(s[383]);
initA_LEVELIMP(s[384]);
initA_SAMSCH(s[385]);
initA_SOCIALKID(s[386]);
initA_DINNER(s[387]);
initA_QUARREL(s[388]);
initA_TALKMATTER(s[389]);
initA_PRAISEKID(s[390]);
initA_RULESKID(s[391]);
initA_SLAPKID(s[392]);
initA_CUDDLEKID(s[393]);
initA_YELLKID(s[394]);
initA_LVREL1(s[395]);
initA_LVREL2(s[396]);
initA_LVREL3(s[397]);
initA_LVREL4(s[398]);
initA_LVREL5(s[399]);
initA_LVREL6(s[400]);
initA_LVREL7(s[401]);
initA_LVREL8(s[402]);
initA_LVREL96(s[403]);
initA_MAAGE(s[404]);
initA_PAAGE(s[405]);
initA_NRELSW11(s[406]);
initA_NRELSW12(s[407]);
initA_NRELSW13(s[408]);
initA_NRELSW14(s[409]);
initA_NRELSW15(s[410]);
initA_NRELSW16(s[411]);
initA_PARMAR(s[412]);
initA_OHCH16(s[413]);
initA_SEEKID(s[414]);
initA_WEKID(s[415]);
initA_FARKID(s[416]);
initA_RELKID(s[417]);
initA_MASEE(s[418]);
initA_MACON(s[419]);
initA_MAFAR(s[420]);
initA_PASEE(s[421]);
initA_PACON(s[422]);
initA_PAFAR(s[423]);
initA_CHSEE(s[424]);
initA_CHCON(s[425]);
initA_CHFAR(s[426]);
initA_KIDSPT(s[427]);
initA_FTEXV(s[428]);
initA_FTEXW(s[429]);
initA_REMIT1(s[430]);
initA_REMIT2(s[431]);
initA_REMIT3(s[432]);
initA_REMIT4(s[433]);
initA_REMIT5(s[434]);
initA_REMITFREQ1(s[435]);
initA_REMITREG1(s[436]);
initA_REMITAMT1(s[437]);
initA_REMCNTRY1(s[438]);
initA_REMITUSUAL1(s[439]);
initA_REMUSAMT1(s[440]);
initA_REMITFREQ2(s[441]);
initA_REMITREG2(s[442]);
initA_REMITAMT2(s[443]);
initA_REMCNTRY2(s[444]);
initA_REMITUSUAL2(s[445]);
initA_REMUSAMT2(s[446]);
initA_REMITFREQ3(s[447]);
initA_REMITREG3(s[448]);
initA_REMITAMT3(s[449]);
initA_REMCNTRY3(s[450]);
initA_REMITUSUAL3(s[451]);
initA_REMUSAMT3(s[452]);
initA_REMITFREQ4(s[453]);
initA_REMITREG4(s[454]);
initA_REMITAMT4(s[455]);
initA_REMCNTRY4(s[456]);
initA_REMITUSUAL4(s[457]);
initA_REMUSAMT4(s[458]);
initA_BTYPE1(s[459]);
initA_BTYPE2(s[460]);
initA_BTYPE3(s[461]);
initA_BTYPE4(s[462]);
initA_BTYPE5(s[463]);
initA_BTYPE6(s[464]);
initA_BTYPE7(s[465]);
initA_BTYPE8(s[466]);
initA_BTYPE9(s[467]);
initA_BTYPE96(s[468]);
initA_BENUNEMP1(s[469]);
initA_BENUNEMP2(s[470]);
initA_BENUNEMP96(s[471]);
initA_BENDIS1(s[472]);
initA_BENDIS2(s[473]);
initA_BENDIS3(s[474]);
initA_BENDIS4(s[475]);
initA_BENDIS5(s[476]);
initA_BENDIS6(s[477]);
initA_BENDIS7(s[478]);
initA_BENDIS8(s[479]);
initA_BENDIS9(s[480]);
initA_BENDIS10(s[481]);
initA_BENDIS11(s[482]);
initA_BENDIS96(s[483]);
initA_BENPEN1(s[484]);
initA_BENPEN2(s[485]);
initA_BENPEN3(s[486]);
initA_BENPEN4(s[487]);
initA_BENPEN5(s[488]);
initA_BENPEN6(s[489]);
initA_BENPEN7(s[490]);
initA_BENPEN8(s[491]);
initA_BENPEN96(s[492]);
initA_NISERPS(s[493]);
initA_BENCB(s[494]);
initA_BENCTC(s[495]);
initA_BENFAM1(s[496]);
initA_BENFAM2(s[497]);
initA_BENFAM3(s[498]);
initA_BENFAM4(s[499]);
initA_BENFAM5(s[500]);
initA_BENFAM96(s[501]);
initA_BENTAX1(s[502]);
initA_BENTAX2(s[503]);
initA_BENTAX3(s[504]);
initA_BENTAX4(s[505]);
initA_BENTAX5(s[506]);
initA_BENTAX96(s[507]);
initA_BENHOU1(s[508]);
initA_BENHOU2(s[509]);
initA_BENHOU3(s[510]);
initA_BENHOU4(s[511]);
initA_BENHOU96(s[512]);
initA_BENSTA1(s[513]);
initA_BENSTA2(s[514]);
initA_BENSTA3(s[515]);
initA_BENSTA4(s[516]);
initA_BENSTA5(s[517]);
initA_BENSTA6(s[518]);
initA_BENSTA7(s[519]);
initA_BENSTA8(s[520]);
initA_BENSTA96(s[521]);
initA_FIYRDIA(s[522]);
initA_FIYRDB1(s[523]);
initA_FIYRDB2(s[524]);
initA_FIYRDB3(s[525]);
initA_FIYRDB4(s[526]);
initA_FIYRDB5(s[527]);
initA_FIYRDB6(s[528]);
initA_FINNOW(s[529]);
initA_FINFUT(s[530]);
initA_VOTE1(s[531]);
initA_VOTE2(s[532]);
initA_VOTE3(s[533]);
initA_VOTE4(s[534]);
initA_VOTE5(s[535]);
initA_VOTE6(s[536]);
initA_UNSAFEW11(s[537]);
initA_UNSAFEW12(s[538]);
initA_UNSAFEW13(s[539]);
initA_UNSAFEW14(s[540]);
initA_UNSAFEW15(s[541]);
initA_UNSAFEW16(s[542]);
initA_UNSAFEW17(s[543]);
initA_UNSAFEW196(s[544]);
initA_UNSAFEW197(s[545]);
initA_RESUNSAFE_1_1(s[546]);
initA_RESUNSAFE_1_2(s[547]);
initA_RESUNSAFE_1_3(s[548]);
initA_RESUNSAFE_1_4(s[549]);
initA_RESUNSAFE_1_5(s[550]);
initA_RESUNSAFE_1_6(s[551]);
initA_RESUNSAFE_1_7(s[552]);
initA_RESUNSAFE_1_8(s[553]);
initA_RESUNSAFE_1_9(s[554]);
initA_RESUNSAFE_1_96(s[555]);
initA_RESUNSAFE_1_97(s[556]);
initA_RESUNSAFE_2_1(s[557]);
initA_RESUNSAFE_2_2(s[558]);
initA_RESUNSAFE_2_3(s[559]);
initA_RESUNSAFE_2_4(s[560]);
initA_RESUNSAFE_2_5(s[561]);
initA_RESUNSAFE_2_6(s[562]);
initA_RESUNSAFE_2_7(s[563]);
initA_RESUNSAFE_2_8(s[564]);
initA_RESUNSAFE_2_9(s[565]);
initA_RESUNSAFE_2_96(s[566]);
initA_RESUNSAFE_2_97(s[567]);
initA_RESUNSAFE_3_1(s[568]);
initA_RESUNSAFE_3_2(s[569]);
initA_RESUNSAFE_3_3(s[570]);
initA_RESUNSAFE_3_4(s[571]);
initA_RESUNSAFE_3_5(s[572]);
initA_RESUNSAFE_3_6(s[573]);
initA_RESUNSAFE_3_7(s[574]);
initA_RESUNSAFE_3_8(s[575]);
initA_RESUNSAFE_3_9(s[576]);
initA_RESUNSAFE_3_96(s[577]);
initA_RESUNSAFE_3_97(s[578]);
initA_RESUNSAFE_4_1(s[579]);
initA_RESUNSAFE_4_2(s[580]);
initA_RESUNSAFE_4_3(s[581]);
initA_RESUNSAFE_4_4(s[582]);
initA_RESUNSAFE_4_5(s[583]);
initA_RESUNSAFE_4_6(s[584]);
initA_RESUNSAFE_4_7(s[585]);
initA_RESUNSAFE_4_8(s[586]);
initA_RESUNSAFE_4_9(s[587]);
initA_RESUNSAFE_4_96(s[588]);
initA_RESUNSAFE_4_97(s[589]);
initA_RESUNSAFE_5_1(s[590]);
initA_RESUNSAFE_5_2(s[591]);
initA_RESUNSAFE_5_3(s[592]);
initA_RESUNSAFE_5_4(s[593]);
initA_RESUNSAFE_5_5(s[594]);
initA_RESUNSAFE_5_6(s[595]);
initA_RESUNSAFE_5_7(s[596]);
initA_RESUNSAFE_5_8(s[597]);
initA_RESUNSAFE_5_9(s[598]);
initA_RESUNSAFE_5_96(s[599]);
initA_RESUNSAFE_5_97(s[600]);
initA_RESUNSAFE_6_1(s[601]);
initA_RESUNSAFE_6_2(s[602]);
initA_RESUNSAFE_6_3(s[603]);
initA_RESUNSAFE_6_4(s[604]);
initA_RESUNSAFE_6_5(s[605]);
initA_RESUNSAFE_6_6(s[606]);
initA_RESUNSAFE_6_7(s[607]);
initA_RESUNSAFE_6_8(s[608]);
initA_RESUNSAFE_6_9(s[609]);
initA_RESUNSAFE_6_96(s[610]);
initA_RESUNSAFE_6_97(s[611]);
initA_RESUNSAFE_7_1(s[612]);
initA_RESUNSAFE_7_2(s[613]);
initA_RESUNSAFE_7_3(s[614]);
initA_RESUNSAFE_7_4(s[615]);
initA_RESUNSAFE_7_5(s[616]);
initA_RESUNSAFE_7_6(s[617]);
initA_RESUNSAFE_7_7(s[618]);
initA_RESUNSAFE_7_8(s[619]);
initA_RESUNSAFE_7_9(s[620]);
initA_RESUNSAFE_7_96(s[621]);
initA_RESUNSAFE_7_97(s[622]);
initA_RESUNSAFE_97_1(s[623]);
initA_RESUNSAFE_97_2(s[624]);
initA_RESUNSAFE_97_3(s[625]);
initA_RESUNSAFE_97_4(s[626]);
initA_RESUNSAFE_97_5(s[627]);
initA_RESUNSAFE_97_6(s[628]);
initA_RESUNSAFE_97_7(s[629]);
initA_RESUNSAFE_97_8(s[630]);
initA_RESUNSAFE_97_9(s[631]);
initA_RESUNSAFE_97_96(s[632]);
initA_RESUNSAFE_97_97(s[633]);
initA_AVOIDANCEW11(s[634]);
initA_AVOIDANCEW12(s[635]);
initA_AVOIDANCEW13(s[636]);
initA_AVOIDANCEW14(s[637]);
initA_AVOIDANCEW15(s[638]);
initA_AVOIDANCEW16(s[639]);
initA_AVOIDANCEW17(s[640]);
initA_AVOIDANCEW196(s[641]);
initA_AVOIDANCEW197(s[642]);
initA_RESAVOID_1_1(s[643]);
initA_RESAVOID_1_2(s[644]);
initA_RESAVOID_1_3(s[645]);
initA_RESAVOID_1_4(s[646]);
initA_RESAVOID_1_5(s[647]);
initA_RESAVOID_1_6(s[648]);
initA_RESAVOID_1_7(s[649]);
initA_RESAVOID_1_8(s[650]);
initA_RESAVOID_1_9(s[651]);
initA_RESAVOID_1_96(s[652]);
initA_RESAVOID_1_97(s[653]);
initA_RESAVOID_2_1(s[654]);
initA_RESAVOID_2_2(s[655]);
initA_RESAVOID_2_3(s[656]);
initA_RESAVOID_2_4(s[657]);
initA_RESAVOID_2_5(s[658]);
initA_RESAVOID_2_6(s[659]);
initA_RESAVOID_2_7(s[660]);
initA_RESAVOID_2_8(s[661]);
initA_RESAVOID_2_9(s[662]);
initA_RESAVOID_2_96(s[663]);
initA_RESAVOID_2_97(s[664]);
initA_RESAVOID_3_1(s[665]);
initA_RESAVOID_3_2(s[666]);
initA_RESAVOID_3_3(s[667]);
initA_RESAVOID_3_4(s[668]);
initA_RESAVOID_3_5(s[669]);
initA_RESAVOID_3_6(s[670]);
initA_RESAVOID_3_7(s[671]);
initA_RESAVOID_3_8(s[672]);
initA_RESAVOID_3_9(s[673]);
initA_RESAVOID_3_96(s[674]);
initA_RESAVOID_3_97(s[675]);
initA_RESAVOID_4_1(s[676]);
initA_RESAVOID_4_2(s[677]);
initA_RESAVOID_4_3(s[678]);
initA_RESAVOID_4_4(s[679]);
initA_RESAVOID_4_5(s[680]);
initA_RESAVOID_4_6(s[681]);
initA_RESAVOID_4_7(s[682]);
initA_RESAVOID_4_8(s[683]);
initA_RESAVOID_4_9(s[684]);
initA_RESAVOID_4_96(s[685]);
initA_RESAVOID_4_97(s[686]);
initA_RESAVOID_5_1(s[687]);
initA_RESAVOID_5_2(s[688]);
initA_RESAVOID_5_3(s[689]);
initA_RESAVOID_5_4(s[690]);
initA_RESAVOID_5_5(s[691]);
initA_RESAVOID_5_6(s[692]);
initA_RESAVOID_5_7(s[693]);
initA_RESAVOID_5_8(s[694]);
initA_RESAVOID_5_9(s[695]);
initA_RESAVOID_5_96(s[696]);
initA_RESAVOID_5_97(s[697]);
initA_RESAVOID_6_1(s[698]);
initA_RESAVOID_6_2(s[699]);
initA_RESAVOID_6_3(s[700]);
initA_RESAVOID_6_4(s[701]);
initA_RESAVOID_6_5(s[702]);
initA_RESAVOID_6_6(s[703]);
initA_RESAVOID_6_7(s[704]);
initA_RESAVOID_6_8(s[705]);
initA_RESAVOID_6_9(s[706]);
initA_RESAVOID_6_96(s[707]);
initA_RESAVOID_6_97(s[708]);
initA_RESAVOID_7_1(s[709]);
initA_RESAVOID_7_2(s[710]);
initA_RESAVOID_7_3(s[711]);
initA_RESAVOID_7_4(s[712]);
initA_RESAVOID_7_5(s[713]);
initA_RESAVOID_7_6(s[714]);
initA_RESAVOID_7_7(s[715]);
initA_RESAVOID_7_8(s[716]);
initA_RESAVOID_7_9(s[717]);
initA_RESAVOID_7_96(s[718]);
initA_RESAVOID_7_97(s[719]);
initA_RESAVOID_97_1(s[720]);
initA_RESAVOID_97_2(s[721]);
initA_RESAVOID_97_3(s[722]);
initA_RESAVOID_97_4(s[723]);
initA_RESAVOID_97_5(s[724]);
initA_RESAVOID_97_6(s[725]);
initA_RESAVOID_97_7(s[726]);
initA_RESAVOID_97_8(s[727]);
initA_RESAVOID_97_9(s[728]);
initA_RESAVOID_97_96(s[729]);
initA_RESAVOID_97_97(s[730]);
initA_INSULTEDW11(s[731]);
initA_INSULTEDW12(s[732]);
initA_INSULTEDW13(s[733]);
initA_INSULTEDW14(s[734]);
initA_INSULTEDW15(s[735]);
initA_INSULTEDW16(s[736]);
initA_INSULTEDW17(s[737]);
initA_INSULTEDW196(s[738]);
initA_INSULTEDW197(s[739]);
initA_RESINSULTED_1_1(s[740]);
initA_RESINSULTED_1_2(s[741]);
initA_RESINSULTED_1_3(s[742]);
initA_RESINSULTED_1_4(s[743]);
initA_RESINSULTED_1_5(s[744]);
initA_RESINSULTED_1_6(s[745]);
initA_RESINSULTED_1_7(s[746]);
initA_RESINSULTED_1_8(s[747]);
initA_RESINSULTED_1_9(s[748]);
initA_RESINSULTED_1_96(s[749]);
initA_RESINSULTED_1_97(s[750]);
initA_RESINSULTED_2_1(s[751]);
initA_RESINSULTED_2_2(s[752]);
initA_RESINSULTED_2_3(s[753]);
initA_RESINSULTED_2_4(s[754]);
initA_RESINSULTED_2_5(s[755]);
initA_RESINSULTED_2_6(s[756]);
initA_RESINSULTED_2_7(s[757]);
initA_RESINSULTED_2_8(s[758]);
initA_RESINSULTED_2_9(s[759]);
initA_RESINSULTED_2_96(s[760]);
initA_RESINSULTED_2_97(s[761]);
initA_RESINSULTED_3_1(s[762]);
initA_RESINSULTED_3_2(s[763]);
initA_RESINSULTED_3_3(s[764]);
initA_RESINSULTED_3_4(s[765]);
initA_RESINSULTED_3_5(s[766]);
initA_RESINSULTED_3_6(s[767]);
initA_RESINSULTED_3_7(s[768]);
initA_RESINSULTED_3_8(s[769]);
initA_RESINSULTED_3_9(s[770]);
initA_RESINSULTED_3_96(s[771]);
initA_RESINSULTED_3_97(s[772]);
initA_RESINSULTED_4_1(s[773]);
initA_RESINSULTED_4_2(s[774]);
initA_RESINSULTED_4_3(s[775]);
initA_RESINSULTED_4_4(s[776]);
initA_RESINSULTED_4_5(s[777]);
initA_RESINSULTED_4_6(s[778]);
initA_RESINSULTED_4_7(s[779]);
initA_RESINSULTED_4_8(s[780]);
initA_RESINSULTED_4_9(s[781]);
initA_RESINSULTED_4_96(s[782]);
initA_RESINSULTED_4_97(s[783]);
initA_RESINSULTED_5_1(s[784]);
initA_RESINSULTED_5_2(s[785]);
initA_RESINSULTED_5_3(s[786]);
initA_RESINSULTED_5_4(s[787]);
initA_RESINSULTED_5_5(s[788]);
initA_RESINSULTED_5_6(s[789]);
initA_RESINSULTED_5_7(s[790]);
initA_RESINSULTED_5_8(s[791]);
initA_RESINSULTED_5_9(s[792]);
initA_RESINSULTED_5_96(s[793]);
initA_RESINSULTED_5_97(s[794]);
initA_RESINSULTED_6_1(s[795]);
initA_RESINSULTED_6_2(s[796]);
initA_RESINSULTED_6_3(s[797]);
initA_RESINSULTED_6_4(s[798]);
initA_RESINSULTED_6_5(s[799]);
initA_RESINSULTED_6_6(s[800]);
initA_RESINSULTED_6_7(s[801]);
initA_RESINSULTED_6_8(s[802]);
initA_RESINSULTED_6_9(s[803]);
initA_RESINSULTED_6_96(s[804]);
initA_RESINSULTED_6_97(s[805]);
initA_RESINSULTED_7_1(s[806]);
initA_RESINSULTED_7_2(s[807]);
initA_RESINSULTED_7_3(s[808]);
initA_RESINSULTED_7_4(s[809]);
initA_RESINSULTED_7_5(s[810]);
initA_RESINSULTED_7_6(s[811]);
initA_RESINSULTED_7_7(s[812]);
initA_RESINSULTED_7_8(s[813]);
initA_RESINSULTED_7_9(s[814]);
initA_RESINSULTED_7_96(s[815]);
initA_RESINSULTED_7_97(s[816]);
initA_RESINSULTED_97_1(s[817]);
initA_RESINSULTED_97_2(s[818]);
initA_RESINSULTED_97_3(s[819]);
initA_RESINSULTED_97_4(s[820]);
initA_RESINSULTED_97_5(s[821]);
initA_RESINSULTED_97_6(s[822]);
initA_RESINSULTED_97_7(s[823]);
initA_RESINSULTED_97_8(s[824]);
initA_RESINSULTED_97_9(s[825]);
initA_RESINSULTED_97_96(s[826]);
initA_RESINSULTED_97_97(s[827]);
initA_ATTACKEDW11(s[828]);
initA_ATTACKEDW12(s[829]);
initA_ATTACKEDW13(s[830]);
initA_ATTACKEDW14(s[831]);
initA_ATTACKEDW15(s[832]);
initA_ATTACKEDW16(s[833]);
initA_ATTACKEDW17(s[834]);
initA_ATTACKEDW196(s[835]);
initA_ATTACKEDW197(s[836]);
initA_RESATTACKED_1_1(s[837]);
initA_RESATTACKED_1_2(s[838]);
initA_RESATTACKED_1_3(s[839]);
initA_RESATTACKED_1_4(s[840]);
initA_RESATTACKED_1_5(s[841]);
initA_RESATTACKED_1_6(s[842]);
initA_RESATTACKED_1_7(s[843]);
initA_RESATTACKED_1_8(s[844]);
initA_RESATTACKED_1_9(s[845]);
initA_RESATTACKED_1_96(s[846]);
initA_RESATTACKED_1_97(s[847]);
initA_RESATTACKED_2_1(s[848]);
initA_RESATTACKED_2_2(s[849]);
initA_RESATTACKED_2_3(s[850]);
initA_RESATTACKED_2_4(s[851]);
initA_RESATTACKED_2_5(s[852]);
initA_RESATTACKED_2_6(s[853]);
initA_RESATTACKED_2_7(s[854]);
initA_RESATTACKED_2_8(s[855]);
initA_RESATTACKED_2_9(s[856]);
initA_RESATTACKED_2_96(s[857]);
initA_RESATTACKED_2_97(s[858]);
initA_RESATTACKED_3_1(s[859]);
initA_RESATTACKED_3_2(s[860]);
initA_RESATTACKED_3_3(s[861]);
initA_RESATTACKED_3_4(s[862]);
initA_RESATTACKED_3_5(s[863]);
initA_RESATTACKED_3_6(s[864]);
initA_RESATTACKED_3_7(s[865]);
initA_RESATTACKED_3_8(s[866]);
initA_RESATTACKED_3_9(s[867]);
initA_RESATTACKED_3_96(s[868]);
initA_RESATTACKED_3_97(s[869]);
initA_RESATTACKED_4_1(s[870]);
initA_RESATTACKED_4_2(s[871]);
initA_RESATTACKED_4_3(s[872]);
initA_RESATTACKED_4_4(s[873]);
initA_RESATTACKED_4_5(s[874]);
initA_RESATTACKED_4_6(s[875]);
initA_RESATTACKED_4_7(s[876]);
initA_RESATTACKED_4_8(s[877]);
initA_RESATTACKED_4_9(s[878]);
initA_RESATTACKED_4_96(s[879]);
initA_RESATTACKED_4_97(s[880]);
initA_RESATTACKED_5_1(s[881]);
initA_RESATTACKED_5_2(s[882]);
initA_RESATTACKED_5_3(s[883]);
initA_RESATTACKED_5_4(s[884]);
initA_RESATTACKED_5_5(s[885]);
initA_RESATTACKED_5_6(s[886]);
initA_RESATTACKED_5_7(s[887]);
initA_RESATTACKED_5_8(s[888]);
initA_RESATTACKED_5_9(s[889]);
initA_RESATTACKED_5_96(s[890]);
initA_RESATTACKED_5_97(s[891]);
initA_RESATTACKED_6_1(s[892]);
initA_RESATTACKED_6_2(s[893]);
initA_RESATTACKED_6_3(s[894]);
initA_RESATTACKED_6_4(s[895]);
initA_RESATTACKED_6_5(s[896]);
initA_RESATTACKED_6_6(s[897]);
initA_RESATTACKED_6_7(s[898]);
initA_RESATTACKED_6_8(s[899]);
initA_RESATTACKED_6_9(s[900]);
initA_RESATTACKED_6_96(s[901]);
initA_RESATTACKED_6_97(s[902]);
initA_RESATTACKED_7_1(s[903]);
initA_RESATTACKED_7_2(s[904]);
initA_RESATTACKED_7_3(s[905]);
initA_RESATTACKED_7_4(s[906]);
initA_RESATTACKED_7_5(s[907]);
initA_RESATTACKED_7_6(s[908]);
initA_RESATTACKED_7_7(s[909]);
initA_RESATTACKED_7_8(s[910]);
initA_RESATTACKED_7_9(s[911]);
initA_RESATTACKED_7_96(s[912]);
initA_RESATTACKED_7_97(s[913]);
initA_RESATTACKED_97_1(s[914]);
initA_RESATTACKED_97_2(s[915]);
initA_RESATTACKED_97_3(s[916]);
initA_RESATTACKED_97_4(s[917]);
initA_RESATTACKED_97_5(s[918]);
initA_RESATTACKED_97_6(s[919]);
initA_RESATTACKED_97_7(s[920]);
initA_RESATTACKED_97_8(s[921]);
initA_RESATTACKED_97_9(s[922]);
initA_RESATTACKED_97_96(s[923]);
initA_RESATTACKED_97_97(s[924]);
initA_ENVHABIT1(s[925]);
initA_ENVHABIT2(s[926]);
initA_ENVHABIT3(s[927]);
initA_ENVHABIT4(s[928]);
initA_ENVHABIT5(s[929]);
initA_ENVHABIT6(s[930]);
initA_ENVHABIT7(s[931]);
initA_ENVHABIT8(s[932]);
initA_ENVHABIT9(s[933]);
initA_ENVHABIT10(s[934]);
initA_ENVHABIT11(s[935]);
initA_DRIVE(s[936]);
initA_CARMILES(s[937]);
initA_MOBUSE(s[938]);
initA_NETUSE(s[939]);
initA_HOWLNG(s[940]);
initA_HEALTHLINK(s[941]);
initA_FLAGLINK(s[942]);
initA_EDLINKB(s[943]);
initA_NCH14RESP(s[944]);
initA_NCH415RESP(s[945]);
initA_NCHRESP(s[946]);
initA_NCHUND18RESP(s[947]);
initA_NATCH01(s[948]);
initA_NATCH02(s[949]);
initA_NATCH03(s[950]);
initA_NATCH04(s[951]);
initA_NATCH05(s[952]);
initA_NATCH06(s[953]);
initA_NATCH07(s[954]);
initA_NATCH08(s[955]);
initA_NATCH09(s[956]);
initA_NATCH10(s[957]);
initA_NATCH11(s[958]);
initA_NATCH12(s[959]);
initA_NATCH13(s[960]);
initA_NATCH14(s[961]);
initA_NATCH15(s[962]);
initA_NATCH16(s[963]);
initA_NNATCH(s[964]);
initA_NADOPTCH(s[965]);
initA_ADOPTCH01(s[966]);
initA_ADOPTCH02(s[967]);
initA_ADOPTCH03(s[968]);
initA_ADOPTCH04(s[969]);
initA_ADOPTCH05(s[970]);
initA_ADOPTCH06(s[971]);
initA_ADOPTCH07(s[972]);
initA_ADOPTCH08(s[973]);
initA_ADOPTCH09(s[974]);
initA_ADOPTCH10(s[975]);
initA_ADOPTCH11(s[976]);
initA_ADOPTCH12(s[977]);
initA_ADOPTCH13(s[978]);
initA_ADOPTCH14(s[979]);
initA_ADOPTCH15(s[980]);
initA_ADOPTCH16(s[981]);
initA_NCHUNDER16(s[982]);
initA_NCH5TO15(s[983]);
initA_NCH10TO15(s[984]);
initA_ALLCH01(s[985]);
initA_ALLCH02(s[986]);
initA_ALLCH03(s[987]);
initA_ALLCH04(s[988]);
initA_ALLCH05(s[989]);
initA_ALLCH06(s[990]);
initA_ALLCH07(s[991]);
initA_ALLCH08(s[992]);
initA_ALLCH09(s[993]);
initA_ALLCH10(s[994]);
initA_ALLCH11(s[995]);
initA_ALLCH12(s[996]);
initA_ALLCH13(s[997]);
initA_ALLCH14(s[998]);
initA_ALLCH15(s[999]);
initA_ALLCH16(s[1000]);
initA_PRIVPEN(s[1001]);
initA_MAINTALIM(s[1002]);
initA_PAYFAM(s[1003]);
initA_LENINDINTV(s[1004]);
initA_KID2UNI1(s[1005]);
initA_K2UCPN1(s[1006]);
initA_KID2UNI2(s[1007]);
initA_K2UCPN2(s[1008]);
initA_KID2UNI3(s[1009]);
initA_K2UCPN3(s[1010]);
initA_KID2UNI4(s[1011]);
initA_K2UCPN4(s[1012]);
initA_KID2UNI5(s[1013]);
initA_K2UCPN5(s[1014]);
initA_SCDOBY4(s[1015]);
initA_SCSEX(s[1016]);
initA_SCGHQA(s[1017]);
initA_SCGHQB(s[1018]);
initA_SCGHQC(s[1019]);
initA_SCGHQD(s[1020]);
initA_SCGHQE(s[1021]);
initA_SCGHQF(s[1022]);
initA_SCGHQG(s[1023]);
initA_SCGHQH(s[1024]);
initA_SCGHQI(s[1025]);
initA_SCGHQJ(s[1026]);
initA_SCGHQK(s[1027]);
initA_SCGHQL(s[1028]);
initA_SCHRS_SLPH(s[1029]);
initA_SCHRS_SLPM(s[1030]);
initA_SCTSLP_30M(s[1031]);
initA_SCTSLP_WAK(s[1032]);
initA_SCTSLP_CGH(s[1033]);
initA_SCMED_SLP(s[1034]);
initA_SCTSTA_AWK(s[1035]);
initA_SCSLP_QUAL(s[1036]);
initA_SCENV_FTST(s[1037]);
initA_SCENV_CRLF(s[1038]);
initA_SCENV_GRN(s[1039]);
initA_SCENV_CCLS(s[1040]);
initA_SCENV_PMRE(s[1041]);
initA_SCENV_DSTR(s[1042]);
initA_SCENV_EXAG(s[1043]);
initA_SCENV_BCON(s[1044]);
initA_SCENV_FUTR(s[1045]);
initA_SCENV_CFIT(s[1046]);
initA_SCENV_CHWO(s[1047]);
initA_SCENV_BRIT(s[1048]);
initA_SCOPECL30(s[1049]);
initA_SCOPECL200(s[1050]);
initA_SCOPNGBHA(s[1051]);
initA_SCOPNGBHB(s[1052]);
initA_SCOPNGBHC(s[1053]);
initA_SCOPNGBHD(s[1054]);
initA_SCOPNGBHE(s[1055]);
initA_SCOPNGBHF(s[1056]);
initA_SCOPNGBHG(s[1057]);
initA_SCOPNGBHH(s[1058]);
initA_SCTRUST(s[1059]);
initA_SCLFSAT1(s[1060]);
initA_SCLFSAT2(s[1061]);
initA_SCLFSAT7(s[1062]);
initA_SCLFSATO(s[1063]);
initA_SCWEMWBA(s[1064]);
initA_SCWEMWBB(s[1065]);
initA_SCWEMWBC(s[1066]);
initA_SCWEMWBD(s[1067]);
initA_SCWEMWBE(s[1068]);
initA_SCWEMWBF(s[1069]);
initA_SCWEMWBG(s[1070]);
initA_SCRISKA(s[1071]);
initA_SCRISKB(s[1072]);
initA_SCMOLWP(s[1073]);
initA_SCRELPAREI(s[1074]);
initA_SCRELPARCD(s[1075]);
initA_SCRELPARWT(s[1076]);
initA_SCRELPARDS(s[1077]);
initA_SCRELPARRG(s[1078]);
initA_SCRELPARAR(s[1079]);
initA_SCRELPARIR(s[1080]);
initA_SCRELPARKS(s[1081]);
initA_SCPAROUTINT(s[1082]);
initA_SCRELHAPPY(s[1083]);
initA_IVPRSNT(s[1084]);
initA_IVINFNCE(s[1085]);
initA_IVAFFCT11(s[1086]);
initA_IVAFFCT12(s[1087]);
initA_IVAFFCT13(s[1088]);
initA_IVAFFCT14(s[1089]);
initA_IVAFFCT15(s[1090]);
initA_IVAFFCT17(s[1091]);
initA_IVAFFCT21(s[1092]);
initA_IVAFFCT22(s[1093]);
initA_IVAFFCT23(s[1094]);
initA_IVAFFCT27(s[1095]);
initA_IVAFFCT30(s[1096]);
initA_IVAFFCT97(s[1097]);
initA_IVCOOP(s[1098]);
initA_SUSP(s[1099]);
initA_UNDQUS(s[1100]);
initA_IVTRANS(s[1101]);
initA_PRSEX(s[1102]);
initA_PREL(s[1103]);
initA_PREASON(s[1104]);
initA_PRIPN(s[1105]);
initA_CH1BY4(s[1106]);
initA_PJULK4WK(s[1107]);
initA_PJBPTFT(s[1108]);
initA_PJSPTFT(s[1109]);
initA_PREARN(s[1110]);
initA_PREARNW(s[1111]);
initA_PREARNA(s[1112]);
initA_PBNFT1(s[1113]);
initA_PBNFT2(s[1114]);
initA_PBNFT3(s[1115]);
initA_PBNFT4(s[1116]);
initA_PBNFT5(s[1117]);
initA_PBNFT6(s[1118]);
initA_PBNFT7(s[1119]);
initA_PBNFT8(s[1120]);
initA_PBNFT9(s[1121]);
initA_PBNFT10(s[1122]);
initA_PBNFT11(s[1123]);
initA_PBNFT12(s[1124]);
initA_PBNFT96(s[1125]);
initA_CARUSE(s[1126]);
initA_PRFITB(s[1127]);
initA_PRFITBW(s[1128]);
initA_PRFITBA(s[1129]);
initA_EMBOOST(s[1130]);
initA_GPCOMP(s[1131]);
initA_LDA(s[1132]);
initA_AGEEST(s[1133]);
initA_MARSTAT(s[1134]);
initA_LIVESP(s[1135]);
initA_LIVEWITH(s[1136]);
initA_EMPLOY(s[1137]);
initA_HGBIOM(s[1138]);
initA_HGBIOF(s[1139]);
initA_HGADOPTM(s[1140]);
initA_HGADOPTF(s[1141]);
initA_HGPART(s[1142]);
initA_RESPF16(s[1143]);
initA_RESPM16(s[1144]);
initA_ADRESP17(s[1145]);
initA_ETHNIC1(s[1146]);
initA_ETHNIC2(s[1147]);
initA_ETHNIC3(s[1148]);
initA_ETHNIC4(s[1149]);
initA_ETHNIC5(s[1150]);
initA_ETHNIC6(s[1151]);
initA_ETHNIC7(s[1152]);
initA_ETHNIC8(s[1153]);
initA_ETHNIC9(s[1154]);
initA_ETHNIC10(s[1155]);
initA_ETHNIC11(s[1156]);
initA_ETHNIC12(s[1157]);
initA_ETHNIC13(s[1158]);
initA_ETHNIC14(s[1159]);
initA_ETHNIC96(s[1160]);
initA_LINGUA(s[1161]);
initA_REASREF(s[1162]);
initA_IVINTLANG(s[1163]);
initA_IVWHOINT(s[1164]);
initA_LDAFLAG(s[1165]);
initA_HHSTTIME_TM(s[1166]);
initA_QSIGNIN_TM(s[1167]);
initA_HHGRID_TM(s[1168]);
initA_RELATIONSHIPS_TM(s[1169]);
initA_HHQRE_TM(s[1170]);
initA_PROXY_TM(s[1171]);
initA_DEMOG_TM(s[1172]);
initA_INITIAL_TM(s[1173]);
initA_FAMILY_TM(s[1174]);
initA_ETHNIC_TM(s[1175]);
initA_RELIGION_TM(s[1176]);
initA_MIGRATION_TM(s[1177]);
initA_PARTNER_TM(s[1178]);
initA_FERTILITY_TM(s[1179]);
initA_HEALTH_TM(s[1180]);
initA_CARING_TM(s[1181]);
initA_EMPSTAT_TM(s[1182]);
initA_EMPLOYMENT_TM(s[1183]);
initA_SELFEMP_TM(s[1184]);
initA_JOB_TM(s[1185]);
initA_NONEMP_TM(s[1186]);
initA_SECJOB_TM(s[1187]);
initA_DISCRIMINATION_TM(s[1188]);
initA_CHILDCARE_TM(s[1189]);
initA_PARCHILD_TM(s[1190]);
initA_NETWORKS_TM(s[1191]);
initA_REMITTANCE_TM(s[1192]);
initA_BENEFIT_TM(s[1193]);
initA_FINANCES_TM(s[1194]);
initA_POLITICAL_TM(s[1195]);
initA_HARASSMENT_TM(s[1196]);
initA_ENVIRON_TM(s[1197]);
initA_CONSENT_TM(s[1198]);
initA_PHONE_TM(s[1199]);
initA_STABLE_TM(s[1200]);
initA_FININT_TM(s[1201]);
initA_OBSERVE_TM(s[1202]);
initA_IMPEVENT1(s[1203]);
initA_IMPEVENT1S(s[1204]);
initA_IMPEVENT2(s[1205]);
initA_IMPEVENT2S(s[1206]);
initA_IMPEVENT3(s[1207]);
initA_IMPEVENT3S(s[1208]);
initA_IMPEVENT4(s[1209]);
initA_IMPEVENT4S(s[1210]);
initA_RHLAND_CODE(s[1211]);
initA_RPHMOB_CODE(s[1212]);
initA_RPHWRK_CODE(s[1213]);
initA_REMAIL_CODE(s[1214]);
initA_CTADD1_CODE(s[1215]);
initA_CTADD2_CODE(s[1216]);
initA_CTTOWN_CODE(s[1217]);
initA_CTCNTY_CODE(s[1218]);
initA_CTPCODE_CODE(s[1219]);
initA_CTTEL1_CODE(s[1220]);
initA_CTTEL2_CODE(s[1221]);
initA_CTEMAIL_CODE(s[1222]);
initA_ISTRTDATHH(s[1223]);
initA_ISTRTDATMM(s[1224]);
initA_ISTRTDATSS(s[1225]);
initA_IENDDATHH(s[1226]);
initA_IENDDATMM(s[1227]);
initA_IENDDATSS(s[1228]);
initA_PPSEX(s[1229]);
initA_FNPID(s[1230]);
initA_MNPID(s[1231]);
initA_PN1PID(s[1232]);
initA_PN1PNO(s[1233]);
initA_PN1SEX(s[1234]);
initA_PN2PID(s[1235]);
initA_PN2PNO(s[1236]);
initA_PN2SEX(s[1237]);
initA_PNS1PID(s[1238]);
initA_PNS1PNO(s[1239]);
initA_PNS1SEX(s[1240]);
initA_PNS2PID(s[1241]);
initA_PNS2PNO(s[1242]);
initA_PNS2SEX(s[1243]);
initA_GRFPID(s[1244]);
initA_GRMPID(s[1245]);
initA_J2PAY_IF(s[1246]);
initA_FIMNGRS_TC(s[1247]);
initA_FIMNGRS_DV(s[1248]);
initA_FIMNLABGRS_TC(s[1249]);
initA_FIMNLABGRS_DV(s[1250]);
initA_FIMNLABNET_TC(s[1251]);
initA_FIMNLABNET_DV(s[1252]);
initA_FIYRINVINC_TC(s[1253]);
initA_FIYRINVINC_DV(s[1254]);
initA_FIBENOTHR_TC(s[1255]);
initA_FIBENOTHR_DV(s[1256]);
initA_PAYGL(s[1257]);
initA_PAYNL(s[1258]);
initA_JSPRF(s[1259]);
initA_PAYGU_DV(s[1260]);
initA_PAYG_DV(s[1261]);
initA_PAYNU_DV(s[1262]);
initA_PAYN_DV(s[1263]);
initA_SEEARNGRS_DV(s[1264]);
initA_SEEARNNET_DV(s[1265]);
initA_J2PAY_DV(s[1266]);
initA_J2PAYNET_DV(s[1267]);
initA_SEX_DV(s[1268]);
initA_AGE_DV(s[1269]);
initA_ETHN_DV(s[1270]);
initA_INTDATD_DV(s[1271]);
initA_INTDATM_DV(s[1272]);
initA_INTDATY_DV(s[1273]);
initA_DOBY_DV(s[1274]);
initA_PENSIONER_DV(s[1275]);
initA_NPN_DV(s[1276]);
initA_NPNS_DV(s[1277]);
initA_NGRP_DV(s[1278]);
initA_NNSIB_DV(s[1279]);
initA_NNSSIB_DV(s[1280]);
initA_NPENSIONER_DV(s[1281]);
initA_JBSOCGR_DV(s[1282]);
initA_NBRSNCI_DV(s[1283]);
initA_SCDASSAT_DV(s[1284]);
initA_SCDASCOH_DV(s[1285]);
initA_FIMNMISC_DV(s[1286]);
initA_FIMNPRBEN_DV(s[1287]);
initA_FIMNINVNET_DV(s[1288]);
initA_FIMNPEN_DV(s[1289]);
initA_FIMNSBEN_DV(s[1290]);
initA_FIMNNET_DV(s[1291]);
initA_COUNTRY(s[1292]);
initA_GOR_DV(s[1293]);
initA_URBAN_DV(s[1294]);
initA_HHRESP_DV(s[1295]);
initA_XTRA5MIN_DV(s[1296]);
initA_AGEGR5_DV(s[1297]);
initA_AGEGR10_DV(s[1298]);
initA_AGEGR13_DV(s[1299]);
initA_LIVESP_DV(s[1300]);
initA_COHAB_DV(s[1301]);
initA_SINGLE_DV(s[1302]);
initA_MASTAT_DV(s[1303]);
initA_HHTYPE_DV(s[1304]);
initA_BUNO_DV(s[1305]);
initA_DEPCHL_DV(s[1306]);
initA_NCHILD_DV(s[1307]);
initA_NDEPCHL_DV(s[1308]);
initA_RESPM16_DV(s[1309]);
initA_RESPF16_DV(s[1310]);
initA_RACH16_DV(s[1311]);
initA_HRPID(s[1312]);
initA_HRPNO(s[1313]);
initA_PPID(s[1314]);
initA_PPNO(s[1315]);
initA_SPPID(s[1316]);
initA_SPPNO(s[1317]);
initA_FNPNO(s[1318]);
initA_FNSPID(s[1319]);
initA_FNSPNO(s[1320]);
initA_MNPNO(s[1321]);
initA_MNSPID(s[1322]);
initA_MNSPNO(s[1323]);
initA_GRFPNO(s[1324]);
initA_GRMPNO(s[1325]);
initA_QFHIGH_DV(s[1326]);
initA_NQFHIGH_DV(s[1327]);
initA_QFHIGHFL_DV(s[1328]);
initA_HIQUAL_DV(s[1329]);
initA_JBFT_DV(s[1330]);
initA_JBSOC00_CC(s[1331]);
initA_JBSIC07_CC(s[1332]);
initA_JBIINDB_DV(s[1333]);
initA_JBES2000(s[1334]);
initA_JBSEG_DV(s[1335]);
initA_JBRGSC_DV(s[1336]);
initA_JBNSSEC_DV(s[1337]);
initA_JBNSSEC8_DV(s[1338]);
initA_JBNSSEC5_DV(s[1339]);
initA_JBNSSEC3_DV(s[1340]);
initA_JBISCO88_CC(s[1341]);
initA_JLSOC00_CC(s[1342]);
initA_JLSIC07_CC(s[1343]);
initA_JLIINDB_DV(s[1344]);
initA_JLES2000(s[1345]);
initA_JLSEG_DV(s[1346]);
initA_JLRGSC_DV(s[1347]);
initA_JLNSSEC_DV(s[1348]);
initA_JLNSSEC8_DV(s[1349]);
initA_JLNSSEC5_DV(s[1350]);
initA_JLNSSEC3_DV(s[1351]);
initA_JLISCO88_CC(s[1352]);
initA_PASOC90_CC(s[1353]);
initA_PASOC00_CC(s[1354]);
initA_PASOC10_CC(s[1355]);
initA_PANSSEC5_DV(s[1356]);
initA_MASOC90_CC(s[1357]);
initA_MASOC00_CC(s[1358]);
initA_MASOC10_CC(s[1359]);
initA_MANSSEC5_DV(s[1360]);
initA_J1SOC90_CC(s[1361]);
initA_J1SOC00_CC(s[1362]);
initA_J1SOC10_CC(s[1363]);
initA_J1NSSEC5_DV(s[1364]);
initA_SCGHQ1_DV(s[1365]);
initA_SCGHQ2_DV(s[1366]);
initA_SF12PCS_DV(s[1367]);
initA_SF12MCS_DV(s[1368]);
initA_SWEMWBS_DV(s[1369]);
initA_BMI_DV(s[1370]);
initA_SCFLAG_DV(s[1371]);
initA_ATTACKED_DV(s[1372]);
initA_AVOIDED_DV(s[1373]);
initA_INSULTED_DV(s[1374]);
initA_UNSAFE_DV(s[1375]);
initA_PAYU_DV(s[1376]);
initA_PAYGU_IF(s[1377]);
initA_PAYNU_IF(s[1378]);
initA_SEEARNGRS_IF(s[1379]);
initA_FIYRINVINC_IF(s[1380]);
initA_FIBENOTHR_IF(s[1381]);
initA_FIMNLABGRS_IF(s[1382]);
initA_FIMNGRS_IF(s[1383]);
initA_INDSCUS_XW(s[1384]);
initA_INDPXUS_XW(s[1385]);
initA_INDINUS_XW(s[1386]);
initA_IND5MUS_XW(s[1387]);
initA_RACEL_DV(s[1388]);
}
}
