/**
 * Source code generated by uk.ac.leeds.ccg.andyt.generic.data.us.process.US_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.generic.data.us.data.hhold;
public class US_Wave2_HHOLD_Record extends US_Wave1Or2_HHOLD_Record {
protected byte B_ACC1TO161;
protected byte B_ACC1TO1610;
protected byte B_ACC1TO1611;
protected byte B_ACC1TO1612;
protected byte B_ACC1TO1613;
protected byte B_ACC1TO1614;
protected byte B_ACC1TO162;
protected byte B_ACC1TO163;
protected byte B_ACC1TO164;
protected byte B_ACC1TO165;
protected byte B_ACC1TO166;
protected byte B_ACC1TO167;
protected byte B_ACC1TO168;
protected byte B_ACC1TO169;
protected byte B_ACC1TO1697;
protected byte B_ACCESS;
protected byte B_ADOPTCH01;
protected byte B_ADOPTCH02;
protected byte B_ADOPTCH03;
protected byte B_ADOPTCH04;
protected byte B_ADOPTCH05;
protected boolean B_ADOPTCH06;
protected boolean B_ADOPTCH07;
protected boolean B_ADOPTCH08;
protected boolean B_ADOPTCH09;
protected boolean B_ADOPTCH10;
protected boolean B_ADOPTCH11;
protected boolean B_ADOPTCH12;
protected boolean B_ADOPTCH13;
protected boolean B_ADOPTCH14;
protected boolean B_ADOPTCH15;
protected boolean B_ADOPTCH16;
protected byte B_ADRESP17;
protected byte B_ADSTATUS;
protected byte B_ADVVOUCHER;
protected byte B_AGEGR10_DV;
protected byte B_AGEGR13_DV;
protected byte B_AGEGR5_DV;
protected byte B_AGERET;
protected byte B_AGE_DV;
protected byte B_AGLQUIT;
protected byte B_AIDEFT;
protected byte B_AIDHH;
protected byte B_AIDHRS;
protected byte B_AIDHU1;
protected byte B_AIDHU2;
protected byte B_AIDHUA1;
protected byte B_AIDHUA10;
protected byte B_AIDHUA11;
protected byte B_AIDHUA12;
protected byte B_AIDHUA13;
protected byte B_AIDHUA14;
protected byte B_AIDHUA15;
protected byte B_AIDHUA16;
protected byte B_AIDHUA2;
protected byte B_AIDHUA3;
protected byte B_AIDHUA4;
protected byte B_AIDHUA5;
protected byte B_AIDHUA6;
protected byte B_AIDHUA7;
protected byte B_AIDHUA8;
protected byte B_AIDHUA9;
protected byte B_AIDXHH;
protected byte B_ALLCH01;
protected byte B_ALLCH02;
protected byte B_ALLCH03;
protected byte B_ALLCH04;
protected byte B_ALLCH05;
protected byte B_ALLCH06;
protected byte B_ALLCH07;
protected byte B_ALLCH08;
protected byte B_ALLCH09;
protected boolean B_ALLCH10;
protected boolean B_ALLCH11;
protected boolean B_ALLCH12;
protected boolean B_ALLCH13;
protected boolean B_ALLCH14;
protected boolean B_ALLCH15;
protected boolean B_ALLCH16;
protected byte B_ALTCAR1;
protected byte B_ALTCAR10;
protected byte B_ALTCAR11;
protected byte B_ALTCAR12;
protected byte B_ALTCAR2;
protected byte B_ALTCAR3;
protected byte B_ALTCAR4;
protected byte B_ALTCAR5;
protected byte B_ALTCAR6;
protected byte B_ALTCAR7;
protected byte B_ALTCAR8;
protected byte B_ALTCAR9;
protected byte B_ALTCAR96;
protected byte B_ALTCAR97;
protected byte B_ARCFREQ;
protected byte B_AREA;
protected byte B_ARTS1A1;
protected byte B_ARTS1A2;
protected byte B_ARTS1A3;
protected byte B_ARTS1A4;
protected byte B_ARTS1A5;
protected byte B_ARTS1A6;
protected byte B_ARTS1A7;
protected byte B_ARTS1A96;
protected byte B_ARTS1B10;
protected byte B_ARTS1B11;
protected byte B_ARTS1B12;
protected byte B_ARTS1B13;
protected byte B_ARTS1B14;
protected byte B_ARTS1B15;
protected byte B_ARTS1B9;
protected byte B_ARTS1B96;
protected byte B_ARTS1FREQ;
protected byte B_ARTS2A1;
protected byte B_ARTS2A2;
protected byte B_ARTS2A3;
protected byte B_ARTS2A4;
protected byte B_ARTS2A5;
protected byte B_ARTS2A6;
protected byte B_ARTS2A7;
protected byte B_ARTS2A96;
protected byte B_ARTS2B10;
protected byte B_ARTS2B11;
protected byte B_ARTS2B12;
protected byte B_ARTS2B13;
protected byte B_ARTS2B14;
protected byte B_ARTS2B15;
protected byte B_ARTS2B9;
protected byte B_ARTS2B96;
protected byte B_ARTS2FREQ;
protected byte B_BASNSA;
protected double B_BASRATE;
protected byte B_BASREST;
protected byte B_BENCB;
protected byte B_BENCTC;
protected byte B_BENDIS1;
protected byte B_BENDIS10;
protected byte B_BENDIS11;
protected byte B_BENDIS2;
protected byte B_BENDIS3;
protected byte B_BENDIS4;
protected byte B_BENDIS5;
protected byte B_BENDIS6;
protected byte B_BENDIS7;
protected byte B_BENDIS8;
protected byte B_BENDIS9;
protected byte B_BENDIS96;
protected byte B_BENFAM1;
protected byte B_BENFAM2;
protected byte B_BENFAM3;
protected byte B_BENFAM4;
protected byte B_BENFAM5;
protected byte B_BENFAM96;
protected byte B_BENHOU1;
protected byte B_BENHOU2;
protected byte B_BENHOU3;
protected byte B_BENHOU4;
protected byte B_BENHOU96;
protected byte B_BENPEN1;
protected byte B_BENPEN2;
protected byte B_BENPEN3;
protected byte B_BENPEN4;
protected byte B_BENPEN5;
protected byte B_BENPEN6;
protected byte B_BENPEN7;
protected byte B_BENPEN8;
protected byte B_BENPEN96;
protected byte B_BENSTA1;
protected byte B_BENSTA2;
protected byte B_BENSTA3;
protected byte B_BENSTA4;
protected byte B_BENSTA5;
protected byte B_BENSTA6;
protected byte B_BENSTA7;
protected byte B_BENSTA8;
protected byte B_BENSTA96;
protected byte B_BENTAX1;
protected byte B_BENTAX2;
protected byte B_BENTAX3;
protected byte B_BENTAX4;
protected byte B_BENTAX5;
protected byte B_BENTAX96;
protected byte B_BENUNEMP1;
protected byte B_BENUNEMP2;
protected byte B_BENUNEMP96;
protected short B_BIRTHY;
protected byte B_BTYPE1;
protected byte B_BTYPE2;
protected byte B_BTYPE3;
protected byte B_BTYPE4;
protected byte B_BTYPE5;
protected byte B_BTYPE6;
protected byte B_BTYPE7;
protected byte B_BTYPE8;
protected byte B_BTYPE9;
protected byte B_BTYPE96;
protected byte B_BUNO_DV;
protected byte B_CARCLUB;
protected byte B_CARSHARE;
protected byte B_CARUSE;
protected byte B_CCARE;
protected byte B_CCWORK;
protected short B_CH1BY4;
protected short B_CHARAM;
protected byte B_CHARFREQ;
protected byte B_CHARGV;
protected byte B_CHKCOA;
protected byte B_CHKDOB;
protected byte B_CHKSEX;
protected int B_CINDTIME;
protected byte B_CITZN1;
protected byte B_CITZN2;
protected byte B_CITZN3;
protected byte B_CIVICDUTY;
protected byte B_CJBATT;
protected byte B_CJOB;
protected byte B_CLUB;
protected byte B_CMLSTAT1;
protected byte B_CMLSTAT2;
protected byte B_CMLSTAT3;
protected byte B_COH1BM;
protected short B_COH1BY;
protected byte B_COH1EM;
protected short B_COH1EY;
protected byte B_COH1MR;
protected byte B_COHAB;
protected byte B_COHABN;
protected boolean B_COHAB_DV;
protected byte B_COLBENS1;
protected byte B_COLBENS2;
protected byte B_COLBENS3;
protected byte B_COMBIKE;
protected byte B_COMBUS;
protected byte B_COMMETRO;
protected byte B_COMOTHER;
protected byte B_COMTAXI;
protected byte B_COMTRAIN;
protected byte B_COMWALK;
protected byte B_CONTFT;
protected byte B_COUNTRY;
protected byte B_CSTAT;
protected byte B_CTADD1_CODE;
protected byte B_CTADD2_CODE;
protected byte B_CTCNTY_CODE;
protected byte B_CTEMAIL_CODE;
protected byte B_CTPCODE_CODE;
protected byte B_CTTEL1_CODE;
protected byte B_CTTEL2_CODE;
protected byte B_CTTOWN_CODE;
protected byte B_CURRJOB1;
protected boolean B_CURRJOB10;
protected byte B_CURRJOB2;
protected byte B_CURRJOB3;
protected byte B_CURRJOB4;
protected byte B_CURRJOB5;
protected byte B_CURRJOB6;
protected byte B_CURRJOB7;
protected byte B_CURRJOB8;
protected byte B_CURRJOB9;
protected byte B_CURRPART1;
protected byte B_CURRPART2;
protected boolean B_CURRPART3;
protected byte B_CURRPART4;
protected byte B_CURRSTAT1;
protected byte B_CURRSTAT10;
protected byte B_CURRSTAT2;
protected byte B_CURRSTAT3;
protected byte B_CURRSTAT4;
protected byte B_CURRSTAT5;
protected byte B_CURRSTAT6;
protected byte B_CURRSTAT7;
protected byte B_CURRSTAT8;
protected boolean B_CURRSTAT9;
protected byte B_DAYWLK;
protected byte B_DEMORIENT;
protected boolean B_DEPCHL_DV;
protected byte B_DEPENTH1;
protected byte B_DEPENTH2;
protected byte B_DEPENTH3;
protected byte B_DEPENTH4;
protected byte B_DEPENTH5;
protected byte B_DEPENTH6;
protected byte B_DISDIF1;
protected byte B_DISDIF10;
protected byte B_DISDIF11;
protected byte B_DISDIF12;
protected byte B_DISDIF2;
protected byte B_DISDIF3;
protected byte B_DISDIF4;
protected byte B_DISDIF5;
protected byte B_DISDIF6;
protected byte B_DISDIF7;
protected byte B_DISDIF8;
protected byte B_DISDIF9;
protected byte B_DISDIF96;
protected byte B_DIVCHK1;
protected byte B_DIVCHK2;
protected boolean B_DIVCHK3;
protected byte B_DIVFIN1;
protected boolean B_DIVFIN2;
protected boolean B_DIVFIN3;
protected short B_DOBY_DV;
protected byte B_DRIVE;
protected byte B_DVAGE;
protected byte B_DVM1;
protected boolean B_DVM2;
protected boolean B_DVM3;
protected short B_DVY41;
protected boolean B_DVY42;
protected boolean B_DVY43;
protected byte B_EDASP;
protected byte B_EDTYPE;
protected byte B_EDUCATION;
protected byte B_EMPCHK;
protected byte B_EMPLOY;
protected byte B_EMPSTENDD;
protected byte B_EMPSTENDM;
protected short B_EMPSTENDY4;
protected byte B_ENDMNTH1;
protected byte B_ENDMNTH2;
protected byte B_ENDMNTH3;
protected byte B_ENDMNTH4;
protected boolean B_ENDMNTH5;
protected byte B_EPROSH;
protected byte B_ETHCLOSE1;
protected byte B_ETHCLOSE10;
protected byte B_ETHCLOSE11;
protected byte B_ETHCLOSE2A;
protected byte B_ETHCLOSE2B;
protected byte B_ETHCLOSE3;
protected byte B_ETHCLOSE4A;
protected byte B_ETHCLOSE4B;
protected byte B_ETHCLOSE5;
protected byte B_ETHCLOSE6;
protected byte B_ETHCLOSE7;
protected byte B_ETHCLOSE8;
protected byte B_ETHCLOSE9;
protected byte B_ETHID10;
protected byte B_ETHID11;
protected byte B_ETHID12;
protected byte B_ETHID13;
protected byte B_ETHID14;
protected byte B_ETHID2;
protected byte B_ETHID3;
protected byte B_ETHID4A;
protected byte B_ETHID4B;
protected byte B_ETHID5;
protected byte B_ETHID6;
protected byte B_ETHID7;
protected byte B_ETHID8;
protected byte B_ETHID9;
protected byte B_ETHN_DV;
protected byte B_EVENT1;
protected byte B_EVENT1S;
protected byte B_EVENT2;
protected byte B_EVENT2S;
protected byte B_EVENT3;
protected byte B_EVENT3S;
protected byte B_EVENT4;
protected byte B_EVENT4S;
protected byte B_EXTNSA;
protected double B_EXTRATE;
protected byte B_EXTREST;
protected byte B_FAMILY;
protected byte B_FATHER;
protected byte B_FEDLIK;
protected byte B_FEDNT;
protected byte B_FEEND;
protected byte B_FENOW;
protected byte B_FF_BENTYPE01;
protected byte B_FF_BENTYPE02;
protected byte B_FF_BENTYPE03;
protected byte B_FF_BENTYPE04;
protected byte B_FF_BENTYPE05;
protected byte B_FF_BENTYPE06;
protected byte B_FF_BENTYPE07;
protected byte B_FF_BENTYPE08;
protected byte B_FF_BENTYPE09;
protected byte B_FF_BENTYPE10;
protected byte B_FF_BENTYPE11;
protected byte B_FF_BENTYPE12;
protected byte B_FF_BENTYPE13;
protected byte B_FF_BENTYPE14;
protected byte B_FF_BENTYPE15;
protected byte B_FF_BENTYPE16;
protected byte B_FF_BENTYPE17;
protected byte B_FF_BENTYPE18;
protected byte B_FF_BENTYPE19;
protected byte B_FF_BENTYPE20;
protected byte B_FF_BENTYPE21;
protected byte B_FF_BENTYPE22;
protected byte B_FF_BENTYPE23;
protected byte B_FF_BENTYPE24;
protected byte B_FF_BENTYPE25;
protected byte B_FF_BENTYPE26;
protected byte B_FF_BENTYPE27;
protected byte B_FF_BENTYPE28;
protected byte B_FF_BENTYPE29;
protected byte B_FF_BENTYPE30;
protected byte B_FF_BENTYPE31;
protected byte B_FF_BENTYPE32;
protected byte B_FF_BENTYPE33;
protected byte B_FF_BENTYPE34;
protected byte B_FF_BENTYPE35;
protected byte B_FF_BENTYPE36;
protected boolean B_FF_BENTYPE37;
protected byte B_FF_BENTYPE38;
protected byte B_FF_EMPLW;
protected byte B_FF_EVERINT;
protected byte B_FF_IVLOLW;
protected byte B_FF_JBMNGR;
protected byte B_FF_JBSEMP;
protected byte B_FF_JBSIZE;
protected byte B_FF_JBSTAT;
protected byte B_FF_OPRLG;
protected byte B_FF_OPRLG0;
protected byte B_FF_OPRLG0NI;
protected byte B_FF_TEL;
protected byte B_FF_UKBORN;
protected short B_FF_YR2UK4;
protected double B_FIBENOTHR_DV;
protected double B_FIBENOTHR_IF;
protected boolean B_FIBENOTHR_TC;
protected double B_FIMNGRS_DV;
protected double B_FIMNGRS_IF;
protected boolean B_FIMNGRS_TC;
protected double B_FIMNINVNET_DV;
protected double B_FIMNLABGRS_DV;
protected double B_FIMNLABGRS_IF;
protected boolean B_FIMNLABGRS_TC;
protected double B_FIMNLABNET_DV;
protected boolean B_FIMNLABNET_TC;
protected double B_FIMNMISC_DV;
protected double B_FIMNNET_DV;
protected double B_FIMNPEN_DV;
protected double B_FIMNPRBEN_DV;
protected double B_FIMNSBEN_DV;
protected byte B_FINFUT;
protected byte B_FINNOW;
protected byte B_FIYRDB1;
protected byte B_FIYRDB2;
protected byte B_FIYRDB3;
protected byte B_FIYRDB4;
protected byte B_FIYRDB5;
protected byte B_FIYRDB6;
protected int B_FIYRDIA;
protected double B_FIYRINVINC_DV;
protected byte B_FIYRINVINC_IF;
protected boolean B_FIYRINVINC_TC;
protected int B_FNPID;
protected byte B_FNPNO;
protected int B_FNSPID;
protected byte B_FNSPNO;
protected byte B_FOOD1;
protected byte B_FOOD2;
protected byte B_FOOD3;
protected byte B_FOOD4;
protected byte B_FOOD5;
protected byte B_FOOD6;
protected byte B_FOOD7;
protected byte B_FRUVEGE;
protected byte B_FT2ENDM1;
protected byte B_FT2ENDM2;
protected short B_FT2ENDY41;
protected short B_FT2ENDY42;
protected byte B_FTEDANY;
protected byte B_FTEDEND1;
protected byte B_FTEDEND2;
protected byte B_FTEDMOR1;
protected byte B_FTEDMOR2;
protected byte B_FTEDSTARTM1;
protected byte B_FTEDSTARTM2;
protected short B_FTEDSTARTY41;
protected short B_FTEDSTARTY42;
protected byte B_FTENDM;
protected short B_FTENDY4;
protected byte B_FTQUALS;
protected short B_FUTRA;
protected short B_FUTRB;
protected short B_FUTRC;
protected short B_FUTRD;
protected short B_FUTRE;
protected short B_FUTRF;
protected short B_FUTRG;
protected short B_FUTRH;
protected short B_FUTRI;
protected short B_FUTRJ;
protected short B_FUTRK;
protected short B_FUTRL;
protected byte B_GIVECOA;
protected byte B_GOR_DV;
protected int B_GRFPID;
protected byte B_GRFPNO;
protected int B_GRMPID;
protected byte B_GRMPNO;
protected byte B_GRPBFTS;
protected byte B_HCONDN1;
protected byte B_HCONDN10;
protected byte B_HCONDN11;
protected byte B_HCONDN12;
protected byte B_HCONDN13;
protected byte B_HCONDN14;
protected byte B_HCONDN15;
protected byte B_HCONDN16;
protected byte B_HCONDN17;
protected byte B_HCONDN2;
protected byte B_HCONDN3;
protected byte B_HCONDN4;
protected byte B_HCONDN5;
protected byte B_HCONDN6;
protected byte B_HCONDN7;
protected byte B_HCONDN8;
protected byte B_HCONDN9;
protected byte B_HCONDN96;
protected byte B_HCONDNO1;
protected byte B_HCONDNO2;
protected byte B_HCONDNO3;
protected byte B_HCONDNO4;
protected byte B_HCONDNO5;
protected byte B_HCONDNO6;
protected byte B_HCONDNO7;
protected byte B_HCONDNO8;
protected byte B_HCONDNS1;
protected byte B_HCONDNS2;
protected byte B_HCONDNS3;
protected byte B_HCONDNS4;
protected byte B_HCONDNS5;
protected byte B_HCONDNS6;
protected byte B_HCONDNS7;
protected byte B_HCONDNS8;
protected byte B_HEALTH;
protected byte B_HERFREQ;
protected byte B_HERITAGE1;
protected byte B_HERITAGE2;
protected byte B_HERITAGE3;
protected byte B_HERITAGE4;
protected byte B_HERITAGE5;
protected byte B_HERITAGE6;
protected byte B_HERITAGE7;
protected byte B_HERITAGE8;
protected byte B_HERITAGE96;
protected byte B_HGADOPTF;
protected byte B_HGADOPTM;
protected byte B_HGBIOF;
protected byte B_HGBIOM;
protected byte B_HGPART;
protected byte B_HHORIG;
protected byte B_HHRESP_DV;
protected byte B_HHTYPE_DV;
protected int B_HIDP;
protected byte B_HIQUAL_DV;
protected byte B_HOSPC1;
protected byte B_HOSPC2;
protected byte B_HOSPC3;
protected byte B_HOSPC4;
protected byte B_HOSPC5;
protected byte B_HOSPC6;
protected byte B_HOSPC7;
protected byte B_HOSPC8;
protected short B_HOSPDC1;
protected short B_HOSPDC2;
protected byte B_HOSPDC3;
protected byte B_HOSPDC4;
protected byte B_HOSPDC5;
protected byte B_HOSPDC6;
protected boolean B_HOSPDC7;
protected boolean B_HOSPDC8;
protected byte B_HOUSING;
protected short B_HOWLNG;
protected int B_HRPID;
protected byte B_HRPNO;
protected byte B_HUBOSS;
protected byte B_HUBUYS;
protected byte B_HUDIY;
protected byte B_HUFRYS;
protected byte B_HUIRON;
protected byte B_HUMOPS;
protected byte B_HUPOTS;
protected byte B_HUSITS;
protected byte B_IENDDATHH;
protected byte B_IENDDATMM;
protected byte B_IENDDATSS;
protected double B_IND5MUS_LW;
protected double B_INDIN01_LW;
protected double B_INDIN91_LW;
protected double B_INDINBH_XW;
protected double B_INDINUB_XW;
protected double B_INDINUS_LW;
protected double B_INDINUS_XW;
protected byte B_INDMODE;
protected double B_INDPXBH_XW;
protected double B_INDPXUB_XW;
protected double B_INDPXUS_LW;
protected double B_INDPXUS_XW;
protected double B_INDSCBH_XW;
protected double B_INDSCUB_XW;
protected double B_INDSCUS_LW;
protected double B_INDSCUS_XW;
protected byte B_INTDATD_DV;
protected byte B_INTDATM_DV;
protected short B_INTDATY_DV;
protected byte B_INVITRO1;
protected byte B_INVITRO2;
protected boolean B_INVITRO3;
protected boolean B_INVITRO4;
protected boolean B_INVITRO5;
protected byte B_IOUTCOME;
protected byte B_ISTRTDATD;
protected byte B_ISTRTDATHH;
protected byte B_ISTRTDATM;
protected byte B_ISTRTDATMM;
protected byte B_ISTRTDATSS;
protected short B_ISTRTDATY;
protected byte B_IVAFFCT11;
protected byte B_IVAFFCT12;
protected byte B_IVAFFCT13;
protected byte B_IVAFFCT14;
protected byte B_IVAFFCT15;
protected byte B_IVAFFCT17;
protected byte B_IVAFFCT21;
protected byte B_IVAFFCT22;
protected byte B_IVAFFCT23;
protected byte B_IVAFFCT27;
protected byte B_IVAFFCT30;
protected byte B_IVAFFCT97;
protected byte B_IVCOOP;
protected boolean B_IVFIO;
protected byte B_IVINFNCE;
protected byte B_IVINTLANG;
protected byte B_IVPRSNT;
protected byte B_IVTRANS;
protected byte B_IVWHOINT;
protected byte B_J1BOSS;
protected byte B_J1MNGR;
protected byte B_J1NONE;
protected byte B_J1NSSEC5_DV;
protected byte B_J1SEMP;
protected short B_J1SOC00_CC;
protected short B_J1SOC10_CC;
protected byte B_J1SOC90_CC;
protected byte B_J2HAS;
protected short B_J2HRS;
protected byte B_J2NSSEC5_DV;
protected short B_J2PAY;
protected double B_J2PAYNET_DV;
protected double B_J2PAY_DV;
protected byte B_J2PAY_IF;
protected byte B_J2SEMP;
protected short B_J2SOC00_CC;
protected short B_J2SOC10_CC;
protected byte B_J2SOC90_CC;
protected byte B_JBATT1;
protected boolean B_JBATT10;
protected byte B_JBATT2;
protected byte B_JBATT3;
protected byte B_JBATT4;
protected byte B_JBATT5;
protected byte B_JBATT6;
protected boolean B_JBATT7;
protected byte B_JBATT8;
protected boolean B_JBATT9;
protected byte B_JBBGD;
protected byte B_JBBGM;
protected short B_JBBGY;
protected byte B_JBENDD;
protected byte B_JBENDM;
protected byte B_JBENDREAS;
protected short B_JBENDY4;
protected byte B_JBES2000;
protected byte B_JBFLEX1;
protected byte B_JBFLEX2;
protected byte B_JBFLEX3;
protected byte B_JBFLEX4;
protected byte B_JBFLEX5;
protected byte B_JBFLEX6;
protected byte B_JBFLEX7;
protected byte B_JBFLEX8;
protected byte B_JBFLEX96;
protected byte B_JBFT_DV;
protected byte B_JBFXINF;
protected byte B_JBFXUSE1;
protected byte B_JBFXUSE2;
protected byte B_JBFXUSE3;
protected byte B_JBFXUSE4;
protected byte B_JBFXUSE5;
protected byte B_JBFXUSE6;
protected byte B_JBFXUSE7;
protected byte B_JBFXUSE8;
protected byte B_JBFXUSE96;
protected byte B_JBHAD;
protected byte B_JBHAS;
protected double B_JBHRS;
protected byte B_JBIINDB_DV;
protected short B_JBISCO88_CC;
protected byte B_JBLKCHA;
protected byte B_JBLKCHB;
protected byte B_JBLKCHC;
protected byte B_JBLKCHD;
protected byte B_JBLKCHE;
protected byte B_JBMNGR;
protected byte B_JBMNGRCHK;
protected byte B_JBNSSEC3_DV;
protected byte B_JBNSSEC5_DV;
protected byte B_JBNSSEC8_DV;
protected byte B_JBNSSEC_DV;
protected byte B_JBOFF;
protected byte B_JBOFFY;
protected byte B_JBONUS;
protected byte B_JBOT;
protected byte B_JBOTPD;
protected byte B_JBPEN;
protected byte B_JBPENM;
protected short B_JBPENY4;
protected byte B_JBPERFP;
protected byte B_JBPL;
protected byte B_JBRGSC_DV;
protected byte B_JBRISE;
protected byte B_JBSAMR;
protected byte B_JBSAT;
protected byte B_JBSEC;
protected byte B_JBSECT;
protected byte B_JBSECTPUB;
protected byte B_JBSEG_DV;
protected byte B_JBSEMP;
protected byte B_JBSEMPCHK;
protected byte B_JBSIC07CHK;
protected byte B_JBSIC07_CC;
protected byte B_JBSIZE;
protected byte B_JBSIZECHK;
protected byte B_JBSOC00CHK;
protected short B_JBSOC00_CC;
protected byte B_JBSOCGR_DV;
protected byte B_JBSTAT;
protected byte B_JBTERM1;
protected byte B_JBTERM2;
protected short B_JBTTWT;
protected byte B_JBXPCHA;
protected byte B_JBXPCHB;
protected byte B_JBXPCHC;
protected byte B_JBXPCHD;
protected byte B_JBXPCHE;
protected byte B_JLBOSS;
protected byte B_JLENDM;
protected short B_JLENDY;
protected byte B_JLES2000;
protected byte B_JLIINDB_DV;
protected short B_JLISCO88_CC;
protected byte B_JLMNGR;
protected byte B_JLNSSEC3_DV;
protected byte B_JLNSSEC5_DV;
protected byte B_JLNSSEC8_DV;
protected byte B_JLNSSEC_DV;
protected byte B_JLRGSC_DV;
protected byte B_JLSEG_DV;
protected byte B_JLSEMP;
protected byte B_JLSIC07_CC;
protected byte B_JLSIZE;
protected short B_JLSOC00_CC;
protected byte B_JOBHOURS1;
protected boolean B_JOBHOURS10;
protected byte B_JOBHOURS2;
protected byte B_JOBHOURS3;
protected byte B_JOBHOURS4;
protected byte B_JOBHOURS5;
protected byte B_JOBHOURS6;
protected byte B_JOBHOURS7;
protected boolean B_JOBHOURS8;
protected byte B_JOBHOURS9;
protected byte B_JSACCS;
protected byte B_JSBOSS;
protected byte B_JSHRS;
protected byte B_JSPART;
protected int B_JSPAYU;
protected byte B_JSPAYW;
protected byte B_JSPL;
protected byte B_JSPRBM;
protected short B_JSPRBY4;
protected byte B_JSPREM;
protected short B_JSPREY4;
protected int B_JSPRF;
protected byte B_JSPRLS;
protected byte B_JSPRNI;
protected byte B_JSPRTX;
protected byte B_JSPYNI;
protected byte B_JSPYTX;
protected byte B_JSSIZE;
protected byte B_JSTTWT;
protected short B_JSTTWTB;
protected byte B_JSTYPEB;
protected byte B_JSWORKTRAV;
protected byte B_JUBGN;
protected byte B_JULK4WK;
protected byte B_JULK4X1;
protected byte B_JULK4X2;
protected byte B_JULK4X3;
protected byte B_JULK4X4;
protected byte B_JULK4X5;
protected byte B_JULK4X6;
protected byte B_JULK4X96;
protected byte B_JULKJB;
protected byte B_JWBS1_DV;
protected byte B_JWBS2_DV;
protected byte B_KIDLANG;
protected byte B_LADOPT;
protected byte B_LASTMSTATCH1;
protected byte B_LASTMSTATCH2;
protected byte B_LASTMSTATCH3;
protected byte B_LCHMULTI1;
protected byte B_LCHMULTI2;
protected boolean B_LCHMULTI3;
protected boolean B_LCHMULTI4;
protected byte B_LCHMULTI5;
protected byte B_LCOHNPI;
protected double B_LENINDINTV;
protected byte B_LIBFREQ;
protected byte B_LIFTHH;
protected byte B_LIFTXHH;
protected byte B_LINGUA;
protected byte B_LIVESP;
protected boolean B_LIVESP_DV;
protected byte B_LIVEWITH;
protected byte B_LKMOVE;
protected byte B_LMAR1M;
protected short B_LMAR1Y;
protected byte B_LMCBM1;
protected byte B_LMCBM2;
protected byte B_LMCBM3;
protected byte B_LMCBM4;
protected short B_LMCBY41;
protected short B_LMCBY42;
protected short B_LMCBY43;
protected short B_LMCBY44;
protected byte B_LMSPM1;
protected byte B_LMSPM2;
protected byte B_LMSPM3;
protected byte B_LMSPM4;
protected short B_LMSPY41;
protected short B_LMSPY42;
protected short B_LMSPY43;
protected short B_LMSPY44;
protected byte B_LNADOPT;
protected byte B_LNPRNT;
protected byte B_LPRNT;
protected byte B_LVMTHP;
protected byte B_LVWHY;
protected short B_LVYRP;
protected byte B_LWWRONG;
protected byte B_MACOB;
protected byte B_MAEDQF;
protected byte B_MAJU;
protected byte B_MANSSEC5_DV;
protected byte B_MARSTAT;
protected short B_MASOC00_CC;
protected short B_MASOC10_CC;
protected byte B_MASOC90_CC;
protected byte B_MASTAT_DV;
protected byte B_MATLV;
protected byte B_MATLVENDD;
protected byte B_MATLVENDM;
protected short B_MATLVENDY4;
protected byte B_MATLVSTD;
protected byte B_MATLVSTM;
protected short B_MATLVSTY4;
protected byte B_MAYRUK;
protected byte B_MEMORIG;
protected byte B_MEMPLOY;
protected byte B_MLA1;
protected byte B_MLA2;
protected byte B_MLA3;
protected byte B_MLA96;
protected byte B_MLSTAT;
protected byte B_MLSTATCHK;
protected int B_MNPID;
protected byte B_MNPNO;
protected int B_MNSPID;
protected byte B_MNSPNO;
protected byte B_MOBUSE;
protected byte B_MONTH;
protected byte B_MOTCYC;
protected byte B_MOVDIR;
protected byte B_MOVEOTH_CODE;
protected byte B_MOVY11;
protected byte B_MOVY12;
protected byte B_MOVY13;
protected byte B_MOVY14;
protected byte B_MOVY15;
protected byte B_MOVY16;
protected byte B_MSTATCH1;
protected byte B_MSTATCH2;
protected byte B_MSTATCH3;
protected byte B_MSTATSAM;
protected byte B_MSTATSAMN;
protected byte B_MUSFREQ;
protected byte B_MVEVER;
protected byte B_MVMNTH;
protected short B_MVYR;
protected byte B_NADOPTCH;
protected byte B_NAIDXHH;
protected byte B_NATCH01;
protected byte B_NATCH02;
protected byte B_NATCH03;
protected byte B_NATCH04;
protected byte B_NATCH05;
protected byte B_NATCH06;
protected byte B_NATCH07;
protected byte B_NATCH08;
protected byte B_NATCH09;
protected byte B_NATCH10;
protected byte B_NATCH11;
protected boolean B_NATCH12;
protected boolean B_NATCH13;
protected boolean B_NATCH14;
protected boolean B_NATCH15;
protected boolean B_NATCH16;
protected byte B_NATID1;
protected byte B_NATID2;
protected byte B_NATID3;
protected byte B_NATID4;
protected byte B_NATID5;
protected byte B_NATID6;
protected byte B_NATID97;
protected byte B_NCH10TO15;
protected byte B_NCH14RESP;
protected byte B_NCH415RESP;
protected byte B_NCH5TO15;
protected byte B_NCHILD;
protected byte B_NCHILD_DV;
protected byte B_NCHRESP;
protected byte B_NCHUND18RESP;
protected byte B_NCHUNDER16;
protected short B_NCIGS;
protected byte B_NDEPCHL_DV;
protected byte B_NETUSE;
protected byte B_NEWENTRANT;
protected byte B_NEWPER;
protected byte B_NEXT;
protected byte B_NEXTELSE1;
protected byte B_NEXTELSE10;
protected byte B_NEXTELSE2;
protected byte B_NEXTELSE3;
protected byte B_NEXTELSE4;
protected byte B_NEXTELSE5;
protected byte B_NEXTELSE6;
protected byte B_NEXTELSE7;
protected byte B_NEXTELSE8;
protected boolean B_NEXTELSE9;
protected byte B_NEXTJOB1;
protected boolean B_NEXTJOB10;
protected byte B_NEXTJOB2;
protected byte B_NEXTJOB3;
protected byte B_NEXTJOB4;
protected byte B_NEXTJOB5;
protected byte B_NEXTJOB6;
protected byte B_NEXTJOB7;
protected byte B_NEXTJOB8;
protected byte B_NEXTJOB9;
protected byte B_NEXTSTAT1;
protected byte B_NEXTSTAT10;
protected byte B_NEXTSTAT2;
protected byte B_NEXTSTAT3;
protected byte B_NEXTSTAT4;
protected byte B_NEXTSTAT5;
protected byte B_NEXTSTAT6;
protected byte B_NEXTSTAT7;
protected byte B_NEXTSTAT8;
protected byte B_NEXTSTAT9;
protected byte B_NFH01;
protected byte B_NFH02;
protected byte B_NFH03;
protected byte B_NFH04;
protected byte B_NFH05;
protected byte B_NFH06;
protected byte B_NFH07;
protected byte B_NFH08;
protected byte B_NFH09;
protected byte B_NFH10;
protected byte B_NFH11;
protected byte B_NFH12;
protected byte B_NFH13;
protected byte B_NFH14;
protected byte B_NFH15;
protected byte B_NFH16;
protected byte B_NFH17;
protected byte B_NFH18;
protected byte B_NFH19;
protected byte B_NFH20;
protected byte B_NFH21;
protected byte B_NFH22;
protected byte B_NFH23;
protected byte B_NFH24;
protected byte B_NFH25;
protected byte B_NFH26;
protected byte B_NFH27;
protected byte B_NFH28;
protected byte B_NFH29;
protected byte B_NFH30;
protected byte B_NFH31;
protected byte B_NFH32;
protected byte B_NFH33;
protected byte B_NFH34;
protected byte B_NFH35;
protected byte B_NFH36;
protected boolean B_NFH37;
protected byte B_NFH38;
protected byte B_NGRP_DV;
protected byte B_NHIQUAL_DV;
protected byte B_NIACT;
protected byte B_NIREL;
protected byte B_NISERPS;
protected byte B_NMAR;
protected byte B_NMPSP_DV;
protected byte B_NNATCH;
protected byte B_NNEWBORN;
protected byte B_NNMPSP_DV;
protected byte B_NNSIB_DV;
protected byte B_NNSSIB_DV;
protected byte B_NOTEMPCHK;
protected byte B_NPENSIONER_DV;
protected byte B_NPNS_DV;
protected byte B_NPN_DV;
protected byte B_NQFHIGH_DV;
protected byte B_NUNMPSP_DV;
protected byte B_NXTJBENDD;
protected byte B_NXTJBENDM;
protected short B_NXTJBENDY4;
protected byte B_NXTJBES;
protected byte B_NXTJBHRS;
protected byte B_NXTST;
protected byte B_NXTSTELSE;
protected byte B_NXTSTENDD;
protected byte B_NXTSTENDM;
protected short B_NXTSTENDY4;
protected byte B_OCIMPA;
protected byte B_OCIMPB;
protected byte B_OCIMPE;
protected byte B_OCIMPF;
protected byte B_OCIMPI;
protected byte B_OCIMPK;
protected byte B_OCIMPL;
protected byte B_OPRLG;
protected byte B_OPRLG0;
protected byte B_OPRLG0NI;
protected byte B_OPRLG1;
protected byte B_ORIGADD;
protected byte B_OVTNSA;
protected byte B_OVTPAY;
protected double B_OVTRATE;
protected byte B_OVTREST;
protected byte B_PACOB;
protected byte B_PAEDQF;
protected byte B_PAJU;
protected byte B_PANSSEC5_DV;
protected short B_PASOC00_CC;
protected short B_PASOC10_CC;
protected byte B_PASOC90_CC;
protected int B_PAYGL;
protected double B_PAYGU_DV;
protected byte B_PAYGU_IF;
protected byte B_PAYGWC;
protected double B_PAYG_DV;
protected int B_PAYNL;
protected double B_PAYNU_DV;
protected byte B_PAYNU_IF;
protected byte B_PAYNWC;
protected double B_PAYN_DV;
protected byte B_PAYRUK;
protected byte B_PAYTYP;
protected int B_PAYU;
protected byte B_PAYUG;
protected byte B_PAYUSL;
protected byte B_PAYUWC;
protected double B_PAYU_DV;
protected byte B_PBNFT1;
protected byte B_PBNFT10;
protected byte B_PBNFT11;
protected byte B_PBNFT12;
protected byte B_PBNFT2;
protected byte B_PBNFT3;
protected byte B_PBNFT4;
protected byte B_PBNFT5;
protected byte B_PBNFT6;
protected byte B_PBNFT7;
protected byte B_PBNFT8;
protected byte B_PBNFT9;
protected byte B_PBNFT96;
protected byte B_PENMCN;
protected byte B_PENMEX;
protected double B_PENMPY;
protected byte B_PENMTP;
protected boolean B_PENSIONER_DV;
protected byte B_PENSPB;
protected byte B_PERBFTS;
protected byte B_PERPOLINF;
protected byte B_PJBPTFT;
protected byte B_PJSPTFT;
protected byte B_PJULK4WK;
protected byte B_PLBORNC;
protected byte B_PLNOWM;
protected short B_PLNOWY4;
protected int B_PN1PID;
protected byte B_PN1PNO;
protected byte B_PN1SEX;
protected int B_PN2PID;
protected byte B_PN2PNO;
protected byte B_PN2SEX;
protected byte B_PNO;
protected int B_PNS1PID;
protected byte B_PNS1PNO;
protected byte B_PNS1SEX;
protected int B_PNS2PID;
protected byte B_PNS2PNO;
protected byte B_PNS2SEX;
protected byte B_POLCOST;
protected byte B_PPEN;
protected byte B_PPENT;
protected int B_PPID;
protected byte B_PPNO;
protected byte B_PPPEX;
protected byte B_PPPEXM;
protected int B_PPRAM;
protected byte B_PPRAMPC;
protected byte B_PPREG;
protected byte B_PPSEX;
protected short B_PPYRS;
protected byte B_PREARN;
protected byte B_PREARNA;
protected byte B_PREARNW;
protected byte B_PREASON;
protected byte B_PREG;
protected byte B_PREGDRINK1;
protected byte B_PREGDRINK2;
protected boolean B_PREGDRINK3;
protected boolean B_PREGDRINK4;
protected byte B_PREGDRINK5;
protected byte B_PREGEND1;
protected byte B_PREGEND2;
protected byte B_PREGEND3;
protected byte B_PREGEND4;
protected boolean B_PREGEND5;
protected byte B_PREGFERT1;
protected byte B_PREGFERT2;
protected byte B_PREGFERT3;
protected byte B_PREGFERT4;
protected boolean B_PREGFERT5;
protected byte B_PREGM1;
protected byte B_PREGM2;
protected byte B_PREGM3;
protected byte B_PREGM4;
protected boolean B_PREGM5;
protected byte B_PREGOUT1;
protected byte B_PREGOUT2;
protected byte B_PREGOUT3;
protected byte B_PREGOUT4;
protected byte B_PREGOUT5;
protected byte B_PREGSMK11;
protected boolean B_PREGSMK12;
protected boolean B_PREGSMK13;
protected boolean B_PREGSMK14;
protected boolean B_PREGSMK15;
protected byte B_PREGSMK21;
protected boolean B_PREGSMK22;
protected boolean B_PREGSMK23;
protected boolean B_PREGSMK24;
protected boolean B_PREGSMK25;
protected byte B_PREGSMK31;
protected byte B_PREGSMK32;
protected boolean B_PREGSMK33;
protected boolean B_PREGSMK34;
protected boolean B_PREGSMK35;
protected byte B_PREGSMOKE1;
protected byte B_PREGSMOKE2;
protected boolean B_PREGSMOKE3;
protected boolean B_PREGSMOKE4;
protected byte B_PREGSMOKE5;
protected short B_PREGY41;
protected short B_PREGY42;
protected short B_PREGY43;
protected short B_PREGY44;
protected boolean B_PREGY45;
protected byte B_PREL;
protected byte B_PRFITB;
protected byte B_PRFITBA;
protected byte B_PRFITBW;
protected byte B_PRIDE10;
protected byte B_PRIDE11;
protected byte B_PRIDE12;
protected byte B_PRIDE13;
protected byte B_PRIDE14;
protected byte B_PRIDE2;
protected byte B_PRIDE4A;
protected byte B_PRIDE4B;
protected byte B_PRIDE5;
protected byte B_PRIDE6;
protected byte B_PRIDE7;
protected byte B_PRIDE8;
protected byte B_PRIDE9;
protected byte B_PRIPN;
protected int B_PSU;
protected byte B_QFHIGH;
protected boolean B_QFHIGHFL_DV;
protected byte B_QFHIGH_DV;
protected byte B_QFVOC1;
protected byte B_QFVOC10;
protected byte B_QFVOC11;
protected byte B_QFVOC12;
protected byte B_QFVOC13;
protected byte B_QFVOC14;
protected byte B_QFVOC15;
protected byte B_QFVOC2;
protected byte B_QFVOC3;
protected byte B_QFVOC4;
protected byte B_QFVOC5;
protected byte B_QFVOC6;
protected byte B_QFVOC7;
protected byte B_QFVOC8;
protected byte B_QFVOC9;
protected byte B_QFVOC96;
protected byte B_QUALNE;
protected byte B_QUALNEW1;
protected byte B_QUALNEW10;
protected byte B_QUALNEW11;
protected byte B_QUALNEW13;
protected byte B_QUALNEW15;
protected byte B_QUALNEW16;
protected byte B_QUALNEW17;
protected byte B_QUALNEW18;
protected byte B_QUALNEW19;
protected byte B_QUALNEW20;
protected byte B_QUALNEW21;
protected byte B_QUALNEW22;
protected byte B_QUALNEW23;
protected byte B_QUALNEW24;
protected byte B_QUALNEW25;
protected byte B_QUALNEW26;
protected byte B_QUALNEW27;
protected byte B_QUALNEW28;
protected byte B_QUALNEW29;
protected byte B_QUALNEW3;
protected byte B_QUALNEW30;
protected byte B_QUALNEW31;
protected byte B_QUALNEW4;
protected byte B_QUALNEW5;
protected byte B_QUALNEW6;
protected byte B_QUALNEW7;
protected byte B_QUALNEW8;
protected byte B_QUALNEW9;
protected byte B_QUALOC;
protected byte B_RACEL;
protected byte B_RACELO_CODE;
protected byte B_RACEL_DV;
protected byte B_RACH16_DV;
protected byte B_REASEND1;
protected boolean B_REASEND10;
protected byte B_REASEND2;
protected byte B_REASEND3;
protected byte B_REASEND4;
protected byte B_REASEND5;
protected byte B_REASEND6;
protected byte B_REASEND7;
protected boolean B_REASEND8;
protected byte B_REASEND9;
protected byte B_RELUP;
protected byte B_REMAIL_CODE;
protected boolean B_RESPF16;
protected boolean B_RESPF16_DV;
protected boolean B_RESPM16;
protected boolean B_RESPM16_DV;
protected byte B_RETAMT;
protected byte B_RETCHK;
protected byte B_RETSUF;
protected byte B_RHLAND_CODE;
protected byte B_RPHMOB_CODE;
protected byte B_RPHWRK_CODE;
protected byte B_RTCON1;
protected byte B_RTCON2;
protected byte B_RTCON3;
protected byte B_RTCON4;
protected byte B_RTEXPJB;
protected byte B_RTFND1;
protected byte B_RTFND10;
protected byte B_RTFND2;
protected byte B_RTFND3;
protected byte B_RTFND4;
protected byte B_RTFND5;
protected byte B_RTFND6;
protected byte B_RTFND7;
protected byte B_RTFND8;
protected byte B_RTFND9;
protected byte B_RTFND96;
protected byte B_RTPRO1;
protected byte B_RTPRO2;
protected byte B_RTPRO3;
protected byte B_RTPRO4;
protected byte B_RTPRO5;
protected byte B_RTPRO6;
protected byte B_SAMEJOB;
protected byte B_SAMPST;
protected byte B_SAVE;
protected int B_SAVED;
protected byte B_SAVLT;
protected byte B_SAVREG;
protected byte B_SCAGE1DRINK;
protected byte B_SCALCL7D;
protected byte B_SCANYELSETXT;
protected byte B_SCDEM2MANY;
protected short B_SCDOBY4;
protected byte B_SCEND;
protected byte B_SCEVERDRNK;
protected byte B_SCFALCDRNK;
protected byte B_SCFANNOY;
protected byte B_SCFCRITIC;
protected boolean B_SCFLAG_DV;
protected byte B_SCFLETDWN;
protected byte B_SCFOPENUP;
protected byte B_SCFRELY;
protected byte B_SCFRENDANY;
protected byte B_SCFUNDSTND;
protected byte B_SCGHQ1_DV;
protected byte B_SCGHQ2_DV;
protected byte B_SCGHQA;
protected byte B_SCGHQB;
protected byte B_SCGHQC;
protected byte B_SCGHQD;
protected byte B_SCGHQE;
protected byte B_SCGHQF;
protected byte B_SCGHQG;
protected byte B_SCGHQH;
protected byte B_SCGHQI;
protected byte B_SCGHQJ;
protected byte B_SCGHQK;
protected byte B_SCGHQL;
protected byte B_SCHLLOC;
protected byte B_SCHMCONT;
protected byte B_SCHOK;
protected byte B_SCHOOL;
protected byte B_SCLFSAT1;
protected byte B_SCLFSAT2;
protected byte B_SCLFSAT7;
protected byte B_SCLFSATO;
protected byte B_SCLOUTCONT;
protected byte B_SCMOLWP;
protected byte B_SCNALCL7D;
protected double B_SCNALCPINT;
protected double B_SCNALCPOPS;
protected double B_SCNALCSHOT;
protected double B_SCNALCWINE;
protected byte B_SCOPFAMA;
protected byte B_SCOPFAMB;
protected byte B_SCOPFAMD;
protected byte B_SCOPFAMF;
protected byte B_SCOPFAMH;
protected byte B_SCPANNOY;
protected byte B_SCPCRITIC;
protected byte B_SCPLETDWN;
protected byte B_SCPOPENUP;
protected byte B_SCPRELY;
protected byte B_SCPUNDSTND;
protected byte B_SCRANNOY;
protected byte B_SCRCRITIC;
protected byte B_SCRELANY;
protected byte B_SCRLETDWN;
protected byte B_SCROPENUP;
protected byte B_SCRRELY;
protected byte B_SCRUNDSTND;
protected byte B_SCSEX;
protected byte B_SCSF1;
protected byte B_SCSF2A;
protected byte B_SCSF2B;
protected byte B_SCSF3A;
protected byte B_SCSF3B;
protected byte B_SCSF4A;
protected byte B_SCSF4B;
protected byte B_SCSF5;
protected byte B_SCSF6A;
protected byte B_SCSF6B;
protected byte B_SCSF6C;
protected byte B_SCSF7;
protected byte B_SCSSUP1;
protected byte B_SCSSUPR2R;
protected byte B_SCTIMEMNUF;
protected byte B_SCWHORUAGE;
protected byte B_SCWHORUEDU;
protected byte B_SCWHORUFAM;
protected byte B_SCWHORUPOL;
protected byte B_SCWHORUPRO;
protected byte B_SCWHORURAC;
protected byte B_SCWHORUSEX;
protected byte B_SCWKVFAST;
protected double B_SEEARNGRS_DV;
protected byte B_SEEARNGRS_IF;
protected double B_SEEARNNET_DV;
protected boolean B_SEX;
protected byte B_SEX_DV;
protected byte B_SF1;
protected double B_SF12MCS_DV;
protected double B_SF12PCS_DV;
protected boolean B_SINGLE_DV;
protected byte B_SMAGBG;
protected byte B_SMCIGS;
protected byte B_SMEVER;
protected byte B_SMKMNTH11;
protected byte B_SMKMNTH12;
protected boolean B_SMKMNTH13;
protected boolean B_SMKMNTH14;
protected boolean B_SMKMNTH15;
protected byte B_SMKMNTH21;
protected byte B_SMKMNTH22;
protected boolean B_SMKMNTH23;
protected boolean B_SMKMNTH24;
protected boolean B_SMKMNTH25;
protected byte B_SMKMNTH31;
protected byte B_SMKMNTH32;
protected boolean B_SMKMNTH33;
protected boolean B_SMKMNTH34;
protected boolean B_SMKMNTH35;
protected byte B_SMNCIGS;
protected byte B_SMNOW;
protected byte B_SPORTACT;
protected byte B_SPORTS11;
protected byte B_SPORTS110;
protected byte B_SPORTS111;
protected byte B_SPORTS112;
protected byte B_SPORTS113;
protected byte B_SPORTS114;
protected byte B_SPORTS12;
protected byte B_SPORTS13;
protected byte B_SPORTS14;
protected byte B_SPORTS15;
protected byte B_SPORTS16;
protected byte B_SPORTS17;
protected byte B_SPORTS18;
protected byte B_SPORTS19;
protected byte B_SPORTS196;
protected byte B_SPORTS216;
protected byte B_SPORTS217;
protected byte B_SPORTS218;
protected byte B_SPORTS219;
protected byte B_SPORTS220;
protected byte B_SPORTS221;
protected byte B_SPORTS222;
protected byte B_SPORTS223;
protected byte B_SPORTS224;
protected byte B_SPORTS225;
protected byte B_SPORTS226;
protected byte B_SPORTS227;
protected byte B_SPORTS228;
protected byte B_SPORTS229;
protected byte B_SPORTS230;
protected byte B_SPORTS231;
protected byte B_SPORTS296;
protected byte B_SPORTS31;
protected byte B_SPORTS32;
protected byte B_SPORTS33;
protected byte B_SPORTS34;
protected byte B_SPORTS35;
protected byte B_SPORTS36;
protected byte B_SPORTS37;
protected byte B_SPORTS38;
protected byte B_SPORTS39;
protected byte B_SPORTS396;
protected byte B_SPORTS3FREQ;
protected byte B_SPORTSFREQ;
protected byte B_SPPEN;
protected int B_SPPID;
protected byte B_SPPNO;
protected byte B_STATCM1;
protected byte B_STATCM2;
protected byte B_STATCM3;
protected short B_STATCY41;
protected short B_STATCY42;
protected short B_STATCY43;
protected byte B_STATENDD1;
protected boolean B_STATENDD10;
protected byte B_STATENDD2;
protected byte B_STATENDD3;
protected byte B_STATENDD4;
protected byte B_STATENDD5;
protected byte B_STATENDD6;
protected byte B_STATENDD7;
protected byte B_STATENDD8;
protected byte B_STATENDD9;
protected byte B_STATENDM1;
protected boolean B_STATENDM10;
protected byte B_STATENDM2;
protected byte B_STATENDM3;
protected byte B_STATENDM4;
protected byte B_STATENDM5;
protected byte B_STATENDM6;
protected byte B_STATENDM7;
protected byte B_STATENDM8;
protected byte B_STATENDM9;
protected short B_STATENDY41;
protected boolean B_STATENDY410;
protected short B_STATENDY42;
protected short B_STATENDY43;
protected short B_STATENDY44;
protected short B_STATENDY45;
protected short B_STATENDY46;
protected short B_STATENDY47;
protected short B_STATENDY48;
protected short B_STATENDY49;
protected byte B_STENDREAS;
protected short B_STRATA;
protected byte B_SUSP;
protected byte B_TRAINANY;
protected short B_TRAINDAYS1;
protected short B_TRAINDAYS2;
protected short B_TRAINDAYS3;
protected byte B_TRAINEND1;
protected byte B_TRAINEND2;
protected byte B_TRAINEND3;
protected byte B_TRAINHRS1;
protected byte B_TRAINHRS2;
protected byte B_TRAINHRS3;
protected byte B_TRAINN;
protected byte B_TRAINPURP11;
protected byte B_TRAINPURP12;
protected byte B_TRAINPURP13;
protected byte B_TRAINPURP21;
protected byte B_TRAINPURP22;
protected byte B_TRAINPURP23;
protected byte B_TRAINPURP31;
protected byte B_TRAINPURP32;
protected byte B_TRAINPURP33;
protected byte B_TRAINPURP41;
protected byte B_TRAINPURP42;
protected byte B_TRAINPURP43;
protected byte B_TRAINPURP51;
protected byte B_TRAINPURP52;
protected byte B_TRAINPURP53;
protected byte B_TRAINPURP61;
protected byte B_TRAINPURP62;
protected byte B_TRAINPURP63;
protected byte B_TRAINPURP71;
protected byte B_TRAINPURP72;
protected byte B_TRAINPURP73;
protected byte B_TRAINQUAL1;
protected byte B_TRAINQUAL2;
protected byte B_TRAINQUAL3;
protected byte B_TRQUAL1;
protected byte B_TRQUAL10;
protected byte B_TRQUAL11;
protected byte B_TRQUAL13;
protected byte B_TRQUAL15;
protected byte B_TRQUAL16;
protected byte B_TRQUAL17;
protected byte B_TRQUAL18;
protected byte B_TRQUAL19;
protected byte B_TRQUAL2;
protected byte B_TRQUAL20;
protected byte B_TRQUAL21;
protected byte B_TRQUAL22;
protected byte B_TRQUAL23;
protected byte B_TRQUAL24;
protected byte B_TRQUAL25;
protected byte B_TRQUAL26;
protected byte B_TRQUAL27;
protected byte B_TRQUAL28;
protected byte B_TRQUAL29;
protected byte B_TRQUAL3;
protected byte B_TRQUAL30;
protected byte B_TRQUAL31;
protected byte B_TRQUAL4;
protected byte B_TRQUAL5;
protected byte B_TRQUAL6;
protected byte B_TRQUAL7;
protected byte B_TRQUAL8;
protected byte B_TRQUAL9;
protected byte B_TRWHO1;
protected byte B_TRWHO2;
protected byte B_TRWHO3;
protected byte B_TUIN1;
protected byte B_TUJBPL;
protected byte B_TWKCAR;
protected byte B_TWKCARY1;
protected byte B_TWKCARY10;
protected byte B_TWKCARY11;
protected byte B_TWKCARY12;
protected byte B_TWKCARY13;
protected byte B_TWKCARY14;
protected byte B_TWKCARY2;
protected byte B_TWKCARY3;
protected byte B_TWKCARY4;
protected byte B_TWKCARY5;
protected byte B_TWKCARY6;
protected byte B_TWKCARY7;
protected byte B_TWKCARY8;
protected byte B_TWKCARY9;
protected byte B_TWKCARY97;
protected byte B_TWKCARYM;
protected byte B_TWKDIFF1;
protected byte B_TWKDIFF2;
protected byte B_TWKDIFF3;
protected byte B_TWKDIFF4;
protected byte B_TWKDIFF5;
protected byte B_TWKDIFF6;
protected byte B_TWKDIFF7;
protected byte B_TWKDIFF8;
protected byte B_TWKDIFF97;
protected byte B_TWKDIFFM;
protected byte B_UKBORN;
protected byte B_UNDQUS;
protected byte B_URBAN_DV;
protected byte B_USBREAD;
protected byte B_USDAIRY;
protected byte B_VOLFREQ;
protected short B_VOLHRS;
protected byte B_VOLUN;
protected byte B_VOTE1;
protected byte B_VOTE2;
protected byte B_VOTE3;
protected byte B_VOTE4;
protected byte B_VOTE5;
protected byte B_VOTE6;
protected byte B_VOTE7;
protected byte B_VOTE8;
protected byte B_VOTEINTENT;
protected byte B_VOTENORM;
protected byte B_VOUCHER;
protected byte B_WALKPACE;
protected byte B_WKAUT1;
protected byte B_WKAUT2;
protected byte B_WKAUT3;
protected byte B_WKAUT4;
protected byte B_WKAUT5;
protected byte B_WKENDS;
protected byte B_WKFRUIT;
protected byte B_WKHOME;
protected byte B_WKPHYS;
protected byte B_WKPLSAM;
protected byte B_WKTIME;
protected byte B_WKVEGE;
protected byte B_WLK10M;
protected byte B_WLK30MIN;
protected short B_WORKDIS;
protected byte B_WORKTRAV;
protected byte B_XPMOVE;
protected byte B_XTRA5MINOSM_DV;
protected byte B_XTRA5MIN_DV;
protected short B_YR2UK4;
protected int PID;
protected final void initB_ACC1TO161(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO161 = Byte.parseByte(s);
} else {
B_ACC1TO161 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO1610(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO1610 = Byte.parseByte(s);
} else {
B_ACC1TO1610 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO1611(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO1611 = Byte.parseByte(s);
} else {
B_ACC1TO1611 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO1612(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO1612 = Byte.parseByte(s);
} else {
B_ACC1TO1612 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO1613(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO1613 = Byte.parseByte(s);
} else {
B_ACC1TO1613 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO1614(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO1614 = Byte.parseByte(s);
} else {
B_ACC1TO1614 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO162(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO162 = Byte.parseByte(s);
} else {
B_ACC1TO162 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO163(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO163 = Byte.parseByte(s);
} else {
B_ACC1TO163 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO164(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO164 = Byte.parseByte(s);
} else {
B_ACC1TO164 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO165(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO165 = Byte.parseByte(s);
} else {
B_ACC1TO165 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO166(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO166 = Byte.parseByte(s);
} else {
B_ACC1TO166 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO167(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO167 = Byte.parseByte(s);
} else {
B_ACC1TO167 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO168(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO168 = Byte.parseByte(s);
} else {
B_ACC1TO168 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO169(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO169 = Byte.parseByte(s);
} else {
B_ACC1TO169 = Byte.MIN_VALUE;
}
}

protected final void initB_ACC1TO1697(String s) {
if (!s.trim().isEmpty()) {
B_ACC1TO1697 = Byte.parseByte(s);
} else {
B_ACC1TO1697 = Byte.MIN_VALUE;
}
}

protected final void initB_ACCESS(String s) {
if (!s.trim().isEmpty()) {
B_ACCESS = Byte.parseByte(s);
} else {
B_ACCESS = Byte.MIN_VALUE;
}
}

protected final void initB_ADOPTCH01(String s) {
if (!s.trim().isEmpty()) {
B_ADOPTCH01 = Byte.parseByte(s);
} else {
B_ADOPTCH01 = Byte.MIN_VALUE;
}
}

protected final void initB_ADOPTCH02(String s) {
if (!s.trim().isEmpty()) {
B_ADOPTCH02 = Byte.parseByte(s);
} else {
B_ADOPTCH02 = Byte.MIN_VALUE;
}
}

protected final void initB_ADOPTCH03(String s) {
if (!s.trim().isEmpty()) {
B_ADOPTCH03 = Byte.parseByte(s);
} else {
B_ADOPTCH03 = Byte.MIN_VALUE;
}
}

protected final void initB_ADOPTCH04(String s) {
if (!s.trim().isEmpty()) {
B_ADOPTCH04 = Byte.parseByte(s);
} else {
B_ADOPTCH04 = Byte.MIN_VALUE;
}
}

protected final void initB_ADOPTCH05(String s) {
if (!s.trim().isEmpty()) {
B_ADOPTCH05 = Byte.parseByte(s);
} else {
B_ADOPTCH05 = Byte.MIN_VALUE;
}
}

protected final void initB_ADOPTCH06(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH06 = false;
} else {
B_ADOPTCH06 = true;
}
}
}

protected final void initB_ADOPTCH07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH07 = false;
} else {
B_ADOPTCH07 = true;
}
}
}

protected final void initB_ADOPTCH08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH08 = false;
} else {
B_ADOPTCH08 = true;
}
}
}

protected final void initB_ADOPTCH09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH09 = false;
} else {
B_ADOPTCH09 = true;
}
}
}

protected final void initB_ADOPTCH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH10 = false;
} else {
B_ADOPTCH10 = true;
}
}
}

protected final void initB_ADOPTCH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH11 = false;
} else {
B_ADOPTCH11 = true;
}
}
}

protected final void initB_ADOPTCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH12 = false;
} else {
B_ADOPTCH12 = true;
}
}
}

protected final void initB_ADOPTCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH13 = false;
} else {
B_ADOPTCH13 = true;
}
}
}

protected final void initB_ADOPTCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH14 = false;
} else {
B_ADOPTCH14 = true;
}
}
}

protected final void initB_ADOPTCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH15 = false;
} else {
B_ADOPTCH15 = true;
}
}
}

protected final void initB_ADOPTCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ADOPTCH16 = false;
} else {
B_ADOPTCH16 = true;
}
}
}

protected final void initB_ADRESP17(String s) {
if (!s.trim().isEmpty()) {
B_ADRESP17 = Byte.parseByte(s);
} else {
B_ADRESP17 = Byte.MIN_VALUE;
}
}

protected final void initB_ADSTATUS(String s) {
if (!s.trim().isEmpty()) {
B_ADSTATUS = Byte.parseByte(s);
} else {
B_ADSTATUS = Byte.MIN_VALUE;
}
}

protected final void initB_ADVVOUCHER(String s) {
if (!s.trim().isEmpty()) {
B_ADVVOUCHER = Byte.parseByte(s);
} else {
B_ADVVOUCHER = Byte.MIN_VALUE;
}
}

protected final void initB_AGEGR10_DV(String s) {
if (!s.trim().isEmpty()) {
B_AGEGR10_DV = Byte.parseByte(s);
} else {
B_AGEGR10_DV = Byte.MIN_VALUE;
}
}

protected final void initB_AGEGR13_DV(String s) {
if (!s.trim().isEmpty()) {
B_AGEGR13_DV = Byte.parseByte(s);
} else {
B_AGEGR13_DV = Byte.MIN_VALUE;
}
}

protected final void initB_AGEGR5_DV(String s) {
if (!s.trim().isEmpty()) {
B_AGEGR5_DV = Byte.parseByte(s);
} else {
B_AGEGR5_DV = Byte.MIN_VALUE;
}
}

protected final void initB_AGERET(String s) {
if (!s.trim().isEmpty()) {
B_AGERET = Byte.parseByte(s);
} else {
B_AGERET = Byte.MIN_VALUE;
}
}

protected final void initB_AGE_DV(String s) {
if (!s.trim().isEmpty()) {
B_AGE_DV = Byte.parseByte(s);
} else {
B_AGE_DV = Byte.MIN_VALUE;
}
}

protected final void initB_AGLQUIT(String s) {
if (!s.trim().isEmpty()) {
B_AGLQUIT = Byte.parseByte(s);
} else {
B_AGLQUIT = Byte.MIN_VALUE;
}
}

protected final void initB_AIDEFT(String s) {
if (!s.trim().isEmpty()) {
B_AIDEFT = Byte.parseByte(s);
} else {
B_AIDEFT = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHH(String s) {
if (!s.trim().isEmpty()) {
B_AIDHH = Byte.parseByte(s);
} else {
B_AIDHH = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHRS(String s) {
if (!s.trim().isEmpty()) {
B_AIDHRS = Byte.parseByte(s);
} else {
B_AIDHRS = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHU1(String s) {
if (!s.trim().isEmpty()) {
B_AIDHU1 = Byte.parseByte(s);
} else {
B_AIDHU1 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHU2(String s) {
if (!s.trim().isEmpty()) {
B_AIDHU2 = Byte.parseByte(s);
} else {
B_AIDHU2 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA1(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA1 = Byte.parseByte(s);
} else {
B_AIDHUA1 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA10(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA10 = Byte.parseByte(s);
} else {
B_AIDHUA10 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA11(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA11 = Byte.parseByte(s);
} else {
B_AIDHUA11 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA12(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA12 = Byte.parseByte(s);
} else {
B_AIDHUA12 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA13(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA13 = Byte.parseByte(s);
} else {
B_AIDHUA13 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA14(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA14 = Byte.parseByte(s);
} else {
B_AIDHUA14 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA15(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA15 = Byte.parseByte(s);
} else {
B_AIDHUA15 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA16(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA16 = Byte.parseByte(s);
} else {
B_AIDHUA16 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA2(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA2 = Byte.parseByte(s);
} else {
B_AIDHUA2 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA3(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA3 = Byte.parseByte(s);
} else {
B_AIDHUA3 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA4(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA4 = Byte.parseByte(s);
} else {
B_AIDHUA4 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA5(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA5 = Byte.parseByte(s);
} else {
B_AIDHUA5 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA6(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA6 = Byte.parseByte(s);
} else {
B_AIDHUA6 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA7(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA7 = Byte.parseByte(s);
} else {
B_AIDHUA7 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA8(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA8 = Byte.parseByte(s);
} else {
B_AIDHUA8 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDHUA9(String s) {
if (!s.trim().isEmpty()) {
B_AIDHUA9 = Byte.parseByte(s);
} else {
B_AIDHUA9 = Byte.MIN_VALUE;
}
}

protected final void initB_AIDXHH(String s) {
if (!s.trim().isEmpty()) {
B_AIDXHH = Byte.parseByte(s);
} else {
B_AIDXHH = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH01(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH01 = Byte.parseByte(s);
} else {
B_ALLCH01 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH02(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH02 = Byte.parseByte(s);
} else {
B_ALLCH02 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH03(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH03 = Byte.parseByte(s);
} else {
B_ALLCH03 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH04(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH04 = Byte.parseByte(s);
} else {
B_ALLCH04 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH05(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH05 = Byte.parseByte(s);
} else {
B_ALLCH05 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH06(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH06 = Byte.parseByte(s);
} else {
B_ALLCH06 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH07(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH07 = Byte.parseByte(s);
} else {
B_ALLCH07 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH08(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH08 = Byte.parseByte(s);
} else {
B_ALLCH08 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH09(String s) {
if (!s.trim().isEmpty()) {
B_ALLCH09 = Byte.parseByte(s);
} else {
B_ALLCH09 = Byte.MIN_VALUE;
}
}

protected final void initB_ALLCH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ALLCH10 = false;
} else {
B_ALLCH10 = true;
}
}
}

protected final void initB_ALLCH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ALLCH11 = false;
} else {
B_ALLCH11 = true;
}
}
}

protected final void initB_ALLCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ALLCH12 = false;
} else {
B_ALLCH12 = true;
}
}
}

protected final void initB_ALLCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ALLCH13 = false;
} else {
B_ALLCH13 = true;
}
}
}

protected final void initB_ALLCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ALLCH14 = false;
} else {
B_ALLCH14 = true;
}
}
}

protected final void initB_ALLCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ALLCH15 = false;
} else {
B_ALLCH15 = true;
}
}
}

protected final void initB_ALLCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_ALLCH16 = false;
} else {
B_ALLCH16 = true;
}
}
}

protected final void initB_ALTCAR1(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR1 = Byte.parseByte(s);
} else {
B_ALTCAR1 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR10(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR10 = Byte.parseByte(s);
} else {
B_ALTCAR10 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR11(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR11 = Byte.parseByte(s);
} else {
B_ALTCAR11 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR12(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR12 = Byte.parseByte(s);
} else {
B_ALTCAR12 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR2(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR2 = Byte.parseByte(s);
} else {
B_ALTCAR2 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR3(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR3 = Byte.parseByte(s);
} else {
B_ALTCAR3 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR4(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR4 = Byte.parseByte(s);
} else {
B_ALTCAR4 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR5(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR5 = Byte.parseByte(s);
} else {
B_ALTCAR5 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR6(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR6 = Byte.parseByte(s);
} else {
B_ALTCAR6 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR7(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR7 = Byte.parseByte(s);
} else {
B_ALTCAR7 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR8(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR8 = Byte.parseByte(s);
} else {
B_ALTCAR8 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR9(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR9 = Byte.parseByte(s);
} else {
B_ALTCAR9 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR96(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR96 = Byte.parseByte(s);
} else {
B_ALTCAR96 = Byte.MIN_VALUE;
}
}

protected final void initB_ALTCAR97(String s) {
if (!s.trim().isEmpty()) {
B_ALTCAR97 = Byte.parseByte(s);
} else {
B_ALTCAR97 = Byte.MIN_VALUE;
}
}

protected final void initB_ARCFREQ(String s) {
if (!s.trim().isEmpty()) {
B_ARCFREQ = Byte.parseByte(s);
} else {
B_ARCFREQ = Byte.MIN_VALUE;
}
}

protected final void initB_AREA(String s) {
if (!s.trim().isEmpty()) {
B_AREA = Byte.parseByte(s);
} else {
B_AREA = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1A1(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1A1 = Byte.parseByte(s);
} else {
B_ARTS1A1 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1A2(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1A2 = Byte.parseByte(s);
} else {
B_ARTS1A2 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1A3(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1A3 = Byte.parseByte(s);
} else {
B_ARTS1A3 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1A4(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1A4 = Byte.parseByte(s);
} else {
B_ARTS1A4 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1A5(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1A5 = Byte.parseByte(s);
} else {
B_ARTS1A5 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1A6(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1A6 = Byte.parseByte(s);
} else {
B_ARTS1A6 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1A7(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1A7 = Byte.parseByte(s);
} else {
B_ARTS1A7 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1A96(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1A96 = Byte.parseByte(s);
} else {
B_ARTS1A96 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1B10(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1B10 = Byte.parseByte(s);
} else {
B_ARTS1B10 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1B11(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1B11 = Byte.parseByte(s);
} else {
B_ARTS1B11 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1B12(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1B12 = Byte.parseByte(s);
} else {
B_ARTS1B12 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1B13(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1B13 = Byte.parseByte(s);
} else {
B_ARTS1B13 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1B14(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1B14 = Byte.parseByte(s);
} else {
B_ARTS1B14 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1B15(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1B15 = Byte.parseByte(s);
} else {
B_ARTS1B15 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1B9(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1B9 = Byte.parseByte(s);
} else {
B_ARTS1B9 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1B96(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1B96 = Byte.parseByte(s);
} else {
B_ARTS1B96 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS1FREQ(String s) {
if (!s.trim().isEmpty()) {
B_ARTS1FREQ = Byte.parseByte(s);
} else {
B_ARTS1FREQ = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2A1(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2A1 = Byte.parseByte(s);
} else {
B_ARTS2A1 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2A2(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2A2 = Byte.parseByte(s);
} else {
B_ARTS2A2 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2A3(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2A3 = Byte.parseByte(s);
} else {
B_ARTS2A3 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2A4(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2A4 = Byte.parseByte(s);
} else {
B_ARTS2A4 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2A5(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2A5 = Byte.parseByte(s);
} else {
B_ARTS2A5 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2A6(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2A6 = Byte.parseByte(s);
} else {
B_ARTS2A6 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2A7(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2A7 = Byte.parseByte(s);
} else {
B_ARTS2A7 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2A96(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2A96 = Byte.parseByte(s);
} else {
B_ARTS2A96 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2B10(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2B10 = Byte.parseByte(s);
} else {
B_ARTS2B10 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2B11(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2B11 = Byte.parseByte(s);
} else {
B_ARTS2B11 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2B12(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2B12 = Byte.parseByte(s);
} else {
B_ARTS2B12 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2B13(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2B13 = Byte.parseByte(s);
} else {
B_ARTS2B13 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2B14(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2B14 = Byte.parseByte(s);
} else {
B_ARTS2B14 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2B15(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2B15 = Byte.parseByte(s);
} else {
B_ARTS2B15 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2B9(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2B9 = Byte.parseByte(s);
} else {
B_ARTS2B9 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2B96(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2B96 = Byte.parseByte(s);
} else {
B_ARTS2B96 = Byte.MIN_VALUE;
}
}

protected final void initB_ARTS2FREQ(String s) {
if (!s.trim().isEmpty()) {
B_ARTS2FREQ = Byte.parseByte(s);
} else {
B_ARTS2FREQ = Byte.MIN_VALUE;
}
}

protected final void initB_BASNSA(String s) {
if (!s.trim().isEmpty()) {
B_BASNSA = Byte.parseByte(s);
} else {
B_BASNSA = Byte.MIN_VALUE;
}
}

protected final void initB_BASRATE(String s) {
if (!s.trim().isEmpty()) {
B_BASRATE = Double.parseDouble(s);
} else {
B_BASRATE = Double.NaN;
}
}

protected final void initB_BASREST(String s) {
if (!s.trim().isEmpty()) {
B_BASREST = Byte.parseByte(s);
} else {
B_BASREST = Byte.MIN_VALUE;
}
}

protected final void initB_BENCB(String s) {
if (!s.trim().isEmpty()) {
B_BENCB = Byte.parseByte(s);
} else {
B_BENCB = Byte.MIN_VALUE;
}
}

protected final void initB_BENCTC(String s) {
if (!s.trim().isEmpty()) {
B_BENCTC = Byte.parseByte(s);
} else {
B_BENCTC = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS1(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS1 = Byte.parseByte(s);
} else {
B_BENDIS1 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS10(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS10 = Byte.parseByte(s);
} else {
B_BENDIS10 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS11(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS11 = Byte.parseByte(s);
} else {
B_BENDIS11 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS2(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS2 = Byte.parseByte(s);
} else {
B_BENDIS2 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS3(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS3 = Byte.parseByte(s);
} else {
B_BENDIS3 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS4(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS4 = Byte.parseByte(s);
} else {
B_BENDIS4 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS5(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS5 = Byte.parseByte(s);
} else {
B_BENDIS5 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS6(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS6 = Byte.parseByte(s);
} else {
B_BENDIS6 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS7(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS7 = Byte.parseByte(s);
} else {
B_BENDIS7 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS8(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS8 = Byte.parseByte(s);
} else {
B_BENDIS8 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS9(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS9 = Byte.parseByte(s);
} else {
B_BENDIS9 = Byte.MIN_VALUE;
}
}

protected final void initB_BENDIS96(String s) {
if (!s.trim().isEmpty()) {
B_BENDIS96 = Byte.parseByte(s);
} else {
B_BENDIS96 = Byte.MIN_VALUE;
}
}

protected final void initB_BENFAM1(String s) {
if (!s.trim().isEmpty()) {
B_BENFAM1 = Byte.parseByte(s);
} else {
B_BENFAM1 = Byte.MIN_VALUE;
}
}

protected final void initB_BENFAM2(String s) {
if (!s.trim().isEmpty()) {
B_BENFAM2 = Byte.parseByte(s);
} else {
B_BENFAM2 = Byte.MIN_VALUE;
}
}

protected final void initB_BENFAM3(String s) {
if (!s.trim().isEmpty()) {
B_BENFAM3 = Byte.parseByte(s);
} else {
B_BENFAM3 = Byte.MIN_VALUE;
}
}

protected final void initB_BENFAM4(String s) {
if (!s.trim().isEmpty()) {
B_BENFAM4 = Byte.parseByte(s);
} else {
B_BENFAM4 = Byte.MIN_VALUE;
}
}

protected final void initB_BENFAM5(String s) {
if (!s.trim().isEmpty()) {
B_BENFAM5 = Byte.parseByte(s);
} else {
B_BENFAM5 = Byte.MIN_VALUE;
}
}

protected final void initB_BENFAM96(String s) {
if (!s.trim().isEmpty()) {
B_BENFAM96 = Byte.parseByte(s);
} else {
B_BENFAM96 = Byte.MIN_VALUE;
}
}

protected final void initB_BENHOU1(String s) {
if (!s.trim().isEmpty()) {
B_BENHOU1 = Byte.parseByte(s);
} else {
B_BENHOU1 = Byte.MIN_VALUE;
}
}

protected final void initB_BENHOU2(String s) {
if (!s.trim().isEmpty()) {
B_BENHOU2 = Byte.parseByte(s);
} else {
B_BENHOU2 = Byte.MIN_VALUE;
}
}

protected final void initB_BENHOU3(String s) {
if (!s.trim().isEmpty()) {
B_BENHOU3 = Byte.parseByte(s);
} else {
B_BENHOU3 = Byte.MIN_VALUE;
}
}

protected final void initB_BENHOU4(String s) {
if (!s.trim().isEmpty()) {
B_BENHOU4 = Byte.parseByte(s);
} else {
B_BENHOU4 = Byte.MIN_VALUE;
}
}

protected final void initB_BENHOU96(String s) {
if (!s.trim().isEmpty()) {
B_BENHOU96 = Byte.parseByte(s);
} else {
B_BENHOU96 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN1(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN1 = Byte.parseByte(s);
} else {
B_BENPEN1 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN2(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN2 = Byte.parseByte(s);
} else {
B_BENPEN2 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN3(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN3 = Byte.parseByte(s);
} else {
B_BENPEN3 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN4(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN4 = Byte.parseByte(s);
} else {
B_BENPEN4 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN5(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN5 = Byte.parseByte(s);
} else {
B_BENPEN5 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN6(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN6 = Byte.parseByte(s);
} else {
B_BENPEN6 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN7(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN7 = Byte.parseByte(s);
} else {
B_BENPEN7 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN8(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN8 = Byte.parseByte(s);
} else {
B_BENPEN8 = Byte.MIN_VALUE;
}
}

protected final void initB_BENPEN96(String s) {
if (!s.trim().isEmpty()) {
B_BENPEN96 = Byte.parseByte(s);
} else {
B_BENPEN96 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA1(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA1 = Byte.parseByte(s);
} else {
B_BENSTA1 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA2(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA2 = Byte.parseByte(s);
} else {
B_BENSTA2 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA3(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA3 = Byte.parseByte(s);
} else {
B_BENSTA3 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA4(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA4 = Byte.parseByte(s);
} else {
B_BENSTA4 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA5(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA5 = Byte.parseByte(s);
} else {
B_BENSTA5 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA6(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA6 = Byte.parseByte(s);
} else {
B_BENSTA6 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA7(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA7 = Byte.parseByte(s);
} else {
B_BENSTA7 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA8(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA8 = Byte.parseByte(s);
} else {
B_BENSTA8 = Byte.MIN_VALUE;
}
}

protected final void initB_BENSTA96(String s) {
if (!s.trim().isEmpty()) {
B_BENSTA96 = Byte.parseByte(s);
} else {
B_BENSTA96 = Byte.MIN_VALUE;
}
}

protected final void initB_BENTAX1(String s) {
if (!s.trim().isEmpty()) {
B_BENTAX1 = Byte.parseByte(s);
} else {
B_BENTAX1 = Byte.MIN_VALUE;
}
}

protected final void initB_BENTAX2(String s) {
if (!s.trim().isEmpty()) {
B_BENTAX2 = Byte.parseByte(s);
} else {
B_BENTAX2 = Byte.MIN_VALUE;
}
}

protected final void initB_BENTAX3(String s) {
if (!s.trim().isEmpty()) {
B_BENTAX3 = Byte.parseByte(s);
} else {
B_BENTAX3 = Byte.MIN_VALUE;
}
}

protected final void initB_BENTAX4(String s) {
if (!s.trim().isEmpty()) {
B_BENTAX4 = Byte.parseByte(s);
} else {
B_BENTAX4 = Byte.MIN_VALUE;
}
}

protected final void initB_BENTAX5(String s) {
if (!s.trim().isEmpty()) {
B_BENTAX5 = Byte.parseByte(s);
} else {
B_BENTAX5 = Byte.MIN_VALUE;
}
}

protected final void initB_BENTAX96(String s) {
if (!s.trim().isEmpty()) {
B_BENTAX96 = Byte.parseByte(s);
} else {
B_BENTAX96 = Byte.MIN_VALUE;
}
}

protected final void initB_BENUNEMP1(String s) {
if (!s.trim().isEmpty()) {
B_BENUNEMP1 = Byte.parseByte(s);
} else {
B_BENUNEMP1 = Byte.MIN_VALUE;
}
}

protected final void initB_BENUNEMP2(String s) {
if (!s.trim().isEmpty()) {
B_BENUNEMP2 = Byte.parseByte(s);
} else {
B_BENUNEMP2 = Byte.MIN_VALUE;
}
}

protected final void initB_BENUNEMP96(String s) {
if (!s.trim().isEmpty()) {
B_BENUNEMP96 = Byte.parseByte(s);
} else {
B_BENUNEMP96 = Byte.MIN_VALUE;
}
}

protected final void initB_BIRTHY(String s) {
if (!s.trim().isEmpty()) {
B_BIRTHY = Short.parseShort(s);
} else {
B_BIRTHY = Short.MIN_VALUE;
}
}

protected final void initB_BTYPE1(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE1 = Byte.parseByte(s);
} else {
B_BTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE2(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE2 = Byte.parseByte(s);
} else {
B_BTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE3(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE3 = Byte.parseByte(s);
} else {
B_BTYPE3 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE4(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE4 = Byte.parseByte(s);
} else {
B_BTYPE4 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE5(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE5 = Byte.parseByte(s);
} else {
B_BTYPE5 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE6(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE6 = Byte.parseByte(s);
} else {
B_BTYPE6 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE7(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE7 = Byte.parseByte(s);
} else {
B_BTYPE7 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE8(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE8 = Byte.parseByte(s);
} else {
B_BTYPE8 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE9(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE9 = Byte.parseByte(s);
} else {
B_BTYPE9 = Byte.MIN_VALUE;
}
}

protected final void initB_BTYPE96(String s) {
if (!s.trim().isEmpty()) {
B_BTYPE96 = Byte.parseByte(s);
} else {
B_BTYPE96 = Byte.MIN_VALUE;
}
}

protected final void initB_BUNO_DV(String s) {
if (!s.trim().isEmpty()) {
B_BUNO_DV = Byte.parseByte(s);
} else {
B_BUNO_DV = Byte.MIN_VALUE;
}
}

protected final void initB_CARCLUB(String s) {
if (!s.trim().isEmpty()) {
B_CARCLUB = Byte.parseByte(s);
} else {
B_CARCLUB = Byte.MIN_VALUE;
}
}

protected final void initB_CARSHARE(String s) {
if (!s.trim().isEmpty()) {
B_CARSHARE = Byte.parseByte(s);
} else {
B_CARSHARE = Byte.MIN_VALUE;
}
}

protected final void initB_CARUSE(String s) {
if (!s.trim().isEmpty()) {
B_CARUSE = Byte.parseByte(s);
} else {
B_CARUSE = Byte.MIN_VALUE;
}
}

protected final void initB_CCARE(String s) {
if (!s.trim().isEmpty()) {
B_CCARE = Byte.parseByte(s);
} else {
B_CCARE = Byte.MIN_VALUE;
}
}

protected final void initB_CCWORK(String s) {
if (!s.trim().isEmpty()) {
B_CCWORK = Byte.parseByte(s);
} else {
B_CCWORK = Byte.MIN_VALUE;
}
}

protected final void initB_CH1BY4(String s) {
if (!s.trim().isEmpty()) {
B_CH1BY4 = Short.parseShort(s);
} else {
B_CH1BY4 = Short.MIN_VALUE;
}
}

protected final void initB_CHARAM(String s) {
if (!s.trim().isEmpty()) {
B_CHARAM = Short.parseShort(s);
} else {
B_CHARAM = Short.MIN_VALUE;
}
}

protected final void initB_CHARFREQ(String s) {
if (!s.trim().isEmpty()) {
B_CHARFREQ = Byte.parseByte(s);
} else {
B_CHARFREQ = Byte.MIN_VALUE;
}
}

protected final void initB_CHARGV(String s) {
if (!s.trim().isEmpty()) {
B_CHARGV = Byte.parseByte(s);
} else {
B_CHARGV = Byte.MIN_VALUE;
}
}

protected final void initB_CHKCOA(String s) {
if (!s.trim().isEmpty()) {
B_CHKCOA = Byte.parseByte(s);
} else {
B_CHKCOA = Byte.MIN_VALUE;
}
}

protected final void initB_CHKDOB(String s) {
if (!s.trim().isEmpty()) {
B_CHKDOB = Byte.parseByte(s);
} else {
B_CHKDOB = Byte.MIN_VALUE;
}
}

protected final void initB_CHKSEX(String s) {
if (!s.trim().isEmpty()) {
B_CHKSEX = Byte.parseByte(s);
} else {
B_CHKSEX = Byte.MIN_VALUE;
}
}

protected final void initB_CINDTIME(String s) {
if (!s.trim().isEmpty()) {
B_CINDTIME = Integer.parseInt(s);
} else {
B_CINDTIME = Integer.MIN_VALUE;
}
}

protected final void initB_CITZN1(String s) {
if (!s.trim().isEmpty()) {
B_CITZN1 = Byte.parseByte(s);
} else {
B_CITZN1 = Byte.MIN_VALUE;
}
}

protected final void initB_CITZN2(String s) {
if (!s.trim().isEmpty()) {
B_CITZN2 = Byte.parseByte(s);
} else {
B_CITZN2 = Byte.MIN_VALUE;
}
}

protected final void initB_CITZN3(String s) {
if (!s.trim().isEmpty()) {
B_CITZN3 = Byte.parseByte(s);
} else {
B_CITZN3 = Byte.MIN_VALUE;
}
}

protected final void initB_CIVICDUTY(String s) {
if (!s.trim().isEmpty()) {
B_CIVICDUTY = Byte.parseByte(s);
} else {
B_CIVICDUTY = Byte.MIN_VALUE;
}
}

protected final void initB_CJBATT(String s) {
if (!s.trim().isEmpty()) {
B_CJBATT = Byte.parseByte(s);
} else {
B_CJBATT = Byte.MIN_VALUE;
}
}

protected final void initB_CJOB(String s) {
if (!s.trim().isEmpty()) {
B_CJOB = Byte.parseByte(s);
} else {
B_CJOB = Byte.MIN_VALUE;
}
}

protected final void initB_CLUB(String s) {
if (!s.trim().isEmpty()) {
B_CLUB = Byte.parseByte(s);
} else {
B_CLUB = Byte.MIN_VALUE;
}
}

protected final void initB_CMLSTAT1(String s) {
if (!s.trim().isEmpty()) {
B_CMLSTAT1 = Byte.parseByte(s);
} else {
B_CMLSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initB_CMLSTAT2(String s) {
if (!s.trim().isEmpty()) {
B_CMLSTAT2 = Byte.parseByte(s);
} else {
B_CMLSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initB_CMLSTAT3(String s) {
if (!s.trim().isEmpty()) {
B_CMLSTAT3 = Byte.parseByte(s);
} else {
B_CMLSTAT3 = Byte.MIN_VALUE;
}
}

protected final void initB_COH1BM(String s) {
if (!s.trim().isEmpty()) {
B_COH1BM = Byte.parseByte(s);
} else {
B_COH1BM = Byte.MIN_VALUE;
}
}

protected final void initB_COH1BY(String s) {
if (!s.trim().isEmpty()) {
B_COH1BY = Short.parseShort(s);
} else {
B_COH1BY = Short.MIN_VALUE;
}
}

protected final void initB_COH1EM(String s) {
if (!s.trim().isEmpty()) {
B_COH1EM = Byte.parseByte(s);
} else {
B_COH1EM = Byte.MIN_VALUE;
}
}

protected final void initB_COH1EY(String s) {
if (!s.trim().isEmpty()) {
B_COH1EY = Short.parseShort(s);
} else {
B_COH1EY = Short.MIN_VALUE;
}
}

protected final void initB_COH1MR(String s) {
if (!s.trim().isEmpty()) {
B_COH1MR = Byte.parseByte(s);
} else {
B_COH1MR = Byte.MIN_VALUE;
}
}

protected final void initB_COHAB(String s) {
if (!s.trim().isEmpty()) {
B_COHAB = Byte.parseByte(s);
} else {
B_COHAB = Byte.MIN_VALUE;
}
}

protected final void initB_COHABN(String s) {
if (!s.trim().isEmpty()) {
B_COHABN = Byte.parseByte(s);
} else {
B_COHABN = Byte.MIN_VALUE;
}
}

protected final void initB_COHAB_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_COHAB_DV = false;
} else {
B_COHAB_DV = true;
}
}
}

protected final void initB_COLBENS1(String s) {
if (!s.trim().isEmpty()) {
B_COLBENS1 = Byte.parseByte(s);
} else {
B_COLBENS1 = Byte.MIN_VALUE;
}
}

protected final void initB_COLBENS2(String s) {
if (!s.trim().isEmpty()) {
B_COLBENS2 = Byte.parseByte(s);
} else {
B_COLBENS2 = Byte.MIN_VALUE;
}
}

protected final void initB_COLBENS3(String s) {
if (!s.trim().isEmpty()) {
B_COLBENS3 = Byte.parseByte(s);
} else {
B_COLBENS3 = Byte.MIN_VALUE;
}
}

protected final void initB_COMBIKE(String s) {
if (!s.trim().isEmpty()) {
B_COMBIKE = Byte.parseByte(s);
} else {
B_COMBIKE = Byte.MIN_VALUE;
}
}

protected final void initB_COMBUS(String s) {
if (!s.trim().isEmpty()) {
B_COMBUS = Byte.parseByte(s);
} else {
B_COMBUS = Byte.MIN_VALUE;
}
}

protected final void initB_COMMETRO(String s) {
if (!s.trim().isEmpty()) {
B_COMMETRO = Byte.parseByte(s);
} else {
B_COMMETRO = Byte.MIN_VALUE;
}
}

protected final void initB_COMOTHER(String s) {
if (!s.trim().isEmpty()) {
B_COMOTHER = Byte.parseByte(s);
} else {
B_COMOTHER = Byte.MIN_VALUE;
}
}

protected final void initB_COMTAXI(String s) {
if (!s.trim().isEmpty()) {
B_COMTAXI = Byte.parseByte(s);
} else {
B_COMTAXI = Byte.MIN_VALUE;
}
}

protected final void initB_COMTRAIN(String s) {
if (!s.trim().isEmpty()) {
B_COMTRAIN = Byte.parseByte(s);
} else {
B_COMTRAIN = Byte.MIN_VALUE;
}
}

protected final void initB_COMWALK(String s) {
if (!s.trim().isEmpty()) {
B_COMWALK = Byte.parseByte(s);
} else {
B_COMWALK = Byte.MIN_VALUE;
}
}

protected final void initB_CONTFT(String s) {
if (!s.trim().isEmpty()) {
B_CONTFT = Byte.parseByte(s);
} else {
B_CONTFT = Byte.MIN_VALUE;
}
}

protected final void initB_COUNTRY(String s) {
if (!s.trim().isEmpty()) {
B_COUNTRY = Byte.parseByte(s);
} else {
B_COUNTRY = Byte.MIN_VALUE;
}
}

protected final void initB_CSTAT(String s) {
if (!s.trim().isEmpty()) {
B_CSTAT = Byte.parseByte(s);
} else {
B_CSTAT = Byte.MIN_VALUE;
}
}

protected final void initB_CTADD1_CODE(String s) {
if (!s.trim().isEmpty()) {
B_CTADD1_CODE = Byte.parseByte(s);
} else {
B_CTADD1_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_CTADD2_CODE(String s) {
if (!s.trim().isEmpty()) {
B_CTADD2_CODE = Byte.parseByte(s);
} else {
B_CTADD2_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_CTCNTY_CODE(String s) {
if (!s.trim().isEmpty()) {
B_CTCNTY_CODE = Byte.parseByte(s);
} else {
B_CTCNTY_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_CTEMAIL_CODE(String s) {
if (!s.trim().isEmpty()) {
B_CTEMAIL_CODE = Byte.parseByte(s);
} else {
B_CTEMAIL_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_CTPCODE_CODE(String s) {
if (!s.trim().isEmpty()) {
B_CTPCODE_CODE = Byte.parseByte(s);
} else {
B_CTPCODE_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_CTTEL1_CODE(String s) {
if (!s.trim().isEmpty()) {
B_CTTEL1_CODE = Byte.parseByte(s);
} else {
B_CTTEL1_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_CTTEL2_CODE(String s) {
if (!s.trim().isEmpty()) {
B_CTTEL2_CODE = Byte.parseByte(s);
} else {
B_CTTEL2_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_CTTOWN_CODE(String s) {
if (!s.trim().isEmpty()) {
B_CTTOWN_CODE = Byte.parseByte(s);
} else {
B_CTTOWN_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB1(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB1 = Byte.parseByte(s);
} else {
B_CURRJOB1 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_CURRJOB10 = false;
} else {
B_CURRJOB10 = true;
}
}
}

protected final void initB_CURRJOB2(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB2 = Byte.parseByte(s);
} else {
B_CURRJOB2 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB3(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB3 = Byte.parseByte(s);
} else {
B_CURRJOB3 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB4(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB4 = Byte.parseByte(s);
} else {
B_CURRJOB4 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB5(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB5 = Byte.parseByte(s);
} else {
B_CURRJOB5 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB6(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB6 = Byte.parseByte(s);
} else {
B_CURRJOB6 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB7(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB7 = Byte.parseByte(s);
} else {
B_CURRJOB7 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB8(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB8 = Byte.parseByte(s);
} else {
B_CURRJOB8 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRJOB9(String s) {
if (!s.trim().isEmpty()) {
B_CURRJOB9 = Byte.parseByte(s);
} else {
B_CURRJOB9 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRPART1(String s) {
if (!s.trim().isEmpty()) {
B_CURRPART1 = Byte.parseByte(s);
} else {
B_CURRPART1 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRPART2(String s) {
if (!s.trim().isEmpty()) {
B_CURRPART2 = Byte.parseByte(s);
} else {
B_CURRPART2 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRPART3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_CURRPART3 = false;
} else {
B_CURRPART3 = true;
}
}
}

protected final void initB_CURRPART4(String s) {
if (!s.trim().isEmpty()) {
B_CURRPART4 = Byte.parseByte(s);
} else {
B_CURRPART4 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT1(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT1 = Byte.parseByte(s);
} else {
B_CURRSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT10(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT10 = Byte.parseByte(s);
} else {
B_CURRSTAT10 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT2(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT2 = Byte.parseByte(s);
} else {
B_CURRSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT3(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT3 = Byte.parseByte(s);
} else {
B_CURRSTAT3 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT4(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT4 = Byte.parseByte(s);
} else {
B_CURRSTAT4 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT5(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT5 = Byte.parseByte(s);
} else {
B_CURRSTAT5 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT6(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT6 = Byte.parseByte(s);
} else {
B_CURRSTAT6 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT7(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT7 = Byte.parseByte(s);
} else {
B_CURRSTAT7 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT8(String s) {
if (!s.trim().isEmpty()) {
B_CURRSTAT8 = Byte.parseByte(s);
} else {
B_CURRSTAT8 = Byte.MIN_VALUE;
}
}

protected final void initB_CURRSTAT9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_CURRSTAT9 = false;
} else {
B_CURRSTAT9 = true;
}
}
}

protected final void initB_DAYWLK(String s) {
if (!s.trim().isEmpty()) {
B_DAYWLK = Byte.parseByte(s);
} else {
B_DAYWLK = Byte.MIN_VALUE;
}
}

protected final void initB_DEMORIENT(String s) {
if (!s.trim().isEmpty()) {
B_DEMORIENT = Byte.parseByte(s);
} else {
B_DEMORIENT = Byte.MIN_VALUE;
}
}

protected final void initB_DEPCHL_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
B_DEPCHL_DV = false;
} else {
B_DEPCHL_DV = true;
}
}
}

protected final void initB_DEPENTH1(String s) {
if (!s.trim().isEmpty()) {
B_DEPENTH1 = Byte.parseByte(s);
} else {
B_DEPENTH1 = Byte.MIN_VALUE;
}
}

protected final void initB_DEPENTH2(String s) {
if (!s.trim().isEmpty()) {
B_DEPENTH2 = Byte.parseByte(s);
} else {
B_DEPENTH2 = Byte.MIN_VALUE;
}
}

protected final void initB_DEPENTH3(String s) {
if (!s.trim().isEmpty()) {
B_DEPENTH3 = Byte.parseByte(s);
} else {
B_DEPENTH3 = Byte.MIN_VALUE;
}
}

protected final void initB_DEPENTH4(String s) {
if (!s.trim().isEmpty()) {
B_DEPENTH4 = Byte.parseByte(s);
} else {
B_DEPENTH4 = Byte.MIN_VALUE;
}
}

protected final void initB_DEPENTH5(String s) {
if (!s.trim().isEmpty()) {
B_DEPENTH5 = Byte.parseByte(s);
} else {
B_DEPENTH5 = Byte.MIN_VALUE;
}
}

protected final void initB_DEPENTH6(String s) {
if (!s.trim().isEmpty()) {
B_DEPENTH6 = Byte.parseByte(s);
} else {
B_DEPENTH6 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF1(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF1 = Byte.parseByte(s);
} else {
B_DISDIF1 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF10(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF10 = Byte.parseByte(s);
} else {
B_DISDIF10 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF11(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF11 = Byte.parseByte(s);
} else {
B_DISDIF11 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF12(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF12 = Byte.parseByte(s);
} else {
B_DISDIF12 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF2(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF2 = Byte.parseByte(s);
} else {
B_DISDIF2 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF3(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF3 = Byte.parseByte(s);
} else {
B_DISDIF3 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF4(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF4 = Byte.parseByte(s);
} else {
B_DISDIF4 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF5(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF5 = Byte.parseByte(s);
} else {
B_DISDIF5 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF6(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF6 = Byte.parseByte(s);
} else {
B_DISDIF6 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF7(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF7 = Byte.parseByte(s);
} else {
B_DISDIF7 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF8(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF8 = Byte.parseByte(s);
} else {
B_DISDIF8 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF9(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF9 = Byte.parseByte(s);
} else {
B_DISDIF9 = Byte.MIN_VALUE;
}
}

protected final void initB_DISDIF96(String s) {
if (!s.trim().isEmpty()) {
B_DISDIF96 = Byte.parseByte(s);
} else {
B_DISDIF96 = Byte.MIN_VALUE;
}
}

protected final void initB_DIVCHK1(String s) {
if (!s.trim().isEmpty()) {
B_DIVCHK1 = Byte.parseByte(s);
} else {
B_DIVCHK1 = Byte.MIN_VALUE;
}
}

protected final void initB_DIVCHK2(String s) {
if (!s.trim().isEmpty()) {
B_DIVCHK2 = Byte.parseByte(s);
} else {
B_DIVCHK2 = Byte.MIN_VALUE;
}
}

protected final void initB_DIVCHK3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_DIVCHK3 = false;
} else {
B_DIVCHK3 = true;
}
}
}

protected final void initB_DIVFIN1(String s) {
if (!s.trim().isEmpty()) {
B_DIVFIN1 = Byte.parseByte(s);
} else {
B_DIVFIN1 = Byte.MIN_VALUE;
}
}

protected final void initB_DIVFIN2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_DIVFIN2 = false;
} else {
B_DIVFIN2 = true;
}
}
}

protected final void initB_DIVFIN3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_DIVFIN3 = false;
} else {
B_DIVFIN3 = true;
}
}
}

protected final void initB_DOBY_DV(String s) {
if (!s.trim().isEmpty()) {
B_DOBY_DV = Short.parseShort(s);
} else {
B_DOBY_DV = Short.MIN_VALUE;
}
}

protected final void initB_DRIVE(String s) {
if (!s.trim().isEmpty()) {
B_DRIVE = Byte.parseByte(s);
} else {
B_DRIVE = Byte.MIN_VALUE;
}
}

protected final void initB_DVAGE(String s) {
if (!s.trim().isEmpty()) {
B_DVAGE = Byte.parseByte(s);
} else {
B_DVAGE = Byte.MIN_VALUE;
}
}

protected final void initB_DVM1(String s) {
if (!s.trim().isEmpty()) {
B_DVM1 = Byte.parseByte(s);
} else {
B_DVM1 = Byte.MIN_VALUE;
}
}

protected final void initB_DVM2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_DVM2 = false;
} else {
B_DVM2 = true;
}
}
}

protected final void initB_DVM3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_DVM3 = false;
} else {
B_DVM3 = true;
}
}
}

protected final void initB_DVY41(String s) {
if (!s.trim().isEmpty()) {
B_DVY41 = Short.parseShort(s);
} else {
B_DVY41 = Short.MIN_VALUE;
}
}

protected final void initB_DVY42(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_DVY42 = false;
} else {
B_DVY42 = true;
}
}
}

protected final void initB_DVY43(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_DVY43 = false;
} else {
B_DVY43 = true;
}
}
}

protected final void initB_EDASP(String s) {
if (!s.trim().isEmpty()) {
B_EDASP = Byte.parseByte(s);
} else {
B_EDASP = Byte.MIN_VALUE;
}
}

protected final void initB_EDTYPE(String s) {
if (!s.trim().isEmpty()) {
B_EDTYPE = Byte.parseByte(s);
} else {
B_EDTYPE = Byte.MIN_VALUE;
}
}

protected final void initB_EDUCATION(String s) {
if (!s.trim().isEmpty()) {
B_EDUCATION = Byte.parseByte(s);
} else {
B_EDUCATION = Byte.MIN_VALUE;
}
}

protected final void initB_EMPCHK(String s) {
if (!s.trim().isEmpty()) {
B_EMPCHK = Byte.parseByte(s);
} else {
B_EMPCHK = Byte.MIN_VALUE;
}
}

protected final void initB_EMPLOY(String s) {
if (!s.trim().isEmpty()) {
B_EMPLOY = Byte.parseByte(s);
} else {
B_EMPLOY = Byte.MIN_VALUE;
}
}

protected final void initB_EMPSTENDD(String s) {
if (!s.trim().isEmpty()) {
B_EMPSTENDD = Byte.parseByte(s);
} else {
B_EMPSTENDD = Byte.MIN_VALUE;
}
}

protected final void initB_EMPSTENDM(String s) {
if (!s.trim().isEmpty()) {
B_EMPSTENDM = Byte.parseByte(s);
} else {
B_EMPSTENDM = Byte.MIN_VALUE;
}
}

protected final void initB_EMPSTENDY4(String s) {
if (!s.trim().isEmpty()) {
B_EMPSTENDY4 = Short.parseShort(s);
} else {
B_EMPSTENDY4 = Short.MIN_VALUE;
}
}

protected final void initB_ENDMNTH1(String s) {
if (!s.trim().isEmpty()) {
B_ENDMNTH1 = Byte.parseByte(s);
} else {
B_ENDMNTH1 = Byte.MIN_VALUE;
}
}

protected final void initB_ENDMNTH2(String s) {
if (!s.trim().isEmpty()) {
B_ENDMNTH2 = Byte.parseByte(s);
} else {
B_ENDMNTH2 = Byte.MIN_VALUE;
}
}

protected final void initB_ENDMNTH3(String s) {
if (!s.trim().isEmpty()) {
B_ENDMNTH3 = Byte.parseByte(s);
} else {
B_ENDMNTH3 = Byte.MIN_VALUE;
}
}

protected final void initB_ENDMNTH4(String s) {
if (!s.trim().isEmpty()) {
B_ENDMNTH4 = Byte.parseByte(s);
} else {
B_ENDMNTH4 = Byte.MIN_VALUE;
}
}

protected final void initB_ENDMNTH5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_ENDMNTH5 = false;
} else {
B_ENDMNTH5 = true;
}
}
}

protected final void initB_EPROSH(String s) {
if (!s.trim().isEmpty()) {
B_EPROSH = Byte.parseByte(s);
} else {
B_EPROSH = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE1(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE1 = Byte.parseByte(s);
} else {
B_ETHCLOSE1 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE10(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE10 = Byte.parseByte(s);
} else {
B_ETHCLOSE10 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE11(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE11 = Byte.parseByte(s);
} else {
B_ETHCLOSE11 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE2A(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE2A = Byte.parseByte(s);
} else {
B_ETHCLOSE2A = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE2B(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE2B = Byte.parseByte(s);
} else {
B_ETHCLOSE2B = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE3(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE3 = Byte.parseByte(s);
} else {
B_ETHCLOSE3 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE4A(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE4A = Byte.parseByte(s);
} else {
B_ETHCLOSE4A = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE4B(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE4B = Byte.parseByte(s);
} else {
B_ETHCLOSE4B = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE5(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE5 = Byte.parseByte(s);
} else {
B_ETHCLOSE5 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE6(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE6 = Byte.parseByte(s);
} else {
B_ETHCLOSE6 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE7(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE7 = Byte.parseByte(s);
} else {
B_ETHCLOSE7 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE8(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE8 = Byte.parseByte(s);
} else {
B_ETHCLOSE8 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHCLOSE9(String s) {
if (!s.trim().isEmpty()) {
B_ETHCLOSE9 = Byte.parseByte(s);
} else {
B_ETHCLOSE9 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID10(String s) {
if (!s.trim().isEmpty()) {
B_ETHID10 = Byte.parseByte(s);
} else {
B_ETHID10 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID11(String s) {
if (!s.trim().isEmpty()) {
B_ETHID11 = Byte.parseByte(s);
} else {
B_ETHID11 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID12(String s) {
if (!s.trim().isEmpty()) {
B_ETHID12 = Byte.parseByte(s);
} else {
B_ETHID12 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID13(String s) {
if (!s.trim().isEmpty()) {
B_ETHID13 = Byte.parseByte(s);
} else {
B_ETHID13 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID14(String s) {
if (!s.trim().isEmpty()) {
B_ETHID14 = Byte.parseByte(s);
} else {
B_ETHID14 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID2(String s) {
if (!s.trim().isEmpty()) {
B_ETHID2 = Byte.parseByte(s);
} else {
B_ETHID2 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID3(String s) {
if (!s.trim().isEmpty()) {
B_ETHID3 = Byte.parseByte(s);
} else {
B_ETHID3 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID4A(String s) {
if (!s.trim().isEmpty()) {
B_ETHID4A = Byte.parseByte(s);
} else {
B_ETHID4A = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID4B(String s) {
if (!s.trim().isEmpty()) {
B_ETHID4B = Byte.parseByte(s);
} else {
B_ETHID4B = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID5(String s) {
if (!s.trim().isEmpty()) {
B_ETHID5 = Byte.parseByte(s);
} else {
B_ETHID5 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID6(String s) {
if (!s.trim().isEmpty()) {
B_ETHID6 = Byte.parseByte(s);
} else {
B_ETHID6 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID7(String s) {
if (!s.trim().isEmpty()) {
B_ETHID7 = Byte.parseByte(s);
} else {
B_ETHID7 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID8(String s) {
if (!s.trim().isEmpty()) {
B_ETHID8 = Byte.parseByte(s);
} else {
B_ETHID8 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHID9(String s) {
if (!s.trim().isEmpty()) {
B_ETHID9 = Byte.parseByte(s);
} else {
B_ETHID9 = Byte.MIN_VALUE;
}
}

protected final void initB_ETHN_DV(String s) {
if (!s.trim().isEmpty()) {
B_ETHN_DV = Byte.parseByte(s);
} else {
B_ETHN_DV = Byte.MIN_VALUE;
}
}

protected final void initB_EVENT1(String s) {
if (!s.trim().isEmpty()) {
B_EVENT1 = Byte.parseByte(s);
} else {
B_EVENT1 = Byte.MIN_VALUE;
}
}

protected final void initB_EVENT1S(String s) {
if (!s.trim().isEmpty()) {
B_EVENT1S = Byte.parseByte(s);
} else {
B_EVENT1S = Byte.MIN_VALUE;
}
}

protected final void initB_EVENT2(String s) {
if (!s.trim().isEmpty()) {
B_EVENT2 = Byte.parseByte(s);
} else {
B_EVENT2 = Byte.MIN_VALUE;
}
}

protected final void initB_EVENT2S(String s) {
if (!s.trim().isEmpty()) {
B_EVENT2S = Byte.parseByte(s);
} else {
B_EVENT2S = Byte.MIN_VALUE;
}
}

protected final void initB_EVENT3(String s) {
if (!s.trim().isEmpty()) {
B_EVENT3 = Byte.parseByte(s);
} else {
B_EVENT3 = Byte.MIN_VALUE;
}
}

protected final void initB_EVENT3S(String s) {
if (!s.trim().isEmpty()) {
B_EVENT3S = Byte.parseByte(s);
} else {
B_EVENT3S = Byte.MIN_VALUE;
}
}

protected final void initB_EVENT4(String s) {
if (!s.trim().isEmpty()) {
B_EVENT4 = Byte.parseByte(s);
} else {
B_EVENT4 = Byte.MIN_VALUE;
}
}

protected final void initB_EVENT4S(String s) {
if (!s.trim().isEmpty()) {
B_EVENT4S = Byte.parseByte(s);
} else {
B_EVENT4S = Byte.MIN_VALUE;
}
}

protected final void initB_EXTNSA(String s) {
if (!s.trim().isEmpty()) {
B_EXTNSA = Byte.parseByte(s);
} else {
B_EXTNSA = Byte.MIN_VALUE;
}
}

protected final void initB_EXTRATE(String s) {
if (!s.trim().isEmpty()) {
B_EXTRATE = Double.parseDouble(s);
} else {
B_EXTRATE = Double.NaN;
}
}

protected final void initB_EXTREST(String s) {
if (!s.trim().isEmpty()) {
B_EXTREST = Byte.parseByte(s);
} else {
B_EXTREST = Byte.MIN_VALUE;
}
}

protected final void initB_FAMILY(String s) {
if (!s.trim().isEmpty()) {
B_FAMILY = Byte.parseByte(s);
} else {
B_FAMILY = Byte.MIN_VALUE;
}
}

protected final void initB_FATHER(String s) {
if (!s.trim().isEmpty()) {
B_FATHER = Byte.parseByte(s);
} else {
B_FATHER = Byte.MIN_VALUE;
}
}

protected final void initB_FEDLIK(String s) {
if (!s.trim().isEmpty()) {
B_FEDLIK = Byte.parseByte(s);
} else {
B_FEDLIK = Byte.MIN_VALUE;
}
}

protected final void initB_FEDNT(String s) {
if (!s.trim().isEmpty()) {
B_FEDNT = Byte.parseByte(s);
} else {
B_FEDNT = Byte.MIN_VALUE;
}
}

protected final void initB_FEEND(String s) {
if (!s.trim().isEmpty()) {
B_FEEND = Byte.parseByte(s);
} else {
B_FEEND = Byte.MIN_VALUE;
}
}

protected final void initB_FENOW(String s) {
if (!s.trim().isEmpty()) {
B_FENOW = Byte.parseByte(s);
} else {
B_FENOW = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE01(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE01 = Byte.parseByte(s);
} else {
B_FF_BENTYPE01 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE02(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE02 = Byte.parseByte(s);
} else {
B_FF_BENTYPE02 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE03(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE03 = Byte.parseByte(s);
} else {
B_FF_BENTYPE03 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE04(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE04 = Byte.parseByte(s);
} else {
B_FF_BENTYPE04 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE05(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE05 = Byte.parseByte(s);
} else {
B_FF_BENTYPE05 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE06(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE06 = Byte.parseByte(s);
} else {
B_FF_BENTYPE06 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE07(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE07 = Byte.parseByte(s);
} else {
B_FF_BENTYPE07 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE08(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE08 = Byte.parseByte(s);
} else {
B_FF_BENTYPE08 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE09(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE09 = Byte.parseByte(s);
} else {
B_FF_BENTYPE09 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE10(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE10 = Byte.parseByte(s);
} else {
B_FF_BENTYPE10 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE11(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE11 = Byte.parseByte(s);
} else {
B_FF_BENTYPE11 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE12(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE12 = Byte.parseByte(s);
} else {
B_FF_BENTYPE12 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE13(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE13 = Byte.parseByte(s);
} else {
B_FF_BENTYPE13 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE14(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE14 = Byte.parseByte(s);
} else {
B_FF_BENTYPE14 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE15(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE15 = Byte.parseByte(s);
} else {
B_FF_BENTYPE15 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE16(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE16 = Byte.parseByte(s);
} else {
B_FF_BENTYPE16 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE17(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE17 = Byte.parseByte(s);
} else {
B_FF_BENTYPE17 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE18(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE18 = Byte.parseByte(s);
} else {
B_FF_BENTYPE18 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE19(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE19 = Byte.parseByte(s);
} else {
B_FF_BENTYPE19 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE20(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE20 = Byte.parseByte(s);
} else {
B_FF_BENTYPE20 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE21(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE21 = Byte.parseByte(s);
} else {
B_FF_BENTYPE21 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE22(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE22 = Byte.parseByte(s);
} else {
B_FF_BENTYPE22 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE23(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE23 = Byte.parseByte(s);
} else {
B_FF_BENTYPE23 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE24(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE24 = Byte.parseByte(s);
} else {
B_FF_BENTYPE24 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE25(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE25 = Byte.parseByte(s);
} else {
B_FF_BENTYPE25 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE26(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE26 = Byte.parseByte(s);
} else {
B_FF_BENTYPE26 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE27(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE27 = Byte.parseByte(s);
} else {
B_FF_BENTYPE27 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE28(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE28 = Byte.parseByte(s);
} else {
B_FF_BENTYPE28 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE29(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE29 = Byte.parseByte(s);
} else {
B_FF_BENTYPE29 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE30(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE30 = Byte.parseByte(s);
} else {
B_FF_BENTYPE30 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE31(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE31 = Byte.parseByte(s);
} else {
B_FF_BENTYPE31 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE32(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE32 = Byte.parseByte(s);
} else {
B_FF_BENTYPE32 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE33(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE33 = Byte.parseByte(s);
} else {
B_FF_BENTYPE33 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE34(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE34 = Byte.parseByte(s);
} else {
B_FF_BENTYPE34 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE35(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE35 = Byte.parseByte(s);
} else {
B_FF_BENTYPE35 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE36(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE36 = Byte.parseByte(s);
} else {
B_FF_BENTYPE36 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_BENTYPE37(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
B_FF_BENTYPE37 = false;
} else {
B_FF_BENTYPE37 = true;
}
}
}

protected final void initB_FF_BENTYPE38(String s) {
if (!s.trim().isEmpty()) {
B_FF_BENTYPE38 = Byte.parseByte(s);
} else {
B_FF_BENTYPE38 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_EMPLW(String s) {
if (!s.trim().isEmpty()) {
B_FF_EMPLW = Byte.parseByte(s);
} else {
B_FF_EMPLW = Byte.MIN_VALUE;
}
}

protected final void initB_FF_EVERINT(String s) {
if (!s.trim().isEmpty()) {
B_FF_EVERINT = Byte.parseByte(s);
} else {
B_FF_EVERINT = Byte.MIN_VALUE;
}
}

protected final void initB_FF_IVLOLW(String s) {
if (!s.trim().isEmpty()) {
B_FF_IVLOLW = Byte.parseByte(s);
} else {
B_FF_IVLOLW = Byte.MIN_VALUE;
}
}

protected final void initB_FF_JBMNGR(String s) {
if (!s.trim().isEmpty()) {
B_FF_JBMNGR = Byte.parseByte(s);
} else {
B_FF_JBMNGR = Byte.MIN_VALUE;
}
}

protected final void initB_FF_JBSEMP(String s) {
if (!s.trim().isEmpty()) {
B_FF_JBSEMP = Byte.parseByte(s);
} else {
B_FF_JBSEMP = Byte.MIN_VALUE;
}
}

protected final void initB_FF_JBSIZE(String s) {
if (!s.trim().isEmpty()) {
B_FF_JBSIZE = Byte.parseByte(s);
} else {
B_FF_JBSIZE = Byte.MIN_VALUE;
}
}

protected final void initB_FF_JBSTAT(String s) {
if (!s.trim().isEmpty()) {
B_FF_JBSTAT = Byte.parseByte(s);
} else {
B_FF_JBSTAT = Byte.MIN_VALUE;
}
}

protected final void initB_FF_OPRLG(String s) {
if (!s.trim().isEmpty()) {
B_FF_OPRLG = Byte.parseByte(s);
} else {
B_FF_OPRLG = Byte.MIN_VALUE;
}
}

protected final void initB_FF_OPRLG0(String s) {
if (!s.trim().isEmpty()) {
B_FF_OPRLG0 = Byte.parseByte(s);
} else {
B_FF_OPRLG0 = Byte.MIN_VALUE;
}
}

protected final void initB_FF_OPRLG0NI(String s) {
if (!s.trim().isEmpty()) {
B_FF_OPRLG0NI = Byte.parseByte(s);
} else {
B_FF_OPRLG0NI = Byte.MIN_VALUE;
}
}

protected final void initB_FF_TEL(String s) {
if (!s.trim().isEmpty()) {
B_FF_TEL = Byte.parseByte(s);
} else {
B_FF_TEL = Byte.MIN_VALUE;
}
}

protected final void initB_FF_UKBORN(String s) {
if (!s.trim().isEmpty()) {
B_FF_UKBORN = Byte.parseByte(s);
} else {
B_FF_UKBORN = Byte.MIN_VALUE;
}
}

protected final void initB_FF_YR2UK4(String s) {
if (!s.trim().isEmpty()) {
B_FF_YR2UK4 = Short.parseShort(s);
} else {
B_FF_YR2UK4 = Short.MIN_VALUE;
}
}

protected final void initB_FIBENOTHR_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIBENOTHR_DV = Double.parseDouble(s);
} else {
B_FIBENOTHR_DV = Double.NaN;
}
}

protected final void initB_FIBENOTHR_IF(String s) {
if (!s.trim().isEmpty()) {
B_FIBENOTHR_IF = Double.parseDouble(s);
} else {
B_FIBENOTHR_IF = Double.NaN;
}
}

protected final void initB_FIBENOTHR_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_FIBENOTHR_TC = false;
} else {
B_FIBENOTHR_TC = true;
}
}
}

protected final void initB_FIMNGRS_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNGRS_DV = Double.parseDouble(s);
} else {
B_FIMNGRS_DV = Double.NaN;
}
}

protected final void initB_FIMNGRS_IF(String s) {
if (!s.trim().isEmpty()) {
B_FIMNGRS_IF = Double.parseDouble(s);
} else {
B_FIMNGRS_IF = Double.NaN;
}
}

protected final void initB_FIMNGRS_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_FIMNGRS_TC = false;
} else {
B_FIMNGRS_TC = true;
}
}
}

protected final void initB_FIMNINVNET_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNINVNET_DV = Double.parseDouble(s);
} else {
B_FIMNINVNET_DV = Double.NaN;
}
}

protected final void initB_FIMNLABGRS_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNLABGRS_DV = Double.parseDouble(s);
} else {
B_FIMNLABGRS_DV = Double.NaN;
}
}

protected final void initB_FIMNLABGRS_IF(String s) {
if (!s.trim().isEmpty()) {
B_FIMNLABGRS_IF = Double.parseDouble(s);
} else {
B_FIMNLABGRS_IF = Double.NaN;
}
}

protected final void initB_FIMNLABGRS_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_FIMNLABGRS_TC = false;
} else {
B_FIMNLABGRS_TC = true;
}
}
}

protected final void initB_FIMNLABNET_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNLABNET_DV = Double.parseDouble(s);
} else {
B_FIMNLABNET_DV = Double.NaN;
}
}

protected final void initB_FIMNLABNET_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_FIMNLABNET_TC = false;
} else {
B_FIMNLABNET_TC = true;
}
}
}

protected final void initB_FIMNMISC_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNMISC_DV = Double.parseDouble(s);
} else {
B_FIMNMISC_DV = Double.NaN;
}
}

protected final void initB_FIMNNET_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNNET_DV = Double.parseDouble(s);
} else {
B_FIMNNET_DV = Double.NaN;
}
}

protected final void initB_FIMNPEN_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNPEN_DV = Double.parseDouble(s);
} else {
B_FIMNPEN_DV = Double.NaN;
}
}

protected final void initB_FIMNPRBEN_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNPRBEN_DV = Double.parseDouble(s);
} else {
B_FIMNPRBEN_DV = Double.NaN;
}
}

protected final void initB_FIMNSBEN_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIMNSBEN_DV = Double.parseDouble(s);
} else {
B_FIMNSBEN_DV = Double.NaN;
}
}

protected final void initB_FINFUT(String s) {
if (!s.trim().isEmpty()) {
B_FINFUT = Byte.parseByte(s);
} else {
B_FINFUT = Byte.MIN_VALUE;
}
}

protected final void initB_FINNOW(String s) {
if (!s.trim().isEmpty()) {
B_FINNOW = Byte.parseByte(s);
} else {
B_FINNOW = Byte.MIN_VALUE;
}
}

protected final void initB_FIYRDB1(String s) {
if (!s.trim().isEmpty()) {
B_FIYRDB1 = Byte.parseByte(s);
} else {
B_FIYRDB1 = Byte.MIN_VALUE;
}
}

protected final void initB_FIYRDB2(String s) {
if (!s.trim().isEmpty()) {
B_FIYRDB2 = Byte.parseByte(s);
} else {
B_FIYRDB2 = Byte.MIN_VALUE;
}
}

protected final void initB_FIYRDB3(String s) {
if (!s.trim().isEmpty()) {
B_FIYRDB3 = Byte.parseByte(s);
} else {
B_FIYRDB3 = Byte.MIN_VALUE;
}
}

protected final void initB_FIYRDB4(String s) {
if (!s.trim().isEmpty()) {
B_FIYRDB4 = Byte.parseByte(s);
} else {
B_FIYRDB4 = Byte.MIN_VALUE;
}
}

protected final void initB_FIYRDB5(String s) {
if (!s.trim().isEmpty()) {
B_FIYRDB5 = Byte.parseByte(s);
} else {
B_FIYRDB5 = Byte.MIN_VALUE;
}
}

protected final void initB_FIYRDB6(String s) {
if (!s.trim().isEmpty()) {
B_FIYRDB6 = Byte.parseByte(s);
} else {
B_FIYRDB6 = Byte.MIN_VALUE;
}
}

protected final void initB_FIYRDIA(String s) {
if (!s.trim().isEmpty()) {
B_FIYRDIA = Integer.parseInt(s);
} else {
B_FIYRDIA = Integer.MIN_VALUE;
}
}

protected final void initB_FIYRINVINC_DV(String s) {
if (!s.trim().isEmpty()) {
B_FIYRINVINC_DV = Double.parseDouble(s);
} else {
B_FIYRINVINC_DV = Double.NaN;
}
}

protected final void initB_FIYRINVINC_IF(String s) {
if (!s.trim().isEmpty()) {
B_FIYRINVINC_IF = Byte.parseByte(s);
} else {
B_FIYRINVINC_IF = Byte.MIN_VALUE;
}
}

protected final void initB_FIYRINVINC_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_FIYRINVINC_TC = false;
} else {
B_FIYRINVINC_TC = true;
}
}
}

protected final void initB_FNPID(String s) {
if (!s.trim().isEmpty()) {
B_FNPID = Integer.parseInt(s);
} else {
B_FNPID = Integer.MIN_VALUE;
}
}

protected final void initB_FNPNO(String s) {
if (!s.trim().isEmpty()) {
B_FNPNO = Byte.parseByte(s);
} else {
B_FNPNO = Byte.MIN_VALUE;
}
}

protected final void initB_FNSPID(String s) {
if (!s.trim().isEmpty()) {
B_FNSPID = Integer.parseInt(s);
} else {
B_FNSPID = Integer.MIN_VALUE;
}
}

protected final void initB_FNSPNO(String s) {
if (!s.trim().isEmpty()) {
B_FNSPNO = Byte.parseByte(s);
} else {
B_FNSPNO = Byte.MIN_VALUE;
}
}

protected final void initB_FOOD1(String s) {
if (!s.trim().isEmpty()) {
B_FOOD1 = Byte.parseByte(s);
} else {
B_FOOD1 = Byte.MIN_VALUE;
}
}

protected final void initB_FOOD2(String s) {
if (!s.trim().isEmpty()) {
B_FOOD2 = Byte.parseByte(s);
} else {
B_FOOD2 = Byte.MIN_VALUE;
}
}

protected final void initB_FOOD3(String s) {
if (!s.trim().isEmpty()) {
B_FOOD3 = Byte.parseByte(s);
} else {
B_FOOD3 = Byte.MIN_VALUE;
}
}

protected final void initB_FOOD4(String s) {
if (!s.trim().isEmpty()) {
B_FOOD4 = Byte.parseByte(s);
} else {
B_FOOD4 = Byte.MIN_VALUE;
}
}

protected final void initB_FOOD5(String s) {
if (!s.trim().isEmpty()) {
B_FOOD5 = Byte.parseByte(s);
} else {
B_FOOD5 = Byte.MIN_VALUE;
}
}

protected final void initB_FOOD6(String s) {
if (!s.trim().isEmpty()) {
B_FOOD6 = Byte.parseByte(s);
} else {
B_FOOD6 = Byte.MIN_VALUE;
}
}

protected final void initB_FOOD7(String s) {
if (!s.trim().isEmpty()) {
B_FOOD7 = Byte.parseByte(s);
} else {
B_FOOD7 = Byte.MIN_VALUE;
}
}

protected final void initB_FRUVEGE(String s) {
if (!s.trim().isEmpty()) {
B_FRUVEGE = Byte.parseByte(s);
} else {
B_FRUVEGE = Byte.MIN_VALUE;
}
}

protected final void initB_FT2ENDM1(String s) {
if (!s.trim().isEmpty()) {
B_FT2ENDM1 = Byte.parseByte(s);
} else {
B_FT2ENDM1 = Byte.MIN_VALUE;
}
}

protected final void initB_FT2ENDM2(String s) {
if (!s.trim().isEmpty()) {
B_FT2ENDM2 = Byte.parseByte(s);
} else {
B_FT2ENDM2 = Byte.MIN_VALUE;
}
}

protected final void initB_FT2ENDY41(String s) {
if (!s.trim().isEmpty()) {
B_FT2ENDY41 = Short.parseShort(s);
} else {
B_FT2ENDY41 = Short.MIN_VALUE;
}
}

protected final void initB_FT2ENDY42(String s) {
if (!s.trim().isEmpty()) {
B_FT2ENDY42 = Short.parseShort(s);
} else {
B_FT2ENDY42 = Short.MIN_VALUE;
}
}

protected final void initB_FTEDANY(String s) {
if (!s.trim().isEmpty()) {
B_FTEDANY = Byte.parseByte(s);
} else {
B_FTEDANY = Byte.MIN_VALUE;
}
}

protected final void initB_FTEDEND1(String s) {
if (!s.trim().isEmpty()) {
B_FTEDEND1 = Byte.parseByte(s);
} else {
B_FTEDEND1 = Byte.MIN_VALUE;
}
}

protected final void initB_FTEDEND2(String s) {
if (!s.trim().isEmpty()) {
B_FTEDEND2 = Byte.parseByte(s);
} else {
B_FTEDEND2 = Byte.MIN_VALUE;
}
}

protected final void initB_FTEDMOR1(String s) {
if (!s.trim().isEmpty()) {
B_FTEDMOR1 = Byte.parseByte(s);
} else {
B_FTEDMOR1 = Byte.MIN_VALUE;
}
}

protected final void initB_FTEDMOR2(String s) {
if (!s.trim().isEmpty()) {
B_FTEDMOR2 = Byte.parseByte(s);
} else {
B_FTEDMOR2 = Byte.MIN_VALUE;
}
}

protected final void initB_FTEDSTARTM1(String s) {
if (!s.trim().isEmpty()) {
B_FTEDSTARTM1 = Byte.parseByte(s);
} else {
B_FTEDSTARTM1 = Byte.MIN_VALUE;
}
}

protected final void initB_FTEDSTARTM2(String s) {
if (!s.trim().isEmpty()) {
B_FTEDSTARTM2 = Byte.parseByte(s);
} else {
B_FTEDSTARTM2 = Byte.MIN_VALUE;
}
}

protected final void initB_FTEDSTARTY41(String s) {
if (!s.trim().isEmpty()) {
B_FTEDSTARTY41 = Short.parseShort(s);
} else {
B_FTEDSTARTY41 = Short.MIN_VALUE;
}
}

protected final void initB_FTEDSTARTY42(String s) {
if (!s.trim().isEmpty()) {
B_FTEDSTARTY42 = Short.parseShort(s);
} else {
B_FTEDSTARTY42 = Short.MIN_VALUE;
}
}

protected final void initB_FTENDM(String s) {
if (!s.trim().isEmpty()) {
B_FTENDM = Byte.parseByte(s);
} else {
B_FTENDM = Byte.MIN_VALUE;
}
}

protected final void initB_FTENDY4(String s) {
if (!s.trim().isEmpty()) {
B_FTENDY4 = Short.parseShort(s);
} else {
B_FTENDY4 = Short.MIN_VALUE;
}
}

protected final void initB_FTQUALS(String s) {
if (!s.trim().isEmpty()) {
B_FTQUALS = Byte.parseByte(s);
} else {
B_FTQUALS = Byte.MIN_VALUE;
}
}

protected final void initB_FUTRA(String s) {
if (!s.trim().isEmpty()) {
B_FUTRA = Short.parseShort(s);
} else {
B_FUTRA = Short.MIN_VALUE;
}
}

protected final void initB_FUTRB(String s) {
if (!s.trim().isEmpty()) {
B_FUTRB = Short.parseShort(s);
} else {
B_FUTRB = Short.MIN_VALUE;
}
}

protected final void initB_FUTRC(String s) {
if (!s.trim().isEmpty()) {
B_FUTRC = Short.parseShort(s);
} else {
B_FUTRC = Short.MIN_VALUE;
}
}

protected final void initB_FUTRD(String s) {
if (!s.trim().isEmpty()) {
B_FUTRD = Short.parseShort(s);
} else {
B_FUTRD = Short.MIN_VALUE;
}
}

protected final void initB_FUTRE(String s) {
if (!s.trim().isEmpty()) {
B_FUTRE = Short.parseShort(s);
} else {
B_FUTRE = Short.MIN_VALUE;
}
}

protected final void initB_FUTRF(String s) {
if (!s.trim().isEmpty()) {
B_FUTRF = Short.parseShort(s);
} else {
B_FUTRF = Short.MIN_VALUE;
}
}

protected final void initB_FUTRG(String s) {
if (!s.trim().isEmpty()) {
B_FUTRG = Short.parseShort(s);
} else {
B_FUTRG = Short.MIN_VALUE;
}
}

protected final void initB_FUTRH(String s) {
if (!s.trim().isEmpty()) {
B_FUTRH = Short.parseShort(s);
} else {
B_FUTRH = Short.MIN_VALUE;
}
}

protected final void initB_FUTRI(String s) {
if (!s.trim().isEmpty()) {
B_FUTRI = Short.parseShort(s);
} else {
B_FUTRI = Short.MIN_VALUE;
}
}

protected final void initB_FUTRJ(String s) {
if (!s.trim().isEmpty()) {
B_FUTRJ = Short.parseShort(s);
} else {
B_FUTRJ = Short.MIN_VALUE;
}
}

protected final void initB_FUTRK(String s) {
if (!s.trim().isEmpty()) {
B_FUTRK = Short.parseShort(s);
} else {
B_FUTRK = Short.MIN_VALUE;
}
}

protected final void initB_FUTRL(String s) {
if (!s.trim().isEmpty()) {
B_FUTRL = Short.parseShort(s);
} else {
B_FUTRL = Short.MIN_VALUE;
}
}

protected final void initB_GIVECOA(String s) {
if (!s.trim().isEmpty()) {
B_GIVECOA = Byte.parseByte(s);
} else {
B_GIVECOA = Byte.MIN_VALUE;
}
}

protected final void initB_GOR_DV(String s) {
if (!s.trim().isEmpty()) {
B_GOR_DV = Byte.parseByte(s);
} else {
B_GOR_DV = Byte.MIN_VALUE;
}
}

protected final void initB_GRFPID(String s) {
if (!s.trim().isEmpty()) {
B_GRFPID = Integer.parseInt(s);
} else {
B_GRFPID = Integer.MIN_VALUE;
}
}

protected final void initB_GRFPNO(String s) {
if (!s.trim().isEmpty()) {
B_GRFPNO = Byte.parseByte(s);
} else {
B_GRFPNO = Byte.MIN_VALUE;
}
}

protected final void initB_GRMPID(String s) {
if (!s.trim().isEmpty()) {
B_GRMPID = Integer.parseInt(s);
} else {
B_GRMPID = Integer.MIN_VALUE;
}
}

protected final void initB_GRMPNO(String s) {
if (!s.trim().isEmpty()) {
B_GRMPNO = Byte.parseByte(s);
} else {
B_GRMPNO = Byte.MIN_VALUE;
}
}

protected final void initB_GRPBFTS(String s) {
if (!s.trim().isEmpty()) {
B_GRPBFTS = Byte.parseByte(s);
} else {
B_GRPBFTS = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN1(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN1 = Byte.parseByte(s);
} else {
B_HCONDN1 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN10(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN10 = Byte.parseByte(s);
} else {
B_HCONDN10 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN11(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN11 = Byte.parseByte(s);
} else {
B_HCONDN11 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN12(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN12 = Byte.parseByte(s);
} else {
B_HCONDN12 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN13(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN13 = Byte.parseByte(s);
} else {
B_HCONDN13 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN14(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN14 = Byte.parseByte(s);
} else {
B_HCONDN14 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN15(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN15 = Byte.parseByte(s);
} else {
B_HCONDN15 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN16(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN16 = Byte.parseByte(s);
} else {
B_HCONDN16 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN17(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN17 = Byte.parseByte(s);
} else {
B_HCONDN17 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN2(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN2 = Byte.parseByte(s);
} else {
B_HCONDN2 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN3(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN3 = Byte.parseByte(s);
} else {
B_HCONDN3 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN4(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN4 = Byte.parseByte(s);
} else {
B_HCONDN4 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN5(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN5 = Byte.parseByte(s);
} else {
B_HCONDN5 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN6(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN6 = Byte.parseByte(s);
} else {
B_HCONDN6 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN7(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN7 = Byte.parseByte(s);
} else {
B_HCONDN7 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN8(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN8 = Byte.parseByte(s);
} else {
B_HCONDN8 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN9(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN9 = Byte.parseByte(s);
} else {
B_HCONDN9 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDN96(String s) {
if (!s.trim().isEmpty()) {
B_HCONDN96 = Byte.parseByte(s);
} else {
B_HCONDN96 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNO1(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNO1 = Byte.parseByte(s);
} else {
B_HCONDNO1 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNO2(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNO2 = Byte.parseByte(s);
} else {
B_HCONDNO2 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNO3(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNO3 = Byte.parseByte(s);
} else {
B_HCONDNO3 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNO4(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNO4 = Byte.parseByte(s);
} else {
B_HCONDNO4 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNO5(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNO5 = Byte.parseByte(s);
} else {
B_HCONDNO5 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNO6(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNO6 = Byte.parseByte(s);
} else {
B_HCONDNO6 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNO7(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNO7 = Byte.parseByte(s);
} else {
B_HCONDNO7 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNO8(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNO8 = Byte.parseByte(s);
} else {
B_HCONDNO8 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNS1(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNS1 = Byte.parseByte(s);
} else {
B_HCONDNS1 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNS2(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNS2 = Byte.parseByte(s);
} else {
B_HCONDNS2 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNS3(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNS3 = Byte.parseByte(s);
} else {
B_HCONDNS3 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNS4(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNS4 = Byte.parseByte(s);
} else {
B_HCONDNS4 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNS5(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNS5 = Byte.parseByte(s);
} else {
B_HCONDNS5 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNS6(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNS6 = Byte.parseByte(s);
} else {
B_HCONDNS6 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNS7(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNS7 = Byte.parseByte(s);
} else {
B_HCONDNS7 = Byte.MIN_VALUE;
}
}

protected final void initB_HCONDNS8(String s) {
if (!s.trim().isEmpty()) {
B_HCONDNS8 = Byte.parseByte(s);
} else {
B_HCONDNS8 = Byte.MIN_VALUE;
}
}

protected final void initB_HEALTH(String s) {
if (!s.trim().isEmpty()) {
B_HEALTH = Byte.parseByte(s);
} else {
B_HEALTH = Byte.MIN_VALUE;
}
}

protected final void initB_HERFREQ(String s) {
if (!s.trim().isEmpty()) {
B_HERFREQ = Byte.parseByte(s);
} else {
B_HERFREQ = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE1(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE1 = Byte.parseByte(s);
} else {
B_HERITAGE1 = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE2(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE2 = Byte.parseByte(s);
} else {
B_HERITAGE2 = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE3(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE3 = Byte.parseByte(s);
} else {
B_HERITAGE3 = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE4(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE4 = Byte.parseByte(s);
} else {
B_HERITAGE4 = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE5(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE5 = Byte.parseByte(s);
} else {
B_HERITAGE5 = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE6(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE6 = Byte.parseByte(s);
} else {
B_HERITAGE6 = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE7(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE7 = Byte.parseByte(s);
} else {
B_HERITAGE7 = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE8(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE8 = Byte.parseByte(s);
} else {
B_HERITAGE8 = Byte.MIN_VALUE;
}
}

protected final void initB_HERITAGE96(String s) {
if (!s.trim().isEmpty()) {
B_HERITAGE96 = Byte.parseByte(s);
} else {
B_HERITAGE96 = Byte.MIN_VALUE;
}
}

protected final void initB_HGADOPTF(String s) {
if (!s.trim().isEmpty()) {
B_HGADOPTF = Byte.parseByte(s);
} else {
B_HGADOPTF = Byte.MIN_VALUE;
}
}

protected final void initB_HGADOPTM(String s) {
if (!s.trim().isEmpty()) {
B_HGADOPTM = Byte.parseByte(s);
} else {
B_HGADOPTM = Byte.MIN_VALUE;
}
}

protected final void initB_HGBIOF(String s) {
if (!s.trim().isEmpty()) {
B_HGBIOF = Byte.parseByte(s);
} else {
B_HGBIOF = Byte.MIN_VALUE;
}
}

protected final void initB_HGBIOM(String s) {
if (!s.trim().isEmpty()) {
B_HGBIOM = Byte.parseByte(s);
} else {
B_HGBIOM = Byte.MIN_VALUE;
}
}

protected final void initB_HGPART(String s) {
if (!s.trim().isEmpty()) {
B_HGPART = Byte.parseByte(s);
} else {
B_HGPART = Byte.MIN_VALUE;
}
}

protected final void initB_HHORIG(String s) {
if (!s.trim().isEmpty()) {
B_HHORIG = Byte.parseByte(s);
} else {
B_HHORIG = Byte.MIN_VALUE;
}
}

protected final void initB_HHRESP_DV(String s) {
if (!s.trim().isEmpty()) {
B_HHRESP_DV = Byte.parseByte(s);
} else {
B_HHRESP_DV = Byte.MIN_VALUE;
}
}

protected final void initB_HHTYPE_DV(String s) {
if (!s.trim().isEmpty()) {
B_HHTYPE_DV = Byte.parseByte(s);
} else {
B_HHTYPE_DV = Byte.MIN_VALUE;
}
}

protected final void initB_HIDP(String s) {
if (!s.trim().isEmpty()) {
B_HIDP = Integer.parseInt(s);
} else {
B_HIDP = Integer.MIN_VALUE;
}
}

protected final void initB_HIQUAL_DV(String s) {
if (!s.trim().isEmpty()) {
B_HIQUAL_DV = Byte.parseByte(s);
} else {
B_HIQUAL_DV = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPC1(String s) {
if (!s.trim().isEmpty()) {
B_HOSPC1 = Byte.parseByte(s);
} else {
B_HOSPC1 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPC2(String s) {
if (!s.trim().isEmpty()) {
B_HOSPC2 = Byte.parseByte(s);
} else {
B_HOSPC2 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPC3(String s) {
if (!s.trim().isEmpty()) {
B_HOSPC3 = Byte.parseByte(s);
} else {
B_HOSPC3 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPC4(String s) {
if (!s.trim().isEmpty()) {
B_HOSPC4 = Byte.parseByte(s);
} else {
B_HOSPC4 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPC5(String s) {
if (!s.trim().isEmpty()) {
B_HOSPC5 = Byte.parseByte(s);
} else {
B_HOSPC5 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPC6(String s) {
if (!s.trim().isEmpty()) {
B_HOSPC6 = Byte.parseByte(s);
} else {
B_HOSPC6 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPC7(String s) {
if (!s.trim().isEmpty()) {
B_HOSPC7 = Byte.parseByte(s);
} else {
B_HOSPC7 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPC8(String s) {
if (!s.trim().isEmpty()) {
B_HOSPC8 = Byte.parseByte(s);
} else {
B_HOSPC8 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPDC1(String s) {
if (!s.trim().isEmpty()) {
B_HOSPDC1 = Short.parseShort(s);
} else {
B_HOSPDC1 = Short.MIN_VALUE;
}
}

protected final void initB_HOSPDC2(String s) {
if (!s.trim().isEmpty()) {
B_HOSPDC2 = Short.parseShort(s);
} else {
B_HOSPDC2 = Short.MIN_VALUE;
}
}

protected final void initB_HOSPDC3(String s) {
if (!s.trim().isEmpty()) {
B_HOSPDC3 = Byte.parseByte(s);
} else {
B_HOSPDC3 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPDC4(String s) {
if (!s.trim().isEmpty()) {
B_HOSPDC4 = Byte.parseByte(s);
} else {
B_HOSPDC4 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPDC5(String s) {
if (!s.trim().isEmpty()) {
B_HOSPDC5 = Byte.parseByte(s);
} else {
B_HOSPDC5 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPDC6(String s) {
if (!s.trim().isEmpty()) {
B_HOSPDC6 = Byte.parseByte(s);
} else {
B_HOSPDC6 = Byte.MIN_VALUE;
}
}

protected final void initB_HOSPDC7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_HOSPDC7 = false;
} else {
B_HOSPDC7 = true;
}
}
}

protected final void initB_HOSPDC8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_HOSPDC8 = false;
} else {
B_HOSPDC8 = true;
}
}
}

protected final void initB_HOUSING(String s) {
if (!s.trim().isEmpty()) {
B_HOUSING = Byte.parseByte(s);
} else {
B_HOUSING = Byte.MIN_VALUE;
}
}

protected final void initB_HOWLNG(String s) {
if (!s.trim().isEmpty()) {
B_HOWLNG = Short.parseShort(s);
} else {
B_HOWLNG = Short.MIN_VALUE;
}
}

protected final void initB_HRPID(String s) {
if (!s.trim().isEmpty()) {
B_HRPID = Integer.parseInt(s);
} else {
B_HRPID = Integer.MIN_VALUE;
}
}

protected final void initB_HRPNO(String s) {
if (!s.trim().isEmpty()) {
B_HRPNO = Byte.parseByte(s);
} else {
B_HRPNO = Byte.MIN_VALUE;
}
}

protected final void initB_HUBOSS(String s) {
if (!s.trim().isEmpty()) {
B_HUBOSS = Byte.parseByte(s);
} else {
B_HUBOSS = Byte.MIN_VALUE;
}
}

protected final void initB_HUBUYS(String s) {
if (!s.trim().isEmpty()) {
B_HUBUYS = Byte.parseByte(s);
} else {
B_HUBUYS = Byte.MIN_VALUE;
}
}

protected final void initB_HUDIY(String s) {
if (!s.trim().isEmpty()) {
B_HUDIY = Byte.parseByte(s);
} else {
B_HUDIY = Byte.MIN_VALUE;
}
}

protected final void initB_HUFRYS(String s) {
if (!s.trim().isEmpty()) {
B_HUFRYS = Byte.parseByte(s);
} else {
B_HUFRYS = Byte.MIN_VALUE;
}
}

protected final void initB_HUIRON(String s) {
if (!s.trim().isEmpty()) {
B_HUIRON = Byte.parseByte(s);
} else {
B_HUIRON = Byte.MIN_VALUE;
}
}

protected final void initB_HUMOPS(String s) {
if (!s.trim().isEmpty()) {
B_HUMOPS = Byte.parseByte(s);
} else {
B_HUMOPS = Byte.MIN_VALUE;
}
}

protected final void initB_HUPOTS(String s) {
if (!s.trim().isEmpty()) {
B_HUPOTS = Byte.parseByte(s);
} else {
B_HUPOTS = Byte.MIN_VALUE;
}
}

protected final void initB_HUSITS(String s) {
if (!s.trim().isEmpty()) {
B_HUSITS = Byte.parseByte(s);
} else {
B_HUSITS = Byte.MIN_VALUE;
}
}

protected final void initB_IENDDATHH(String s) {
if (!s.trim().isEmpty()) {
B_IENDDATHH = Byte.parseByte(s);
} else {
B_IENDDATHH = Byte.MIN_VALUE;
}
}

protected final void initB_IENDDATMM(String s) {
if (!s.trim().isEmpty()) {
B_IENDDATMM = Byte.parseByte(s);
} else {
B_IENDDATMM = Byte.MIN_VALUE;
}
}

protected final void initB_IENDDATSS(String s) {
if (!s.trim().isEmpty()) {
B_IENDDATSS = Byte.parseByte(s);
} else {
B_IENDDATSS = Byte.MIN_VALUE;
}
}

protected final void initB_IND5MUS_LW(String s) {
if (!s.trim().isEmpty()) {
B_IND5MUS_LW = Double.parseDouble(s);
} else {
B_IND5MUS_LW = Double.NaN;
}
}

protected final void initB_INDIN01_LW(String s) {
if (!s.trim().isEmpty()) {
B_INDIN01_LW = Double.parseDouble(s);
} else {
B_INDIN01_LW = Double.NaN;
}
}

protected final void initB_INDIN91_LW(String s) {
if (!s.trim().isEmpty()) {
B_INDIN91_LW = Double.parseDouble(s);
} else {
B_INDIN91_LW = Double.NaN;
}
}

protected final void initB_INDINBH_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDINBH_XW = Double.parseDouble(s);
} else {
B_INDINBH_XW = Double.NaN;
}
}

protected final void initB_INDINUB_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDINUB_XW = Double.parseDouble(s);
} else {
B_INDINUB_XW = Double.NaN;
}
}

protected final void initB_INDINUS_LW(String s) {
if (!s.trim().isEmpty()) {
B_INDINUS_LW = Double.parseDouble(s);
} else {
B_INDINUS_LW = Double.NaN;
}
}

protected final void initB_INDINUS_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDINUS_XW = Double.parseDouble(s);
} else {
B_INDINUS_XW = Double.NaN;
}
}

protected final void initB_INDMODE(String s) {
if (!s.trim().isEmpty()) {
B_INDMODE = Byte.parseByte(s);
} else {
B_INDMODE = Byte.MIN_VALUE;
}
}

protected final void initB_INDPXBH_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDPXBH_XW = Double.parseDouble(s);
} else {
B_INDPXBH_XW = Double.NaN;
}
}

protected final void initB_INDPXUB_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDPXUB_XW = Double.parseDouble(s);
} else {
B_INDPXUB_XW = Double.NaN;
}
}

protected final void initB_INDPXUS_LW(String s) {
if (!s.trim().isEmpty()) {
B_INDPXUS_LW = Double.parseDouble(s);
} else {
B_INDPXUS_LW = Double.NaN;
}
}

protected final void initB_INDPXUS_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDPXUS_XW = Double.parseDouble(s);
} else {
B_INDPXUS_XW = Double.NaN;
}
}

protected final void initB_INDSCBH_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDSCBH_XW = Double.parseDouble(s);
} else {
B_INDSCBH_XW = Double.NaN;
}
}

protected final void initB_INDSCUB_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDSCUB_XW = Double.parseDouble(s);
} else {
B_INDSCUB_XW = Double.NaN;
}
}

protected final void initB_INDSCUS_LW(String s) {
if (!s.trim().isEmpty()) {
B_INDSCUS_LW = Double.parseDouble(s);
} else {
B_INDSCUS_LW = Double.NaN;
}
}

protected final void initB_INDSCUS_XW(String s) {
if (!s.trim().isEmpty()) {
B_INDSCUS_XW = Double.parseDouble(s);
} else {
B_INDSCUS_XW = Double.NaN;
}
}

protected final void initB_INTDATD_DV(String s) {
if (!s.trim().isEmpty()) {
B_INTDATD_DV = Byte.parseByte(s);
} else {
B_INTDATD_DV = Byte.MIN_VALUE;
}
}

protected final void initB_INTDATM_DV(String s) {
if (!s.trim().isEmpty()) {
B_INTDATM_DV = Byte.parseByte(s);
} else {
B_INTDATM_DV = Byte.MIN_VALUE;
}
}

protected final void initB_INTDATY_DV(String s) {
if (!s.trim().isEmpty()) {
B_INTDATY_DV = Short.parseShort(s);
} else {
B_INTDATY_DV = Short.MIN_VALUE;
}
}

protected final void initB_INVITRO1(String s) {
if (!s.trim().isEmpty()) {
B_INVITRO1 = Byte.parseByte(s);
} else {
B_INVITRO1 = Byte.MIN_VALUE;
}
}

protected final void initB_INVITRO2(String s) {
if (!s.trim().isEmpty()) {
B_INVITRO2 = Byte.parseByte(s);
} else {
B_INVITRO2 = Byte.MIN_VALUE;
}
}

protected final void initB_INVITRO3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_INVITRO3 = false;
} else {
B_INVITRO3 = true;
}
}
}

protected final void initB_INVITRO4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_INVITRO4 = false;
} else {
B_INVITRO4 = true;
}
}
}

protected final void initB_INVITRO5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_INVITRO5 = false;
} else {
B_INVITRO5 = true;
}
}
}

protected final void initB_IOUTCOME(String s) {
if (!s.trim().isEmpty()) {
B_IOUTCOME = Byte.parseByte(s);
} else {
B_IOUTCOME = Byte.MIN_VALUE;
}
}

protected final void initB_ISTRTDATD(String s) {
if (!s.trim().isEmpty()) {
B_ISTRTDATD = Byte.parseByte(s);
} else {
B_ISTRTDATD = Byte.MIN_VALUE;
}
}

protected final void initB_ISTRTDATHH(String s) {
if (!s.trim().isEmpty()) {
B_ISTRTDATHH = Byte.parseByte(s);
} else {
B_ISTRTDATHH = Byte.MIN_VALUE;
}
}

protected final void initB_ISTRTDATM(String s) {
if (!s.trim().isEmpty()) {
B_ISTRTDATM = Byte.parseByte(s);
} else {
B_ISTRTDATM = Byte.MIN_VALUE;
}
}

protected final void initB_ISTRTDATMM(String s) {
if (!s.trim().isEmpty()) {
B_ISTRTDATMM = Byte.parseByte(s);
} else {
B_ISTRTDATMM = Byte.MIN_VALUE;
}
}

protected final void initB_ISTRTDATSS(String s) {
if (!s.trim().isEmpty()) {
B_ISTRTDATSS = Byte.parseByte(s);
} else {
B_ISTRTDATSS = Byte.MIN_VALUE;
}
}

protected final void initB_ISTRTDATY(String s) {
if (!s.trim().isEmpty()) {
B_ISTRTDATY = Short.parseShort(s);
} else {
B_ISTRTDATY = Short.MIN_VALUE;
}
}

protected final void initB_IVAFFCT11(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT11 = Byte.parseByte(s);
} else {
B_IVAFFCT11 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT12(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT12 = Byte.parseByte(s);
} else {
B_IVAFFCT12 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT13(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT13 = Byte.parseByte(s);
} else {
B_IVAFFCT13 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT14(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT14 = Byte.parseByte(s);
} else {
B_IVAFFCT14 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT15(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT15 = Byte.parseByte(s);
} else {
B_IVAFFCT15 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT17(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT17 = Byte.parseByte(s);
} else {
B_IVAFFCT17 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT21(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT21 = Byte.parseByte(s);
} else {
B_IVAFFCT21 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT22(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT22 = Byte.parseByte(s);
} else {
B_IVAFFCT22 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT23(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT23 = Byte.parseByte(s);
} else {
B_IVAFFCT23 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT27(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT27 = Byte.parseByte(s);
} else {
B_IVAFFCT27 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT30(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT30 = Byte.parseByte(s);
} else {
B_IVAFFCT30 = Byte.MIN_VALUE;
}
}

protected final void initB_IVAFFCT97(String s) {
if (!s.trim().isEmpty()) {
B_IVAFFCT97 = Byte.parseByte(s);
} else {
B_IVAFFCT97 = Byte.MIN_VALUE;
}
}

protected final void initB_IVCOOP(String s) {
if (!s.trim().isEmpty()) {
B_IVCOOP = Byte.parseByte(s);
} else {
B_IVCOOP = Byte.MIN_VALUE;
}
}

protected final void initB_IVFIO(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
B_IVFIO = false;
} else {
B_IVFIO = true;
}
}
}

protected final void initB_IVINFNCE(String s) {
if (!s.trim().isEmpty()) {
B_IVINFNCE = Byte.parseByte(s);
} else {
B_IVINFNCE = Byte.MIN_VALUE;
}
}

protected final void initB_IVINTLANG(String s) {
if (!s.trim().isEmpty()) {
B_IVINTLANG = Byte.parseByte(s);
} else {
B_IVINTLANG = Byte.MIN_VALUE;
}
}

protected final void initB_IVPRSNT(String s) {
if (!s.trim().isEmpty()) {
B_IVPRSNT = Byte.parseByte(s);
} else {
B_IVPRSNT = Byte.MIN_VALUE;
}
}

protected final void initB_IVTRANS(String s) {
if (!s.trim().isEmpty()) {
B_IVTRANS = Byte.parseByte(s);
} else {
B_IVTRANS = Byte.MIN_VALUE;
}
}

protected final void initB_IVWHOINT(String s) {
if (!s.trim().isEmpty()) {
B_IVWHOINT = Byte.parseByte(s);
} else {
B_IVWHOINT = Byte.MIN_VALUE;
}
}

protected final void initB_J1BOSS(String s) {
if (!s.trim().isEmpty()) {
B_J1BOSS = Byte.parseByte(s);
} else {
B_J1BOSS = Byte.MIN_VALUE;
}
}

protected final void initB_J1MNGR(String s) {
if (!s.trim().isEmpty()) {
B_J1MNGR = Byte.parseByte(s);
} else {
B_J1MNGR = Byte.MIN_VALUE;
}
}

protected final void initB_J1NONE(String s) {
if (!s.trim().isEmpty()) {
B_J1NONE = Byte.parseByte(s);
} else {
B_J1NONE = Byte.MIN_VALUE;
}
}

protected final void initB_J1NSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
B_J1NSSEC5_DV = Byte.parseByte(s);
} else {
B_J1NSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initB_J1SEMP(String s) {
if (!s.trim().isEmpty()) {
B_J1SEMP = Byte.parseByte(s);
} else {
B_J1SEMP = Byte.MIN_VALUE;
}
}

protected final void initB_J1SOC00_CC(String s) {
if (!s.trim().isEmpty()) {
B_J1SOC00_CC = Short.parseShort(s);
} else {
B_J1SOC00_CC = Short.MIN_VALUE;
}
}

protected final void initB_J1SOC10_CC(String s) {
if (!s.trim().isEmpty()) {
B_J1SOC10_CC = Short.parseShort(s);
} else {
B_J1SOC10_CC = Short.MIN_VALUE;
}
}

protected final void initB_J1SOC90_CC(String s) {
if (!s.trim().isEmpty()) {
B_J1SOC90_CC = Byte.parseByte(s);
} else {
B_J1SOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initB_J2HAS(String s) {
if (!s.trim().isEmpty()) {
B_J2HAS = Byte.parseByte(s);
} else {
B_J2HAS = Byte.MIN_VALUE;
}
}

protected final void initB_J2HRS(String s) {
if (!s.trim().isEmpty()) {
B_J2HRS = Short.parseShort(s);
} else {
B_J2HRS = Short.MIN_VALUE;
}
}

protected final void initB_J2NSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
B_J2NSSEC5_DV = Byte.parseByte(s);
} else {
B_J2NSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initB_J2PAY(String s) {
if (!s.trim().isEmpty()) {
B_J2PAY = Short.parseShort(s);
} else {
B_J2PAY = Short.MIN_VALUE;
}
}

protected final void initB_J2PAYNET_DV(String s) {
if (!s.trim().isEmpty()) {
B_J2PAYNET_DV = Double.parseDouble(s);
} else {
B_J2PAYNET_DV = Double.NaN;
}
}

protected final void initB_J2PAY_DV(String s) {
if (!s.trim().isEmpty()) {
B_J2PAY_DV = Double.parseDouble(s);
} else {
B_J2PAY_DV = Double.NaN;
}
}

protected final void initB_J2PAY_IF(String s) {
if (!s.trim().isEmpty()) {
B_J2PAY_IF = Byte.parseByte(s);
} else {
B_J2PAY_IF = Byte.MIN_VALUE;
}
}

protected final void initB_J2SEMP(String s) {
if (!s.trim().isEmpty()) {
B_J2SEMP = Byte.parseByte(s);
} else {
B_J2SEMP = Byte.MIN_VALUE;
}
}

protected final void initB_J2SOC00_CC(String s) {
if (!s.trim().isEmpty()) {
B_J2SOC00_CC = Short.parseShort(s);
} else {
B_J2SOC00_CC = Short.MIN_VALUE;
}
}

protected final void initB_J2SOC10_CC(String s) {
if (!s.trim().isEmpty()) {
B_J2SOC10_CC = Short.parseShort(s);
} else {
B_J2SOC10_CC = Short.MIN_VALUE;
}
}

protected final void initB_J2SOC90_CC(String s) {
if (!s.trim().isEmpty()) {
B_J2SOC90_CC = Byte.parseByte(s);
} else {
B_J2SOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initB_JBATT1(String s) {
if (!s.trim().isEmpty()) {
B_JBATT1 = Byte.parseByte(s);
} else {
B_JBATT1 = Byte.MIN_VALUE;
}
}

protected final void initB_JBATT10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_JBATT10 = false;
} else {
B_JBATT10 = true;
}
}
}

protected final void initB_JBATT2(String s) {
if (!s.trim().isEmpty()) {
B_JBATT2 = Byte.parseByte(s);
} else {
B_JBATT2 = Byte.MIN_VALUE;
}
}

protected final void initB_JBATT3(String s) {
if (!s.trim().isEmpty()) {
B_JBATT3 = Byte.parseByte(s);
} else {
B_JBATT3 = Byte.MIN_VALUE;
}
}

protected final void initB_JBATT4(String s) {
if (!s.trim().isEmpty()) {
B_JBATT4 = Byte.parseByte(s);
} else {
B_JBATT4 = Byte.MIN_VALUE;
}
}

protected final void initB_JBATT5(String s) {
if (!s.trim().isEmpty()) {
B_JBATT5 = Byte.parseByte(s);
} else {
B_JBATT5 = Byte.MIN_VALUE;
}
}

protected final void initB_JBATT6(String s) {
if (!s.trim().isEmpty()) {
B_JBATT6 = Byte.parseByte(s);
} else {
B_JBATT6 = Byte.MIN_VALUE;
}
}

protected final void initB_JBATT7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_JBATT7 = false;
} else {
B_JBATT7 = true;
}
}
}

protected final void initB_JBATT8(String s) {
if (!s.trim().isEmpty()) {
B_JBATT8 = Byte.parseByte(s);
} else {
B_JBATT8 = Byte.MIN_VALUE;
}
}

protected final void initB_JBATT9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_JBATT9 = false;
} else {
B_JBATT9 = true;
}
}
}

protected final void initB_JBBGD(String s) {
if (!s.trim().isEmpty()) {
B_JBBGD = Byte.parseByte(s);
} else {
B_JBBGD = Byte.MIN_VALUE;
}
}

protected final void initB_JBBGM(String s) {
if (!s.trim().isEmpty()) {
B_JBBGM = Byte.parseByte(s);
} else {
B_JBBGM = Byte.MIN_VALUE;
}
}

protected final void initB_JBBGY(String s) {
if (!s.trim().isEmpty()) {
B_JBBGY = Short.parseShort(s);
} else {
B_JBBGY = Short.MIN_VALUE;
}
}

protected final void initB_JBENDD(String s) {
if (!s.trim().isEmpty()) {
B_JBENDD = Byte.parseByte(s);
} else {
B_JBENDD = Byte.MIN_VALUE;
}
}

protected final void initB_JBENDM(String s) {
if (!s.trim().isEmpty()) {
B_JBENDM = Byte.parseByte(s);
} else {
B_JBENDM = Byte.MIN_VALUE;
}
}

protected final void initB_JBENDREAS(String s) {
if (!s.trim().isEmpty()) {
B_JBENDREAS = Byte.parseByte(s);
} else {
B_JBENDREAS = Byte.MIN_VALUE;
}
}

protected final void initB_JBENDY4(String s) {
if (!s.trim().isEmpty()) {
B_JBENDY4 = Short.parseShort(s);
} else {
B_JBENDY4 = Short.MIN_VALUE;
}
}

protected final void initB_JBES2000(String s) {
if (!s.trim().isEmpty()) {
B_JBES2000 = Byte.parseByte(s);
} else {
B_JBES2000 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX1(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX1 = Byte.parseByte(s);
} else {
B_JBFLEX1 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX2(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX2 = Byte.parseByte(s);
} else {
B_JBFLEX2 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX3(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX3 = Byte.parseByte(s);
} else {
B_JBFLEX3 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX4(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX4 = Byte.parseByte(s);
} else {
B_JBFLEX4 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX5(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX5 = Byte.parseByte(s);
} else {
B_JBFLEX5 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX6(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX6 = Byte.parseByte(s);
} else {
B_JBFLEX6 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX7(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX7 = Byte.parseByte(s);
} else {
B_JBFLEX7 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX8(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX8 = Byte.parseByte(s);
} else {
B_JBFLEX8 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFLEX96(String s) {
if (!s.trim().isEmpty()) {
B_JBFLEX96 = Byte.parseByte(s);
} else {
B_JBFLEX96 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFT_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBFT_DV = Byte.parseByte(s);
} else {
B_JBFT_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXINF(String s) {
if (!s.trim().isEmpty()) {
B_JBFXINF = Byte.parseByte(s);
} else {
B_JBFXINF = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE1(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE1 = Byte.parseByte(s);
} else {
B_JBFXUSE1 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE2(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE2 = Byte.parseByte(s);
} else {
B_JBFXUSE2 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE3(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE3 = Byte.parseByte(s);
} else {
B_JBFXUSE3 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE4(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE4 = Byte.parseByte(s);
} else {
B_JBFXUSE4 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE5(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE5 = Byte.parseByte(s);
} else {
B_JBFXUSE5 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE6(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE6 = Byte.parseByte(s);
} else {
B_JBFXUSE6 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE7(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE7 = Byte.parseByte(s);
} else {
B_JBFXUSE7 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE8(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE8 = Byte.parseByte(s);
} else {
B_JBFXUSE8 = Byte.MIN_VALUE;
}
}

protected final void initB_JBFXUSE96(String s) {
if (!s.trim().isEmpty()) {
B_JBFXUSE96 = Byte.parseByte(s);
} else {
B_JBFXUSE96 = Byte.MIN_VALUE;
}
}

protected final void initB_JBHAD(String s) {
if (!s.trim().isEmpty()) {
B_JBHAD = Byte.parseByte(s);
} else {
B_JBHAD = Byte.MIN_VALUE;
}
}

protected final void initB_JBHAS(String s) {
if (!s.trim().isEmpty()) {
B_JBHAS = Byte.parseByte(s);
} else {
B_JBHAS = Byte.MIN_VALUE;
}
}

protected final void initB_JBHRS(String s) {
if (!s.trim().isEmpty()) {
B_JBHRS = Double.parseDouble(s);
} else {
B_JBHRS = Double.NaN;
}
}

protected final void initB_JBIINDB_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBIINDB_DV = Byte.parseByte(s);
} else {
B_JBIINDB_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBISCO88_CC(String s) {
if (!s.trim().isEmpty()) {
B_JBISCO88_CC = Short.parseShort(s);
} else {
B_JBISCO88_CC = Short.MIN_VALUE;
}
}

protected final void initB_JBLKCHA(String s) {
if (!s.trim().isEmpty()) {
B_JBLKCHA = Byte.parseByte(s);
} else {
B_JBLKCHA = Byte.MIN_VALUE;
}
}

protected final void initB_JBLKCHB(String s) {
if (!s.trim().isEmpty()) {
B_JBLKCHB = Byte.parseByte(s);
} else {
B_JBLKCHB = Byte.MIN_VALUE;
}
}

protected final void initB_JBLKCHC(String s) {
if (!s.trim().isEmpty()) {
B_JBLKCHC = Byte.parseByte(s);
} else {
B_JBLKCHC = Byte.MIN_VALUE;
}
}

protected final void initB_JBLKCHD(String s) {
if (!s.trim().isEmpty()) {
B_JBLKCHD = Byte.parseByte(s);
} else {
B_JBLKCHD = Byte.MIN_VALUE;
}
}

protected final void initB_JBLKCHE(String s) {
if (!s.trim().isEmpty()) {
B_JBLKCHE = Byte.parseByte(s);
} else {
B_JBLKCHE = Byte.MIN_VALUE;
}
}

protected final void initB_JBMNGR(String s) {
if (!s.trim().isEmpty()) {
B_JBMNGR = Byte.parseByte(s);
} else {
B_JBMNGR = Byte.MIN_VALUE;
}
}

protected final void initB_JBMNGRCHK(String s) {
if (!s.trim().isEmpty()) {
B_JBMNGRCHK = Byte.parseByte(s);
} else {
B_JBMNGRCHK = Byte.MIN_VALUE;
}
}

protected final void initB_JBNSSEC3_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBNSSEC3_DV = Byte.parseByte(s);
} else {
B_JBNSSEC3_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBNSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBNSSEC5_DV = Byte.parseByte(s);
} else {
B_JBNSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBNSSEC8_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBNSSEC8_DV = Byte.parseByte(s);
} else {
B_JBNSSEC8_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBNSSEC_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBNSSEC_DV = Byte.parseByte(s);
} else {
B_JBNSSEC_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBOFF(String s) {
if (!s.trim().isEmpty()) {
B_JBOFF = Byte.parseByte(s);
} else {
B_JBOFF = Byte.MIN_VALUE;
}
}

protected final void initB_JBOFFY(String s) {
if (!s.trim().isEmpty()) {
B_JBOFFY = Byte.parseByte(s);
} else {
B_JBOFFY = Byte.MIN_VALUE;
}
}

protected final void initB_JBONUS(String s) {
if (!s.trim().isEmpty()) {
B_JBONUS = Byte.parseByte(s);
} else {
B_JBONUS = Byte.MIN_VALUE;
}
}

protected final void initB_JBOT(String s) {
if (!s.trim().isEmpty()) {
B_JBOT = Byte.parseByte(s);
} else {
B_JBOT = Byte.MIN_VALUE;
}
}

protected final void initB_JBOTPD(String s) {
if (!s.trim().isEmpty()) {
B_JBOTPD = Byte.parseByte(s);
} else {
B_JBOTPD = Byte.MIN_VALUE;
}
}

protected final void initB_JBPEN(String s) {
if (!s.trim().isEmpty()) {
B_JBPEN = Byte.parseByte(s);
} else {
B_JBPEN = Byte.MIN_VALUE;
}
}

protected final void initB_JBPENM(String s) {
if (!s.trim().isEmpty()) {
B_JBPENM = Byte.parseByte(s);
} else {
B_JBPENM = Byte.MIN_VALUE;
}
}

protected final void initB_JBPENY4(String s) {
if (!s.trim().isEmpty()) {
B_JBPENY4 = Short.parseShort(s);
} else {
B_JBPENY4 = Short.MIN_VALUE;
}
}

protected final void initB_JBPERFP(String s) {
if (!s.trim().isEmpty()) {
B_JBPERFP = Byte.parseByte(s);
} else {
B_JBPERFP = Byte.MIN_VALUE;
}
}

protected final void initB_JBPL(String s) {
if (!s.trim().isEmpty()) {
B_JBPL = Byte.parseByte(s);
} else {
B_JBPL = Byte.MIN_VALUE;
}
}

protected final void initB_JBRGSC_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBRGSC_DV = Byte.parseByte(s);
} else {
B_JBRGSC_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBRISE(String s) {
if (!s.trim().isEmpty()) {
B_JBRISE = Byte.parseByte(s);
} else {
B_JBRISE = Byte.MIN_VALUE;
}
}

protected final void initB_JBSAMR(String s) {
if (!s.trim().isEmpty()) {
B_JBSAMR = Byte.parseByte(s);
} else {
B_JBSAMR = Byte.MIN_VALUE;
}
}

protected final void initB_JBSAT(String s) {
if (!s.trim().isEmpty()) {
B_JBSAT = Byte.parseByte(s);
} else {
B_JBSAT = Byte.MIN_VALUE;
}
}

protected final void initB_JBSEC(String s) {
if (!s.trim().isEmpty()) {
B_JBSEC = Byte.parseByte(s);
} else {
B_JBSEC = Byte.MIN_VALUE;
}
}

protected final void initB_JBSECT(String s) {
if (!s.trim().isEmpty()) {
B_JBSECT = Byte.parseByte(s);
} else {
B_JBSECT = Byte.MIN_VALUE;
}
}

protected final void initB_JBSECTPUB(String s) {
if (!s.trim().isEmpty()) {
B_JBSECTPUB = Byte.parseByte(s);
} else {
B_JBSECTPUB = Byte.MIN_VALUE;
}
}

protected final void initB_JBSEG_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBSEG_DV = Byte.parseByte(s);
} else {
B_JBSEG_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBSEMP(String s) {
if (!s.trim().isEmpty()) {
B_JBSEMP = Byte.parseByte(s);
} else {
B_JBSEMP = Byte.MIN_VALUE;
}
}

protected final void initB_JBSEMPCHK(String s) {
if (!s.trim().isEmpty()) {
B_JBSEMPCHK = Byte.parseByte(s);
} else {
B_JBSEMPCHK = Byte.MIN_VALUE;
}
}

protected final void initB_JBSIC07CHK(String s) {
if (!s.trim().isEmpty()) {
B_JBSIC07CHK = Byte.parseByte(s);
} else {
B_JBSIC07CHK = Byte.MIN_VALUE;
}
}

protected final void initB_JBSIC07_CC(String s) {
if (!s.trim().isEmpty()) {
B_JBSIC07_CC = Byte.parseByte(s);
} else {
B_JBSIC07_CC = Byte.MIN_VALUE;
}
}

protected final void initB_JBSIZE(String s) {
if (!s.trim().isEmpty()) {
B_JBSIZE = Byte.parseByte(s);
} else {
B_JBSIZE = Byte.MIN_VALUE;
}
}

protected final void initB_JBSIZECHK(String s) {
if (!s.trim().isEmpty()) {
B_JBSIZECHK = Byte.parseByte(s);
} else {
B_JBSIZECHK = Byte.MIN_VALUE;
}
}

protected final void initB_JBSOC00CHK(String s) {
if (!s.trim().isEmpty()) {
B_JBSOC00CHK = Byte.parseByte(s);
} else {
B_JBSOC00CHK = Byte.MIN_VALUE;
}
}

protected final void initB_JBSOC00_CC(String s) {
if (!s.trim().isEmpty()) {
B_JBSOC00_CC = Short.parseShort(s);
} else {
B_JBSOC00_CC = Short.MIN_VALUE;
}
}

protected final void initB_JBSOCGR_DV(String s) {
if (!s.trim().isEmpty()) {
B_JBSOCGR_DV = Byte.parseByte(s);
} else {
B_JBSOCGR_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JBSTAT(String s) {
if (!s.trim().isEmpty()) {
B_JBSTAT = Byte.parseByte(s);
} else {
B_JBSTAT = Byte.MIN_VALUE;
}
}

protected final void initB_JBTERM1(String s) {
if (!s.trim().isEmpty()) {
B_JBTERM1 = Byte.parseByte(s);
} else {
B_JBTERM1 = Byte.MIN_VALUE;
}
}

protected final void initB_JBTERM2(String s) {
if (!s.trim().isEmpty()) {
B_JBTERM2 = Byte.parseByte(s);
} else {
B_JBTERM2 = Byte.MIN_VALUE;
}
}

protected final void initB_JBTTWT(String s) {
if (!s.trim().isEmpty()) {
B_JBTTWT = Short.parseShort(s);
} else {
B_JBTTWT = Short.MIN_VALUE;
}
}

protected final void initB_JBXPCHA(String s) {
if (!s.trim().isEmpty()) {
B_JBXPCHA = Byte.parseByte(s);
} else {
B_JBXPCHA = Byte.MIN_VALUE;
}
}

protected final void initB_JBXPCHB(String s) {
if (!s.trim().isEmpty()) {
B_JBXPCHB = Byte.parseByte(s);
} else {
B_JBXPCHB = Byte.MIN_VALUE;
}
}

protected final void initB_JBXPCHC(String s) {
if (!s.trim().isEmpty()) {
B_JBXPCHC = Byte.parseByte(s);
} else {
B_JBXPCHC = Byte.MIN_VALUE;
}
}

protected final void initB_JBXPCHD(String s) {
if (!s.trim().isEmpty()) {
B_JBXPCHD = Byte.parseByte(s);
} else {
B_JBXPCHD = Byte.MIN_VALUE;
}
}

protected final void initB_JBXPCHE(String s) {
if (!s.trim().isEmpty()) {
B_JBXPCHE = Byte.parseByte(s);
} else {
B_JBXPCHE = Byte.MIN_VALUE;
}
}

protected final void initB_JLBOSS(String s) {
if (!s.trim().isEmpty()) {
B_JLBOSS = Byte.parseByte(s);
} else {
B_JLBOSS = Byte.MIN_VALUE;
}
}

protected final void initB_JLENDM(String s) {
if (!s.trim().isEmpty()) {
B_JLENDM = Byte.parseByte(s);
} else {
B_JLENDM = Byte.MIN_VALUE;
}
}

protected final void initB_JLENDY(String s) {
if (!s.trim().isEmpty()) {
B_JLENDY = Short.parseShort(s);
} else {
B_JLENDY = Short.MIN_VALUE;
}
}

protected final void initB_JLES2000(String s) {
if (!s.trim().isEmpty()) {
B_JLES2000 = Byte.parseByte(s);
} else {
B_JLES2000 = Byte.MIN_VALUE;
}
}

protected final void initB_JLIINDB_DV(String s) {
if (!s.trim().isEmpty()) {
B_JLIINDB_DV = Byte.parseByte(s);
} else {
B_JLIINDB_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JLISCO88_CC(String s) {
if (!s.trim().isEmpty()) {
B_JLISCO88_CC = Short.parseShort(s);
} else {
B_JLISCO88_CC = Short.MIN_VALUE;
}
}

protected final void initB_JLMNGR(String s) {
if (!s.trim().isEmpty()) {
B_JLMNGR = Byte.parseByte(s);
} else {
B_JLMNGR = Byte.MIN_VALUE;
}
}

protected final void initB_JLNSSEC3_DV(String s) {
if (!s.trim().isEmpty()) {
B_JLNSSEC3_DV = Byte.parseByte(s);
} else {
B_JLNSSEC3_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JLNSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
B_JLNSSEC5_DV = Byte.parseByte(s);
} else {
B_JLNSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JLNSSEC8_DV(String s) {
if (!s.trim().isEmpty()) {
B_JLNSSEC8_DV = Byte.parseByte(s);
} else {
B_JLNSSEC8_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JLNSSEC_DV(String s) {
if (!s.trim().isEmpty()) {
B_JLNSSEC_DV = Byte.parseByte(s);
} else {
B_JLNSSEC_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JLRGSC_DV(String s) {
if (!s.trim().isEmpty()) {
B_JLRGSC_DV = Byte.parseByte(s);
} else {
B_JLRGSC_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JLSEG_DV(String s) {
if (!s.trim().isEmpty()) {
B_JLSEG_DV = Byte.parseByte(s);
} else {
B_JLSEG_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JLSEMP(String s) {
if (!s.trim().isEmpty()) {
B_JLSEMP = Byte.parseByte(s);
} else {
B_JLSEMP = Byte.MIN_VALUE;
}
}

protected final void initB_JLSIC07_CC(String s) {
if (!s.trim().isEmpty()) {
B_JLSIC07_CC = Byte.parseByte(s);
} else {
B_JLSIC07_CC = Byte.MIN_VALUE;
}
}

protected final void initB_JLSIZE(String s) {
if (!s.trim().isEmpty()) {
B_JLSIZE = Byte.parseByte(s);
} else {
B_JLSIZE = Byte.MIN_VALUE;
}
}

protected final void initB_JLSOC00_CC(String s) {
if (!s.trim().isEmpty()) {
B_JLSOC00_CC = Short.parseShort(s);
} else {
B_JLSOC00_CC = Short.MIN_VALUE;
}
}

protected final void initB_JOBHOURS1(String s) {
if (!s.trim().isEmpty()) {
B_JOBHOURS1 = Byte.parseByte(s);
} else {
B_JOBHOURS1 = Byte.MIN_VALUE;
}
}

protected final void initB_JOBHOURS10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_JOBHOURS10 = false;
} else {
B_JOBHOURS10 = true;
}
}
}

protected final void initB_JOBHOURS2(String s) {
if (!s.trim().isEmpty()) {
B_JOBHOURS2 = Byte.parseByte(s);
} else {
B_JOBHOURS2 = Byte.MIN_VALUE;
}
}

protected final void initB_JOBHOURS3(String s) {
if (!s.trim().isEmpty()) {
B_JOBHOURS3 = Byte.parseByte(s);
} else {
B_JOBHOURS3 = Byte.MIN_VALUE;
}
}

protected final void initB_JOBHOURS4(String s) {
if (!s.trim().isEmpty()) {
B_JOBHOURS4 = Byte.parseByte(s);
} else {
B_JOBHOURS4 = Byte.MIN_VALUE;
}
}

protected final void initB_JOBHOURS5(String s) {
if (!s.trim().isEmpty()) {
B_JOBHOURS5 = Byte.parseByte(s);
} else {
B_JOBHOURS5 = Byte.MIN_VALUE;
}
}

protected final void initB_JOBHOURS6(String s) {
if (!s.trim().isEmpty()) {
B_JOBHOURS6 = Byte.parseByte(s);
} else {
B_JOBHOURS6 = Byte.MIN_VALUE;
}
}

protected final void initB_JOBHOURS7(String s) {
if (!s.trim().isEmpty()) {
B_JOBHOURS7 = Byte.parseByte(s);
} else {
B_JOBHOURS7 = Byte.MIN_VALUE;
}
}

protected final void initB_JOBHOURS8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_JOBHOURS8 = false;
} else {
B_JOBHOURS8 = true;
}
}
}

protected final void initB_JOBHOURS9(String s) {
if (!s.trim().isEmpty()) {
B_JOBHOURS9 = Byte.parseByte(s);
} else {
B_JOBHOURS9 = Byte.MIN_VALUE;
}
}

protected final void initB_JSACCS(String s) {
if (!s.trim().isEmpty()) {
B_JSACCS = Byte.parseByte(s);
} else {
B_JSACCS = Byte.MIN_VALUE;
}
}

protected final void initB_JSBOSS(String s) {
if (!s.trim().isEmpty()) {
B_JSBOSS = Byte.parseByte(s);
} else {
B_JSBOSS = Byte.MIN_VALUE;
}
}

protected final void initB_JSHRS(String s) {
if (!s.trim().isEmpty()) {
B_JSHRS = Byte.parseByte(s);
} else {
B_JSHRS = Byte.MIN_VALUE;
}
}

protected final void initB_JSPART(String s) {
if (!s.trim().isEmpty()) {
B_JSPART = Byte.parseByte(s);
} else {
B_JSPART = Byte.MIN_VALUE;
}
}

protected final void initB_JSPAYU(String s) {
if (!s.trim().isEmpty()) {
B_JSPAYU = Integer.parseInt(s);
} else {
B_JSPAYU = Integer.MIN_VALUE;
}
}

protected final void initB_JSPAYW(String s) {
if (!s.trim().isEmpty()) {
B_JSPAYW = Byte.parseByte(s);
} else {
B_JSPAYW = Byte.MIN_VALUE;
}
}

protected final void initB_JSPL(String s) {
if (!s.trim().isEmpty()) {
B_JSPL = Byte.parseByte(s);
} else {
B_JSPL = Byte.MIN_VALUE;
}
}

protected final void initB_JSPRBM(String s) {
if (!s.trim().isEmpty()) {
B_JSPRBM = Byte.parseByte(s);
} else {
B_JSPRBM = Byte.MIN_VALUE;
}
}

protected final void initB_JSPRBY4(String s) {
if (!s.trim().isEmpty()) {
B_JSPRBY4 = Short.parseShort(s);
} else {
B_JSPRBY4 = Short.MIN_VALUE;
}
}

protected final void initB_JSPREM(String s) {
if (!s.trim().isEmpty()) {
B_JSPREM = Byte.parseByte(s);
} else {
B_JSPREM = Byte.MIN_VALUE;
}
}

protected final void initB_JSPREY4(String s) {
if (!s.trim().isEmpty()) {
B_JSPREY4 = Short.parseShort(s);
} else {
B_JSPREY4 = Short.MIN_VALUE;
}
}

protected final void initB_JSPRF(String s) {
if (!s.trim().isEmpty()) {
B_JSPRF = Integer.parseInt(s);
} else {
B_JSPRF = Integer.MIN_VALUE;
}
}

protected final void initB_JSPRLS(String s) {
if (!s.trim().isEmpty()) {
B_JSPRLS = Byte.parseByte(s);
} else {
B_JSPRLS = Byte.MIN_VALUE;
}
}

protected final void initB_JSPRNI(String s) {
if (!s.trim().isEmpty()) {
B_JSPRNI = Byte.parseByte(s);
} else {
B_JSPRNI = Byte.MIN_VALUE;
}
}

protected final void initB_JSPRTX(String s) {
if (!s.trim().isEmpty()) {
B_JSPRTX = Byte.parseByte(s);
} else {
B_JSPRTX = Byte.MIN_VALUE;
}
}

protected final void initB_JSPYNI(String s) {
if (!s.trim().isEmpty()) {
B_JSPYNI = Byte.parseByte(s);
} else {
B_JSPYNI = Byte.MIN_VALUE;
}
}

protected final void initB_JSPYTX(String s) {
if (!s.trim().isEmpty()) {
B_JSPYTX = Byte.parseByte(s);
} else {
B_JSPYTX = Byte.MIN_VALUE;
}
}

protected final void initB_JSSIZE(String s) {
if (!s.trim().isEmpty()) {
B_JSSIZE = Byte.parseByte(s);
} else {
B_JSSIZE = Byte.MIN_VALUE;
}
}

protected final void initB_JSTTWT(String s) {
if (!s.trim().isEmpty()) {
B_JSTTWT = Byte.parseByte(s);
} else {
B_JSTTWT = Byte.MIN_VALUE;
}
}

protected final void initB_JSTTWTB(String s) {
if (!s.trim().isEmpty()) {
B_JSTTWTB = Short.parseShort(s);
} else {
B_JSTTWTB = Short.MIN_VALUE;
}
}

protected final void initB_JSTYPEB(String s) {
if (!s.trim().isEmpty()) {
B_JSTYPEB = Byte.parseByte(s);
} else {
B_JSTYPEB = Byte.MIN_VALUE;
}
}

protected final void initB_JSWORKTRAV(String s) {
if (!s.trim().isEmpty()) {
B_JSWORKTRAV = Byte.parseByte(s);
} else {
B_JSWORKTRAV = Byte.MIN_VALUE;
}
}

protected final void initB_JUBGN(String s) {
if (!s.trim().isEmpty()) {
B_JUBGN = Byte.parseByte(s);
} else {
B_JUBGN = Byte.MIN_VALUE;
}
}

protected final void initB_JULK4WK(String s) {
if (!s.trim().isEmpty()) {
B_JULK4WK = Byte.parseByte(s);
} else {
B_JULK4WK = Byte.MIN_VALUE;
}
}

protected final void initB_JULK4X1(String s) {
if (!s.trim().isEmpty()) {
B_JULK4X1 = Byte.parseByte(s);
} else {
B_JULK4X1 = Byte.MIN_VALUE;
}
}

protected final void initB_JULK4X2(String s) {
if (!s.trim().isEmpty()) {
B_JULK4X2 = Byte.parseByte(s);
} else {
B_JULK4X2 = Byte.MIN_VALUE;
}
}

protected final void initB_JULK4X3(String s) {
if (!s.trim().isEmpty()) {
B_JULK4X3 = Byte.parseByte(s);
} else {
B_JULK4X3 = Byte.MIN_VALUE;
}
}

protected final void initB_JULK4X4(String s) {
if (!s.trim().isEmpty()) {
B_JULK4X4 = Byte.parseByte(s);
} else {
B_JULK4X4 = Byte.MIN_VALUE;
}
}

protected final void initB_JULK4X5(String s) {
if (!s.trim().isEmpty()) {
B_JULK4X5 = Byte.parseByte(s);
} else {
B_JULK4X5 = Byte.MIN_VALUE;
}
}

protected final void initB_JULK4X6(String s) {
if (!s.trim().isEmpty()) {
B_JULK4X6 = Byte.parseByte(s);
} else {
B_JULK4X6 = Byte.MIN_VALUE;
}
}

protected final void initB_JULK4X96(String s) {
if (!s.trim().isEmpty()) {
B_JULK4X96 = Byte.parseByte(s);
} else {
B_JULK4X96 = Byte.MIN_VALUE;
}
}

protected final void initB_JULKJB(String s) {
if (!s.trim().isEmpty()) {
B_JULKJB = Byte.parseByte(s);
} else {
B_JULKJB = Byte.MIN_VALUE;
}
}

protected final void initB_JWBS1_DV(String s) {
if (!s.trim().isEmpty()) {
B_JWBS1_DV = Byte.parseByte(s);
} else {
B_JWBS1_DV = Byte.MIN_VALUE;
}
}

protected final void initB_JWBS2_DV(String s) {
if (!s.trim().isEmpty()) {
B_JWBS2_DV = Byte.parseByte(s);
} else {
B_JWBS2_DV = Byte.MIN_VALUE;
}
}

protected final void initB_KIDLANG(String s) {
if (!s.trim().isEmpty()) {
B_KIDLANG = Byte.parseByte(s);
} else {
B_KIDLANG = Byte.MIN_VALUE;
}
}

protected final void initB_LADOPT(String s) {
if (!s.trim().isEmpty()) {
B_LADOPT = Byte.parseByte(s);
} else {
B_LADOPT = Byte.MIN_VALUE;
}
}

protected final void initB_LASTMSTATCH1(String s) {
if (!s.trim().isEmpty()) {
B_LASTMSTATCH1 = Byte.parseByte(s);
} else {
B_LASTMSTATCH1 = Byte.MIN_VALUE;
}
}

protected final void initB_LASTMSTATCH2(String s) {
if (!s.trim().isEmpty()) {
B_LASTMSTATCH2 = Byte.parseByte(s);
} else {
B_LASTMSTATCH2 = Byte.MIN_VALUE;
}
}

protected final void initB_LASTMSTATCH3(String s) {
if (!s.trim().isEmpty()) {
B_LASTMSTATCH3 = Byte.parseByte(s);
} else {
B_LASTMSTATCH3 = Byte.MIN_VALUE;
}
}

protected final void initB_LCHMULTI1(String s) {
if (!s.trim().isEmpty()) {
B_LCHMULTI1 = Byte.parseByte(s);
} else {
B_LCHMULTI1 = Byte.MIN_VALUE;
}
}

protected final void initB_LCHMULTI2(String s) {
if (!s.trim().isEmpty()) {
B_LCHMULTI2 = Byte.parseByte(s);
} else {
B_LCHMULTI2 = Byte.MIN_VALUE;
}
}

protected final void initB_LCHMULTI3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_LCHMULTI3 = false;
} else {
B_LCHMULTI3 = true;
}
}
}

protected final void initB_LCHMULTI4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_LCHMULTI4 = false;
} else {
B_LCHMULTI4 = true;
}
}
}

protected final void initB_LCHMULTI5(String s) {
if (!s.trim().isEmpty()) {
B_LCHMULTI5 = Byte.parseByte(s);
} else {
B_LCHMULTI5 = Byte.MIN_VALUE;
}
}

protected final void initB_LCOHNPI(String s) {
if (!s.trim().isEmpty()) {
B_LCOHNPI = Byte.parseByte(s);
} else {
B_LCOHNPI = Byte.MIN_VALUE;
}
}

protected final void initB_LENINDINTV(String s) {
if (!s.trim().isEmpty()) {
B_LENINDINTV = Double.parseDouble(s);
} else {
B_LENINDINTV = Double.NaN;
}
}

protected final void initB_LIBFREQ(String s) {
if (!s.trim().isEmpty()) {
B_LIBFREQ = Byte.parseByte(s);
} else {
B_LIBFREQ = Byte.MIN_VALUE;
}
}

protected final void initB_LIFTHH(String s) {
if (!s.trim().isEmpty()) {
B_LIFTHH = Byte.parseByte(s);
} else {
B_LIFTHH = Byte.MIN_VALUE;
}
}

protected final void initB_LIFTXHH(String s) {
if (!s.trim().isEmpty()) {
B_LIFTXHH = Byte.parseByte(s);
} else {
B_LIFTXHH = Byte.MIN_VALUE;
}
}

protected final void initB_LINGUA(String s) {
if (!s.trim().isEmpty()) {
B_LINGUA = Byte.parseByte(s);
} else {
B_LINGUA = Byte.MIN_VALUE;
}
}

protected final void initB_LIVESP(String s) {
if (!s.trim().isEmpty()) {
B_LIVESP = Byte.parseByte(s);
} else {
B_LIVESP = Byte.MIN_VALUE;
}
}

protected final void initB_LIVESP_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_LIVESP_DV = false;
} else {
B_LIVESP_DV = true;
}
}
}

protected final void initB_LIVEWITH(String s) {
if (!s.trim().isEmpty()) {
B_LIVEWITH = Byte.parseByte(s);
} else {
B_LIVEWITH = Byte.MIN_VALUE;
}
}

protected final void initB_LKMOVE(String s) {
if (!s.trim().isEmpty()) {
B_LKMOVE = Byte.parseByte(s);
} else {
B_LKMOVE = Byte.MIN_VALUE;
}
}

protected final void initB_LMAR1M(String s) {
if (!s.trim().isEmpty()) {
B_LMAR1M = Byte.parseByte(s);
} else {
B_LMAR1M = Byte.MIN_VALUE;
}
}

protected final void initB_LMAR1Y(String s) {
if (!s.trim().isEmpty()) {
B_LMAR1Y = Short.parseShort(s);
} else {
B_LMAR1Y = Short.MIN_VALUE;
}
}

protected final void initB_LMCBM1(String s) {
if (!s.trim().isEmpty()) {
B_LMCBM1 = Byte.parseByte(s);
} else {
B_LMCBM1 = Byte.MIN_VALUE;
}
}

protected final void initB_LMCBM2(String s) {
if (!s.trim().isEmpty()) {
B_LMCBM2 = Byte.parseByte(s);
} else {
B_LMCBM2 = Byte.MIN_VALUE;
}
}

protected final void initB_LMCBM3(String s) {
if (!s.trim().isEmpty()) {
B_LMCBM3 = Byte.parseByte(s);
} else {
B_LMCBM3 = Byte.MIN_VALUE;
}
}

protected final void initB_LMCBM4(String s) {
if (!s.trim().isEmpty()) {
B_LMCBM4 = Byte.parseByte(s);
} else {
B_LMCBM4 = Byte.MIN_VALUE;
}
}

protected final void initB_LMCBY41(String s) {
if (!s.trim().isEmpty()) {
B_LMCBY41 = Short.parseShort(s);
} else {
B_LMCBY41 = Short.MIN_VALUE;
}
}

protected final void initB_LMCBY42(String s) {
if (!s.trim().isEmpty()) {
B_LMCBY42 = Short.parseShort(s);
} else {
B_LMCBY42 = Short.MIN_VALUE;
}
}

protected final void initB_LMCBY43(String s) {
if (!s.trim().isEmpty()) {
B_LMCBY43 = Short.parseShort(s);
} else {
B_LMCBY43 = Short.MIN_VALUE;
}
}

protected final void initB_LMCBY44(String s) {
if (!s.trim().isEmpty()) {
B_LMCBY44 = Short.parseShort(s);
} else {
B_LMCBY44 = Short.MIN_VALUE;
}
}

protected final void initB_LMSPM1(String s) {
if (!s.trim().isEmpty()) {
B_LMSPM1 = Byte.parseByte(s);
} else {
B_LMSPM1 = Byte.MIN_VALUE;
}
}

protected final void initB_LMSPM2(String s) {
if (!s.trim().isEmpty()) {
B_LMSPM2 = Byte.parseByte(s);
} else {
B_LMSPM2 = Byte.MIN_VALUE;
}
}

protected final void initB_LMSPM3(String s) {
if (!s.trim().isEmpty()) {
B_LMSPM3 = Byte.parseByte(s);
} else {
B_LMSPM3 = Byte.MIN_VALUE;
}
}

protected final void initB_LMSPM4(String s) {
if (!s.trim().isEmpty()) {
B_LMSPM4 = Byte.parseByte(s);
} else {
B_LMSPM4 = Byte.MIN_VALUE;
}
}

protected final void initB_LMSPY41(String s) {
if (!s.trim().isEmpty()) {
B_LMSPY41 = Short.parseShort(s);
} else {
B_LMSPY41 = Short.MIN_VALUE;
}
}

protected final void initB_LMSPY42(String s) {
if (!s.trim().isEmpty()) {
B_LMSPY42 = Short.parseShort(s);
} else {
B_LMSPY42 = Short.MIN_VALUE;
}
}

protected final void initB_LMSPY43(String s) {
if (!s.trim().isEmpty()) {
B_LMSPY43 = Short.parseShort(s);
} else {
B_LMSPY43 = Short.MIN_VALUE;
}
}

protected final void initB_LMSPY44(String s) {
if (!s.trim().isEmpty()) {
B_LMSPY44 = Short.parseShort(s);
} else {
B_LMSPY44 = Short.MIN_VALUE;
}
}

protected final void initB_LNADOPT(String s) {
if (!s.trim().isEmpty()) {
B_LNADOPT = Byte.parseByte(s);
} else {
B_LNADOPT = Byte.MIN_VALUE;
}
}

protected final void initB_LNPRNT(String s) {
if (!s.trim().isEmpty()) {
B_LNPRNT = Byte.parseByte(s);
} else {
B_LNPRNT = Byte.MIN_VALUE;
}
}

protected final void initB_LPRNT(String s) {
if (!s.trim().isEmpty()) {
B_LPRNT = Byte.parseByte(s);
} else {
B_LPRNT = Byte.MIN_VALUE;
}
}

protected final void initB_LVMTHP(String s) {
if (!s.trim().isEmpty()) {
B_LVMTHP = Byte.parseByte(s);
} else {
B_LVMTHP = Byte.MIN_VALUE;
}
}

protected final void initB_LVWHY(String s) {
if (!s.trim().isEmpty()) {
B_LVWHY = Byte.parseByte(s);
} else {
B_LVWHY = Byte.MIN_VALUE;
}
}

protected final void initB_LVYRP(String s) {
if (!s.trim().isEmpty()) {
B_LVYRP = Short.parseShort(s);
} else {
B_LVYRP = Short.MIN_VALUE;
}
}

protected final void initB_LWWRONG(String s) {
if (!s.trim().isEmpty()) {
B_LWWRONG = Byte.parseByte(s);
} else {
B_LWWRONG = Byte.MIN_VALUE;
}
}

protected final void initB_MACOB(String s) {
if (!s.trim().isEmpty()) {
B_MACOB = Byte.parseByte(s);
} else {
B_MACOB = Byte.MIN_VALUE;
}
}

protected final void initB_MAEDQF(String s) {
if (!s.trim().isEmpty()) {
B_MAEDQF = Byte.parseByte(s);
} else {
B_MAEDQF = Byte.MIN_VALUE;
}
}

protected final void initB_MAJU(String s) {
if (!s.trim().isEmpty()) {
B_MAJU = Byte.parseByte(s);
} else {
B_MAJU = Byte.MIN_VALUE;
}
}

protected final void initB_MANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
B_MANSSEC5_DV = Byte.parseByte(s);
} else {
B_MANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initB_MARSTAT(String s) {
if (!s.trim().isEmpty()) {
B_MARSTAT = Byte.parseByte(s);
} else {
B_MARSTAT = Byte.MIN_VALUE;
}
}

protected final void initB_MASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
B_MASOC00_CC = Short.parseShort(s);
} else {
B_MASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initB_MASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
B_MASOC10_CC = Short.parseShort(s);
} else {
B_MASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initB_MASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
B_MASOC90_CC = Byte.parseByte(s);
} else {
B_MASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initB_MASTAT_DV(String s) {
if (!s.trim().isEmpty()) {
B_MASTAT_DV = Byte.parseByte(s);
} else {
B_MASTAT_DV = Byte.MIN_VALUE;
}
}

protected final void initB_MATLV(String s) {
if (!s.trim().isEmpty()) {
B_MATLV = Byte.parseByte(s);
} else {
B_MATLV = Byte.MIN_VALUE;
}
}

protected final void initB_MATLVENDD(String s) {
if (!s.trim().isEmpty()) {
B_MATLVENDD = Byte.parseByte(s);
} else {
B_MATLVENDD = Byte.MIN_VALUE;
}
}

protected final void initB_MATLVENDM(String s) {
if (!s.trim().isEmpty()) {
B_MATLVENDM = Byte.parseByte(s);
} else {
B_MATLVENDM = Byte.MIN_VALUE;
}
}

protected final void initB_MATLVENDY4(String s) {
if (!s.trim().isEmpty()) {
B_MATLVENDY4 = Short.parseShort(s);
} else {
B_MATLVENDY4 = Short.MIN_VALUE;
}
}

protected final void initB_MATLVSTD(String s) {
if (!s.trim().isEmpty()) {
B_MATLVSTD = Byte.parseByte(s);
} else {
B_MATLVSTD = Byte.MIN_VALUE;
}
}

protected final void initB_MATLVSTM(String s) {
if (!s.trim().isEmpty()) {
B_MATLVSTM = Byte.parseByte(s);
} else {
B_MATLVSTM = Byte.MIN_VALUE;
}
}

protected final void initB_MATLVSTY4(String s) {
if (!s.trim().isEmpty()) {
B_MATLVSTY4 = Short.parseShort(s);
} else {
B_MATLVSTY4 = Short.MIN_VALUE;
}
}

protected final void initB_MAYRUK(String s) {
if (!s.trim().isEmpty()) {
B_MAYRUK = Byte.parseByte(s);
} else {
B_MAYRUK = Byte.MIN_VALUE;
}
}

protected final void initB_MEMORIG(String s) {
if (!s.trim().isEmpty()) {
B_MEMORIG = Byte.parseByte(s);
} else {
B_MEMORIG = Byte.MIN_VALUE;
}
}

protected final void initB_MEMPLOY(String s) {
if (!s.trim().isEmpty()) {
B_MEMPLOY = Byte.parseByte(s);
} else {
B_MEMPLOY = Byte.MIN_VALUE;
}
}

protected final void initB_MLA1(String s) {
if (!s.trim().isEmpty()) {
B_MLA1 = Byte.parseByte(s);
} else {
B_MLA1 = Byte.MIN_VALUE;
}
}

protected final void initB_MLA2(String s) {
if (!s.trim().isEmpty()) {
B_MLA2 = Byte.parseByte(s);
} else {
B_MLA2 = Byte.MIN_VALUE;
}
}

protected final void initB_MLA3(String s) {
if (!s.trim().isEmpty()) {
B_MLA3 = Byte.parseByte(s);
} else {
B_MLA3 = Byte.MIN_VALUE;
}
}

protected final void initB_MLA96(String s) {
if (!s.trim().isEmpty()) {
B_MLA96 = Byte.parseByte(s);
} else {
B_MLA96 = Byte.MIN_VALUE;
}
}

protected final void initB_MLSTAT(String s) {
if (!s.trim().isEmpty()) {
B_MLSTAT = Byte.parseByte(s);
} else {
B_MLSTAT = Byte.MIN_VALUE;
}
}

protected final void initB_MLSTATCHK(String s) {
if (!s.trim().isEmpty()) {
B_MLSTATCHK = Byte.parseByte(s);
} else {
B_MLSTATCHK = Byte.MIN_VALUE;
}
}

protected final void initB_MNPID(String s) {
if (!s.trim().isEmpty()) {
B_MNPID = Integer.parseInt(s);
} else {
B_MNPID = Integer.MIN_VALUE;
}
}

protected final void initB_MNPNO(String s) {
if (!s.trim().isEmpty()) {
B_MNPNO = Byte.parseByte(s);
} else {
B_MNPNO = Byte.MIN_VALUE;
}
}

protected final void initB_MNSPID(String s) {
if (!s.trim().isEmpty()) {
B_MNSPID = Integer.parseInt(s);
} else {
B_MNSPID = Integer.MIN_VALUE;
}
}

protected final void initB_MNSPNO(String s) {
if (!s.trim().isEmpty()) {
B_MNSPNO = Byte.parseByte(s);
} else {
B_MNSPNO = Byte.MIN_VALUE;
}
}

protected final void initB_MOBUSE(String s) {
if (!s.trim().isEmpty()) {
B_MOBUSE = Byte.parseByte(s);
} else {
B_MOBUSE = Byte.MIN_VALUE;
}
}

protected final void initB_MONTH(String s) {
if (!s.trim().isEmpty()) {
B_MONTH = Byte.parseByte(s);
} else {
B_MONTH = Byte.MIN_VALUE;
}
}

protected final void initB_MOTCYC(String s) {
if (!s.trim().isEmpty()) {
B_MOTCYC = Byte.parseByte(s);
} else {
B_MOTCYC = Byte.MIN_VALUE;
}
}

protected final void initB_MOVDIR(String s) {
if (!s.trim().isEmpty()) {
B_MOVDIR = Byte.parseByte(s);
} else {
B_MOVDIR = Byte.MIN_VALUE;
}
}

protected final void initB_MOVEOTH_CODE(String s) {
if (!s.trim().isEmpty()) {
B_MOVEOTH_CODE = Byte.parseByte(s);
} else {
B_MOVEOTH_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_MOVY11(String s) {
if (!s.trim().isEmpty()) {
B_MOVY11 = Byte.parseByte(s);
} else {
B_MOVY11 = Byte.MIN_VALUE;
}
}

protected final void initB_MOVY12(String s) {
if (!s.trim().isEmpty()) {
B_MOVY12 = Byte.parseByte(s);
} else {
B_MOVY12 = Byte.MIN_VALUE;
}
}

protected final void initB_MOVY13(String s) {
if (!s.trim().isEmpty()) {
B_MOVY13 = Byte.parseByte(s);
} else {
B_MOVY13 = Byte.MIN_VALUE;
}
}

protected final void initB_MOVY14(String s) {
if (!s.trim().isEmpty()) {
B_MOVY14 = Byte.parseByte(s);
} else {
B_MOVY14 = Byte.MIN_VALUE;
}
}

protected final void initB_MOVY15(String s) {
if (!s.trim().isEmpty()) {
B_MOVY15 = Byte.parseByte(s);
} else {
B_MOVY15 = Byte.MIN_VALUE;
}
}

protected final void initB_MOVY16(String s) {
if (!s.trim().isEmpty()) {
B_MOVY16 = Byte.parseByte(s);
} else {
B_MOVY16 = Byte.MIN_VALUE;
}
}

protected final void initB_MSTATCH1(String s) {
if (!s.trim().isEmpty()) {
B_MSTATCH1 = Byte.parseByte(s);
} else {
B_MSTATCH1 = Byte.MIN_VALUE;
}
}

protected final void initB_MSTATCH2(String s) {
if (!s.trim().isEmpty()) {
B_MSTATCH2 = Byte.parseByte(s);
} else {
B_MSTATCH2 = Byte.MIN_VALUE;
}
}

protected final void initB_MSTATCH3(String s) {
if (!s.trim().isEmpty()) {
B_MSTATCH3 = Byte.parseByte(s);
} else {
B_MSTATCH3 = Byte.MIN_VALUE;
}
}

protected final void initB_MSTATSAM(String s) {
if (!s.trim().isEmpty()) {
B_MSTATSAM = Byte.parseByte(s);
} else {
B_MSTATSAM = Byte.MIN_VALUE;
}
}

protected final void initB_MSTATSAMN(String s) {
if (!s.trim().isEmpty()) {
B_MSTATSAMN = Byte.parseByte(s);
} else {
B_MSTATSAMN = Byte.MIN_VALUE;
}
}

protected final void initB_MUSFREQ(String s) {
if (!s.trim().isEmpty()) {
B_MUSFREQ = Byte.parseByte(s);
} else {
B_MUSFREQ = Byte.MIN_VALUE;
}
}

protected final void initB_MVEVER(String s) {
if (!s.trim().isEmpty()) {
B_MVEVER = Byte.parseByte(s);
} else {
B_MVEVER = Byte.MIN_VALUE;
}
}

protected final void initB_MVMNTH(String s) {
if (!s.trim().isEmpty()) {
B_MVMNTH = Byte.parseByte(s);
} else {
B_MVMNTH = Byte.MIN_VALUE;
}
}

protected final void initB_MVYR(String s) {
if (!s.trim().isEmpty()) {
B_MVYR = Short.parseShort(s);
} else {
B_MVYR = Short.MIN_VALUE;
}
}

protected final void initB_NADOPTCH(String s) {
if (!s.trim().isEmpty()) {
B_NADOPTCH = Byte.parseByte(s);
} else {
B_NADOPTCH = Byte.MIN_VALUE;
}
}

protected final void initB_NAIDXHH(String s) {
if (!s.trim().isEmpty()) {
B_NAIDXHH = Byte.parseByte(s);
} else {
B_NAIDXHH = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH01(String s) {
if (!s.trim().isEmpty()) {
B_NATCH01 = Byte.parseByte(s);
} else {
B_NATCH01 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH02(String s) {
if (!s.trim().isEmpty()) {
B_NATCH02 = Byte.parseByte(s);
} else {
B_NATCH02 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH03(String s) {
if (!s.trim().isEmpty()) {
B_NATCH03 = Byte.parseByte(s);
} else {
B_NATCH03 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH04(String s) {
if (!s.trim().isEmpty()) {
B_NATCH04 = Byte.parseByte(s);
} else {
B_NATCH04 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH05(String s) {
if (!s.trim().isEmpty()) {
B_NATCH05 = Byte.parseByte(s);
} else {
B_NATCH05 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH06(String s) {
if (!s.trim().isEmpty()) {
B_NATCH06 = Byte.parseByte(s);
} else {
B_NATCH06 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH07(String s) {
if (!s.trim().isEmpty()) {
B_NATCH07 = Byte.parseByte(s);
} else {
B_NATCH07 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH08(String s) {
if (!s.trim().isEmpty()) {
B_NATCH08 = Byte.parseByte(s);
} else {
B_NATCH08 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH09(String s) {
if (!s.trim().isEmpty()) {
B_NATCH09 = Byte.parseByte(s);
} else {
B_NATCH09 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH10(String s) {
if (!s.trim().isEmpty()) {
B_NATCH10 = Byte.parseByte(s);
} else {
B_NATCH10 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH11(String s) {
if (!s.trim().isEmpty()) {
B_NATCH11 = Byte.parseByte(s);
} else {
B_NATCH11 = Byte.MIN_VALUE;
}
}

protected final void initB_NATCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_NATCH12 = false;
} else {
B_NATCH12 = true;
}
}
}

protected final void initB_NATCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_NATCH13 = false;
} else {
B_NATCH13 = true;
}
}
}

protected final void initB_NATCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_NATCH14 = false;
} else {
B_NATCH14 = true;
}
}
}

protected final void initB_NATCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_NATCH15 = false;
} else {
B_NATCH15 = true;
}
}
}

protected final void initB_NATCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
B_NATCH16 = false;
} else {
B_NATCH16 = true;
}
}
}

protected final void initB_NATID1(String s) {
if (!s.trim().isEmpty()) {
B_NATID1 = Byte.parseByte(s);
} else {
B_NATID1 = Byte.MIN_VALUE;
}
}

protected final void initB_NATID2(String s) {
if (!s.trim().isEmpty()) {
B_NATID2 = Byte.parseByte(s);
} else {
B_NATID2 = Byte.MIN_VALUE;
}
}

protected final void initB_NATID3(String s) {
if (!s.trim().isEmpty()) {
B_NATID3 = Byte.parseByte(s);
} else {
B_NATID3 = Byte.MIN_VALUE;
}
}

protected final void initB_NATID4(String s) {
if (!s.trim().isEmpty()) {
B_NATID4 = Byte.parseByte(s);
} else {
B_NATID4 = Byte.MIN_VALUE;
}
}

protected final void initB_NATID5(String s) {
if (!s.trim().isEmpty()) {
B_NATID5 = Byte.parseByte(s);
} else {
B_NATID5 = Byte.MIN_VALUE;
}
}

protected final void initB_NATID6(String s) {
if (!s.trim().isEmpty()) {
B_NATID6 = Byte.parseByte(s);
} else {
B_NATID6 = Byte.MIN_VALUE;
}
}

protected final void initB_NATID97(String s) {
if (!s.trim().isEmpty()) {
B_NATID97 = Byte.parseByte(s);
} else {
B_NATID97 = Byte.MIN_VALUE;
}
}

protected final void initB_NCH10TO15(String s) {
if (!s.trim().isEmpty()) {
B_NCH10TO15 = Byte.parseByte(s);
} else {
B_NCH10TO15 = Byte.MIN_VALUE;
}
}

protected final void initB_NCH14RESP(String s) {
if (!s.trim().isEmpty()) {
B_NCH14RESP = Byte.parseByte(s);
} else {
B_NCH14RESP = Byte.MIN_VALUE;
}
}

protected final void initB_NCH415RESP(String s) {
if (!s.trim().isEmpty()) {
B_NCH415RESP = Byte.parseByte(s);
} else {
B_NCH415RESP = Byte.MIN_VALUE;
}
}

protected final void initB_NCH5TO15(String s) {
if (!s.trim().isEmpty()) {
B_NCH5TO15 = Byte.parseByte(s);
} else {
B_NCH5TO15 = Byte.MIN_VALUE;
}
}

protected final void initB_NCHILD(String s) {
if (!s.trim().isEmpty()) {
B_NCHILD = Byte.parseByte(s);
} else {
B_NCHILD = Byte.MIN_VALUE;
}
}

protected final void initB_NCHILD_DV(String s) {
if (!s.trim().isEmpty()) {
B_NCHILD_DV = Byte.parseByte(s);
} else {
B_NCHILD_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NCHRESP(String s) {
if (!s.trim().isEmpty()) {
B_NCHRESP = Byte.parseByte(s);
} else {
B_NCHRESP = Byte.MIN_VALUE;
}
}

protected final void initB_NCHUND18RESP(String s) {
if (!s.trim().isEmpty()) {
B_NCHUND18RESP = Byte.parseByte(s);
} else {
B_NCHUND18RESP = Byte.MIN_VALUE;
}
}

protected final void initB_NCHUNDER16(String s) {
if (!s.trim().isEmpty()) {
B_NCHUNDER16 = Byte.parseByte(s);
} else {
B_NCHUNDER16 = Byte.MIN_VALUE;
}
}

protected final void initB_NCIGS(String s) {
if (!s.trim().isEmpty()) {
B_NCIGS = Short.parseShort(s);
} else {
B_NCIGS = Short.MIN_VALUE;
}
}

protected final void initB_NDEPCHL_DV(String s) {
if (!s.trim().isEmpty()) {
B_NDEPCHL_DV = Byte.parseByte(s);
} else {
B_NDEPCHL_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NETUSE(String s) {
if (!s.trim().isEmpty()) {
B_NETUSE = Byte.parseByte(s);
} else {
B_NETUSE = Byte.MIN_VALUE;
}
}

protected final void initB_NEWENTRANT(String s) {
if (!s.trim().isEmpty()) {
B_NEWENTRANT = Byte.parseByte(s);
} else {
B_NEWENTRANT = Byte.MIN_VALUE;
}
}

protected final void initB_NEWPER(String s) {
if (!s.trim().isEmpty()) {
B_NEWPER = Byte.parseByte(s);
} else {
B_NEWPER = Byte.MIN_VALUE;
}
}

protected final void initB_NEXT(String s) {
if (!s.trim().isEmpty()) {
B_NEXT = Byte.parseByte(s);
} else {
B_NEXT = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE1(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE1 = Byte.parseByte(s);
} else {
B_NEXTELSE1 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE10(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE10 = Byte.parseByte(s);
} else {
B_NEXTELSE10 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE2(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE2 = Byte.parseByte(s);
} else {
B_NEXTELSE2 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE3(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE3 = Byte.parseByte(s);
} else {
B_NEXTELSE3 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE4(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE4 = Byte.parseByte(s);
} else {
B_NEXTELSE4 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE5(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE5 = Byte.parseByte(s);
} else {
B_NEXTELSE5 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE6(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE6 = Byte.parseByte(s);
} else {
B_NEXTELSE6 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE7(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE7 = Byte.parseByte(s);
} else {
B_NEXTELSE7 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE8(String s) {
if (!s.trim().isEmpty()) {
B_NEXTELSE8 = Byte.parseByte(s);
} else {
B_NEXTELSE8 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTELSE9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_NEXTELSE9 = false;
} else {
B_NEXTELSE9 = true;
}
}
}

protected final void initB_NEXTJOB1(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB1 = Byte.parseByte(s);
} else {
B_NEXTJOB1 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTJOB10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_NEXTJOB10 = false;
} else {
B_NEXTJOB10 = true;
}
}
}

protected final void initB_NEXTJOB2(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB2 = Byte.parseByte(s);
} else {
B_NEXTJOB2 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTJOB3(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB3 = Byte.parseByte(s);
} else {
B_NEXTJOB3 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTJOB4(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB4 = Byte.parseByte(s);
} else {
B_NEXTJOB4 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTJOB5(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB5 = Byte.parseByte(s);
} else {
B_NEXTJOB5 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTJOB6(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB6 = Byte.parseByte(s);
} else {
B_NEXTJOB6 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTJOB7(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB7 = Byte.parseByte(s);
} else {
B_NEXTJOB7 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTJOB8(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB8 = Byte.parseByte(s);
} else {
B_NEXTJOB8 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTJOB9(String s) {
if (!s.trim().isEmpty()) {
B_NEXTJOB9 = Byte.parseByte(s);
} else {
B_NEXTJOB9 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT1(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT1 = Byte.parseByte(s);
} else {
B_NEXTSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT10(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT10 = Byte.parseByte(s);
} else {
B_NEXTSTAT10 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT2(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT2 = Byte.parseByte(s);
} else {
B_NEXTSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT3(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT3 = Byte.parseByte(s);
} else {
B_NEXTSTAT3 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT4(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT4 = Byte.parseByte(s);
} else {
B_NEXTSTAT4 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT5(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT5 = Byte.parseByte(s);
} else {
B_NEXTSTAT5 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT6(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT6 = Byte.parseByte(s);
} else {
B_NEXTSTAT6 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT7(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT7 = Byte.parseByte(s);
} else {
B_NEXTSTAT7 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT8(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT8 = Byte.parseByte(s);
} else {
B_NEXTSTAT8 = Byte.MIN_VALUE;
}
}

protected final void initB_NEXTSTAT9(String s) {
if (!s.trim().isEmpty()) {
B_NEXTSTAT9 = Byte.parseByte(s);
} else {
B_NEXTSTAT9 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH01(String s) {
if (!s.trim().isEmpty()) {
B_NFH01 = Byte.parseByte(s);
} else {
B_NFH01 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH02(String s) {
if (!s.trim().isEmpty()) {
B_NFH02 = Byte.parseByte(s);
} else {
B_NFH02 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH03(String s) {
if (!s.trim().isEmpty()) {
B_NFH03 = Byte.parseByte(s);
} else {
B_NFH03 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH04(String s) {
if (!s.trim().isEmpty()) {
B_NFH04 = Byte.parseByte(s);
} else {
B_NFH04 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH05(String s) {
if (!s.trim().isEmpty()) {
B_NFH05 = Byte.parseByte(s);
} else {
B_NFH05 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH06(String s) {
if (!s.trim().isEmpty()) {
B_NFH06 = Byte.parseByte(s);
} else {
B_NFH06 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH07(String s) {
if (!s.trim().isEmpty()) {
B_NFH07 = Byte.parseByte(s);
} else {
B_NFH07 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH08(String s) {
if (!s.trim().isEmpty()) {
B_NFH08 = Byte.parseByte(s);
} else {
B_NFH08 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH09(String s) {
if (!s.trim().isEmpty()) {
B_NFH09 = Byte.parseByte(s);
} else {
B_NFH09 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH10(String s) {
if (!s.trim().isEmpty()) {
B_NFH10 = Byte.parseByte(s);
} else {
B_NFH10 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH11(String s) {
if (!s.trim().isEmpty()) {
B_NFH11 = Byte.parseByte(s);
} else {
B_NFH11 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH12(String s) {
if (!s.trim().isEmpty()) {
B_NFH12 = Byte.parseByte(s);
} else {
B_NFH12 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH13(String s) {
if (!s.trim().isEmpty()) {
B_NFH13 = Byte.parseByte(s);
} else {
B_NFH13 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH14(String s) {
if (!s.trim().isEmpty()) {
B_NFH14 = Byte.parseByte(s);
} else {
B_NFH14 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH15(String s) {
if (!s.trim().isEmpty()) {
B_NFH15 = Byte.parseByte(s);
} else {
B_NFH15 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH16(String s) {
if (!s.trim().isEmpty()) {
B_NFH16 = Byte.parseByte(s);
} else {
B_NFH16 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH17(String s) {
if (!s.trim().isEmpty()) {
B_NFH17 = Byte.parseByte(s);
} else {
B_NFH17 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH18(String s) {
if (!s.trim().isEmpty()) {
B_NFH18 = Byte.parseByte(s);
} else {
B_NFH18 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH19(String s) {
if (!s.trim().isEmpty()) {
B_NFH19 = Byte.parseByte(s);
} else {
B_NFH19 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH20(String s) {
if (!s.trim().isEmpty()) {
B_NFH20 = Byte.parseByte(s);
} else {
B_NFH20 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH21(String s) {
if (!s.trim().isEmpty()) {
B_NFH21 = Byte.parseByte(s);
} else {
B_NFH21 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH22(String s) {
if (!s.trim().isEmpty()) {
B_NFH22 = Byte.parseByte(s);
} else {
B_NFH22 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH23(String s) {
if (!s.trim().isEmpty()) {
B_NFH23 = Byte.parseByte(s);
} else {
B_NFH23 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH24(String s) {
if (!s.trim().isEmpty()) {
B_NFH24 = Byte.parseByte(s);
} else {
B_NFH24 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH25(String s) {
if (!s.trim().isEmpty()) {
B_NFH25 = Byte.parseByte(s);
} else {
B_NFH25 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH26(String s) {
if (!s.trim().isEmpty()) {
B_NFH26 = Byte.parseByte(s);
} else {
B_NFH26 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH27(String s) {
if (!s.trim().isEmpty()) {
B_NFH27 = Byte.parseByte(s);
} else {
B_NFH27 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH28(String s) {
if (!s.trim().isEmpty()) {
B_NFH28 = Byte.parseByte(s);
} else {
B_NFH28 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH29(String s) {
if (!s.trim().isEmpty()) {
B_NFH29 = Byte.parseByte(s);
} else {
B_NFH29 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH30(String s) {
if (!s.trim().isEmpty()) {
B_NFH30 = Byte.parseByte(s);
} else {
B_NFH30 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH31(String s) {
if (!s.trim().isEmpty()) {
B_NFH31 = Byte.parseByte(s);
} else {
B_NFH31 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH32(String s) {
if (!s.trim().isEmpty()) {
B_NFH32 = Byte.parseByte(s);
} else {
B_NFH32 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH33(String s) {
if (!s.trim().isEmpty()) {
B_NFH33 = Byte.parseByte(s);
} else {
B_NFH33 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH34(String s) {
if (!s.trim().isEmpty()) {
B_NFH34 = Byte.parseByte(s);
} else {
B_NFH34 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH35(String s) {
if (!s.trim().isEmpty()) {
B_NFH35 = Byte.parseByte(s);
} else {
B_NFH35 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH36(String s) {
if (!s.trim().isEmpty()) {
B_NFH36 = Byte.parseByte(s);
} else {
B_NFH36 = Byte.MIN_VALUE;
}
}

protected final void initB_NFH37(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
B_NFH37 = false;
} else {
B_NFH37 = true;
}
}
}

protected final void initB_NFH38(String s) {
if (!s.trim().isEmpty()) {
B_NFH38 = Byte.parseByte(s);
} else {
B_NFH38 = Byte.MIN_VALUE;
}
}

protected final void initB_NGRP_DV(String s) {
if (!s.trim().isEmpty()) {
B_NGRP_DV = Byte.parseByte(s);
} else {
B_NGRP_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NHIQUAL_DV(String s) {
if (!s.trim().isEmpty()) {
B_NHIQUAL_DV = Byte.parseByte(s);
} else {
B_NHIQUAL_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NIACT(String s) {
if (!s.trim().isEmpty()) {
B_NIACT = Byte.parseByte(s);
} else {
B_NIACT = Byte.MIN_VALUE;
}
}

protected final void initB_NIREL(String s) {
if (!s.trim().isEmpty()) {
B_NIREL = Byte.parseByte(s);
} else {
B_NIREL = Byte.MIN_VALUE;
}
}

protected final void initB_NISERPS(String s) {
if (!s.trim().isEmpty()) {
B_NISERPS = Byte.parseByte(s);
} else {
B_NISERPS = Byte.MIN_VALUE;
}
}

protected final void initB_NMAR(String s) {
if (!s.trim().isEmpty()) {
B_NMAR = Byte.parseByte(s);
} else {
B_NMAR = Byte.MIN_VALUE;
}
}

protected final void initB_NMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
B_NMPSP_DV = Byte.parseByte(s);
} else {
B_NMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NNATCH(String s) {
if (!s.trim().isEmpty()) {
B_NNATCH = Byte.parseByte(s);
} else {
B_NNATCH = Byte.MIN_VALUE;
}
}

protected final void initB_NNEWBORN(String s) {
if (!s.trim().isEmpty()) {
B_NNEWBORN = Byte.parseByte(s);
} else {
B_NNEWBORN = Byte.MIN_VALUE;
}
}

protected final void initB_NNMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
B_NNMPSP_DV = Byte.parseByte(s);
} else {
B_NNMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NNSIB_DV(String s) {
if (!s.trim().isEmpty()) {
B_NNSIB_DV = Byte.parseByte(s);
} else {
B_NNSIB_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NNSSIB_DV(String s) {
if (!s.trim().isEmpty()) {
B_NNSSIB_DV = Byte.parseByte(s);
} else {
B_NNSSIB_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NOTEMPCHK(String s) {
if (!s.trim().isEmpty()) {
B_NOTEMPCHK = Byte.parseByte(s);
} else {
B_NOTEMPCHK = Byte.MIN_VALUE;
}
}

protected final void initB_NPENSIONER_DV(String s) {
if (!s.trim().isEmpty()) {
B_NPENSIONER_DV = Byte.parseByte(s);
} else {
B_NPENSIONER_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NPNS_DV(String s) {
if (!s.trim().isEmpty()) {
B_NPNS_DV = Byte.parseByte(s);
} else {
B_NPNS_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NPN_DV(String s) {
if (!s.trim().isEmpty()) {
B_NPN_DV = Byte.parseByte(s);
} else {
B_NPN_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NQFHIGH_DV(String s) {
if (!s.trim().isEmpty()) {
B_NQFHIGH_DV = Byte.parseByte(s);
} else {
B_NQFHIGH_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NUNMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
B_NUNMPSP_DV = Byte.parseByte(s);
} else {
B_NUNMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initB_NXTJBENDD(String s) {
if (!s.trim().isEmpty()) {
B_NXTJBENDD = Byte.parseByte(s);
} else {
B_NXTJBENDD = Byte.MIN_VALUE;
}
}

protected final void initB_NXTJBENDM(String s) {
if (!s.trim().isEmpty()) {
B_NXTJBENDM = Byte.parseByte(s);
} else {
B_NXTJBENDM = Byte.MIN_VALUE;
}
}

protected final void initB_NXTJBENDY4(String s) {
if (!s.trim().isEmpty()) {
B_NXTJBENDY4 = Short.parseShort(s);
} else {
B_NXTJBENDY4 = Short.MIN_VALUE;
}
}

protected final void initB_NXTJBES(String s) {
if (!s.trim().isEmpty()) {
B_NXTJBES = Byte.parseByte(s);
} else {
B_NXTJBES = Byte.MIN_VALUE;
}
}

protected final void initB_NXTJBHRS(String s) {
if (!s.trim().isEmpty()) {
B_NXTJBHRS = Byte.parseByte(s);
} else {
B_NXTJBHRS = Byte.MIN_VALUE;
}
}

protected final void initB_NXTST(String s) {
if (!s.trim().isEmpty()) {
B_NXTST = Byte.parseByte(s);
} else {
B_NXTST = Byte.MIN_VALUE;
}
}

protected final void initB_NXTSTELSE(String s) {
if (!s.trim().isEmpty()) {
B_NXTSTELSE = Byte.parseByte(s);
} else {
B_NXTSTELSE = Byte.MIN_VALUE;
}
}

protected final void initB_NXTSTENDD(String s) {
if (!s.trim().isEmpty()) {
B_NXTSTENDD = Byte.parseByte(s);
} else {
B_NXTSTENDD = Byte.MIN_VALUE;
}
}

protected final void initB_NXTSTENDM(String s) {
if (!s.trim().isEmpty()) {
B_NXTSTENDM = Byte.parseByte(s);
} else {
B_NXTSTENDM = Byte.MIN_VALUE;
}
}

protected final void initB_NXTSTENDY4(String s) {
if (!s.trim().isEmpty()) {
B_NXTSTENDY4 = Short.parseShort(s);
} else {
B_NXTSTENDY4 = Short.MIN_VALUE;
}
}

protected final void initB_OCIMPA(String s) {
if (!s.trim().isEmpty()) {
B_OCIMPA = Byte.parseByte(s);
} else {
B_OCIMPA = Byte.MIN_VALUE;
}
}

protected final void initB_OCIMPB(String s) {
if (!s.trim().isEmpty()) {
B_OCIMPB = Byte.parseByte(s);
} else {
B_OCIMPB = Byte.MIN_VALUE;
}
}

protected final void initB_OCIMPE(String s) {
if (!s.trim().isEmpty()) {
B_OCIMPE = Byte.parseByte(s);
} else {
B_OCIMPE = Byte.MIN_VALUE;
}
}

protected final void initB_OCIMPF(String s) {
if (!s.trim().isEmpty()) {
B_OCIMPF = Byte.parseByte(s);
} else {
B_OCIMPF = Byte.MIN_VALUE;
}
}

protected final void initB_OCIMPI(String s) {
if (!s.trim().isEmpty()) {
B_OCIMPI = Byte.parseByte(s);
} else {
B_OCIMPI = Byte.MIN_VALUE;
}
}

protected final void initB_OCIMPK(String s) {
if (!s.trim().isEmpty()) {
B_OCIMPK = Byte.parseByte(s);
} else {
B_OCIMPK = Byte.MIN_VALUE;
}
}

protected final void initB_OCIMPL(String s) {
if (!s.trim().isEmpty()) {
B_OCIMPL = Byte.parseByte(s);
} else {
B_OCIMPL = Byte.MIN_VALUE;
}
}

protected final void initB_OPRLG(String s) {
if (!s.trim().isEmpty()) {
B_OPRLG = Byte.parseByte(s);
} else {
B_OPRLG = Byte.MIN_VALUE;
}
}

protected final void initB_OPRLG0(String s) {
if (!s.trim().isEmpty()) {
B_OPRLG0 = Byte.parseByte(s);
} else {
B_OPRLG0 = Byte.MIN_VALUE;
}
}

protected final void initB_OPRLG0NI(String s) {
if (!s.trim().isEmpty()) {
B_OPRLG0NI = Byte.parseByte(s);
} else {
B_OPRLG0NI = Byte.MIN_VALUE;
}
}

protected final void initB_OPRLG1(String s) {
if (!s.trim().isEmpty()) {
B_OPRLG1 = Byte.parseByte(s);
} else {
B_OPRLG1 = Byte.MIN_VALUE;
}
}

protected final void initB_ORIGADD(String s) {
if (!s.trim().isEmpty()) {
B_ORIGADD = Byte.parseByte(s);
} else {
B_ORIGADD = Byte.MIN_VALUE;
}
}

protected final void initB_OVTNSA(String s) {
if (!s.trim().isEmpty()) {
B_OVTNSA = Byte.parseByte(s);
} else {
B_OVTNSA = Byte.MIN_VALUE;
}
}

protected final void initB_OVTPAY(String s) {
if (!s.trim().isEmpty()) {
B_OVTPAY = Byte.parseByte(s);
} else {
B_OVTPAY = Byte.MIN_VALUE;
}
}

protected final void initB_OVTRATE(String s) {
if (!s.trim().isEmpty()) {
B_OVTRATE = Double.parseDouble(s);
} else {
B_OVTRATE = Double.NaN;
}
}

protected final void initB_OVTREST(String s) {
if (!s.trim().isEmpty()) {
B_OVTREST = Byte.parseByte(s);
} else {
B_OVTREST = Byte.MIN_VALUE;
}
}

protected final void initB_PACOB(String s) {
if (!s.trim().isEmpty()) {
B_PACOB = Byte.parseByte(s);
} else {
B_PACOB = Byte.MIN_VALUE;
}
}

protected final void initB_PAEDQF(String s) {
if (!s.trim().isEmpty()) {
B_PAEDQF = Byte.parseByte(s);
} else {
B_PAEDQF = Byte.MIN_VALUE;
}
}

protected final void initB_PAJU(String s) {
if (!s.trim().isEmpty()) {
B_PAJU = Byte.parseByte(s);
} else {
B_PAJU = Byte.MIN_VALUE;
}
}

protected final void initB_PANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
B_PANSSEC5_DV = Byte.parseByte(s);
} else {
B_PANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initB_PASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
B_PASOC00_CC = Short.parseShort(s);
} else {
B_PASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initB_PASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
B_PASOC10_CC = Short.parseShort(s);
} else {
B_PASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initB_PASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
B_PASOC90_CC = Byte.parseByte(s);
} else {
B_PASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initB_PAYGL(String s) {
if (!s.trim().isEmpty()) {
B_PAYGL = Integer.parseInt(s);
} else {
B_PAYGL = Integer.MIN_VALUE;
}
}

protected final void initB_PAYGU_DV(String s) {
if (!s.trim().isEmpty()) {
B_PAYGU_DV = Double.parseDouble(s);
} else {
B_PAYGU_DV = Double.NaN;
}
}

protected final void initB_PAYGU_IF(String s) {
if (!s.trim().isEmpty()) {
B_PAYGU_IF = Byte.parseByte(s);
} else {
B_PAYGU_IF = Byte.MIN_VALUE;
}
}

protected final void initB_PAYGWC(String s) {
if (!s.trim().isEmpty()) {
B_PAYGWC = Byte.parseByte(s);
} else {
B_PAYGWC = Byte.MIN_VALUE;
}
}

protected final void initB_PAYG_DV(String s) {
if (!s.trim().isEmpty()) {
B_PAYG_DV = Double.parseDouble(s);
} else {
B_PAYG_DV = Double.NaN;
}
}

protected final void initB_PAYNL(String s) {
if (!s.trim().isEmpty()) {
B_PAYNL = Integer.parseInt(s);
} else {
B_PAYNL = Integer.MIN_VALUE;
}
}

protected final void initB_PAYNU_DV(String s) {
if (!s.trim().isEmpty()) {
B_PAYNU_DV = Double.parseDouble(s);
} else {
B_PAYNU_DV = Double.NaN;
}
}

protected final void initB_PAYNU_IF(String s) {
if (!s.trim().isEmpty()) {
B_PAYNU_IF = Byte.parseByte(s);
} else {
B_PAYNU_IF = Byte.MIN_VALUE;
}
}

protected final void initB_PAYNWC(String s) {
if (!s.trim().isEmpty()) {
B_PAYNWC = Byte.parseByte(s);
} else {
B_PAYNWC = Byte.MIN_VALUE;
}
}

protected final void initB_PAYN_DV(String s) {
if (!s.trim().isEmpty()) {
B_PAYN_DV = Double.parseDouble(s);
} else {
B_PAYN_DV = Double.NaN;
}
}

protected final void initB_PAYRUK(String s) {
if (!s.trim().isEmpty()) {
B_PAYRUK = Byte.parseByte(s);
} else {
B_PAYRUK = Byte.MIN_VALUE;
}
}

protected final void initB_PAYTYP(String s) {
if (!s.trim().isEmpty()) {
B_PAYTYP = Byte.parseByte(s);
} else {
B_PAYTYP = Byte.MIN_VALUE;
}
}

protected final void initB_PAYU(String s) {
if (!s.trim().isEmpty()) {
B_PAYU = Integer.parseInt(s);
} else {
B_PAYU = Integer.MIN_VALUE;
}
}

protected final void initB_PAYUG(String s) {
if (!s.trim().isEmpty()) {
B_PAYUG = Byte.parseByte(s);
} else {
B_PAYUG = Byte.MIN_VALUE;
}
}

protected final void initB_PAYUSL(String s) {
if (!s.trim().isEmpty()) {
B_PAYUSL = Byte.parseByte(s);
} else {
B_PAYUSL = Byte.MIN_VALUE;
}
}

protected final void initB_PAYUWC(String s) {
if (!s.trim().isEmpty()) {
B_PAYUWC = Byte.parseByte(s);
} else {
B_PAYUWC = Byte.MIN_VALUE;
}
}

protected final void initB_PAYU_DV(String s) {
if (!s.trim().isEmpty()) {
B_PAYU_DV = Double.parseDouble(s);
} else {
B_PAYU_DV = Double.NaN;
}
}

protected final void initB_PBNFT1(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT1 = Byte.parseByte(s);
} else {
B_PBNFT1 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT10(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT10 = Byte.parseByte(s);
} else {
B_PBNFT10 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT11(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT11 = Byte.parseByte(s);
} else {
B_PBNFT11 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT12(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT12 = Byte.parseByte(s);
} else {
B_PBNFT12 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT2(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT2 = Byte.parseByte(s);
} else {
B_PBNFT2 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT3(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT3 = Byte.parseByte(s);
} else {
B_PBNFT3 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT4(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT4 = Byte.parseByte(s);
} else {
B_PBNFT4 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT5(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT5 = Byte.parseByte(s);
} else {
B_PBNFT5 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT6(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT6 = Byte.parseByte(s);
} else {
B_PBNFT6 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT7(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT7 = Byte.parseByte(s);
} else {
B_PBNFT7 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT8(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT8 = Byte.parseByte(s);
} else {
B_PBNFT8 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT9(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT9 = Byte.parseByte(s);
} else {
B_PBNFT9 = Byte.MIN_VALUE;
}
}

protected final void initB_PBNFT96(String s) {
if (!s.trim().isEmpty()) {
B_PBNFT96 = Byte.parseByte(s);
} else {
B_PBNFT96 = Byte.MIN_VALUE;
}
}

protected final void initB_PENMCN(String s) {
if (!s.trim().isEmpty()) {
B_PENMCN = Byte.parseByte(s);
} else {
B_PENMCN = Byte.MIN_VALUE;
}
}

protected final void initB_PENMEX(String s) {
if (!s.trim().isEmpty()) {
B_PENMEX = Byte.parseByte(s);
} else {
B_PENMEX = Byte.MIN_VALUE;
}
}

protected final void initB_PENMPY(String s) {
if (!s.trim().isEmpty()) {
B_PENMPY = Double.parseDouble(s);
} else {
B_PENMPY = Double.NaN;
}
}

protected final void initB_PENMTP(String s) {
if (!s.trim().isEmpty()) {
B_PENMTP = Byte.parseByte(s);
} else {
B_PENMTP = Byte.MIN_VALUE;
}
}

protected final void initB_PENSIONER_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
B_PENSIONER_DV = false;
} else {
B_PENSIONER_DV = true;
}
}
}

protected final void initB_PENSPB(String s) {
if (!s.trim().isEmpty()) {
B_PENSPB = Byte.parseByte(s);
} else {
B_PENSPB = Byte.MIN_VALUE;
}
}

protected final void initB_PERBFTS(String s) {
if (!s.trim().isEmpty()) {
B_PERBFTS = Byte.parseByte(s);
} else {
B_PERBFTS = Byte.MIN_VALUE;
}
}

protected final void initB_PERPOLINF(String s) {
if (!s.trim().isEmpty()) {
B_PERPOLINF = Byte.parseByte(s);
} else {
B_PERPOLINF = Byte.MIN_VALUE;
}
}

protected final void initB_PJBPTFT(String s) {
if (!s.trim().isEmpty()) {
B_PJBPTFT = Byte.parseByte(s);
} else {
B_PJBPTFT = Byte.MIN_VALUE;
}
}

protected final void initB_PJSPTFT(String s) {
if (!s.trim().isEmpty()) {
B_PJSPTFT = Byte.parseByte(s);
} else {
B_PJSPTFT = Byte.MIN_VALUE;
}
}

protected final void initB_PJULK4WK(String s) {
if (!s.trim().isEmpty()) {
B_PJULK4WK = Byte.parseByte(s);
} else {
B_PJULK4WK = Byte.MIN_VALUE;
}
}

protected final void initB_PLBORNC(String s) {
if (!s.trim().isEmpty()) {
B_PLBORNC = Byte.parseByte(s);
} else {
B_PLBORNC = Byte.MIN_VALUE;
}
}

protected final void initB_PLNOWM(String s) {
if (!s.trim().isEmpty()) {
B_PLNOWM = Byte.parseByte(s);
} else {
B_PLNOWM = Byte.MIN_VALUE;
}
}

protected final void initB_PLNOWY4(String s) {
if (!s.trim().isEmpty()) {
B_PLNOWY4 = Short.parseShort(s);
} else {
B_PLNOWY4 = Short.MIN_VALUE;
}
}

protected final void initB_PN1PID(String s) {
if (!s.trim().isEmpty()) {
B_PN1PID = Integer.parseInt(s);
} else {
B_PN1PID = Integer.MIN_VALUE;
}
}

protected final void initB_PN1PNO(String s) {
if (!s.trim().isEmpty()) {
B_PN1PNO = Byte.parseByte(s);
} else {
B_PN1PNO = Byte.MIN_VALUE;
}
}

protected final void initB_PN1SEX(String s) {
if (!s.trim().isEmpty()) {
B_PN1SEX = Byte.parseByte(s);
} else {
B_PN1SEX = Byte.MIN_VALUE;
}
}

protected final void initB_PN2PID(String s) {
if (!s.trim().isEmpty()) {
B_PN2PID = Integer.parseInt(s);
} else {
B_PN2PID = Integer.MIN_VALUE;
}
}

protected final void initB_PN2PNO(String s) {
if (!s.trim().isEmpty()) {
B_PN2PNO = Byte.parseByte(s);
} else {
B_PN2PNO = Byte.MIN_VALUE;
}
}

protected final void initB_PN2SEX(String s) {
if (!s.trim().isEmpty()) {
B_PN2SEX = Byte.parseByte(s);
} else {
B_PN2SEX = Byte.MIN_VALUE;
}
}

protected final void initB_PNO(String s) {
if (!s.trim().isEmpty()) {
B_PNO = Byte.parseByte(s);
} else {
B_PNO = Byte.MIN_VALUE;
}
}

protected final void initB_PNS1PID(String s) {
if (!s.trim().isEmpty()) {
B_PNS1PID = Integer.parseInt(s);
} else {
B_PNS1PID = Integer.MIN_VALUE;
}
}

protected final void initB_PNS1PNO(String s) {
if (!s.trim().isEmpty()) {
B_PNS1PNO = Byte.parseByte(s);
} else {
B_PNS1PNO = Byte.MIN_VALUE;
}
}

protected final void initB_PNS1SEX(String s) {
if (!s.trim().isEmpty()) {
B_PNS1SEX = Byte.parseByte(s);
} else {
B_PNS1SEX = Byte.MIN_VALUE;
}
}

protected final void initB_PNS2PID(String s) {
if (!s.trim().isEmpty()) {
B_PNS2PID = Integer.parseInt(s);
} else {
B_PNS2PID = Integer.MIN_VALUE;
}
}

protected final void initB_PNS2PNO(String s) {
if (!s.trim().isEmpty()) {
B_PNS2PNO = Byte.parseByte(s);
} else {
B_PNS2PNO = Byte.MIN_VALUE;
}
}

protected final void initB_PNS2SEX(String s) {
if (!s.trim().isEmpty()) {
B_PNS2SEX = Byte.parseByte(s);
} else {
B_PNS2SEX = Byte.MIN_VALUE;
}
}

protected final void initB_POLCOST(String s) {
if (!s.trim().isEmpty()) {
B_POLCOST = Byte.parseByte(s);
} else {
B_POLCOST = Byte.MIN_VALUE;
}
}

protected final void initB_PPEN(String s) {
if (!s.trim().isEmpty()) {
B_PPEN = Byte.parseByte(s);
} else {
B_PPEN = Byte.MIN_VALUE;
}
}

protected final void initB_PPENT(String s) {
if (!s.trim().isEmpty()) {
B_PPENT = Byte.parseByte(s);
} else {
B_PPENT = Byte.MIN_VALUE;
}
}

protected final void initB_PPID(String s) {
if (!s.trim().isEmpty()) {
B_PPID = Integer.parseInt(s);
} else {
B_PPID = Integer.MIN_VALUE;
}
}

protected final void initB_PPNO(String s) {
if (!s.trim().isEmpty()) {
B_PPNO = Byte.parseByte(s);
} else {
B_PPNO = Byte.MIN_VALUE;
}
}

protected final void initB_PPPEX(String s) {
if (!s.trim().isEmpty()) {
B_PPPEX = Byte.parseByte(s);
} else {
B_PPPEX = Byte.MIN_VALUE;
}
}

protected final void initB_PPPEXM(String s) {
if (!s.trim().isEmpty()) {
B_PPPEXM = Byte.parseByte(s);
} else {
B_PPPEXM = Byte.MIN_VALUE;
}
}

protected final void initB_PPRAM(String s) {
if (!s.trim().isEmpty()) {
B_PPRAM = Integer.parseInt(s);
} else {
B_PPRAM = Integer.MIN_VALUE;
}
}

protected final void initB_PPRAMPC(String s) {
if (!s.trim().isEmpty()) {
B_PPRAMPC = Byte.parseByte(s);
} else {
B_PPRAMPC = Byte.MIN_VALUE;
}
}

protected final void initB_PPREG(String s) {
if (!s.trim().isEmpty()) {
B_PPREG = Byte.parseByte(s);
} else {
B_PPREG = Byte.MIN_VALUE;
}
}

protected final void initB_PPSEX(String s) {
if (!s.trim().isEmpty()) {
B_PPSEX = Byte.parseByte(s);
} else {
B_PPSEX = Byte.MIN_VALUE;
}
}

protected final void initB_PPYRS(String s) {
if (!s.trim().isEmpty()) {
B_PPYRS = Short.parseShort(s);
} else {
B_PPYRS = Short.MIN_VALUE;
}
}

protected final void initB_PREARN(String s) {
if (!s.trim().isEmpty()) {
B_PREARN = Byte.parseByte(s);
} else {
B_PREARN = Byte.MIN_VALUE;
}
}

protected final void initB_PREARNA(String s) {
if (!s.trim().isEmpty()) {
B_PREARNA = Byte.parseByte(s);
} else {
B_PREARNA = Byte.MIN_VALUE;
}
}

protected final void initB_PREARNW(String s) {
if (!s.trim().isEmpty()) {
B_PREARNW = Byte.parseByte(s);
} else {
B_PREARNW = Byte.MIN_VALUE;
}
}

protected final void initB_PREASON(String s) {
if (!s.trim().isEmpty()) {
B_PREASON = Byte.parseByte(s);
} else {
B_PREASON = Byte.MIN_VALUE;
}
}

protected final void initB_PREG(String s) {
if (!s.trim().isEmpty()) {
B_PREG = Byte.parseByte(s);
} else {
B_PREG = Byte.MIN_VALUE;
}
}

protected final void initB_PREGDRINK1(String s) {
if (!s.trim().isEmpty()) {
B_PREGDRINK1 = Byte.parseByte(s);
} else {
B_PREGDRINK1 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGDRINK2(String s) {
if (!s.trim().isEmpty()) {
B_PREGDRINK2 = Byte.parseByte(s);
} else {
B_PREGDRINK2 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGDRINK3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGDRINK3 = false;
} else {
B_PREGDRINK3 = true;
}
}
}

protected final void initB_PREGDRINK4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGDRINK4 = false;
} else {
B_PREGDRINK4 = true;
}
}
}

protected final void initB_PREGDRINK5(String s) {
if (!s.trim().isEmpty()) {
B_PREGDRINK5 = Byte.parseByte(s);
} else {
B_PREGDRINK5 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGEND1(String s) {
if (!s.trim().isEmpty()) {
B_PREGEND1 = Byte.parseByte(s);
} else {
B_PREGEND1 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGEND2(String s) {
if (!s.trim().isEmpty()) {
B_PREGEND2 = Byte.parseByte(s);
} else {
B_PREGEND2 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGEND3(String s) {
if (!s.trim().isEmpty()) {
B_PREGEND3 = Byte.parseByte(s);
} else {
B_PREGEND3 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGEND4(String s) {
if (!s.trim().isEmpty()) {
B_PREGEND4 = Byte.parseByte(s);
} else {
B_PREGEND4 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGEND5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGEND5 = false;
} else {
B_PREGEND5 = true;
}
}
}

protected final void initB_PREGFERT1(String s) {
if (!s.trim().isEmpty()) {
B_PREGFERT1 = Byte.parseByte(s);
} else {
B_PREGFERT1 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGFERT2(String s) {
if (!s.trim().isEmpty()) {
B_PREGFERT2 = Byte.parseByte(s);
} else {
B_PREGFERT2 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGFERT3(String s) {
if (!s.trim().isEmpty()) {
B_PREGFERT3 = Byte.parseByte(s);
} else {
B_PREGFERT3 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGFERT4(String s) {
if (!s.trim().isEmpty()) {
B_PREGFERT4 = Byte.parseByte(s);
} else {
B_PREGFERT4 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGFERT5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGFERT5 = false;
} else {
B_PREGFERT5 = true;
}
}
}

protected final void initB_PREGM1(String s) {
if (!s.trim().isEmpty()) {
B_PREGM1 = Byte.parseByte(s);
} else {
B_PREGM1 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGM2(String s) {
if (!s.trim().isEmpty()) {
B_PREGM2 = Byte.parseByte(s);
} else {
B_PREGM2 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGM3(String s) {
if (!s.trim().isEmpty()) {
B_PREGM3 = Byte.parseByte(s);
} else {
B_PREGM3 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGM4(String s) {
if (!s.trim().isEmpty()) {
B_PREGM4 = Byte.parseByte(s);
} else {
B_PREGM4 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGM5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGM5 = false;
} else {
B_PREGM5 = true;
}
}
}

protected final void initB_PREGOUT1(String s) {
if (!s.trim().isEmpty()) {
B_PREGOUT1 = Byte.parseByte(s);
} else {
B_PREGOUT1 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGOUT2(String s) {
if (!s.trim().isEmpty()) {
B_PREGOUT2 = Byte.parseByte(s);
} else {
B_PREGOUT2 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGOUT3(String s) {
if (!s.trim().isEmpty()) {
B_PREGOUT3 = Byte.parseByte(s);
} else {
B_PREGOUT3 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGOUT4(String s) {
if (!s.trim().isEmpty()) {
B_PREGOUT4 = Byte.parseByte(s);
} else {
B_PREGOUT4 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGOUT5(String s) {
if (!s.trim().isEmpty()) {
B_PREGOUT5 = Byte.parseByte(s);
} else {
B_PREGOUT5 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGSMK11(String s) {
if (!s.trim().isEmpty()) {
B_PREGSMK11 = Byte.parseByte(s);
} else {
B_PREGSMK11 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGSMK12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK12 = false;
} else {
B_PREGSMK12 = true;
}
}
}

protected final void initB_PREGSMK13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK13 = false;
} else {
B_PREGSMK13 = true;
}
}
}

protected final void initB_PREGSMK14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK14 = false;
} else {
B_PREGSMK14 = true;
}
}
}

protected final void initB_PREGSMK15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK15 = false;
} else {
B_PREGSMK15 = true;
}
}
}

protected final void initB_PREGSMK21(String s) {
if (!s.trim().isEmpty()) {
B_PREGSMK21 = Byte.parseByte(s);
} else {
B_PREGSMK21 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGSMK22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK22 = false;
} else {
B_PREGSMK22 = true;
}
}
}

protected final void initB_PREGSMK23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK23 = false;
} else {
B_PREGSMK23 = true;
}
}
}

protected final void initB_PREGSMK24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK24 = false;
} else {
B_PREGSMK24 = true;
}
}
}

protected final void initB_PREGSMK25(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK25 = false;
} else {
B_PREGSMK25 = true;
}
}
}

protected final void initB_PREGSMK31(String s) {
if (!s.trim().isEmpty()) {
B_PREGSMK31 = Byte.parseByte(s);
} else {
B_PREGSMK31 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGSMK32(String s) {
if (!s.trim().isEmpty()) {
B_PREGSMK32 = Byte.parseByte(s);
} else {
B_PREGSMK32 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGSMK33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK33 = false;
} else {
B_PREGSMK33 = true;
}
}
}

protected final void initB_PREGSMK34(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK34 = false;
} else {
B_PREGSMK34 = true;
}
}
}

protected final void initB_PREGSMK35(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMK35 = false;
} else {
B_PREGSMK35 = true;
}
}
}

protected final void initB_PREGSMOKE1(String s) {
if (!s.trim().isEmpty()) {
B_PREGSMOKE1 = Byte.parseByte(s);
} else {
B_PREGSMOKE1 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGSMOKE2(String s) {
if (!s.trim().isEmpty()) {
B_PREGSMOKE2 = Byte.parseByte(s);
} else {
B_PREGSMOKE2 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGSMOKE3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMOKE3 = false;
} else {
B_PREGSMOKE3 = true;
}
}
}

protected final void initB_PREGSMOKE4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGSMOKE4 = false;
} else {
B_PREGSMOKE4 = true;
}
}
}

protected final void initB_PREGSMOKE5(String s) {
if (!s.trim().isEmpty()) {
B_PREGSMOKE5 = Byte.parseByte(s);
} else {
B_PREGSMOKE5 = Byte.MIN_VALUE;
}
}

protected final void initB_PREGY41(String s) {
if (!s.trim().isEmpty()) {
B_PREGY41 = Short.parseShort(s);
} else {
B_PREGY41 = Short.MIN_VALUE;
}
}

protected final void initB_PREGY42(String s) {
if (!s.trim().isEmpty()) {
B_PREGY42 = Short.parseShort(s);
} else {
B_PREGY42 = Short.MIN_VALUE;
}
}

protected final void initB_PREGY43(String s) {
if (!s.trim().isEmpty()) {
B_PREGY43 = Short.parseShort(s);
} else {
B_PREGY43 = Short.MIN_VALUE;
}
}

protected final void initB_PREGY44(String s) {
if (!s.trim().isEmpty()) {
B_PREGY44 = Short.parseShort(s);
} else {
B_PREGY44 = Short.MIN_VALUE;
}
}

protected final void initB_PREGY45(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_PREGY45 = false;
} else {
B_PREGY45 = true;
}
}
}

protected final void initB_PREL(String s) {
if (!s.trim().isEmpty()) {
B_PREL = Byte.parseByte(s);
} else {
B_PREL = Byte.MIN_VALUE;
}
}

protected final void initB_PRFITB(String s) {
if (!s.trim().isEmpty()) {
B_PRFITB = Byte.parseByte(s);
} else {
B_PRFITB = Byte.MIN_VALUE;
}
}

protected final void initB_PRFITBA(String s) {
if (!s.trim().isEmpty()) {
B_PRFITBA = Byte.parseByte(s);
} else {
B_PRFITBA = Byte.MIN_VALUE;
}
}

protected final void initB_PRFITBW(String s) {
if (!s.trim().isEmpty()) {
B_PRFITBW = Byte.parseByte(s);
} else {
B_PRFITBW = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE10(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE10 = Byte.parseByte(s);
} else {
B_PRIDE10 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE11(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE11 = Byte.parseByte(s);
} else {
B_PRIDE11 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE12(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE12 = Byte.parseByte(s);
} else {
B_PRIDE12 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE13(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE13 = Byte.parseByte(s);
} else {
B_PRIDE13 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE14(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE14 = Byte.parseByte(s);
} else {
B_PRIDE14 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE2(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE2 = Byte.parseByte(s);
} else {
B_PRIDE2 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE4A(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE4A = Byte.parseByte(s);
} else {
B_PRIDE4A = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE4B(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE4B = Byte.parseByte(s);
} else {
B_PRIDE4B = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE5(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE5 = Byte.parseByte(s);
} else {
B_PRIDE5 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE6(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE6 = Byte.parseByte(s);
} else {
B_PRIDE6 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE7(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE7 = Byte.parseByte(s);
} else {
B_PRIDE7 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE8(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE8 = Byte.parseByte(s);
} else {
B_PRIDE8 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIDE9(String s) {
if (!s.trim().isEmpty()) {
B_PRIDE9 = Byte.parseByte(s);
} else {
B_PRIDE9 = Byte.MIN_VALUE;
}
}

protected final void initB_PRIPN(String s) {
if (!s.trim().isEmpty()) {
B_PRIPN = Byte.parseByte(s);
} else {
B_PRIPN = Byte.MIN_VALUE;
}
}

protected final void initB_PSU(String s) {
if (!s.trim().isEmpty()) {
B_PSU = Integer.parseInt(s);
} else {
B_PSU = Integer.MIN_VALUE;
}
}

protected final void initB_QFHIGH(String s) {
if (!s.trim().isEmpty()) {
B_QFHIGH = Byte.parseByte(s);
} else {
B_QFHIGH = Byte.MIN_VALUE;
}
}

protected final void initB_QFHIGHFL_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_QFHIGHFL_DV = false;
} else {
B_QFHIGHFL_DV = true;
}
}
}

protected final void initB_QFHIGH_DV(String s) {
if (!s.trim().isEmpty()) {
B_QFHIGH_DV = Byte.parseByte(s);
} else {
B_QFHIGH_DV = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC1(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC1 = Byte.parseByte(s);
} else {
B_QFVOC1 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC10(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC10 = Byte.parseByte(s);
} else {
B_QFVOC10 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC11(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC11 = Byte.parseByte(s);
} else {
B_QFVOC11 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC12(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC12 = Byte.parseByte(s);
} else {
B_QFVOC12 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC13(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC13 = Byte.parseByte(s);
} else {
B_QFVOC13 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC14(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC14 = Byte.parseByte(s);
} else {
B_QFVOC14 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC15(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC15 = Byte.parseByte(s);
} else {
B_QFVOC15 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC2(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC2 = Byte.parseByte(s);
} else {
B_QFVOC2 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC3(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC3 = Byte.parseByte(s);
} else {
B_QFVOC3 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC4(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC4 = Byte.parseByte(s);
} else {
B_QFVOC4 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC5(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC5 = Byte.parseByte(s);
} else {
B_QFVOC5 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC6(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC6 = Byte.parseByte(s);
} else {
B_QFVOC6 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC7(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC7 = Byte.parseByte(s);
} else {
B_QFVOC7 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC8(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC8 = Byte.parseByte(s);
} else {
B_QFVOC8 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC9(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC9 = Byte.parseByte(s);
} else {
B_QFVOC9 = Byte.MIN_VALUE;
}
}

protected final void initB_QFVOC96(String s) {
if (!s.trim().isEmpty()) {
B_QFVOC96 = Byte.parseByte(s);
} else {
B_QFVOC96 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNE(String s) {
if (!s.trim().isEmpty()) {
B_QUALNE = Byte.parseByte(s);
} else {
B_QUALNE = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW1(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW1 = Byte.parseByte(s);
} else {
B_QUALNEW1 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW10(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW10 = Byte.parseByte(s);
} else {
B_QUALNEW10 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW11(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW11 = Byte.parseByte(s);
} else {
B_QUALNEW11 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW13(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW13 = Byte.parseByte(s);
} else {
B_QUALNEW13 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW15(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW15 = Byte.parseByte(s);
} else {
B_QUALNEW15 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW16(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW16 = Byte.parseByte(s);
} else {
B_QUALNEW16 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW17(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW17 = Byte.parseByte(s);
} else {
B_QUALNEW17 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW18(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW18 = Byte.parseByte(s);
} else {
B_QUALNEW18 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW19(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW19 = Byte.parseByte(s);
} else {
B_QUALNEW19 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW20(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW20 = Byte.parseByte(s);
} else {
B_QUALNEW20 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW21(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW21 = Byte.parseByte(s);
} else {
B_QUALNEW21 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW22(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW22 = Byte.parseByte(s);
} else {
B_QUALNEW22 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW23(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW23 = Byte.parseByte(s);
} else {
B_QUALNEW23 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW24(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW24 = Byte.parseByte(s);
} else {
B_QUALNEW24 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW25(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW25 = Byte.parseByte(s);
} else {
B_QUALNEW25 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW26(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW26 = Byte.parseByte(s);
} else {
B_QUALNEW26 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW27(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW27 = Byte.parseByte(s);
} else {
B_QUALNEW27 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW28(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW28 = Byte.parseByte(s);
} else {
B_QUALNEW28 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW29(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW29 = Byte.parseByte(s);
} else {
B_QUALNEW29 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW3(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW3 = Byte.parseByte(s);
} else {
B_QUALNEW3 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW30(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW30 = Byte.parseByte(s);
} else {
B_QUALNEW30 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW31(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW31 = Byte.parseByte(s);
} else {
B_QUALNEW31 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW4(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW4 = Byte.parseByte(s);
} else {
B_QUALNEW4 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW5(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW5 = Byte.parseByte(s);
} else {
B_QUALNEW5 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW6(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW6 = Byte.parseByte(s);
} else {
B_QUALNEW6 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW7(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW7 = Byte.parseByte(s);
} else {
B_QUALNEW7 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW8(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW8 = Byte.parseByte(s);
} else {
B_QUALNEW8 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALNEW9(String s) {
if (!s.trim().isEmpty()) {
B_QUALNEW9 = Byte.parseByte(s);
} else {
B_QUALNEW9 = Byte.MIN_VALUE;
}
}

protected final void initB_QUALOC(String s) {
if (!s.trim().isEmpty()) {
B_QUALOC = Byte.parseByte(s);
} else {
B_QUALOC = Byte.MIN_VALUE;
}
}

protected final void initB_RACEL(String s) {
if (!s.trim().isEmpty()) {
B_RACEL = Byte.parseByte(s);
} else {
B_RACEL = Byte.MIN_VALUE;
}
}

protected final void initB_RACELO_CODE(String s) {
if (!s.trim().isEmpty()) {
B_RACELO_CODE = Byte.parseByte(s);
} else {
B_RACELO_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_RACEL_DV(String s) {
if (!s.trim().isEmpty()) {
B_RACEL_DV = Byte.parseByte(s);
} else {
B_RACEL_DV = Byte.MIN_VALUE;
}
}

protected final void initB_RACH16_DV(String s) {
if (!s.trim().isEmpty()) {
B_RACH16_DV = Byte.parseByte(s);
} else {
B_RACH16_DV = Byte.MIN_VALUE;
}
}

protected final void initB_REASEND1(String s) {
if (!s.trim().isEmpty()) {
B_REASEND1 = Byte.parseByte(s);
} else {
B_REASEND1 = Byte.MIN_VALUE;
}
}

protected final void initB_REASEND10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_REASEND10 = false;
} else {
B_REASEND10 = true;
}
}
}

protected final void initB_REASEND2(String s) {
if (!s.trim().isEmpty()) {
B_REASEND2 = Byte.parseByte(s);
} else {
B_REASEND2 = Byte.MIN_VALUE;
}
}

protected final void initB_REASEND3(String s) {
if (!s.trim().isEmpty()) {
B_REASEND3 = Byte.parseByte(s);
} else {
B_REASEND3 = Byte.MIN_VALUE;
}
}

protected final void initB_REASEND4(String s) {
if (!s.trim().isEmpty()) {
B_REASEND4 = Byte.parseByte(s);
} else {
B_REASEND4 = Byte.MIN_VALUE;
}
}

protected final void initB_REASEND5(String s) {
if (!s.trim().isEmpty()) {
B_REASEND5 = Byte.parseByte(s);
} else {
B_REASEND5 = Byte.MIN_VALUE;
}
}

protected final void initB_REASEND6(String s) {
if (!s.trim().isEmpty()) {
B_REASEND6 = Byte.parseByte(s);
} else {
B_REASEND6 = Byte.MIN_VALUE;
}
}

protected final void initB_REASEND7(String s) {
if (!s.trim().isEmpty()) {
B_REASEND7 = Byte.parseByte(s);
} else {
B_REASEND7 = Byte.MIN_VALUE;
}
}

protected final void initB_REASEND8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_REASEND8 = false;
} else {
B_REASEND8 = true;
}
}
}

protected final void initB_REASEND9(String s) {
if (!s.trim().isEmpty()) {
B_REASEND9 = Byte.parseByte(s);
} else {
B_REASEND9 = Byte.MIN_VALUE;
}
}

protected final void initB_RELUP(String s) {
if (!s.trim().isEmpty()) {
B_RELUP = Byte.parseByte(s);
} else {
B_RELUP = Byte.MIN_VALUE;
}
}

protected final void initB_REMAIL_CODE(String s) {
if (!s.trim().isEmpty()) {
B_REMAIL_CODE = Byte.parseByte(s);
} else {
B_REMAIL_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_RESPF16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
B_RESPF16 = false;
} else {
B_RESPF16 = true;
}
}
}

protected final void initB_RESPF16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
B_RESPF16_DV = false;
} else {
B_RESPF16_DV = true;
}
}
}

protected final void initB_RESPM16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
B_RESPM16 = false;
} else {
B_RESPM16 = true;
}
}
}

protected final void initB_RESPM16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
B_RESPM16_DV = false;
} else {
B_RESPM16_DV = true;
}
}
}

protected final void initB_RETAMT(String s) {
if (!s.trim().isEmpty()) {
B_RETAMT = Byte.parseByte(s);
} else {
B_RETAMT = Byte.MIN_VALUE;
}
}

protected final void initB_RETCHK(String s) {
if (!s.trim().isEmpty()) {
B_RETCHK = Byte.parseByte(s);
} else {
B_RETCHK = Byte.MIN_VALUE;
}
}

protected final void initB_RETSUF(String s) {
if (!s.trim().isEmpty()) {
B_RETSUF = Byte.parseByte(s);
} else {
B_RETSUF = Byte.MIN_VALUE;
}
}

protected final void initB_RHLAND_CODE(String s) {
if (!s.trim().isEmpty()) {
B_RHLAND_CODE = Byte.parseByte(s);
} else {
B_RHLAND_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_RPHMOB_CODE(String s) {
if (!s.trim().isEmpty()) {
B_RPHMOB_CODE = Byte.parseByte(s);
} else {
B_RPHMOB_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_RPHWRK_CODE(String s) {
if (!s.trim().isEmpty()) {
B_RPHWRK_CODE = Byte.parseByte(s);
} else {
B_RPHWRK_CODE = Byte.MIN_VALUE;
}
}

protected final void initB_RTCON1(String s) {
if (!s.trim().isEmpty()) {
B_RTCON1 = Byte.parseByte(s);
} else {
B_RTCON1 = Byte.MIN_VALUE;
}
}

protected final void initB_RTCON2(String s) {
if (!s.trim().isEmpty()) {
B_RTCON2 = Byte.parseByte(s);
} else {
B_RTCON2 = Byte.MIN_VALUE;
}
}

protected final void initB_RTCON3(String s) {
if (!s.trim().isEmpty()) {
B_RTCON3 = Byte.parseByte(s);
} else {
B_RTCON3 = Byte.MIN_VALUE;
}
}

protected final void initB_RTCON4(String s) {
if (!s.trim().isEmpty()) {
B_RTCON4 = Byte.parseByte(s);
} else {
B_RTCON4 = Byte.MIN_VALUE;
}
}

protected final void initB_RTEXPJB(String s) {
if (!s.trim().isEmpty()) {
B_RTEXPJB = Byte.parseByte(s);
} else {
B_RTEXPJB = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND1(String s) {
if (!s.trim().isEmpty()) {
B_RTFND1 = Byte.parseByte(s);
} else {
B_RTFND1 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND10(String s) {
if (!s.trim().isEmpty()) {
B_RTFND10 = Byte.parseByte(s);
} else {
B_RTFND10 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND2(String s) {
if (!s.trim().isEmpty()) {
B_RTFND2 = Byte.parseByte(s);
} else {
B_RTFND2 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND3(String s) {
if (!s.trim().isEmpty()) {
B_RTFND3 = Byte.parseByte(s);
} else {
B_RTFND3 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND4(String s) {
if (!s.trim().isEmpty()) {
B_RTFND4 = Byte.parseByte(s);
} else {
B_RTFND4 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND5(String s) {
if (!s.trim().isEmpty()) {
B_RTFND5 = Byte.parseByte(s);
} else {
B_RTFND5 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND6(String s) {
if (!s.trim().isEmpty()) {
B_RTFND6 = Byte.parseByte(s);
} else {
B_RTFND6 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND7(String s) {
if (!s.trim().isEmpty()) {
B_RTFND7 = Byte.parseByte(s);
} else {
B_RTFND7 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND8(String s) {
if (!s.trim().isEmpty()) {
B_RTFND8 = Byte.parseByte(s);
} else {
B_RTFND8 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND9(String s) {
if (!s.trim().isEmpty()) {
B_RTFND9 = Byte.parseByte(s);
} else {
B_RTFND9 = Byte.MIN_VALUE;
}
}

protected final void initB_RTFND96(String s) {
if (!s.trim().isEmpty()) {
B_RTFND96 = Byte.parseByte(s);
} else {
B_RTFND96 = Byte.MIN_VALUE;
}
}

protected final void initB_RTPRO1(String s) {
if (!s.trim().isEmpty()) {
B_RTPRO1 = Byte.parseByte(s);
} else {
B_RTPRO1 = Byte.MIN_VALUE;
}
}

protected final void initB_RTPRO2(String s) {
if (!s.trim().isEmpty()) {
B_RTPRO2 = Byte.parseByte(s);
} else {
B_RTPRO2 = Byte.MIN_VALUE;
}
}

protected final void initB_RTPRO3(String s) {
if (!s.trim().isEmpty()) {
B_RTPRO3 = Byte.parseByte(s);
} else {
B_RTPRO3 = Byte.MIN_VALUE;
}
}

protected final void initB_RTPRO4(String s) {
if (!s.trim().isEmpty()) {
B_RTPRO4 = Byte.parseByte(s);
} else {
B_RTPRO4 = Byte.MIN_VALUE;
}
}

protected final void initB_RTPRO5(String s) {
if (!s.trim().isEmpty()) {
B_RTPRO5 = Byte.parseByte(s);
} else {
B_RTPRO5 = Byte.MIN_VALUE;
}
}

protected final void initB_RTPRO6(String s) {
if (!s.trim().isEmpty()) {
B_RTPRO6 = Byte.parseByte(s);
} else {
B_RTPRO6 = Byte.MIN_VALUE;
}
}

protected final void initB_SAMEJOB(String s) {
if (!s.trim().isEmpty()) {
B_SAMEJOB = Byte.parseByte(s);
} else {
B_SAMEJOB = Byte.MIN_VALUE;
}
}

protected final void initB_SAMPST(String s) {
if (!s.trim().isEmpty()) {
B_SAMPST = Byte.parseByte(s);
} else {
B_SAMPST = Byte.MIN_VALUE;
}
}

protected final void initB_SAVE(String s) {
if (!s.trim().isEmpty()) {
B_SAVE = Byte.parseByte(s);
} else {
B_SAVE = Byte.MIN_VALUE;
}
}

protected final void initB_SAVED(String s) {
if (!s.trim().isEmpty()) {
B_SAVED = Integer.parseInt(s);
} else {
B_SAVED = Integer.MIN_VALUE;
}
}

protected final void initB_SAVLT(String s) {
if (!s.trim().isEmpty()) {
B_SAVLT = Byte.parseByte(s);
} else {
B_SAVLT = Byte.MIN_VALUE;
}
}

protected final void initB_SAVREG(String s) {
if (!s.trim().isEmpty()) {
B_SAVREG = Byte.parseByte(s);
} else {
B_SAVREG = Byte.MIN_VALUE;
}
}

protected final void initB_SCAGE1DRINK(String s) {
if (!s.trim().isEmpty()) {
B_SCAGE1DRINK = Byte.parseByte(s);
} else {
B_SCAGE1DRINK = Byte.MIN_VALUE;
}
}

protected final void initB_SCALCL7D(String s) {
if (!s.trim().isEmpty()) {
B_SCALCL7D = Byte.parseByte(s);
} else {
B_SCALCL7D = Byte.MIN_VALUE;
}
}

protected final void initB_SCANYELSETXT(String s) {
if (!s.trim().isEmpty()) {
B_SCANYELSETXT = Byte.parseByte(s);
} else {
B_SCANYELSETXT = Byte.MIN_VALUE;
}
}

protected final void initB_SCDEM2MANY(String s) {
if (!s.trim().isEmpty()) {
B_SCDEM2MANY = Byte.parseByte(s);
} else {
B_SCDEM2MANY = Byte.MIN_VALUE;
}
}

protected final void initB_SCDOBY4(String s) {
if (!s.trim().isEmpty()) {
B_SCDOBY4 = Short.parseShort(s);
} else {
B_SCDOBY4 = Short.MIN_VALUE;
}
}

protected final void initB_SCEND(String s) {
if (!s.trim().isEmpty()) {
B_SCEND = Byte.parseByte(s);
} else {
B_SCEND = Byte.MIN_VALUE;
}
}

protected final void initB_SCEVERDRNK(String s) {
if (!s.trim().isEmpty()) {
B_SCEVERDRNK = Byte.parseByte(s);
} else {
B_SCEVERDRNK = Byte.MIN_VALUE;
}
}

protected final void initB_SCFALCDRNK(String s) {
if (!s.trim().isEmpty()) {
B_SCFALCDRNK = Byte.parseByte(s);
} else {
B_SCFALCDRNK = Byte.MIN_VALUE;
}
}

protected final void initB_SCFANNOY(String s) {
if (!s.trim().isEmpty()) {
B_SCFANNOY = Byte.parseByte(s);
} else {
B_SCFANNOY = Byte.MIN_VALUE;
}
}

protected final void initB_SCFCRITIC(String s) {
if (!s.trim().isEmpty()) {
B_SCFCRITIC = Byte.parseByte(s);
} else {
B_SCFCRITIC = Byte.MIN_VALUE;
}
}

protected final void initB_SCFLAG_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_SCFLAG_DV = false;
} else {
B_SCFLAG_DV = true;
}
}
}

protected final void initB_SCFLETDWN(String s) {
if (!s.trim().isEmpty()) {
B_SCFLETDWN = Byte.parseByte(s);
} else {
B_SCFLETDWN = Byte.MIN_VALUE;
}
}

protected final void initB_SCFOPENUP(String s) {
if (!s.trim().isEmpty()) {
B_SCFOPENUP = Byte.parseByte(s);
} else {
B_SCFOPENUP = Byte.MIN_VALUE;
}
}

protected final void initB_SCFRELY(String s) {
if (!s.trim().isEmpty()) {
B_SCFRELY = Byte.parseByte(s);
} else {
B_SCFRELY = Byte.MIN_VALUE;
}
}

protected final void initB_SCFRENDANY(String s) {
if (!s.trim().isEmpty()) {
B_SCFRENDANY = Byte.parseByte(s);
} else {
B_SCFRENDANY = Byte.MIN_VALUE;
}
}

protected final void initB_SCFUNDSTND(String s) {
if (!s.trim().isEmpty()) {
B_SCFUNDSTND = Byte.parseByte(s);
} else {
B_SCFUNDSTND = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQ1_DV(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQ1_DV = Byte.parseByte(s);
} else {
B_SCGHQ1_DV = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQ2_DV(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQ2_DV = Byte.parseByte(s);
} else {
B_SCGHQ2_DV = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQA(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQA = Byte.parseByte(s);
} else {
B_SCGHQA = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQB(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQB = Byte.parseByte(s);
} else {
B_SCGHQB = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQC(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQC = Byte.parseByte(s);
} else {
B_SCGHQC = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQD(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQD = Byte.parseByte(s);
} else {
B_SCGHQD = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQE(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQE = Byte.parseByte(s);
} else {
B_SCGHQE = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQF(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQF = Byte.parseByte(s);
} else {
B_SCGHQF = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQG(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQG = Byte.parseByte(s);
} else {
B_SCGHQG = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQH(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQH = Byte.parseByte(s);
} else {
B_SCGHQH = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQI(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQI = Byte.parseByte(s);
} else {
B_SCGHQI = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQJ(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQJ = Byte.parseByte(s);
} else {
B_SCGHQJ = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQK(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQK = Byte.parseByte(s);
} else {
B_SCGHQK = Byte.MIN_VALUE;
}
}

protected final void initB_SCGHQL(String s) {
if (!s.trim().isEmpty()) {
B_SCGHQL = Byte.parseByte(s);
} else {
B_SCGHQL = Byte.MIN_VALUE;
}
}

protected final void initB_SCHLLOC(String s) {
if (!s.trim().isEmpty()) {
B_SCHLLOC = Byte.parseByte(s);
} else {
B_SCHLLOC = Byte.MIN_VALUE;
}
}

protected final void initB_SCHMCONT(String s) {
if (!s.trim().isEmpty()) {
B_SCHMCONT = Byte.parseByte(s);
} else {
B_SCHMCONT = Byte.MIN_VALUE;
}
}

protected final void initB_SCHOK(String s) {
if (!s.trim().isEmpty()) {
B_SCHOK = Byte.parseByte(s);
} else {
B_SCHOK = Byte.MIN_VALUE;
}
}

protected final void initB_SCHOOL(String s) {
if (!s.trim().isEmpty()) {
B_SCHOOL = Byte.parseByte(s);
} else {
B_SCHOOL = Byte.MIN_VALUE;
}
}

protected final void initB_SCLFSAT1(String s) {
if (!s.trim().isEmpty()) {
B_SCLFSAT1 = Byte.parseByte(s);
} else {
B_SCLFSAT1 = Byte.MIN_VALUE;
}
}

protected final void initB_SCLFSAT2(String s) {
if (!s.trim().isEmpty()) {
B_SCLFSAT2 = Byte.parseByte(s);
} else {
B_SCLFSAT2 = Byte.MIN_VALUE;
}
}

protected final void initB_SCLFSAT7(String s) {
if (!s.trim().isEmpty()) {
B_SCLFSAT7 = Byte.parseByte(s);
} else {
B_SCLFSAT7 = Byte.MIN_VALUE;
}
}

protected final void initB_SCLFSATO(String s) {
if (!s.trim().isEmpty()) {
B_SCLFSATO = Byte.parseByte(s);
} else {
B_SCLFSATO = Byte.MIN_VALUE;
}
}

protected final void initB_SCLOUTCONT(String s) {
if (!s.trim().isEmpty()) {
B_SCLOUTCONT = Byte.parseByte(s);
} else {
B_SCLOUTCONT = Byte.MIN_VALUE;
}
}

protected final void initB_SCMOLWP(String s) {
if (!s.trim().isEmpty()) {
B_SCMOLWP = Byte.parseByte(s);
} else {
B_SCMOLWP = Byte.MIN_VALUE;
}
}

protected final void initB_SCNALCL7D(String s) {
if (!s.trim().isEmpty()) {
B_SCNALCL7D = Byte.parseByte(s);
} else {
B_SCNALCL7D = Byte.MIN_VALUE;
}
}

protected final void initB_SCNALCPINT(String s) {
if (!s.trim().isEmpty()) {
B_SCNALCPINT = Double.parseDouble(s);
} else {
B_SCNALCPINT = Double.NaN;
}
}

protected final void initB_SCNALCPOPS(String s) {
if (!s.trim().isEmpty()) {
B_SCNALCPOPS = Double.parseDouble(s);
} else {
B_SCNALCPOPS = Double.NaN;
}
}

protected final void initB_SCNALCSHOT(String s) {
if (!s.trim().isEmpty()) {
B_SCNALCSHOT = Double.parseDouble(s);
} else {
B_SCNALCSHOT = Double.NaN;
}
}

protected final void initB_SCNALCWINE(String s) {
if (!s.trim().isEmpty()) {
B_SCNALCWINE = Double.parseDouble(s);
} else {
B_SCNALCWINE = Double.NaN;
}
}

protected final void initB_SCOPFAMA(String s) {
if (!s.trim().isEmpty()) {
B_SCOPFAMA = Byte.parseByte(s);
} else {
B_SCOPFAMA = Byte.MIN_VALUE;
}
}

protected final void initB_SCOPFAMB(String s) {
if (!s.trim().isEmpty()) {
B_SCOPFAMB = Byte.parseByte(s);
} else {
B_SCOPFAMB = Byte.MIN_VALUE;
}
}

protected final void initB_SCOPFAMD(String s) {
if (!s.trim().isEmpty()) {
B_SCOPFAMD = Byte.parseByte(s);
} else {
B_SCOPFAMD = Byte.MIN_VALUE;
}
}

protected final void initB_SCOPFAMF(String s) {
if (!s.trim().isEmpty()) {
B_SCOPFAMF = Byte.parseByte(s);
} else {
B_SCOPFAMF = Byte.MIN_VALUE;
}
}

protected final void initB_SCOPFAMH(String s) {
if (!s.trim().isEmpty()) {
B_SCOPFAMH = Byte.parseByte(s);
} else {
B_SCOPFAMH = Byte.MIN_VALUE;
}
}

protected final void initB_SCPANNOY(String s) {
if (!s.trim().isEmpty()) {
B_SCPANNOY = Byte.parseByte(s);
} else {
B_SCPANNOY = Byte.MIN_VALUE;
}
}

protected final void initB_SCPCRITIC(String s) {
if (!s.trim().isEmpty()) {
B_SCPCRITIC = Byte.parseByte(s);
} else {
B_SCPCRITIC = Byte.MIN_VALUE;
}
}

protected final void initB_SCPLETDWN(String s) {
if (!s.trim().isEmpty()) {
B_SCPLETDWN = Byte.parseByte(s);
} else {
B_SCPLETDWN = Byte.MIN_VALUE;
}
}

protected final void initB_SCPOPENUP(String s) {
if (!s.trim().isEmpty()) {
B_SCPOPENUP = Byte.parseByte(s);
} else {
B_SCPOPENUP = Byte.MIN_VALUE;
}
}

protected final void initB_SCPRELY(String s) {
if (!s.trim().isEmpty()) {
B_SCPRELY = Byte.parseByte(s);
} else {
B_SCPRELY = Byte.MIN_VALUE;
}
}

protected final void initB_SCPUNDSTND(String s) {
if (!s.trim().isEmpty()) {
B_SCPUNDSTND = Byte.parseByte(s);
} else {
B_SCPUNDSTND = Byte.MIN_VALUE;
}
}

protected final void initB_SCRANNOY(String s) {
if (!s.trim().isEmpty()) {
B_SCRANNOY = Byte.parseByte(s);
} else {
B_SCRANNOY = Byte.MIN_VALUE;
}
}

protected final void initB_SCRCRITIC(String s) {
if (!s.trim().isEmpty()) {
B_SCRCRITIC = Byte.parseByte(s);
} else {
B_SCRCRITIC = Byte.MIN_VALUE;
}
}

protected final void initB_SCRELANY(String s) {
if (!s.trim().isEmpty()) {
B_SCRELANY = Byte.parseByte(s);
} else {
B_SCRELANY = Byte.MIN_VALUE;
}
}

protected final void initB_SCRLETDWN(String s) {
if (!s.trim().isEmpty()) {
B_SCRLETDWN = Byte.parseByte(s);
} else {
B_SCRLETDWN = Byte.MIN_VALUE;
}
}

protected final void initB_SCROPENUP(String s) {
if (!s.trim().isEmpty()) {
B_SCROPENUP = Byte.parseByte(s);
} else {
B_SCROPENUP = Byte.MIN_VALUE;
}
}

protected final void initB_SCRRELY(String s) {
if (!s.trim().isEmpty()) {
B_SCRRELY = Byte.parseByte(s);
} else {
B_SCRRELY = Byte.MIN_VALUE;
}
}

protected final void initB_SCRUNDSTND(String s) {
if (!s.trim().isEmpty()) {
B_SCRUNDSTND = Byte.parseByte(s);
} else {
B_SCRUNDSTND = Byte.MIN_VALUE;
}
}

protected final void initB_SCSEX(String s) {
if (!s.trim().isEmpty()) {
B_SCSEX = Byte.parseByte(s);
} else {
B_SCSEX = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF1(String s) {
if (!s.trim().isEmpty()) {
B_SCSF1 = Byte.parseByte(s);
} else {
B_SCSF1 = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF2A(String s) {
if (!s.trim().isEmpty()) {
B_SCSF2A = Byte.parseByte(s);
} else {
B_SCSF2A = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF2B(String s) {
if (!s.trim().isEmpty()) {
B_SCSF2B = Byte.parseByte(s);
} else {
B_SCSF2B = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF3A(String s) {
if (!s.trim().isEmpty()) {
B_SCSF3A = Byte.parseByte(s);
} else {
B_SCSF3A = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF3B(String s) {
if (!s.trim().isEmpty()) {
B_SCSF3B = Byte.parseByte(s);
} else {
B_SCSF3B = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF4A(String s) {
if (!s.trim().isEmpty()) {
B_SCSF4A = Byte.parseByte(s);
} else {
B_SCSF4A = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF4B(String s) {
if (!s.trim().isEmpty()) {
B_SCSF4B = Byte.parseByte(s);
} else {
B_SCSF4B = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF5(String s) {
if (!s.trim().isEmpty()) {
B_SCSF5 = Byte.parseByte(s);
} else {
B_SCSF5 = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF6A(String s) {
if (!s.trim().isEmpty()) {
B_SCSF6A = Byte.parseByte(s);
} else {
B_SCSF6A = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF6B(String s) {
if (!s.trim().isEmpty()) {
B_SCSF6B = Byte.parseByte(s);
} else {
B_SCSF6B = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF6C(String s) {
if (!s.trim().isEmpty()) {
B_SCSF6C = Byte.parseByte(s);
} else {
B_SCSF6C = Byte.MIN_VALUE;
}
}

protected final void initB_SCSF7(String s) {
if (!s.trim().isEmpty()) {
B_SCSF7 = Byte.parseByte(s);
} else {
B_SCSF7 = Byte.MIN_VALUE;
}
}

protected final void initB_SCSSUP1(String s) {
if (!s.trim().isEmpty()) {
B_SCSSUP1 = Byte.parseByte(s);
} else {
B_SCSSUP1 = Byte.MIN_VALUE;
}
}

protected final void initB_SCSSUPR2R(String s) {
if (!s.trim().isEmpty()) {
B_SCSSUPR2R = Byte.parseByte(s);
} else {
B_SCSSUPR2R = Byte.MIN_VALUE;
}
}

protected final void initB_SCTIMEMNUF(String s) {
if (!s.trim().isEmpty()) {
B_SCTIMEMNUF = Byte.parseByte(s);
} else {
B_SCTIMEMNUF = Byte.MIN_VALUE;
}
}

protected final void initB_SCWHORUAGE(String s) {
if (!s.trim().isEmpty()) {
B_SCWHORUAGE = Byte.parseByte(s);
} else {
B_SCWHORUAGE = Byte.MIN_VALUE;
}
}

protected final void initB_SCWHORUEDU(String s) {
if (!s.trim().isEmpty()) {
B_SCWHORUEDU = Byte.parseByte(s);
} else {
B_SCWHORUEDU = Byte.MIN_VALUE;
}
}

protected final void initB_SCWHORUFAM(String s) {
if (!s.trim().isEmpty()) {
B_SCWHORUFAM = Byte.parseByte(s);
} else {
B_SCWHORUFAM = Byte.MIN_VALUE;
}
}

protected final void initB_SCWHORUPOL(String s) {
if (!s.trim().isEmpty()) {
B_SCWHORUPOL = Byte.parseByte(s);
} else {
B_SCWHORUPOL = Byte.MIN_VALUE;
}
}

protected final void initB_SCWHORUPRO(String s) {
if (!s.trim().isEmpty()) {
B_SCWHORUPRO = Byte.parseByte(s);
} else {
B_SCWHORUPRO = Byte.MIN_VALUE;
}
}

protected final void initB_SCWHORURAC(String s) {
if (!s.trim().isEmpty()) {
B_SCWHORURAC = Byte.parseByte(s);
} else {
B_SCWHORURAC = Byte.MIN_VALUE;
}
}

protected final void initB_SCWHORUSEX(String s) {
if (!s.trim().isEmpty()) {
B_SCWHORUSEX = Byte.parseByte(s);
} else {
B_SCWHORUSEX = Byte.MIN_VALUE;
}
}

protected final void initB_SCWKVFAST(String s) {
if (!s.trim().isEmpty()) {
B_SCWKVFAST = Byte.parseByte(s);
} else {
B_SCWKVFAST = Byte.MIN_VALUE;
}
}

protected final void initB_SEEARNGRS_DV(String s) {
if (!s.trim().isEmpty()) {
B_SEEARNGRS_DV = Double.parseDouble(s);
} else {
B_SEEARNGRS_DV = Double.NaN;
}
}

protected final void initB_SEEARNGRS_IF(String s) {
if (!s.trim().isEmpty()) {
B_SEEARNGRS_IF = Byte.parseByte(s);
} else {
B_SEEARNGRS_IF = Byte.MIN_VALUE;
}
}

protected final void initB_SEEARNNET_DV(String s) {
if (!s.trim().isEmpty()) {
B_SEEARNNET_DV = Double.parseDouble(s);
} else {
B_SEEARNNET_DV = Double.NaN;
}
}

protected final void initB_SEX(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
B_SEX = false;
} else {
B_SEX = true;
}
}
}

protected final void initB_SEX_DV(String s) {
if (!s.trim().isEmpty()) {
B_SEX_DV = Byte.parseByte(s);
} else {
B_SEX_DV = Byte.MIN_VALUE;
}
}

protected final void initB_SF1(String s) {
if (!s.trim().isEmpty()) {
B_SF1 = Byte.parseByte(s);
} else {
B_SF1 = Byte.MIN_VALUE;
}
}

protected final void initB_SF12MCS_DV(String s) {
if (!s.trim().isEmpty()) {
B_SF12MCS_DV = Double.parseDouble(s);
} else {
B_SF12MCS_DV = Double.NaN;
}
}

protected final void initB_SF12PCS_DV(String s) {
if (!s.trim().isEmpty()) {
B_SF12PCS_DV = Double.parseDouble(s);
} else {
B_SF12PCS_DV = Double.NaN;
}
}

protected final void initB_SINGLE_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
B_SINGLE_DV = false;
} else {
B_SINGLE_DV = true;
}
}
}

protected final void initB_SMAGBG(String s) {
if (!s.trim().isEmpty()) {
B_SMAGBG = Byte.parseByte(s);
} else {
B_SMAGBG = Byte.MIN_VALUE;
}
}

protected final void initB_SMCIGS(String s) {
if (!s.trim().isEmpty()) {
B_SMCIGS = Byte.parseByte(s);
} else {
B_SMCIGS = Byte.MIN_VALUE;
}
}

protected final void initB_SMEVER(String s) {
if (!s.trim().isEmpty()) {
B_SMEVER = Byte.parseByte(s);
} else {
B_SMEVER = Byte.MIN_VALUE;
}
}

protected final void initB_SMKMNTH11(String s) {
if (!s.trim().isEmpty()) {
B_SMKMNTH11 = Byte.parseByte(s);
} else {
B_SMKMNTH11 = Byte.MIN_VALUE;
}
}

protected final void initB_SMKMNTH12(String s) {
if (!s.trim().isEmpty()) {
B_SMKMNTH12 = Byte.parseByte(s);
} else {
B_SMKMNTH12 = Byte.MIN_VALUE;
}
}

protected final void initB_SMKMNTH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH13 = false;
} else {
B_SMKMNTH13 = true;
}
}
}

protected final void initB_SMKMNTH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH14 = false;
} else {
B_SMKMNTH14 = true;
}
}
}

protected final void initB_SMKMNTH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH15 = false;
} else {
B_SMKMNTH15 = true;
}
}
}

protected final void initB_SMKMNTH21(String s) {
if (!s.trim().isEmpty()) {
B_SMKMNTH21 = Byte.parseByte(s);
} else {
B_SMKMNTH21 = Byte.MIN_VALUE;
}
}

protected final void initB_SMKMNTH22(String s) {
if (!s.trim().isEmpty()) {
B_SMKMNTH22 = Byte.parseByte(s);
} else {
B_SMKMNTH22 = Byte.MIN_VALUE;
}
}

protected final void initB_SMKMNTH23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH23 = false;
} else {
B_SMKMNTH23 = true;
}
}
}

protected final void initB_SMKMNTH24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH24 = false;
} else {
B_SMKMNTH24 = true;
}
}
}

protected final void initB_SMKMNTH25(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH25 = false;
} else {
B_SMKMNTH25 = true;
}
}
}

protected final void initB_SMKMNTH31(String s) {
if (!s.trim().isEmpty()) {
B_SMKMNTH31 = Byte.parseByte(s);
} else {
B_SMKMNTH31 = Byte.MIN_VALUE;
}
}

protected final void initB_SMKMNTH32(String s) {
if (!s.trim().isEmpty()) {
B_SMKMNTH32 = Byte.parseByte(s);
} else {
B_SMKMNTH32 = Byte.MIN_VALUE;
}
}

protected final void initB_SMKMNTH33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH33 = false;
} else {
B_SMKMNTH33 = true;
}
}
}

protected final void initB_SMKMNTH34(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH34 = false;
} else {
B_SMKMNTH34 = true;
}
}
}

protected final void initB_SMKMNTH35(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_SMKMNTH35 = false;
} else {
B_SMKMNTH35 = true;
}
}
}

protected final void initB_SMNCIGS(String s) {
if (!s.trim().isEmpty()) {
B_SMNCIGS = Byte.parseByte(s);
} else {
B_SMNCIGS = Byte.MIN_VALUE;
}
}

protected final void initB_SMNOW(String s) {
if (!s.trim().isEmpty()) {
B_SMNOW = Byte.parseByte(s);
} else {
B_SMNOW = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTACT(String s) {
if (!s.trim().isEmpty()) {
B_SPORTACT = Byte.parseByte(s);
} else {
B_SPORTACT = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS11(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS11 = Byte.parseByte(s);
} else {
B_SPORTS11 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS110(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS110 = Byte.parseByte(s);
} else {
B_SPORTS110 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS111(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS111 = Byte.parseByte(s);
} else {
B_SPORTS111 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS112(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS112 = Byte.parseByte(s);
} else {
B_SPORTS112 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS113(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS113 = Byte.parseByte(s);
} else {
B_SPORTS113 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS114(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS114 = Byte.parseByte(s);
} else {
B_SPORTS114 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS12(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS12 = Byte.parseByte(s);
} else {
B_SPORTS12 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS13(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS13 = Byte.parseByte(s);
} else {
B_SPORTS13 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS14(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS14 = Byte.parseByte(s);
} else {
B_SPORTS14 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS15(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS15 = Byte.parseByte(s);
} else {
B_SPORTS15 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS16(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS16 = Byte.parseByte(s);
} else {
B_SPORTS16 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS17(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS17 = Byte.parseByte(s);
} else {
B_SPORTS17 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS18(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS18 = Byte.parseByte(s);
} else {
B_SPORTS18 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS19(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS19 = Byte.parseByte(s);
} else {
B_SPORTS19 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS196(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS196 = Byte.parseByte(s);
} else {
B_SPORTS196 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS216(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS216 = Byte.parseByte(s);
} else {
B_SPORTS216 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS217(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS217 = Byte.parseByte(s);
} else {
B_SPORTS217 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS218(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS218 = Byte.parseByte(s);
} else {
B_SPORTS218 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS219(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS219 = Byte.parseByte(s);
} else {
B_SPORTS219 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS220(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS220 = Byte.parseByte(s);
} else {
B_SPORTS220 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS221(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS221 = Byte.parseByte(s);
} else {
B_SPORTS221 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS222(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS222 = Byte.parseByte(s);
} else {
B_SPORTS222 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS223(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS223 = Byte.parseByte(s);
} else {
B_SPORTS223 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS224(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS224 = Byte.parseByte(s);
} else {
B_SPORTS224 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS225(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS225 = Byte.parseByte(s);
} else {
B_SPORTS225 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS226(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS226 = Byte.parseByte(s);
} else {
B_SPORTS226 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS227(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS227 = Byte.parseByte(s);
} else {
B_SPORTS227 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS228(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS228 = Byte.parseByte(s);
} else {
B_SPORTS228 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS229(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS229 = Byte.parseByte(s);
} else {
B_SPORTS229 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS230(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS230 = Byte.parseByte(s);
} else {
B_SPORTS230 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS231(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS231 = Byte.parseByte(s);
} else {
B_SPORTS231 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS296(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS296 = Byte.parseByte(s);
} else {
B_SPORTS296 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS31(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS31 = Byte.parseByte(s);
} else {
B_SPORTS31 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS32(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS32 = Byte.parseByte(s);
} else {
B_SPORTS32 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS33(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS33 = Byte.parseByte(s);
} else {
B_SPORTS33 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS34(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS34 = Byte.parseByte(s);
} else {
B_SPORTS34 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS35(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS35 = Byte.parseByte(s);
} else {
B_SPORTS35 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS36(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS36 = Byte.parseByte(s);
} else {
B_SPORTS36 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS37(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS37 = Byte.parseByte(s);
} else {
B_SPORTS37 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS38(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS38 = Byte.parseByte(s);
} else {
B_SPORTS38 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS39(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS39 = Byte.parseByte(s);
} else {
B_SPORTS39 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS396(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS396 = Byte.parseByte(s);
} else {
B_SPORTS396 = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTS3FREQ(String s) {
if (!s.trim().isEmpty()) {
B_SPORTS3FREQ = Byte.parseByte(s);
} else {
B_SPORTS3FREQ = Byte.MIN_VALUE;
}
}

protected final void initB_SPORTSFREQ(String s) {
if (!s.trim().isEmpty()) {
B_SPORTSFREQ = Byte.parseByte(s);
} else {
B_SPORTSFREQ = Byte.MIN_VALUE;
}
}

protected final void initB_SPPEN(String s) {
if (!s.trim().isEmpty()) {
B_SPPEN = Byte.parseByte(s);
} else {
B_SPPEN = Byte.MIN_VALUE;
}
}

protected final void initB_SPPID(String s) {
if (!s.trim().isEmpty()) {
B_SPPID = Integer.parseInt(s);
} else {
B_SPPID = Integer.MIN_VALUE;
}
}

protected final void initB_SPPNO(String s) {
if (!s.trim().isEmpty()) {
B_SPPNO = Byte.parseByte(s);
} else {
B_SPPNO = Byte.MIN_VALUE;
}
}

protected final void initB_STATCM1(String s) {
if (!s.trim().isEmpty()) {
B_STATCM1 = Byte.parseByte(s);
} else {
B_STATCM1 = Byte.MIN_VALUE;
}
}

protected final void initB_STATCM2(String s) {
if (!s.trim().isEmpty()) {
B_STATCM2 = Byte.parseByte(s);
} else {
B_STATCM2 = Byte.MIN_VALUE;
}
}

protected final void initB_STATCM3(String s) {
if (!s.trim().isEmpty()) {
B_STATCM3 = Byte.parseByte(s);
} else {
B_STATCM3 = Byte.MIN_VALUE;
}
}

protected final void initB_STATCY41(String s) {
if (!s.trim().isEmpty()) {
B_STATCY41 = Short.parseShort(s);
} else {
B_STATCY41 = Short.MIN_VALUE;
}
}

protected final void initB_STATCY42(String s) {
if (!s.trim().isEmpty()) {
B_STATCY42 = Short.parseShort(s);
} else {
B_STATCY42 = Short.MIN_VALUE;
}
}

protected final void initB_STATCY43(String s) {
if (!s.trim().isEmpty()) {
B_STATCY43 = Short.parseShort(s);
} else {
B_STATCY43 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDD1(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD1 = Byte.parseByte(s);
} else {
B_STATENDD1 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDD10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_STATENDD10 = false;
} else {
B_STATENDD10 = true;
}
}
}

protected final void initB_STATENDD2(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD2 = Byte.parseByte(s);
} else {
B_STATENDD2 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDD3(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD3 = Byte.parseByte(s);
} else {
B_STATENDD3 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDD4(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD4 = Byte.parseByte(s);
} else {
B_STATENDD4 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDD5(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD5 = Byte.parseByte(s);
} else {
B_STATENDD5 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDD6(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD6 = Byte.parseByte(s);
} else {
B_STATENDD6 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDD7(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD7 = Byte.parseByte(s);
} else {
B_STATENDD7 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDD8(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD8 = Byte.parseByte(s);
} else {
B_STATENDD8 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDD9(String s) {
if (!s.trim().isEmpty()) {
B_STATENDD9 = Byte.parseByte(s);
} else {
B_STATENDD9 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM1(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM1 = Byte.parseByte(s);
} else {
B_STATENDM1 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_STATENDM10 = false;
} else {
B_STATENDM10 = true;
}
}
}

protected final void initB_STATENDM2(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM2 = Byte.parseByte(s);
} else {
B_STATENDM2 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM3(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM3 = Byte.parseByte(s);
} else {
B_STATENDM3 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM4(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM4 = Byte.parseByte(s);
} else {
B_STATENDM4 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM5(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM5 = Byte.parseByte(s);
} else {
B_STATENDM5 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM6(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM6 = Byte.parseByte(s);
} else {
B_STATENDM6 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM7(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM7 = Byte.parseByte(s);
} else {
B_STATENDM7 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM8(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM8 = Byte.parseByte(s);
} else {
B_STATENDM8 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDM9(String s) {
if (!s.trim().isEmpty()) {
B_STATENDM9 = Byte.parseByte(s);
} else {
B_STATENDM9 = Byte.MIN_VALUE;
}
}

protected final void initB_STATENDY41(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY41 = Short.parseShort(s);
} else {
B_STATENDY41 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDY410(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
B_STATENDY410 = false;
} else {
B_STATENDY410 = true;
}
}
}

protected final void initB_STATENDY42(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY42 = Short.parseShort(s);
} else {
B_STATENDY42 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDY43(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY43 = Short.parseShort(s);
} else {
B_STATENDY43 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDY44(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY44 = Short.parseShort(s);
} else {
B_STATENDY44 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDY45(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY45 = Short.parseShort(s);
} else {
B_STATENDY45 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDY46(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY46 = Short.parseShort(s);
} else {
B_STATENDY46 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDY47(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY47 = Short.parseShort(s);
} else {
B_STATENDY47 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDY48(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY48 = Short.parseShort(s);
} else {
B_STATENDY48 = Short.MIN_VALUE;
}
}

protected final void initB_STATENDY49(String s) {
if (!s.trim().isEmpty()) {
B_STATENDY49 = Short.parseShort(s);
} else {
B_STATENDY49 = Short.MIN_VALUE;
}
}

protected final void initB_STENDREAS(String s) {
if (!s.trim().isEmpty()) {
B_STENDREAS = Byte.parseByte(s);
} else {
B_STENDREAS = Byte.MIN_VALUE;
}
}

protected final void initB_STRATA(String s) {
if (!s.trim().isEmpty()) {
B_STRATA = Short.parseShort(s);
} else {
B_STRATA = Short.MIN_VALUE;
}
}

protected final void initB_SUSP(String s) {
if (!s.trim().isEmpty()) {
B_SUSP = Byte.parseByte(s);
} else {
B_SUSP = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINANY(String s) {
if (!s.trim().isEmpty()) {
B_TRAINANY = Byte.parseByte(s);
} else {
B_TRAINANY = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINDAYS1(String s) {
if (!s.trim().isEmpty()) {
B_TRAINDAYS1 = Short.parseShort(s);
} else {
B_TRAINDAYS1 = Short.MIN_VALUE;
}
}

protected final void initB_TRAINDAYS2(String s) {
if (!s.trim().isEmpty()) {
B_TRAINDAYS2 = Short.parseShort(s);
} else {
B_TRAINDAYS2 = Short.MIN_VALUE;
}
}

protected final void initB_TRAINDAYS3(String s) {
if (!s.trim().isEmpty()) {
B_TRAINDAYS3 = Short.parseShort(s);
} else {
B_TRAINDAYS3 = Short.MIN_VALUE;
}
}

protected final void initB_TRAINEND1(String s) {
if (!s.trim().isEmpty()) {
B_TRAINEND1 = Byte.parseByte(s);
} else {
B_TRAINEND1 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINEND2(String s) {
if (!s.trim().isEmpty()) {
B_TRAINEND2 = Byte.parseByte(s);
} else {
B_TRAINEND2 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINEND3(String s) {
if (!s.trim().isEmpty()) {
B_TRAINEND3 = Byte.parseByte(s);
} else {
B_TRAINEND3 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINHRS1(String s) {
if (!s.trim().isEmpty()) {
B_TRAINHRS1 = Byte.parseByte(s);
} else {
B_TRAINHRS1 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINHRS2(String s) {
if (!s.trim().isEmpty()) {
B_TRAINHRS2 = Byte.parseByte(s);
} else {
B_TRAINHRS2 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINHRS3(String s) {
if (!s.trim().isEmpty()) {
B_TRAINHRS3 = Byte.parseByte(s);
} else {
B_TRAINHRS3 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINN(String s) {
if (!s.trim().isEmpty()) {
B_TRAINN = Byte.parseByte(s);
} else {
B_TRAINN = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP11(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP11 = Byte.parseByte(s);
} else {
B_TRAINPURP11 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP12(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP12 = Byte.parseByte(s);
} else {
B_TRAINPURP12 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP13(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP13 = Byte.parseByte(s);
} else {
B_TRAINPURP13 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP21(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP21 = Byte.parseByte(s);
} else {
B_TRAINPURP21 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP22(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP22 = Byte.parseByte(s);
} else {
B_TRAINPURP22 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP23(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP23 = Byte.parseByte(s);
} else {
B_TRAINPURP23 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP31(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP31 = Byte.parseByte(s);
} else {
B_TRAINPURP31 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP32(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP32 = Byte.parseByte(s);
} else {
B_TRAINPURP32 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP33(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP33 = Byte.parseByte(s);
} else {
B_TRAINPURP33 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP41(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP41 = Byte.parseByte(s);
} else {
B_TRAINPURP41 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP42(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP42 = Byte.parseByte(s);
} else {
B_TRAINPURP42 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP43(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP43 = Byte.parseByte(s);
} else {
B_TRAINPURP43 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP51(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP51 = Byte.parseByte(s);
} else {
B_TRAINPURP51 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP52(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP52 = Byte.parseByte(s);
} else {
B_TRAINPURP52 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP53(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP53 = Byte.parseByte(s);
} else {
B_TRAINPURP53 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP61(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP61 = Byte.parseByte(s);
} else {
B_TRAINPURP61 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP62(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP62 = Byte.parseByte(s);
} else {
B_TRAINPURP62 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP63(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP63 = Byte.parseByte(s);
} else {
B_TRAINPURP63 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP71(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP71 = Byte.parseByte(s);
} else {
B_TRAINPURP71 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP72(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP72 = Byte.parseByte(s);
} else {
B_TRAINPURP72 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINPURP73(String s) {
if (!s.trim().isEmpty()) {
B_TRAINPURP73 = Byte.parseByte(s);
} else {
B_TRAINPURP73 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINQUAL1(String s) {
if (!s.trim().isEmpty()) {
B_TRAINQUAL1 = Byte.parseByte(s);
} else {
B_TRAINQUAL1 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINQUAL2(String s) {
if (!s.trim().isEmpty()) {
B_TRAINQUAL2 = Byte.parseByte(s);
} else {
B_TRAINQUAL2 = Byte.MIN_VALUE;
}
}

protected final void initB_TRAINQUAL3(String s) {
if (!s.trim().isEmpty()) {
B_TRAINQUAL3 = Byte.parseByte(s);
} else {
B_TRAINQUAL3 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL1(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL1 = Byte.parseByte(s);
} else {
B_TRQUAL1 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL10(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL10 = Byte.parseByte(s);
} else {
B_TRQUAL10 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL11(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL11 = Byte.parseByte(s);
} else {
B_TRQUAL11 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL13(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL13 = Byte.parseByte(s);
} else {
B_TRQUAL13 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL15(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL15 = Byte.parseByte(s);
} else {
B_TRQUAL15 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL16(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL16 = Byte.parseByte(s);
} else {
B_TRQUAL16 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL17(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL17 = Byte.parseByte(s);
} else {
B_TRQUAL17 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL18(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL18 = Byte.parseByte(s);
} else {
B_TRQUAL18 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL19(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL19 = Byte.parseByte(s);
} else {
B_TRQUAL19 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL2(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL2 = Byte.parseByte(s);
} else {
B_TRQUAL2 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL20(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL20 = Byte.parseByte(s);
} else {
B_TRQUAL20 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL21(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL21 = Byte.parseByte(s);
} else {
B_TRQUAL21 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL22(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL22 = Byte.parseByte(s);
} else {
B_TRQUAL22 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL23(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL23 = Byte.parseByte(s);
} else {
B_TRQUAL23 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL24(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL24 = Byte.parseByte(s);
} else {
B_TRQUAL24 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL25(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL25 = Byte.parseByte(s);
} else {
B_TRQUAL25 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL26(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL26 = Byte.parseByte(s);
} else {
B_TRQUAL26 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL27(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL27 = Byte.parseByte(s);
} else {
B_TRQUAL27 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL28(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL28 = Byte.parseByte(s);
} else {
B_TRQUAL28 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL29(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL29 = Byte.parseByte(s);
} else {
B_TRQUAL29 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL3(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL3 = Byte.parseByte(s);
} else {
B_TRQUAL3 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL30(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL30 = Byte.parseByte(s);
} else {
B_TRQUAL30 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL31(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL31 = Byte.parseByte(s);
} else {
B_TRQUAL31 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL4(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL4 = Byte.parseByte(s);
} else {
B_TRQUAL4 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL5(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL5 = Byte.parseByte(s);
} else {
B_TRQUAL5 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL6(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL6 = Byte.parseByte(s);
} else {
B_TRQUAL6 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL7(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL7 = Byte.parseByte(s);
} else {
B_TRQUAL7 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL8(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL8 = Byte.parseByte(s);
} else {
B_TRQUAL8 = Byte.MIN_VALUE;
}
}

protected final void initB_TRQUAL9(String s) {
if (!s.trim().isEmpty()) {
B_TRQUAL9 = Byte.parseByte(s);
} else {
B_TRQUAL9 = Byte.MIN_VALUE;
}
}

protected final void initB_TRWHO1(String s) {
if (!s.trim().isEmpty()) {
B_TRWHO1 = Byte.parseByte(s);
} else {
B_TRWHO1 = Byte.MIN_VALUE;
}
}

protected final void initB_TRWHO2(String s) {
if (!s.trim().isEmpty()) {
B_TRWHO2 = Byte.parseByte(s);
} else {
B_TRWHO2 = Byte.MIN_VALUE;
}
}

protected final void initB_TRWHO3(String s) {
if (!s.trim().isEmpty()) {
B_TRWHO3 = Byte.parseByte(s);
} else {
B_TRWHO3 = Byte.MIN_VALUE;
}
}

protected final void initB_TUIN1(String s) {
if (!s.trim().isEmpty()) {
B_TUIN1 = Byte.parseByte(s);
} else {
B_TUIN1 = Byte.MIN_VALUE;
}
}

protected final void initB_TUJBPL(String s) {
if (!s.trim().isEmpty()) {
B_TUJBPL = Byte.parseByte(s);
} else {
B_TUJBPL = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCAR(String s) {
if (!s.trim().isEmpty()) {
B_TWKCAR = Byte.parseByte(s);
} else {
B_TWKCAR = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY1(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY1 = Byte.parseByte(s);
} else {
B_TWKCARY1 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY10(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY10 = Byte.parseByte(s);
} else {
B_TWKCARY10 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY11(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY11 = Byte.parseByte(s);
} else {
B_TWKCARY11 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY12(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY12 = Byte.parseByte(s);
} else {
B_TWKCARY12 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY13(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY13 = Byte.parseByte(s);
} else {
B_TWKCARY13 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY14(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY14 = Byte.parseByte(s);
} else {
B_TWKCARY14 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY2(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY2 = Byte.parseByte(s);
} else {
B_TWKCARY2 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY3(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY3 = Byte.parseByte(s);
} else {
B_TWKCARY3 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY4(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY4 = Byte.parseByte(s);
} else {
B_TWKCARY4 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY5(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY5 = Byte.parseByte(s);
} else {
B_TWKCARY5 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY6(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY6 = Byte.parseByte(s);
} else {
B_TWKCARY6 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY7(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY7 = Byte.parseByte(s);
} else {
B_TWKCARY7 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY8(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY8 = Byte.parseByte(s);
} else {
B_TWKCARY8 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY9(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY9 = Byte.parseByte(s);
} else {
B_TWKCARY9 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARY97(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARY97 = Byte.parseByte(s);
} else {
B_TWKCARY97 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKCARYM(String s) {
if (!s.trim().isEmpty()) {
B_TWKCARYM = Byte.parseByte(s);
} else {
B_TWKCARYM = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF1(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF1 = Byte.parseByte(s);
} else {
B_TWKDIFF1 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF2(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF2 = Byte.parseByte(s);
} else {
B_TWKDIFF2 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF3(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF3 = Byte.parseByte(s);
} else {
B_TWKDIFF3 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF4(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF4 = Byte.parseByte(s);
} else {
B_TWKDIFF4 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF5(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF5 = Byte.parseByte(s);
} else {
B_TWKDIFF5 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF6(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF6 = Byte.parseByte(s);
} else {
B_TWKDIFF6 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF7(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF7 = Byte.parseByte(s);
} else {
B_TWKDIFF7 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF8(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF8 = Byte.parseByte(s);
} else {
B_TWKDIFF8 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFF97(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFF97 = Byte.parseByte(s);
} else {
B_TWKDIFF97 = Byte.MIN_VALUE;
}
}

protected final void initB_TWKDIFFM(String s) {
if (!s.trim().isEmpty()) {
B_TWKDIFFM = Byte.parseByte(s);
} else {
B_TWKDIFFM = Byte.MIN_VALUE;
}
}

protected final void initB_UKBORN(String s) {
if (!s.trim().isEmpty()) {
B_UKBORN = Byte.parseByte(s);
} else {
B_UKBORN = Byte.MIN_VALUE;
}
}

protected final void initB_UNDQUS(String s) {
if (!s.trim().isEmpty()) {
B_UNDQUS = Byte.parseByte(s);
} else {
B_UNDQUS = Byte.MIN_VALUE;
}
}

protected final void initB_URBAN_DV(String s) {
if (!s.trim().isEmpty()) {
B_URBAN_DV = Byte.parseByte(s);
} else {
B_URBAN_DV = Byte.MIN_VALUE;
}
}

protected final void initB_USBREAD(String s) {
if (!s.trim().isEmpty()) {
B_USBREAD = Byte.parseByte(s);
} else {
B_USBREAD = Byte.MIN_VALUE;
}
}

protected final void initB_USDAIRY(String s) {
if (!s.trim().isEmpty()) {
B_USDAIRY = Byte.parseByte(s);
} else {
B_USDAIRY = Byte.MIN_VALUE;
}
}

protected final void initB_VOLFREQ(String s) {
if (!s.trim().isEmpty()) {
B_VOLFREQ = Byte.parseByte(s);
} else {
B_VOLFREQ = Byte.MIN_VALUE;
}
}

protected final void initB_VOLHRS(String s) {
if (!s.trim().isEmpty()) {
B_VOLHRS = Short.parseShort(s);
} else {
B_VOLHRS = Short.MIN_VALUE;
}
}

protected final void initB_VOLUN(String s) {
if (!s.trim().isEmpty()) {
B_VOLUN = Byte.parseByte(s);
} else {
B_VOLUN = Byte.MIN_VALUE;
}
}

protected final void initB_VOTE1(String s) {
if (!s.trim().isEmpty()) {
B_VOTE1 = Byte.parseByte(s);
} else {
B_VOTE1 = Byte.MIN_VALUE;
}
}

protected final void initB_VOTE2(String s) {
if (!s.trim().isEmpty()) {
B_VOTE2 = Byte.parseByte(s);
} else {
B_VOTE2 = Byte.MIN_VALUE;
}
}

protected final void initB_VOTE3(String s) {
if (!s.trim().isEmpty()) {
B_VOTE3 = Byte.parseByte(s);
} else {
B_VOTE3 = Byte.MIN_VALUE;
}
}

protected final void initB_VOTE4(String s) {
if (!s.trim().isEmpty()) {
B_VOTE4 = Byte.parseByte(s);
} else {
B_VOTE4 = Byte.MIN_VALUE;
}
}

protected final void initB_VOTE5(String s) {
if (!s.trim().isEmpty()) {
B_VOTE5 = Byte.parseByte(s);
} else {
B_VOTE5 = Byte.MIN_VALUE;
}
}

protected final void initB_VOTE6(String s) {
if (!s.trim().isEmpty()) {
B_VOTE6 = Byte.parseByte(s);
} else {
B_VOTE6 = Byte.MIN_VALUE;
}
}

protected final void initB_VOTE7(String s) {
if (!s.trim().isEmpty()) {
B_VOTE7 = Byte.parseByte(s);
} else {
B_VOTE7 = Byte.MIN_VALUE;
}
}

protected final void initB_VOTE8(String s) {
if (!s.trim().isEmpty()) {
B_VOTE8 = Byte.parseByte(s);
} else {
B_VOTE8 = Byte.MIN_VALUE;
}
}

protected final void initB_VOTEINTENT(String s) {
if (!s.trim().isEmpty()) {
B_VOTEINTENT = Byte.parseByte(s);
} else {
B_VOTEINTENT = Byte.MIN_VALUE;
}
}

protected final void initB_VOTENORM(String s) {
if (!s.trim().isEmpty()) {
B_VOTENORM = Byte.parseByte(s);
} else {
B_VOTENORM = Byte.MIN_VALUE;
}
}

protected final void initB_VOUCHER(String s) {
if (!s.trim().isEmpty()) {
B_VOUCHER = Byte.parseByte(s);
} else {
B_VOUCHER = Byte.MIN_VALUE;
}
}

protected final void initB_WALKPACE(String s) {
if (!s.trim().isEmpty()) {
B_WALKPACE = Byte.parseByte(s);
} else {
B_WALKPACE = Byte.MIN_VALUE;
}
}

protected final void initB_WKAUT1(String s) {
if (!s.trim().isEmpty()) {
B_WKAUT1 = Byte.parseByte(s);
} else {
B_WKAUT1 = Byte.MIN_VALUE;
}
}

protected final void initB_WKAUT2(String s) {
if (!s.trim().isEmpty()) {
B_WKAUT2 = Byte.parseByte(s);
} else {
B_WKAUT2 = Byte.MIN_VALUE;
}
}

protected final void initB_WKAUT3(String s) {
if (!s.trim().isEmpty()) {
B_WKAUT3 = Byte.parseByte(s);
} else {
B_WKAUT3 = Byte.MIN_VALUE;
}
}

protected final void initB_WKAUT4(String s) {
if (!s.trim().isEmpty()) {
B_WKAUT4 = Byte.parseByte(s);
} else {
B_WKAUT4 = Byte.MIN_VALUE;
}
}

protected final void initB_WKAUT5(String s) {
if (!s.trim().isEmpty()) {
B_WKAUT5 = Byte.parseByte(s);
} else {
B_WKAUT5 = Byte.MIN_VALUE;
}
}

protected final void initB_WKENDS(String s) {
if (!s.trim().isEmpty()) {
B_WKENDS = Byte.parseByte(s);
} else {
B_WKENDS = Byte.MIN_VALUE;
}
}

protected final void initB_WKFRUIT(String s) {
if (!s.trim().isEmpty()) {
B_WKFRUIT = Byte.parseByte(s);
} else {
B_WKFRUIT = Byte.MIN_VALUE;
}
}

protected final void initB_WKHOME(String s) {
if (!s.trim().isEmpty()) {
B_WKHOME = Byte.parseByte(s);
} else {
B_WKHOME = Byte.MIN_VALUE;
}
}

protected final void initB_WKPHYS(String s) {
if (!s.trim().isEmpty()) {
B_WKPHYS = Byte.parseByte(s);
} else {
B_WKPHYS = Byte.MIN_VALUE;
}
}

protected final void initB_WKPLSAM(String s) {
if (!s.trim().isEmpty()) {
B_WKPLSAM = Byte.parseByte(s);
} else {
B_WKPLSAM = Byte.MIN_VALUE;
}
}

protected final void initB_WKTIME(String s) {
if (!s.trim().isEmpty()) {
B_WKTIME = Byte.parseByte(s);
} else {
B_WKTIME = Byte.MIN_VALUE;
}
}

protected final void initB_WKVEGE(String s) {
if (!s.trim().isEmpty()) {
B_WKVEGE = Byte.parseByte(s);
} else {
B_WKVEGE = Byte.MIN_VALUE;
}
}

protected final void initB_WLK10M(String s) {
if (!s.trim().isEmpty()) {
B_WLK10M = Byte.parseByte(s);
} else {
B_WLK10M = Byte.MIN_VALUE;
}
}

protected final void initB_WLK30MIN(String s) {
if (!s.trim().isEmpty()) {
B_WLK30MIN = Byte.parseByte(s);
} else {
B_WLK30MIN = Byte.MIN_VALUE;
}
}

protected final void initB_WORKDIS(String s) {
if (!s.trim().isEmpty()) {
B_WORKDIS = Short.parseShort(s);
} else {
B_WORKDIS = Short.MIN_VALUE;
}
}

protected final void initB_WORKTRAV(String s) {
if (!s.trim().isEmpty()) {
B_WORKTRAV = Byte.parseByte(s);
} else {
B_WORKTRAV = Byte.MIN_VALUE;
}
}

protected final void initB_XPMOVE(String s) {
if (!s.trim().isEmpty()) {
B_XPMOVE = Byte.parseByte(s);
} else {
B_XPMOVE = Byte.MIN_VALUE;
}
}

protected final void initB_XTRA5MINOSM_DV(String s) {
if (!s.trim().isEmpty()) {
B_XTRA5MINOSM_DV = Byte.parseByte(s);
} else {
B_XTRA5MINOSM_DV = Byte.MIN_VALUE;
}
}

protected final void initB_XTRA5MIN_DV(String s) {
if (!s.trim().isEmpty()) {
B_XTRA5MIN_DV = Byte.parseByte(s);
} else {
B_XTRA5MIN_DV = Byte.MIN_VALUE;
}
}

protected final void initB_YR2UK4(String s) {
if (!s.trim().isEmpty()) {
B_YR2UK4 = Short.parseShort(s);
} else {
B_YR2UK4 = Short.MIN_VALUE;
}
}

protected final void initPID(String s) {
if (!s.trim().isEmpty()) {
PID = Integer.parseInt(s);
} else {
PID = Integer.MIN_VALUE;
}
}

public byte getB_ACC1TO161() {
return B_ACC1TO161;
}

public byte getB_ACC1TO1610() {
return B_ACC1TO1610;
}

public byte getB_ACC1TO1611() {
return B_ACC1TO1611;
}

public byte getB_ACC1TO1612() {
return B_ACC1TO1612;
}

public byte getB_ACC1TO1613() {
return B_ACC1TO1613;
}

public byte getB_ACC1TO1614() {
return B_ACC1TO1614;
}

public byte getB_ACC1TO162() {
return B_ACC1TO162;
}

public byte getB_ACC1TO163() {
return B_ACC1TO163;
}

public byte getB_ACC1TO164() {
return B_ACC1TO164;
}

public byte getB_ACC1TO165() {
return B_ACC1TO165;
}

public byte getB_ACC1TO166() {
return B_ACC1TO166;
}

public byte getB_ACC1TO167() {
return B_ACC1TO167;
}

public byte getB_ACC1TO168() {
return B_ACC1TO168;
}

public byte getB_ACC1TO169() {
return B_ACC1TO169;
}

public byte getB_ACC1TO1697() {
return B_ACC1TO1697;
}

public byte getB_ACCESS() {
return B_ACCESS;
}

public byte getB_ADOPTCH01() {
return B_ADOPTCH01;
}

public byte getB_ADOPTCH02() {
return B_ADOPTCH02;
}

public byte getB_ADOPTCH03() {
return B_ADOPTCH03;
}

public byte getB_ADOPTCH04() {
return B_ADOPTCH04;
}

public byte getB_ADOPTCH05() {
return B_ADOPTCH05;
}

public boolean getB_ADOPTCH06() {
return B_ADOPTCH06;
}

public boolean getB_ADOPTCH07() {
return B_ADOPTCH07;
}

public boolean getB_ADOPTCH08() {
return B_ADOPTCH08;
}

public boolean getB_ADOPTCH09() {
return B_ADOPTCH09;
}

public boolean getB_ADOPTCH10() {
return B_ADOPTCH10;
}

public boolean getB_ADOPTCH11() {
return B_ADOPTCH11;
}

public boolean getB_ADOPTCH12() {
return B_ADOPTCH12;
}

public boolean getB_ADOPTCH13() {
return B_ADOPTCH13;
}

public boolean getB_ADOPTCH14() {
return B_ADOPTCH14;
}

public boolean getB_ADOPTCH15() {
return B_ADOPTCH15;
}

public boolean getB_ADOPTCH16() {
return B_ADOPTCH16;
}

public byte getB_ADRESP17() {
return B_ADRESP17;
}

public byte getB_ADSTATUS() {
return B_ADSTATUS;
}

public byte getB_ADVVOUCHER() {
return B_ADVVOUCHER;
}

public byte getB_AGEGR10_DV() {
return B_AGEGR10_DV;
}

public byte getB_AGEGR13_DV() {
return B_AGEGR13_DV;
}

public byte getB_AGEGR5_DV() {
return B_AGEGR5_DV;
}

public byte getB_AGERET() {
return B_AGERET;
}

public byte getB_AGE_DV() {
return B_AGE_DV;
}

public byte getB_AGLQUIT() {
return B_AGLQUIT;
}

public byte getB_AIDEFT() {
return B_AIDEFT;
}

public byte getB_AIDHH() {
return B_AIDHH;
}

public byte getB_AIDHRS() {
return B_AIDHRS;
}

public byte getB_AIDHU1() {
return B_AIDHU1;
}

public byte getB_AIDHU2() {
return B_AIDHU2;
}

public byte getB_AIDHUA1() {
return B_AIDHUA1;
}

public byte getB_AIDHUA10() {
return B_AIDHUA10;
}

public byte getB_AIDHUA11() {
return B_AIDHUA11;
}

public byte getB_AIDHUA12() {
return B_AIDHUA12;
}

public byte getB_AIDHUA13() {
return B_AIDHUA13;
}

public byte getB_AIDHUA14() {
return B_AIDHUA14;
}

public byte getB_AIDHUA15() {
return B_AIDHUA15;
}

public byte getB_AIDHUA16() {
return B_AIDHUA16;
}

public byte getB_AIDHUA2() {
return B_AIDHUA2;
}

public byte getB_AIDHUA3() {
return B_AIDHUA3;
}

public byte getB_AIDHUA4() {
return B_AIDHUA4;
}

public byte getB_AIDHUA5() {
return B_AIDHUA5;
}

public byte getB_AIDHUA6() {
return B_AIDHUA6;
}

public byte getB_AIDHUA7() {
return B_AIDHUA7;
}

public byte getB_AIDHUA8() {
return B_AIDHUA8;
}

public byte getB_AIDHUA9() {
return B_AIDHUA9;
}

public byte getB_AIDXHH() {
return B_AIDXHH;
}

public byte getB_ALLCH01() {
return B_ALLCH01;
}

public byte getB_ALLCH02() {
return B_ALLCH02;
}

public byte getB_ALLCH03() {
return B_ALLCH03;
}

public byte getB_ALLCH04() {
return B_ALLCH04;
}

public byte getB_ALLCH05() {
return B_ALLCH05;
}

public byte getB_ALLCH06() {
return B_ALLCH06;
}

public byte getB_ALLCH07() {
return B_ALLCH07;
}

public byte getB_ALLCH08() {
return B_ALLCH08;
}

public byte getB_ALLCH09() {
return B_ALLCH09;
}

public boolean getB_ALLCH10() {
return B_ALLCH10;
}

public boolean getB_ALLCH11() {
return B_ALLCH11;
}

public boolean getB_ALLCH12() {
return B_ALLCH12;
}

public boolean getB_ALLCH13() {
return B_ALLCH13;
}

public boolean getB_ALLCH14() {
return B_ALLCH14;
}

public boolean getB_ALLCH15() {
return B_ALLCH15;
}

public boolean getB_ALLCH16() {
return B_ALLCH16;
}

public byte getB_ALTCAR1() {
return B_ALTCAR1;
}

public byte getB_ALTCAR10() {
return B_ALTCAR10;
}

public byte getB_ALTCAR11() {
return B_ALTCAR11;
}

public byte getB_ALTCAR12() {
return B_ALTCAR12;
}

public byte getB_ALTCAR2() {
return B_ALTCAR2;
}

public byte getB_ALTCAR3() {
return B_ALTCAR3;
}

public byte getB_ALTCAR4() {
return B_ALTCAR4;
}

public byte getB_ALTCAR5() {
return B_ALTCAR5;
}

public byte getB_ALTCAR6() {
return B_ALTCAR6;
}

public byte getB_ALTCAR7() {
return B_ALTCAR7;
}

public byte getB_ALTCAR8() {
return B_ALTCAR8;
}

public byte getB_ALTCAR9() {
return B_ALTCAR9;
}

public byte getB_ALTCAR96() {
return B_ALTCAR96;
}

public byte getB_ALTCAR97() {
return B_ALTCAR97;
}

public byte getB_ARCFREQ() {
return B_ARCFREQ;
}

public byte getB_AREA() {
return B_AREA;
}

public byte getB_ARTS1A1() {
return B_ARTS1A1;
}

public byte getB_ARTS1A2() {
return B_ARTS1A2;
}

public byte getB_ARTS1A3() {
return B_ARTS1A3;
}

public byte getB_ARTS1A4() {
return B_ARTS1A4;
}

public byte getB_ARTS1A5() {
return B_ARTS1A5;
}

public byte getB_ARTS1A6() {
return B_ARTS1A6;
}

public byte getB_ARTS1A7() {
return B_ARTS1A7;
}

public byte getB_ARTS1A96() {
return B_ARTS1A96;
}

public byte getB_ARTS1B10() {
return B_ARTS1B10;
}

public byte getB_ARTS1B11() {
return B_ARTS1B11;
}

public byte getB_ARTS1B12() {
return B_ARTS1B12;
}

public byte getB_ARTS1B13() {
return B_ARTS1B13;
}

public byte getB_ARTS1B14() {
return B_ARTS1B14;
}

public byte getB_ARTS1B15() {
return B_ARTS1B15;
}

public byte getB_ARTS1B9() {
return B_ARTS1B9;
}

public byte getB_ARTS1B96() {
return B_ARTS1B96;
}

public byte getB_ARTS1FREQ() {
return B_ARTS1FREQ;
}

public byte getB_ARTS2A1() {
return B_ARTS2A1;
}

public byte getB_ARTS2A2() {
return B_ARTS2A2;
}

public byte getB_ARTS2A3() {
return B_ARTS2A3;
}

public byte getB_ARTS2A4() {
return B_ARTS2A4;
}

public byte getB_ARTS2A5() {
return B_ARTS2A5;
}

public byte getB_ARTS2A6() {
return B_ARTS2A6;
}

public byte getB_ARTS2A7() {
return B_ARTS2A7;
}

public byte getB_ARTS2A96() {
return B_ARTS2A96;
}

public byte getB_ARTS2B10() {
return B_ARTS2B10;
}

public byte getB_ARTS2B11() {
return B_ARTS2B11;
}

public byte getB_ARTS2B12() {
return B_ARTS2B12;
}

public byte getB_ARTS2B13() {
return B_ARTS2B13;
}

public byte getB_ARTS2B14() {
return B_ARTS2B14;
}

public byte getB_ARTS2B15() {
return B_ARTS2B15;
}

public byte getB_ARTS2B9() {
return B_ARTS2B9;
}

public byte getB_ARTS2B96() {
return B_ARTS2B96;
}

public byte getB_ARTS2FREQ() {
return B_ARTS2FREQ;
}

public byte getB_BASNSA() {
return B_BASNSA;
}

protected double B_BASRATE() {
return B_BASRATE;
}

public byte getB_BASREST() {
return B_BASREST;
}

public byte getB_BENCB() {
return B_BENCB;
}

public byte getB_BENCTC() {
return B_BENCTC;
}

public byte getB_BENDIS1() {
return B_BENDIS1;
}

public byte getB_BENDIS10() {
return B_BENDIS10;
}

public byte getB_BENDIS11() {
return B_BENDIS11;
}

public byte getB_BENDIS2() {
return B_BENDIS2;
}

public byte getB_BENDIS3() {
return B_BENDIS3;
}

public byte getB_BENDIS4() {
return B_BENDIS4;
}

public byte getB_BENDIS5() {
return B_BENDIS5;
}

public byte getB_BENDIS6() {
return B_BENDIS6;
}

public byte getB_BENDIS7() {
return B_BENDIS7;
}

public byte getB_BENDIS8() {
return B_BENDIS8;
}

public byte getB_BENDIS9() {
return B_BENDIS9;
}

public byte getB_BENDIS96() {
return B_BENDIS96;
}

public byte getB_BENFAM1() {
return B_BENFAM1;
}

public byte getB_BENFAM2() {
return B_BENFAM2;
}

public byte getB_BENFAM3() {
return B_BENFAM3;
}

public byte getB_BENFAM4() {
return B_BENFAM4;
}

public byte getB_BENFAM5() {
return B_BENFAM5;
}

public byte getB_BENFAM96() {
return B_BENFAM96;
}

public byte getB_BENHOU1() {
return B_BENHOU1;
}

public byte getB_BENHOU2() {
return B_BENHOU2;
}

public byte getB_BENHOU3() {
return B_BENHOU3;
}

public byte getB_BENHOU4() {
return B_BENHOU4;
}

public byte getB_BENHOU96() {
return B_BENHOU96;
}

public byte getB_BENPEN1() {
return B_BENPEN1;
}

public byte getB_BENPEN2() {
return B_BENPEN2;
}

public byte getB_BENPEN3() {
return B_BENPEN3;
}

public byte getB_BENPEN4() {
return B_BENPEN4;
}

public byte getB_BENPEN5() {
return B_BENPEN5;
}

public byte getB_BENPEN6() {
return B_BENPEN6;
}

public byte getB_BENPEN7() {
return B_BENPEN7;
}

public byte getB_BENPEN8() {
return B_BENPEN8;
}

public byte getB_BENPEN96() {
return B_BENPEN96;
}

public byte getB_BENSTA1() {
return B_BENSTA1;
}

public byte getB_BENSTA2() {
return B_BENSTA2;
}

public byte getB_BENSTA3() {
return B_BENSTA3;
}

public byte getB_BENSTA4() {
return B_BENSTA4;
}

public byte getB_BENSTA5() {
return B_BENSTA5;
}

public byte getB_BENSTA6() {
return B_BENSTA6;
}

public byte getB_BENSTA7() {
return B_BENSTA7;
}

public byte getB_BENSTA8() {
return B_BENSTA8;
}

public byte getB_BENSTA96() {
return B_BENSTA96;
}

public byte getB_BENTAX1() {
return B_BENTAX1;
}

public byte getB_BENTAX2() {
return B_BENTAX2;
}

public byte getB_BENTAX3() {
return B_BENTAX3;
}

public byte getB_BENTAX4() {
return B_BENTAX4;
}

public byte getB_BENTAX5() {
return B_BENTAX5;
}

public byte getB_BENTAX96() {
return B_BENTAX96;
}

public byte getB_BENUNEMP1() {
return B_BENUNEMP1;
}

public byte getB_BENUNEMP2() {
return B_BENUNEMP2;
}

public byte getB_BENUNEMP96() {
return B_BENUNEMP96;
}

public short getB_BIRTHY() {
return B_BIRTHY;
}

public byte getB_BTYPE1() {
return B_BTYPE1;
}

public byte getB_BTYPE2() {
return B_BTYPE2;
}

public byte getB_BTYPE3() {
return B_BTYPE3;
}

public byte getB_BTYPE4() {
return B_BTYPE4;
}

public byte getB_BTYPE5() {
return B_BTYPE5;
}

public byte getB_BTYPE6() {
return B_BTYPE6;
}

public byte getB_BTYPE7() {
return B_BTYPE7;
}

public byte getB_BTYPE8() {
return B_BTYPE8;
}

public byte getB_BTYPE9() {
return B_BTYPE9;
}

public byte getB_BTYPE96() {
return B_BTYPE96;
}

public byte getB_BUNO_DV() {
return B_BUNO_DV;
}

public byte getB_CARCLUB() {
return B_CARCLUB;
}

public byte getB_CARSHARE() {
return B_CARSHARE;
}

public byte getB_CARUSE() {
return B_CARUSE;
}

public byte getB_CCARE() {
return B_CCARE;
}

public byte getB_CCWORK() {
return B_CCWORK;
}

public short getB_CH1BY4() {
return B_CH1BY4;
}

public short getB_CHARAM() {
return B_CHARAM;
}

public byte getB_CHARFREQ() {
return B_CHARFREQ;
}

public byte getB_CHARGV() {
return B_CHARGV;
}

public byte getB_CHKCOA() {
return B_CHKCOA;
}

public byte getB_CHKDOB() {
return B_CHKDOB;
}

public byte getB_CHKSEX() {
return B_CHKSEX;
}

public int getB_CINDTIME() {
return B_CINDTIME;
}

public byte getB_CITZN1() {
return B_CITZN1;
}

public byte getB_CITZN2() {
return B_CITZN2;
}

public byte getB_CITZN3() {
return B_CITZN3;
}

public byte getB_CIVICDUTY() {
return B_CIVICDUTY;
}

public byte getB_CJBATT() {
return B_CJBATT;
}

public byte getB_CJOB() {
return B_CJOB;
}

public byte getB_CLUB() {
return B_CLUB;
}

public byte getB_CMLSTAT1() {
return B_CMLSTAT1;
}

public byte getB_CMLSTAT2() {
return B_CMLSTAT2;
}

public byte getB_CMLSTAT3() {
return B_CMLSTAT3;
}

public byte getB_COH1BM() {
return B_COH1BM;
}

public short getB_COH1BY() {
return B_COH1BY;
}

public byte getB_COH1EM() {
return B_COH1EM;
}

public short getB_COH1EY() {
return B_COH1EY;
}

public byte getB_COH1MR() {
return B_COH1MR;
}

public byte getB_COHAB() {
return B_COHAB;
}

public byte getB_COHABN() {
return B_COHABN;
}

public boolean getB_COHAB_DV() {
return B_COHAB_DV;
}

public byte getB_COLBENS1() {
return B_COLBENS1;
}

public byte getB_COLBENS2() {
return B_COLBENS2;
}

public byte getB_COLBENS3() {
return B_COLBENS3;
}

public byte getB_COMBIKE() {
return B_COMBIKE;
}

public byte getB_COMBUS() {
return B_COMBUS;
}

public byte getB_COMMETRO() {
return B_COMMETRO;
}

public byte getB_COMOTHER() {
return B_COMOTHER;
}

public byte getB_COMTAXI() {
return B_COMTAXI;
}

public byte getB_COMTRAIN() {
return B_COMTRAIN;
}

public byte getB_COMWALK() {
return B_COMWALK;
}

public byte getB_CONTFT() {
return B_CONTFT;
}

public byte getB_COUNTRY() {
return B_COUNTRY;
}

public byte getB_CSTAT() {
return B_CSTAT;
}

public byte getB_CTADD1_CODE() {
return B_CTADD1_CODE;
}

public byte getB_CTADD2_CODE() {
return B_CTADD2_CODE;
}

public byte getB_CTCNTY_CODE() {
return B_CTCNTY_CODE;
}

public byte getB_CTEMAIL_CODE() {
return B_CTEMAIL_CODE;
}

public byte getB_CTPCODE_CODE() {
return B_CTPCODE_CODE;
}

public byte getB_CTTEL1_CODE() {
return B_CTTEL1_CODE;
}

public byte getB_CTTEL2_CODE() {
return B_CTTEL2_CODE;
}

public byte getB_CTTOWN_CODE() {
return B_CTTOWN_CODE;
}

public byte getB_CURRJOB1() {
return B_CURRJOB1;
}

public boolean getB_CURRJOB10() {
return B_CURRJOB10;
}

public byte getB_CURRJOB2() {
return B_CURRJOB2;
}

public byte getB_CURRJOB3() {
return B_CURRJOB3;
}

public byte getB_CURRJOB4() {
return B_CURRJOB4;
}

public byte getB_CURRJOB5() {
return B_CURRJOB5;
}

public byte getB_CURRJOB6() {
return B_CURRJOB6;
}

public byte getB_CURRJOB7() {
return B_CURRJOB7;
}

public byte getB_CURRJOB8() {
return B_CURRJOB8;
}

public byte getB_CURRJOB9() {
return B_CURRJOB9;
}

public byte getB_CURRPART1() {
return B_CURRPART1;
}

public byte getB_CURRPART2() {
return B_CURRPART2;
}

public boolean getB_CURRPART3() {
return B_CURRPART3;
}

public byte getB_CURRPART4() {
return B_CURRPART4;
}

public byte getB_CURRSTAT1() {
return B_CURRSTAT1;
}

public byte getB_CURRSTAT10() {
return B_CURRSTAT10;
}

public byte getB_CURRSTAT2() {
return B_CURRSTAT2;
}

public byte getB_CURRSTAT3() {
return B_CURRSTAT3;
}

public byte getB_CURRSTAT4() {
return B_CURRSTAT4;
}

public byte getB_CURRSTAT5() {
return B_CURRSTAT5;
}

public byte getB_CURRSTAT6() {
return B_CURRSTAT6;
}

public byte getB_CURRSTAT7() {
return B_CURRSTAT7;
}

public byte getB_CURRSTAT8() {
return B_CURRSTAT8;
}

public boolean getB_CURRSTAT9() {
return B_CURRSTAT9;
}

public byte getB_DAYWLK() {
return B_DAYWLK;
}

public byte getB_DEMORIENT() {
return B_DEMORIENT;
}

public boolean getB_DEPCHL_DV() {
return B_DEPCHL_DV;
}

public byte getB_DEPENTH1() {
return B_DEPENTH1;
}

public byte getB_DEPENTH2() {
return B_DEPENTH2;
}

public byte getB_DEPENTH3() {
return B_DEPENTH3;
}

public byte getB_DEPENTH4() {
return B_DEPENTH4;
}

public byte getB_DEPENTH5() {
return B_DEPENTH5;
}

public byte getB_DEPENTH6() {
return B_DEPENTH6;
}

public byte getB_DISDIF1() {
return B_DISDIF1;
}

public byte getB_DISDIF10() {
return B_DISDIF10;
}

public byte getB_DISDIF11() {
return B_DISDIF11;
}

public byte getB_DISDIF12() {
return B_DISDIF12;
}

public byte getB_DISDIF2() {
return B_DISDIF2;
}

public byte getB_DISDIF3() {
return B_DISDIF3;
}

public byte getB_DISDIF4() {
return B_DISDIF4;
}

public byte getB_DISDIF5() {
return B_DISDIF5;
}

public byte getB_DISDIF6() {
return B_DISDIF6;
}

public byte getB_DISDIF7() {
return B_DISDIF7;
}

public byte getB_DISDIF8() {
return B_DISDIF8;
}

public byte getB_DISDIF9() {
return B_DISDIF9;
}

public byte getB_DISDIF96() {
return B_DISDIF96;
}

public byte getB_DIVCHK1() {
return B_DIVCHK1;
}

public byte getB_DIVCHK2() {
return B_DIVCHK2;
}

public boolean getB_DIVCHK3() {
return B_DIVCHK3;
}

public byte getB_DIVFIN1() {
return B_DIVFIN1;
}

public boolean getB_DIVFIN2() {
return B_DIVFIN2;
}

public boolean getB_DIVFIN3() {
return B_DIVFIN3;
}

public short getB_DOBY_DV() {
return B_DOBY_DV;
}

public byte getB_DRIVE() {
return B_DRIVE;
}

public byte getB_DVAGE() {
return B_DVAGE;
}

public byte getB_DVM1() {
return B_DVM1;
}

public boolean getB_DVM2() {
return B_DVM2;
}

public boolean getB_DVM3() {
return B_DVM3;
}

public short getB_DVY41() {
return B_DVY41;
}

public boolean getB_DVY42() {
return B_DVY42;
}

public boolean getB_DVY43() {
return B_DVY43;
}

public byte getB_EDASP() {
return B_EDASP;
}

public byte getB_EDTYPE() {
return B_EDTYPE;
}

public byte getB_EDUCATION() {
return B_EDUCATION;
}

public byte getB_EMPCHK() {
return B_EMPCHK;
}

public byte getB_EMPLOY() {
return B_EMPLOY;
}

public byte getB_EMPSTENDD() {
return B_EMPSTENDD;
}

public byte getB_EMPSTENDM() {
return B_EMPSTENDM;
}

public short getB_EMPSTENDY4() {
return B_EMPSTENDY4;
}

public byte getB_ENDMNTH1() {
return B_ENDMNTH1;
}

public byte getB_ENDMNTH2() {
return B_ENDMNTH2;
}

public byte getB_ENDMNTH3() {
return B_ENDMNTH3;
}

public byte getB_ENDMNTH4() {
return B_ENDMNTH4;
}

public boolean getB_ENDMNTH5() {
return B_ENDMNTH5;
}

public byte getB_EPROSH() {
return B_EPROSH;
}

public byte getB_ETHCLOSE1() {
return B_ETHCLOSE1;
}

public byte getB_ETHCLOSE10() {
return B_ETHCLOSE10;
}

public byte getB_ETHCLOSE11() {
return B_ETHCLOSE11;
}

public byte getB_ETHCLOSE2A() {
return B_ETHCLOSE2A;
}

public byte getB_ETHCLOSE2B() {
return B_ETHCLOSE2B;
}

public byte getB_ETHCLOSE3() {
return B_ETHCLOSE3;
}

public byte getB_ETHCLOSE4A() {
return B_ETHCLOSE4A;
}

public byte getB_ETHCLOSE4B() {
return B_ETHCLOSE4B;
}

public byte getB_ETHCLOSE5() {
return B_ETHCLOSE5;
}

public byte getB_ETHCLOSE6() {
return B_ETHCLOSE6;
}

public byte getB_ETHCLOSE7() {
return B_ETHCLOSE7;
}

public byte getB_ETHCLOSE8() {
return B_ETHCLOSE8;
}

public byte getB_ETHCLOSE9() {
return B_ETHCLOSE9;
}

public byte getB_ETHID10() {
return B_ETHID10;
}

public byte getB_ETHID11() {
return B_ETHID11;
}

public byte getB_ETHID12() {
return B_ETHID12;
}

public byte getB_ETHID13() {
return B_ETHID13;
}

public byte getB_ETHID14() {
return B_ETHID14;
}

public byte getB_ETHID2() {
return B_ETHID2;
}

public byte getB_ETHID3() {
return B_ETHID3;
}

public byte getB_ETHID4A() {
return B_ETHID4A;
}

public byte getB_ETHID4B() {
return B_ETHID4B;
}

public byte getB_ETHID5() {
return B_ETHID5;
}

public byte getB_ETHID6() {
return B_ETHID6;
}

public byte getB_ETHID7() {
return B_ETHID7;
}

public byte getB_ETHID8() {
return B_ETHID8;
}

public byte getB_ETHID9() {
return B_ETHID9;
}

public byte getB_ETHN_DV() {
return B_ETHN_DV;
}

public byte getB_EVENT1() {
return B_EVENT1;
}

public byte getB_EVENT1S() {
return B_EVENT1S;
}

public byte getB_EVENT2() {
return B_EVENT2;
}

public byte getB_EVENT2S() {
return B_EVENT2S;
}

public byte getB_EVENT3() {
return B_EVENT3;
}

public byte getB_EVENT3S() {
return B_EVENT3S;
}

public byte getB_EVENT4() {
return B_EVENT4;
}

public byte getB_EVENT4S() {
return B_EVENT4S;
}

public byte getB_EXTNSA() {
return B_EXTNSA;
}

protected double B_EXTRATE() {
return B_EXTRATE;
}

public byte getB_EXTREST() {
return B_EXTREST;
}

public byte getB_FAMILY() {
return B_FAMILY;
}

public byte getB_FATHER() {
return B_FATHER;
}

public byte getB_FEDLIK() {
return B_FEDLIK;
}

public byte getB_FEDNT() {
return B_FEDNT;
}

public byte getB_FEEND() {
return B_FEEND;
}

public byte getB_FENOW() {
return B_FENOW;
}

public byte getB_FF_BENTYPE01() {
return B_FF_BENTYPE01;
}

public byte getB_FF_BENTYPE02() {
return B_FF_BENTYPE02;
}

public byte getB_FF_BENTYPE03() {
return B_FF_BENTYPE03;
}

public byte getB_FF_BENTYPE04() {
return B_FF_BENTYPE04;
}

public byte getB_FF_BENTYPE05() {
return B_FF_BENTYPE05;
}

public byte getB_FF_BENTYPE06() {
return B_FF_BENTYPE06;
}

public byte getB_FF_BENTYPE07() {
return B_FF_BENTYPE07;
}

public byte getB_FF_BENTYPE08() {
return B_FF_BENTYPE08;
}

public byte getB_FF_BENTYPE09() {
return B_FF_BENTYPE09;
}

public byte getB_FF_BENTYPE10() {
return B_FF_BENTYPE10;
}

public byte getB_FF_BENTYPE11() {
return B_FF_BENTYPE11;
}

public byte getB_FF_BENTYPE12() {
return B_FF_BENTYPE12;
}

public byte getB_FF_BENTYPE13() {
return B_FF_BENTYPE13;
}

public byte getB_FF_BENTYPE14() {
return B_FF_BENTYPE14;
}

public byte getB_FF_BENTYPE15() {
return B_FF_BENTYPE15;
}

public byte getB_FF_BENTYPE16() {
return B_FF_BENTYPE16;
}

public byte getB_FF_BENTYPE17() {
return B_FF_BENTYPE17;
}

public byte getB_FF_BENTYPE18() {
return B_FF_BENTYPE18;
}

public byte getB_FF_BENTYPE19() {
return B_FF_BENTYPE19;
}

public byte getB_FF_BENTYPE20() {
return B_FF_BENTYPE20;
}

public byte getB_FF_BENTYPE21() {
return B_FF_BENTYPE21;
}

public byte getB_FF_BENTYPE22() {
return B_FF_BENTYPE22;
}

public byte getB_FF_BENTYPE23() {
return B_FF_BENTYPE23;
}

public byte getB_FF_BENTYPE24() {
return B_FF_BENTYPE24;
}

public byte getB_FF_BENTYPE25() {
return B_FF_BENTYPE25;
}

public byte getB_FF_BENTYPE26() {
return B_FF_BENTYPE26;
}

public byte getB_FF_BENTYPE27() {
return B_FF_BENTYPE27;
}

public byte getB_FF_BENTYPE28() {
return B_FF_BENTYPE28;
}

public byte getB_FF_BENTYPE29() {
return B_FF_BENTYPE29;
}

public byte getB_FF_BENTYPE30() {
return B_FF_BENTYPE30;
}

public byte getB_FF_BENTYPE31() {
return B_FF_BENTYPE31;
}

public byte getB_FF_BENTYPE32() {
return B_FF_BENTYPE32;
}

public byte getB_FF_BENTYPE33() {
return B_FF_BENTYPE33;
}

public byte getB_FF_BENTYPE34() {
return B_FF_BENTYPE34;
}

public byte getB_FF_BENTYPE35() {
return B_FF_BENTYPE35;
}

public byte getB_FF_BENTYPE36() {
return B_FF_BENTYPE36;
}

public boolean getB_FF_BENTYPE37() {
return B_FF_BENTYPE37;
}

public byte getB_FF_BENTYPE38() {
return B_FF_BENTYPE38;
}

public byte getB_FF_EMPLW() {
return B_FF_EMPLW;
}

public byte getB_FF_EVERINT() {
return B_FF_EVERINT;
}

public byte getB_FF_IVLOLW() {
return B_FF_IVLOLW;
}

public byte getB_FF_JBMNGR() {
return B_FF_JBMNGR;
}

public byte getB_FF_JBSEMP() {
return B_FF_JBSEMP;
}

public byte getB_FF_JBSIZE() {
return B_FF_JBSIZE;
}

public byte getB_FF_JBSTAT() {
return B_FF_JBSTAT;
}

public byte getB_FF_OPRLG() {
return B_FF_OPRLG;
}

public byte getB_FF_OPRLG0() {
return B_FF_OPRLG0;
}

public byte getB_FF_OPRLG0NI() {
return B_FF_OPRLG0NI;
}

public byte getB_FF_TEL() {
return B_FF_TEL;
}

public byte getB_FF_UKBORN() {
return B_FF_UKBORN;
}

public short getB_FF_YR2UK4() {
return B_FF_YR2UK4;
}

protected double B_FIBENOTHR_DV() {
return B_FIBENOTHR_DV;
}

protected double B_FIBENOTHR_IF() {
return B_FIBENOTHR_IF;
}

public boolean getB_FIBENOTHR_TC() {
return B_FIBENOTHR_TC;
}

protected double B_FIMNGRS_DV() {
return B_FIMNGRS_DV;
}

protected double B_FIMNGRS_IF() {
return B_FIMNGRS_IF;
}

public boolean getB_FIMNGRS_TC() {
return B_FIMNGRS_TC;
}

protected double B_FIMNINVNET_DV() {
return B_FIMNINVNET_DV;
}

protected double B_FIMNLABGRS_DV() {
return B_FIMNLABGRS_DV;
}

protected double B_FIMNLABGRS_IF() {
return B_FIMNLABGRS_IF;
}

public boolean getB_FIMNLABGRS_TC() {
return B_FIMNLABGRS_TC;
}

protected double B_FIMNLABNET_DV() {
return B_FIMNLABNET_DV;
}

public boolean getB_FIMNLABNET_TC() {
return B_FIMNLABNET_TC;
}

protected double B_FIMNMISC_DV() {
return B_FIMNMISC_DV;
}

protected double B_FIMNNET_DV() {
return B_FIMNNET_DV;
}

protected double B_FIMNPEN_DV() {
return B_FIMNPEN_DV;
}

protected double B_FIMNPRBEN_DV() {
return B_FIMNPRBEN_DV;
}

protected double B_FIMNSBEN_DV() {
return B_FIMNSBEN_DV;
}

public byte getB_FINFUT() {
return B_FINFUT;
}

public byte getB_FINNOW() {
return B_FINNOW;
}

public byte getB_FIYRDB1() {
return B_FIYRDB1;
}

public byte getB_FIYRDB2() {
return B_FIYRDB2;
}

public byte getB_FIYRDB3() {
return B_FIYRDB3;
}

public byte getB_FIYRDB4() {
return B_FIYRDB4;
}

public byte getB_FIYRDB5() {
return B_FIYRDB5;
}

public byte getB_FIYRDB6() {
return B_FIYRDB6;
}

public int getB_FIYRDIA() {
return B_FIYRDIA;
}

protected double B_FIYRINVINC_DV() {
return B_FIYRINVINC_DV;
}

public byte getB_FIYRINVINC_IF() {
return B_FIYRINVINC_IF;
}

public boolean getB_FIYRINVINC_TC() {
return B_FIYRINVINC_TC;
}

public int getB_FNPID() {
return B_FNPID;
}

public byte getB_FNPNO() {
return B_FNPNO;
}

public int getB_FNSPID() {
return B_FNSPID;
}

public byte getB_FNSPNO() {
return B_FNSPNO;
}

public byte getB_FOOD1() {
return B_FOOD1;
}

public byte getB_FOOD2() {
return B_FOOD2;
}

public byte getB_FOOD3() {
return B_FOOD3;
}

public byte getB_FOOD4() {
return B_FOOD4;
}

public byte getB_FOOD5() {
return B_FOOD5;
}

public byte getB_FOOD6() {
return B_FOOD6;
}

public byte getB_FOOD7() {
return B_FOOD7;
}

public byte getB_FRUVEGE() {
return B_FRUVEGE;
}

public byte getB_FT2ENDM1() {
return B_FT2ENDM1;
}

public byte getB_FT2ENDM2() {
return B_FT2ENDM2;
}

public short getB_FT2ENDY41() {
return B_FT2ENDY41;
}

public short getB_FT2ENDY42() {
return B_FT2ENDY42;
}

public byte getB_FTEDANY() {
return B_FTEDANY;
}

public byte getB_FTEDEND1() {
return B_FTEDEND1;
}

public byte getB_FTEDEND2() {
return B_FTEDEND2;
}

public byte getB_FTEDMOR1() {
return B_FTEDMOR1;
}

public byte getB_FTEDMOR2() {
return B_FTEDMOR2;
}

public byte getB_FTEDSTARTM1() {
return B_FTEDSTARTM1;
}

public byte getB_FTEDSTARTM2() {
return B_FTEDSTARTM2;
}

public short getB_FTEDSTARTY41() {
return B_FTEDSTARTY41;
}

public short getB_FTEDSTARTY42() {
return B_FTEDSTARTY42;
}

public byte getB_FTENDM() {
return B_FTENDM;
}

public short getB_FTENDY4() {
return B_FTENDY4;
}

public byte getB_FTQUALS() {
return B_FTQUALS;
}

public short getB_FUTRA() {
return B_FUTRA;
}

public short getB_FUTRB() {
return B_FUTRB;
}

public short getB_FUTRC() {
return B_FUTRC;
}

public short getB_FUTRD() {
return B_FUTRD;
}

public short getB_FUTRE() {
return B_FUTRE;
}

public short getB_FUTRF() {
return B_FUTRF;
}

public short getB_FUTRG() {
return B_FUTRG;
}

public short getB_FUTRH() {
return B_FUTRH;
}

public short getB_FUTRI() {
return B_FUTRI;
}

public short getB_FUTRJ() {
return B_FUTRJ;
}

public short getB_FUTRK() {
return B_FUTRK;
}

public short getB_FUTRL() {
return B_FUTRL;
}

public byte getB_GIVECOA() {
return B_GIVECOA;
}

public byte getB_GOR_DV() {
return B_GOR_DV;
}

public int getB_GRFPID() {
return B_GRFPID;
}

public byte getB_GRFPNO() {
return B_GRFPNO;
}

public int getB_GRMPID() {
return B_GRMPID;
}

public byte getB_GRMPNO() {
return B_GRMPNO;
}

public byte getB_GRPBFTS() {
return B_GRPBFTS;
}

public byte getB_HCONDN1() {
return B_HCONDN1;
}

public byte getB_HCONDN10() {
return B_HCONDN10;
}

public byte getB_HCONDN11() {
return B_HCONDN11;
}

public byte getB_HCONDN12() {
return B_HCONDN12;
}

public byte getB_HCONDN13() {
return B_HCONDN13;
}

public byte getB_HCONDN14() {
return B_HCONDN14;
}

public byte getB_HCONDN15() {
return B_HCONDN15;
}

public byte getB_HCONDN16() {
return B_HCONDN16;
}

public byte getB_HCONDN17() {
return B_HCONDN17;
}

public byte getB_HCONDN2() {
return B_HCONDN2;
}

public byte getB_HCONDN3() {
return B_HCONDN3;
}

public byte getB_HCONDN4() {
return B_HCONDN4;
}

public byte getB_HCONDN5() {
return B_HCONDN5;
}

public byte getB_HCONDN6() {
return B_HCONDN6;
}

public byte getB_HCONDN7() {
return B_HCONDN7;
}

public byte getB_HCONDN8() {
return B_HCONDN8;
}

public byte getB_HCONDN9() {
return B_HCONDN9;
}

public byte getB_HCONDN96() {
return B_HCONDN96;
}

public byte getB_HCONDNO1() {
return B_HCONDNO1;
}

public byte getB_HCONDNO2() {
return B_HCONDNO2;
}

public byte getB_HCONDNO3() {
return B_HCONDNO3;
}

public byte getB_HCONDNO4() {
return B_HCONDNO4;
}

public byte getB_HCONDNO5() {
return B_HCONDNO5;
}

public byte getB_HCONDNO6() {
return B_HCONDNO6;
}

public byte getB_HCONDNO7() {
return B_HCONDNO7;
}

public byte getB_HCONDNO8() {
return B_HCONDNO8;
}

public byte getB_HCONDNS1() {
return B_HCONDNS1;
}

public byte getB_HCONDNS2() {
return B_HCONDNS2;
}

public byte getB_HCONDNS3() {
return B_HCONDNS3;
}

public byte getB_HCONDNS4() {
return B_HCONDNS4;
}

public byte getB_HCONDNS5() {
return B_HCONDNS5;
}

public byte getB_HCONDNS6() {
return B_HCONDNS6;
}

public byte getB_HCONDNS7() {
return B_HCONDNS7;
}

public byte getB_HCONDNS8() {
return B_HCONDNS8;
}

public byte getB_HEALTH() {
return B_HEALTH;
}

public byte getB_HERFREQ() {
return B_HERFREQ;
}

public byte getB_HERITAGE1() {
return B_HERITAGE1;
}

public byte getB_HERITAGE2() {
return B_HERITAGE2;
}

public byte getB_HERITAGE3() {
return B_HERITAGE3;
}

public byte getB_HERITAGE4() {
return B_HERITAGE4;
}

public byte getB_HERITAGE5() {
return B_HERITAGE5;
}

public byte getB_HERITAGE6() {
return B_HERITAGE6;
}

public byte getB_HERITAGE7() {
return B_HERITAGE7;
}

public byte getB_HERITAGE8() {
return B_HERITAGE8;
}

public byte getB_HERITAGE96() {
return B_HERITAGE96;
}

public byte getB_HGADOPTF() {
return B_HGADOPTF;
}

public byte getB_HGADOPTM() {
return B_HGADOPTM;
}

public byte getB_HGBIOF() {
return B_HGBIOF;
}

public byte getB_HGBIOM() {
return B_HGBIOM;
}

public byte getB_HGPART() {
return B_HGPART;
}

public byte getB_HHORIG() {
return B_HHORIG;
}

public byte getB_HHRESP_DV() {
return B_HHRESP_DV;
}

public byte getB_HHTYPE_DV() {
return B_HHTYPE_DV;
}

public int getB_HIDP() {
return B_HIDP;
}

public byte getB_HIQUAL_DV() {
return B_HIQUAL_DV;
}

public byte getB_HOSPC1() {
return B_HOSPC1;
}

public byte getB_HOSPC2() {
return B_HOSPC2;
}

public byte getB_HOSPC3() {
return B_HOSPC3;
}

public byte getB_HOSPC4() {
return B_HOSPC4;
}

public byte getB_HOSPC5() {
return B_HOSPC5;
}

public byte getB_HOSPC6() {
return B_HOSPC6;
}

public byte getB_HOSPC7() {
return B_HOSPC7;
}

public byte getB_HOSPC8() {
return B_HOSPC8;
}

public short getB_HOSPDC1() {
return B_HOSPDC1;
}

public short getB_HOSPDC2() {
return B_HOSPDC2;
}

public byte getB_HOSPDC3() {
return B_HOSPDC3;
}

public byte getB_HOSPDC4() {
return B_HOSPDC4;
}

public byte getB_HOSPDC5() {
return B_HOSPDC5;
}

public byte getB_HOSPDC6() {
return B_HOSPDC6;
}

public boolean getB_HOSPDC7() {
return B_HOSPDC7;
}

public boolean getB_HOSPDC8() {
return B_HOSPDC8;
}

public byte getB_HOUSING() {
return B_HOUSING;
}

public short getB_HOWLNG() {
return B_HOWLNG;
}

public int getB_HRPID() {
return B_HRPID;
}

public byte getB_HRPNO() {
return B_HRPNO;
}

public byte getB_HUBOSS() {
return B_HUBOSS;
}

public byte getB_HUBUYS() {
return B_HUBUYS;
}

public byte getB_HUDIY() {
return B_HUDIY;
}

public byte getB_HUFRYS() {
return B_HUFRYS;
}

public byte getB_HUIRON() {
return B_HUIRON;
}

public byte getB_HUMOPS() {
return B_HUMOPS;
}

public byte getB_HUPOTS() {
return B_HUPOTS;
}

public byte getB_HUSITS() {
return B_HUSITS;
}

public byte getB_IENDDATHH() {
return B_IENDDATHH;
}

public byte getB_IENDDATMM() {
return B_IENDDATMM;
}

public byte getB_IENDDATSS() {
return B_IENDDATSS;
}

protected double B_IND5MUS_LW() {
return B_IND5MUS_LW;
}

protected double B_INDIN01_LW() {
return B_INDIN01_LW;
}

protected double B_INDIN91_LW() {
return B_INDIN91_LW;
}

protected double B_INDINBH_XW() {
return B_INDINBH_XW;
}

protected double B_INDINUB_XW() {
return B_INDINUB_XW;
}

protected double B_INDINUS_LW() {
return B_INDINUS_LW;
}

protected double B_INDINUS_XW() {
return B_INDINUS_XW;
}

public byte getB_INDMODE() {
return B_INDMODE;
}

protected double B_INDPXBH_XW() {
return B_INDPXBH_XW;
}

protected double B_INDPXUB_XW() {
return B_INDPXUB_XW;
}

protected double B_INDPXUS_LW() {
return B_INDPXUS_LW;
}

protected double B_INDPXUS_XW() {
return B_INDPXUS_XW;
}

protected double B_INDSCBH_XW() {
return B_INDSCBH_XW;
}

protected double B_INDSCUB_XW() {
return B_INDSCUB_XW;
}

protected double B_INDSCUS_LW() {
return B_INDSCUS_LW;
}

protected double B_INDSCUS_XW() {
return B_INDSCUS_XW;
}

public byte getB_INTDATD_DV() {
return B_INTDATD_DV;
}

public byte getB_INTDATM_DV() {
return B_INTDATM_DV;
}

public short getB_INTDATY_DV() {
return B_INTDATY_DV;
}

public byte getB_INVITRO1() {
return B_INVITRO1;
}

public byte getB_INVITRO2() {
return B_INVITRO2;
}

public boolean getB_INVITRO3() {
return B_INVITRO3;
}

public boolean getB_INVITRO4() {
return B_INVITRO4;
}

public boolean getB_INVITRO5() {
return B_INVITRO5;
}

public byte getB_IOUTCOME() {
return B_IOUTCOME;
}

public byte getB_ISTRTDATD() {
return B_ISTRTDATD;
}

public byte getB_ISTRTDATHH() {
return B_ISTRTDATHH;
}

public byte getB_ISTRTDATM() {
return B_ISTRTDATM;
}

public byte getB_ISTRTDATMM() {
return B_ISTRTDATMM;
}

public byte getB_ISTRTDATSS() {
return B_ISTRTDATSS;
}

public short getB_ISTRTDATY() {
return B_ISTRTDATY;
}

public byte getB_IVAFFCT11() {
return B_IVAFFCT11;
}

public byte getB_IVAFFCT12() {
return B_IVAFFCT12;
}

public byte getB_IVAFFCT13() {
return B_IVAFFCT13;
}

public byte getB_IVAFFCT14() {
return B_IVAFFCT14;
}

public byte getB_IVAFFCT15() {
return B_IVAFFCT15;
}

public byte getB_IVAFFCT17() {
return B_IVAFFCT17;
}

public byte getB_IVAFFCT21() {
return B_IVAFFCT21;
}

public byte getB_IVAFFCT22() {
return B_IVAFFCT22;
}

public byte getB_IVAFFCT23() {
return B_IVAFFCT23;
}

public byte getB_IVAFFCT27() {
return B_IVAFFCT27;
}

public byte getB_IVAFFCT30() {
return B_IVAFFCT30;
}

public byte getB_IVAFFCT97() {
return B_IVAFFCT97;
}

public byte getB_IVCOOP() {
return B_IVCOOP;
}

public boolean getB_IVFIO() {
return B_IVFIO;
}

public byte getB_IVINFNCE() {
return B_IVINFNCE;
}

public byte getB_IVINTLANG() {
return B_IVINTLANG;
}

public byte getB_IVPRSNT() {
return B_IVPRSNT;
}

public byte getB_IVTRANS() {
return B_IVTRANS;
}

public byte getB_IVWHOINT() {
return B_IVWHOINT;
}

public byte getB_J1BOSS() {
return B_J1BOSS;
}

public byte getB_J1MNGR() {
return B_J1MNGR;
}

public byte getB_J1NONE() {
return B_J1NONE;
}

public byte getB_J1NSSEC5_DV() {
return B_J1NSSEC5_DV;
}

public byte getB_J1SEMP() {
return B_J1SEMP;
}

public short getB_J1SOC00_CC() {
return B_J1SOC00_CC;
}

public short getB_J1SOC10_CC() {
return B_J1SOC10_CC;
}

public byte getB_J1SOC90_CC() {
return B_J1SOC90_CC;
}

public byte getB_J2HAS() {
return B_J2HAS;
}

public short getB_J2HRS() {
return B_J2HRS;
}

public byte getB_J2NSSEC5_DV() {
return B_J2NSSEC5_DV;
}

public short getB_J2PAY() {
return B_J2PAY;
}

protected double B_J2PAYNET_DV() {
return B_J2PAYNET_DV;
}

protected double B_J2PAY_DV() {
return B_J2PAY_DV;
}

public byte getB_J2PAY_IF() {
return B_J2PAY_IF;
}

public byte getB_J2SEMP() {
return B_J2SEMP;
}

public short getB_J2SOC00_CC() {
return B_J2SOC00_CC;
}

public short getB_J2SOC10_CC() {
return B_J2SOC10_CC;
}

public byte getB_J2SOC90_CC() {
return B_J2SOC90_CC;
}

public byte getB_JBATT1() {
return B_JBATT1;
}

public boolean getB_JBATT10() {
return B_JBATT10;
}

public byte getB_JBATT2() {
return B_JBATT2;
}

public byte getB_JBATT3() {
return B_JBATT3;
}

public byte getB_JBATT4() {
return B_JBATT4;
}

public byte getB_JBATT5() {
return B_JBATT5;
}

public byte getB_JBATT6() {
return B_JBATT6;
}

public boolean getB_JBATT7() {
return B_JBATT7;
}

public byte getB_JBATT8() {
return B_JBATT8;
}

public boolean getB_JBATT9() {
return B_JBATT9;
}

public byte getB_JBBGD() {
return B_JBBGD;
}

public byte getB_JBBGM() {
return B_JBBGM;
}

public short getB_JBBGY() {
return B_JBBGY;
}

public byte getB_JBENDD() {
return B_JBENDD;
}

public byte getB_JBENDM() {
return B_JBENDM;
}

public byte getB_JBENDREAS() {
return B_JBENDREAS;
}

public short getB_JBENDY4() {
return B_JBENDY4;
}

public byte getB_JBES2000() {
return B_JBES2000;
}

public byte getB_JBFLEX1() {
return B_JBFLEX1;
}

public byte getB_JBFLEX2() {
return B_JBFLEX2;
}

public byte getB_JBFLEX3() {
return B_JBFLEX3;
}

public byte getB_JBFLEX4() {
return B_JBFLEX4;
}

public byte getB_JBFLEX5() {
return B_JBFLEX5;
}

public byte getB_JBFLEX6() {
return B_JBFLEX6;
}

public byte getB_JBFLEX7() {
return B_JBFLEX7;
}

public byte getB_JBFLEX8() {
return B_JBFLEX8;
}

public byte getB_JBFLEX96() {
return B_JBFLEX96;
}

public byte getB_JBFT_DV() {
return B_JBFT_DV;
}

public byte getB_JBFXINF() {
return B_JBFXINF;
}

public byte getB_JBFXUSE1() {
return B_JBFXUSE1;
}

public byte getB_JBFXUSE2() {
return B_JBFXUSE2;
}

public byte getB_JBFXUSE3() {
return B_JBFXUSE3;
}

public byte getB_JBFXUSE4() {
return B_JBFXUSE4;
}

public byte getB_JBFXUSE5() {
return B_JBFXUSE5;
}

public byte getB_JBFXUSE6() {
return B_JBFXUSE6;
}

public byte getB_JBFXUSE7() {
return B_JBFXUSE7;
}

public byte getB_JBFXUSE8() {
return B_JBFXUSE8;
}

public byte getB_JBFXUSE96() {
return B_JBFXUSE96;
}

public byte getB_JBHAD() {
return B_JBHAD;
}

public byte getB_JBHAS() {
return B_JBHAS;
}

protected double B_JBHRS() {
return B_JBHRS;
}

public byte getB_JBIINDB_DV() {
return B_JBIINDB_DV;
}

public short getB_JBISCO88_CC() {
return B_JBISCO88_CC;
}

public byte getB_JBLKCHA() {
return B_JBLKCHA;
}

public byte getB_JBLKCHB() {
return B_JBLKCHB;
}

public byte getB_JBLKCHC() {
return B_JBLKCHC;
}

public byte getB_JBLKCHD() {
return B_JBLKCHD;
}

public byte getB_JBLKCHE() {
return B_JBLKCHE;
}

public byte getB_JBMNGR() {
return B_JBMNGR;
}

public byte getB_JBMNGRCHK() {
return B_JBMNGRCHK;
}

public byte getB_JBNSSEC3_DV() {
return B_JBNSSEC3_DV;
}

public byte getB_JBNSSEC5_DV() {
return B_JBNSSEC5_DV;
}

public byte getB_JBNSSEC8_DV() {
return B_JBNSSEC8_DV;
}

public byte getB_JBNSSEC_DV() {
return B_JBNSSEC_DV;
}

public byte getB_JBOFF() {
return B_JBOFF;
}

public byte getB_JBOFFY() {
return B_JBOFFY;
}

public byte getB_JBONUS() {
return B_JBONUS;
}

public byte getB_JBOT() {
return B_JBOT;
}

public byte getB_JBOTPD() {
return B_JBOTPD;
}

public byte getB_JBPEN() {
return B_JBPEN;
}

public byte getB_JBPENM() {
return B_JBPENM;
}

public short getB_JBPENY4() {
return B_JBPENY4;
}

public byte getB_JBPERFP() {
return B_JBPERFP;
}

public byte getB_JBPL() {
return B_JBPL;
}

public byte getB_JBRGSC_DV() {
return B_JBRGSC_DV;
}

public byte getB_JBRISE() {
return B_JBRISE;
}

public byte getB_JBSAMR() {
return B_JBSAMR;
}

public byte getB_JBSAT() {
return B_JBSAT;
}

public byte getB_JBSEC() {
return B_JBSEC;
}

public byte getB_JBSECT() {
return B_JBSECT;
}

public byte getB_JBSECTPUB() {
return B_JBSECTPUB;
}

public byte getB_JBSEG_DV() {
return B_JBSEG_DV;
}

public byte getB_JBSEMP() {
return B_JBSEMP;
}

public byte getB_JBSEMPCHK() {
return B_JBSEMPCHK;
}

public byte getB_JBSIC07CHK() {
return B_JBSIC07CHK;
}

public byte getB_JBSIC07_CC() {
return B_JBSIC07_CC;
}

public byte getB_JBSIZE() {
return B_JBSIZE;
}

public byte getB_JBSIZECHK() {
return B_JBSIZECHK;
}

public byte getB_JBSOC00CHK() {
return B_JBSOC00CHK;
}

public short getB_JBSOC00_CC() {
return B_JBSOC00_CC;
}

public byte getB_JBSOCGR_DV() {
return B_JBSOCGR_DV;
}

public byte getB_JBSTAT() {
return B_JBSTAT;
}

public byte getB_JBTERM1() {
return B_JBTERM1;
}

public byte getB_JBTERM2() {
return B_JBTERM2;
}

public short getB_JBTTWT() {
return B_JBTTWT;
}

public byte getB_JBXPCHA() {
return B_JBXPCHA;
}

public byte getB_JBXPCHB() {
return B_JBXPCHB;
}

public byte getB_JBXPCHC() {
return B_JBXPCHC;
}

public byte getB_JBXPCHD() {
return B_JBXPCHD;
}

public byte getB_JBXPCHE() {
return B_JBXPCHE;
}

public byte getB_JLBOSS() {
return B_JLBOSS;
}

public byte getB_JLENDM() {
return B_JLENDM;
}

public short getB_JLENDY() {
return B_JLENDY;
}

public byte getB_JLES2000() {
return B_JLES2000;
}

public byte getB_JLIINDB_DV() {
return B_JLIINDB_DV;
}

public short getB_JLISCO88_CC() {
return B_JLISCO88_CC;
}

public byte getB_JLMNGR() {
return B_JLMNGR;
}

public byte getB_JLNSSEC3_DV() {
return B_JLNSSEC3_DV;
}

public byte getB_JLNSSEC5_DV() {
return B_JLNSSEC5_DV;
}

public byte getB_JLNSSEC8_DV() {
return B_JLNSSEC8_DV;
}

public byte getB_JLNSSEC_DV() {
return B_JLNSSEC_DV;
}

public byte getB_JLRGSC_DV() {
return B_JLRGSC_DV;
}

public byte getB_JLSEG_DV() {
return B_JLSEG_DV;
}

public byte getB_JLSEMP() {
return B_JLSEMP;
}

public byte getB_JLSIC07_CC() {
return B_JLSIC07_CC;
}

public byte getB_JLSIZE() {
return B_JLSIZE;
}

public short getB_JLSOC00_CC() {
return B_JLSOC00_CC;
}

public byte getB_JOBHOURS1() {
return B_JOBHOURS1;
}

public boolean getB_JOBHOURS10() {
return B_JOBHOURS10;
}

public byte getB_JOBHOURS2() {
return B_JOBHOURS2;
}

public byte getB_JOBHOURS3() {
return B_JOBHOURS3;
}

public byte getB_JOBHOURS4() {
return B_JOBHOURS4;
}

public byte getB_JOBHOURS5() {
return B_JOBHOURS5;
}

public byte getB_JOBHOURS6() {
return B_JOBHOURS6;
}

public byte getB_JOBHOURS7() {
return B_JOBHOURS7;
}

public boolean getB_JOBHOURS8() {
return B_JOBHOURS8;
}

public byte getB_JOBHOURS9() {
return B_JOBHOURS9;
}

public byte getB_JSACCS() {
return B_JSACCS;
}

public byte getB_JSBOSS() {
return B_JSBOSS;
}

public byte getB_JSHRS() {
return B_JSHRS;
}

public byte getB_JSPART() {
return B_JSPART;
}

public int getB_JSPAYU() {
return B_JSPAYU;
}

public byte getB_JSPAYW() {
return B_JSPAYW;
}

public byte getB_JSPL() {
return B_JSPL;
}

public byte getB_JSPRBM() {
return B_JSPRBM;
}

public short getB_JSPRBY4() {
return B_JSPRBY4;
}

public byte getB_JSPREM() {
return B_JSPREM;
}

public short getB_JSPREY4() {
return B_JSPREY4;
}

public int getB_JSPRF() {
return B_JSPRF;
}

public byte getB_JSPRLS() {
return B_JSPRLS;
}

public byte getB_JSPRNI() {
return B_JSPRNI;
}

public byte getB_JSPRTX() {
return B_JSPRTX;
}

public byte getB_JSPYNI() {
return B_JSPYNI;
}

public byte getB_JSPYTX() {
return B_JSPYTX;
}

public byte getB_JSSIZE() {
return B_JSSIZE;
}

public byte getB_JSTTWT() {
return B_JSTTWT;
}

public short getB_JSTTWTB() {
return B_JSTTWTB;
}

public byte getB_JSTYPEB() {
return B_JSTYPEB;
}

public byte getB_JSWORKTRAV() {
return B_JSWORKTRAV;
}

public byte getB_JUBGN() {
return B_JUBGN;
}

public byte getB_JULK4WK() {
return B_JULK4WK;
}

public byte getB_JULK4X1() {
return B_JULK4X1;
}

public byte getB_JULK4X2() {
return B_JULK4X2;
}

public byte getB_JULK4X3() {
return B_JULK4X3;
}

public byte getB_JULK4X4() {
return B_JULK4X4;
}

public byte getB_JULK4X5() {
return B_JULK4X5;
}

public byte getB_JULK4X6() {
return B_JULK4X6;
}

public byte getB_JULK4X96() {
return B_JULK4X96;
}

public byte getB_JULKJB() {
return B_JULKJB;
}

public byte getB_JWBS1_DV() {
return B_JWBS1_DV;
}

public byte getB_JWBS2_DV() {
return B_JWBS2_DV;
}

public byte getB_KIDLANG() {
return B_KIDLANG;
}

public byte getB_LADOPT() {
return B_LADOPT;
}

public byte getB_LASTMSTATCH1() {
return B_LASTMSTATCH1;
}

public byte getB_LASTMSTATCH2() {
return B_LASTMSTATCH2;
}

public byte getB_LASTMSTATCH3() {
return B_LASTMSTATCH3;
}

public byte getB_LCHMULTI1() {
return B_LCHMULTI1;
}

public byte getB_LCHMULTI2() {
return B_LCHMULTI2;
}

public boolean getB_LCHMULTI3() {
return B_LCHMULTI3;
}

public boolean getB_LCHMULTI4() {
return B_LCHMULTI4;
}

public byte getB_LCHMULTI5() {
return B_LCHMULTI5;
}

public byte getB_LCOHNPI() {
return B_LCOHNPI;
}

protected double B_LENINDINTV() {
return B_LENINDINTV;
}

public byte getB_LIBFREQ() {
return B_LIBFREQ;
}

public byte getB_LIFTHH() {
return B_LIFTHH;
}

public byte getB_LIFTXHH() {
return B_LIFTXHH;
}

public byte getB_LINGUA() {
return B_LINGUA;
}

public byte getB_LIVESP() {
return B_LIVESP;
}

public boolean getB_LIVESP_DV() {
return B_LIVESP_DV;
}

public byte getB_LIVEWITH() {
return B_LIVEWITH;
}

public byte getB_LKMOVE() {
return B_LKMOVE;
}

public byte getB_LMAR1M() {
return B_LMAR1M;
}

public short getB_LMAR1Y() {
return B_LMAR1Y;
}

public byte getB_LMCBM1() {
return B_LMCBM1;
}

public byte getB_LMCBM2() {
return B_LMCBM2;
}

public byte getB_LMCBM3() {
return B_LMCBM3;
}

public byte getB_LMCBM4() {
return B_LMCBM4;
}

public short getB_LMCBY41() {
return B_LMCBY41;
}

public short getB_LMCBY42() {
return B_LMCBY42;
}

public short getB_LMCBY43() {
return B_LMCBY43;
}

public short getB_LMCBY44() {
return B_LMCBY44;
}

public byte getB_LMSPM1() {
return B_LMSPM1;
}

public byte getB_LMSPM2() {
return B_LMSPM2;
}

public byte getB_LMSPM3() {
return B_LMSPM3;
}

public byte getB_LMSPM4() {
return B_LMSPM4;
}

public short getB_LMSPY41() {
return B_LMSPY41;
}

public short getB_LMSPY42() {
return B_LMSPY42;
}

public short getB_LMSPY43() {
return B_LMSPY43;
}

public short getB_LMSPY44() {
return B_LMSPY44;
}

public byte getB_LNADOPT() {
return B_LNADOPT;
}

public byte getB_LNPRNT() {
return B_LNPRNT;
}

public byte getB_LPRNT() {
return B_LPRNT;
}

public byte getB_LVMTHP() {
return B_LVMTHP;
}

public byte getB_LVWHY() {
return B_LVWHY;
}

public short getB_LVYRP() {
return B_LVYRP;
}

public byte getB_LWWRONG() {
return B_LWWRONG;
}

public byte getB_MACOB() {
return B_MACOB;
}

public byte getB_MAEDQF() {
return B_MAEDQF;
}

public byte getB_MAJU() {
return B_MAJU;
}

public byte getB_MANSSEC5_DV() {
return B_MANSSEC5_DV;
}

public byte getB_MARSTAT() {
return B_MARSTAT;
}

public short getB_MASOC00_CC() {
return B_MASOC00_CC;
}

public short getB_MASOC10_CC() {
return B_MASOC10_CC;
}

public byte getB_MASOC90_CC() {
return B_MASOC90_CC;
}

public byte getB_MASTAT_DV() {
return B_MASTAT_DV;
}

public byte getB_MATLV() {
return B_MATLV;
}

public byte getB_MATLVENDD() {
return B_MATLVENDD;
}

public byte getB_MATLVENDM() {
return B_MATLVENDM;
}

public short getB_MATLVENDY4() {
return B_MATLVENDY4;
}

public byte getB_MATLVSTD() {
return B_MATLVSTD;
}

public byte getB_MATLVSTM() {
return B_MATLVSTM;
}

public short getB_MATLVSTY4() {
return B_MATLVSTY4;
}

public byte getB_MAYRUK() {
return B_MAYRUK;
}

public byte getB_MEMORIG() {
return B_MEMORIG;
}

public byte getB_MEMPLOY() {
return B_MEMPLOY;
}

public byte getB_MLA1() {
return B_MLA1;
}

public byte getB_MLA2() {
return B_MLA2;
}

public byte getB_MLA3() {
return B_MLA3;
}

public byte getB_MLA96() {
return B_MLA96;
}

public byte getB_MLSTAT() {
return B_MLSTAT;
}

public byte getB_MLSTATCHK() {
return B_MLSTATCHK;
}

public int getB_MNPID() {
return B_MNPID;
}

public byte getB_MNPNO() {
return B_MNPNO;
}

public int getB_MNSPID() {
return B_MNSPID;
}

public byte getB_MNSPNO() {
return B_MNSPNO;
}

public byte getB_MOBUSE() {
return B_MOBUSE;
}

public byte getB_MONTH() {
return B_MONTH;
}

public byte getB_MOTCYC() {
return B_MOTCYC;
}

public byte getB_MOVDIR() {
return B_MOVDIR;
}

public byte getB_MOVEOTH_CODE() {
return B_MOVEOTH_CODE;
}

public byte getB_MOVY11() {
return B_MOVY11;
}

public byte getB_MOVY12() {
return B_MOVY12;
}

public byte getB_MOVY13() {
return B_MOVY13;
}

public byte getB_MOVY14() {
return B_MOVY14;
}

public byte getB_MOVY15() {
return B_MOVY15;
}

public byte getB_MOVY16() {
return B_MOVY16;
}

public byte getB_MSTATCH1() {
return B_MSTATCH1;
}

public byte getB_MSTATCH2() {
return B_MSTATCH2;
}

public byte getB_MSTATCH3() {
return B_MSTATCH3;
}

public byte getB_MSTATSAM() {
return B_MSTATSAM;
}

public byte getB_MSTATSAMN() {
return B_MSTATSAMN;
}

public byte getB_MUSFREQ() {
return B_MUSFREQ;
}

public byte getB_MVEVER() {
return B_MVEVER;
}

public byte getB_MVMNTH() {
return B_MVMNTH;
}

public short getB_MVYR() {
return B_MVYR;
}

public byte getB_NADOPTCH() {
return B_NADOPTCH;
}

public byte getB_NAIDXHH() {
return B_NAIDXHH;
}

public byte getB_NATCH01() {
return B_NATCH01;
}

public byte getB_NATCH02() {
return B_NATCH02;
}

public byte getB_NATCH03() {
return B_NATCH03;
}

public byte getB_NATCH04() {
return B_NATCH04;
}

public byte getB_NATCH05() {
return B_NATCH05;
}

public byte getB_NATCH06() {
return B_NATCH06;
}

public byte getB_NATCH07() {
return B_NATCH07;
}

public byte getB_NATCH08() {
return B_NATCH08;
}

public byte getB_NATCH09() {
return B_NATCH09;
}

public byte getB_NATCH10() {
return B_NATCH10;
}

public byte getB_NATCH11() {
return B_NATCH11;
}

public boolean getB_NATCH12() {
return B_NATCH12;
}

public boolean getB_NATCH13() {
return B_NATCH13;
}

public boolean getB_NATCH14() {
return B_NATCH14;
}

public boolean getB_NATCH15() {
return B_NATCH15;
}

public boolean getB_NATCH16() {
return B_NATCH16;
}

public byte getB_NATID1() {
return B_NATID1;
}

public byte getB_NATID2() {
return B_NATID2;
}

public byte getB_NATID3() {
return B_NATID3;
}

public byte getB_NATID4() {
return B_NATID4;
}

public byte getB_NATID5() {
return B_NATID5;
}

public byte getB_NATID6() {
return B_NATID6;
}

public byte getB_NATID97() {
return B_NATID97;
}

public byte getB_NCH10TO15() {
return B_NCH10TO15;
}

public byte getB_NCH14RESP() {
return B_NCH14RESP;
}

public byte getB_NCH415RESP() {
return B_NCH415RESP;
}

public byte getB_NCH5TO15() {
return B_NCH5TO15;
}

public byte getB_NCHILD() {
return B_NCHILD;
}

public byte getB_NCHILD_DV() {
return B_NCHILD_DV;
}

public byte getB_NCHRESP() {
return B_NCHRESP;
}

public byte getB_NCHUND18RESP() {
return B_NCHUND18RESP;
}

public byte getB_NCHUNDER16() {
return B_NCHUNDER16;
}

public short getB_NCIGS() {
return B_NCIGS;
}

public byte getB_NDEPCHL_DV() {
return B_NDEPCHL_DV;
}

public byte getB_NETUSE() {
return B_NETUSE;
}

public byte getB_NEWENTRANT() {
return B_NEWENTRANT;
}

public byte getB_NEWPER() {
return B_NEWPER;
}

public byte getB_NEXT() {
return B_NEXT;
}

public byte getB_NEXTELSE1() {
return B_NEXTELSE1;
}

public byte getB_NEXTELSE10() {
return B_NEXTELSE10;
}

public byte getB_NEXTELSE2() {
return B_NEXTELSE2;
}

public byte getB_NEXTELSE3() {
return B_NEXTELSE3;
}

public byte getB_NEXTELSE4() {
return B_NEXTELSE4;
}

public byte getB_NEXTELSE5() {
return B_NEXTELSE5;
}

public byte getB_NEXTELSE6() {
return B_NEXTELSE6;
}

public byte getB_NEXTELSE7() {
return B_NEXTELSE7;
}

public byte getB_NEXTELSE8() {
return B_NEXTELSE8;
}

public boolean getB_NEXTELSE9() {
return B_NEXTELSE9;
}

public byte getB_NEXTJOB1() {
return B_NEXTJOB1;
}

public boolean getB_NEXTJOB10() {
return B_NEXTJOB10;
}

public byte getB_NEXTJOB2() {
return B_NEXTJOB2;
}

public byte getB_NEXTJOB3() {
return B_NEXTJOB3;
}

public byte getB_NEXTJOB4() {
return B_NEXTJOB4;
}

public byte getB_NEXTJOB5() {
return B_NEXTJOB5;
}

public byte getB_NEXTJOB6() {
return B_NEXTJOB6;
}

public byte getB_NEXTJOB7() {
return B_NEXTJOB7;
}

public byte getB_NEXTJOB8() {
return B_NEXTJOB8;
}

public byte getB_NEXTJOB9() {
return B_NEXTJOB9;
}

public byte getB_NEXTSTAT1() {
return B_NEXTSTAT1;
}

public byte getB_NEXTSTAT10() {
return B_NEXTSTAT10;
}

public byte getB_NEXTSTAT2() {
return B_NEXTSTAT2;
}

public byte getB_NEXTSTAT3() {
return B_NEXTSTAT3;
}

public byte getB_NEXTSTAT4() {
return B_NEXTSTAT4;
}

public byte getB_NEXTSTAT5() {
return B_NEXTSTAT5;
}

public byte getB_NEXTSTAT6() {
return B_NEXTSTAT6;
}

public byte getB_NEXTSTAT7() {
return B_NEXTSTAT7;
}

public byte getB_NEXTSTAT8() {
return B_NEXTSTAT8;
}

public byte getB_NEXTSTAT9() {
return B_NEXTSTAT9;
}

public byte getB_NFH01() {
return B_NFH01;
}

public byte getB_NFH02() {
return B_NFH02;
}

public byte getB_NFH03() {
return B_NFH03;
}

public byte getB_NFH04() {
return B_NFH04;
}

public byte getB_NFH05() {
return B_NFH05;
}

public byte getB_NFH06() {
return B_NFH06;
}

public byte getB_NFH07() {
return B_NFH07;
}

public byte getB_NFH08() {
return B_NFH08;
}

public byte getB_NFH09() {
return B_NFH09;
}

public byte getB_NFH10() {
return B_NFH10;
}

public byte getB_NFH11() {
return B_NFH11;
}

public byte getB_NFH12() {
return B_NFH12;
}

public byte getB_NFH13() {
return B_NFH13;
}

public byte getB_NFH14() {
return B_NFH14;
}

public byte getB_NFH15() {
return B_NFH15;
}

public byte getB_NFH16() {
return B_NFH16;
}

public byte getB_NFH17() {
return B_NFH17;
}

public byte getB_NFH18() {
return B_NFH18;
}

public byte getB_NFH19() {
return B_NFH19;
}

public byte getB_NFH20() {
return B_NFH20;
}

public byte getB_NFH21() {
return B_NFH21;
}

public byte getB_NFH22() {
return B_NFH22;
}

public byte getB_NFH23() {
return B_NFH23;
}

public byte getB_NFH24() {
return B_NFH24;
}

public byte getB_NFH25() {
return B_NFH25;
}

public byte getB_NFH26() {
return B_NFH26;
}

public byte getB_NFH27() {
return B_NFH27;
}

public byte getB_NFH28() {
return B_NFH28;
}

public byte getB_NFH29() {
return B_NFH29;
}

public byte getB_NFH30() {
return B_NFH30;
}

public byte getB_NFH31() {
return B_NFH31;
}

public byte getB_NFH32() {
return B_NFH32;
}

public byte getB_NFH33() {
return B_NFH33;
}

public byte getB_NFH34() {
return B_NFH34;
}

public byte getB_NFH35() {
return B_NFH35;
}

public byte getB_NFH36() {
return B_NFH36;
}

public boolean getB_NFH37() {
return B_NFH37;
}

public byte getB_NFH38() {
return B_NFH38;
}

public byte getB_NGRP_DV() {
return B_NGRP_DV;
}

public byte getB_NHIQUAL_DV() {
return B_NHIQUAL_DV;
}

public byte getB_NIACT() {
return B_NIACT;
}

public byte getB_NIREL() {
return B_NIREL;
}

public byte getB_NISERPS() {
return B_NISERPS;
}

public byte getB_NMAR() {
return B_NMAR;
}

public byte getB_NMPSP_DV() {
return B_NMPSP_DV;
}

public byte getB_NNATCH() {
return B_NNATCH;
}

public byte getB_NNEWBORN() {
return B_NNEWBORN;
}

public byte getB_NNMPSP_DV() {
return B_NNMPSP_DV;
}

public byte getB_NNSIB_DV() {
return B_NNSIB_DV;
}

public byte getB_NNSSIB_DV() {
return B_NNSSIB_DV;
}

public byte getB_NOTEMPCHK() {
return B_NOTEMPCHK;
}

public byte getB_NPENSIONER_DV() {
return B_NPENSIONER_DV;
}

public byte getB_NPNS_DV() {
return B_NPNS_DV;
}

public byte getB_NPN_DV() {
return B_NPN_DV;
}

public byte getB_NQFHIGH_DV() {
return B_NQFHIGH_DV;
}

public byte getB_NUNMPSP_DV() {
return B_NUNMPSP_DV;
}

public byte getB_NXTJBENDD() {
return B_NXTJBENDD;
}

public byte getB_NXTJBENDM() {
return B_NXTJBENDM;
}

public short getB_NXTJBENDY4() {
return B_NXTJBENDY4;
}

public byte getB_NXTJBES() {
return B_NXTJBES;
}

public byte getB_NXTJBHRS() {
return B_NXTJBHRS;
}

public byte getB_NXTST() {
return B_NXTST;
}

public byte getB_NXTSTELSE() {
return B_NXTSTELSE;
}

public byte getB_NXTSTENDD() {
return B_NXTSTENDD;
}

public byte getB_NXTSTENDM() {
return B_NXTSTENDM;
}

public short getB_NXTSTENDY4() {
return B_NXTSTENDY4;
}

public byte getB_OCIMPA() {
return B_OCIMPA;
}

public byte getB_OCIMPB() {
return B_OCIMPB;
}

public byte getB_OCIMPE() {
return B_OCIMPE;
}

public byte getB_OCIMPF() {
return B_OCIMPF;
}

public byte getB_OCIMPI() {
return B_OCIMPI;
}

public byte getB_OCIMPK() {
return B_OCIMPK;
}

public byte getB_OCIMPL() {
return B_OCIMPL;
}

public byte getB_OPRLG() {
return B_OPRLG;
}

public byte getB_OPRLG0() {
return B_OPRLG0;
}

public byte getB_OPRLG0NI() {
return B_OPRLG0NI;
}

public byte getB_OPRLG1() {
return B_OPRLG1;
}

public byte getB_ORIGADD() {
return B_ORIGADD;
}

public byte getB_OVTNSA() {
return B_OVTNSA;
}

public byte getB_OVTPAY() {
return B_OVTPAY;
}

protected double B_OVTRATE() {
return B_OVTRATE;
}

public byte getB_OVTREST() {
return B_OVTREST;
}

public byte getB_PACOB() {
return B_PACOB;
}

public byte getB_PAEDQF() {
return B_PAEDQF;
}

public byte getB_PAJU() {
return B_PAJU;
}

public byte getB_PANSSEC5_DV() {
return B_PANSSEC5_DV;
}

public short getB_PASOC00_CC() {
return B_PASOC00_CC;
}

public short getB_PASOC10_CC() {
return B_PASOC10_CC;
}

public byte getB_PASOC90_CC() {
return B_PASOC90_CC;
}

public int getB_PAYGL() {
return B_PAYGL;
}

protected double B_PAYGU_DV() {
return B_PAYGU_DV;
}

public byte getB_PAYGU_IF() {
return B_PAYGU_IF;
}

public byte getB_PAYGWC() {
return B_PAYGWC;
}

protected double B_PAYG_DV() {
return B_PAYG_DV;
}

public int getB_PAYNL() {
return B_PAYNL;
}

protected double B_PAYNU_DV() {
return B_PAYNU_DV;
}

public byte getB_PAYNU_IF() {
return B_PAYNU_IF;
}

public byte getB_PAYNWC() {
return B_PAYNWC;
}

protected double B_PAYN_DV() {
return B_PAYN_DV;
}

public byte getB_PAYRUK() {
return B_PAYRUK;
}

public byte getB_PAYTYP() {
return B_PAYTYP;
}

public int getB_PAYU() {
return B_PAYU;
}

public byte getB_PAYUG() {
return B_PAYUG;
}

public byte getB_PAYUSL() {
return B_PAYUSL;
}

public byte getB_PAYUWC() {
return B_PAYUWC;
}

protected double B_PAYU_DV() {
return B_PAYU_DV;
}

public byte getB_PBNFT1() {
return B_PBNFT1;
}

public byte getB_PBNFT10() {
return B_PBNFT10;
}

public byte getB_PBNFT11() {
return B_PBNFT11;
}

public byte getB_PBNFT12() {
return B_PBNFT12;
}

public byte getB_PBNFT2() {
return B_PBNFT2;
}

public byte getB_PBNFT3() {
return B_PBNFT3;
}

public byte getB_PBNFT4() {
return B_PBNFT4;
}

public byte getB_PBNFT5() {
return B_PBNFT5;
}

public byte getB_PBNFT6() {
return B_PBNFT6;
}

public byte getB_PBNFT7() {
return B_PBNFT7;
}

public byte getB_PBNFT8() {
return B_PBNFT8;
}

public byte getB_PBNFT9() {
return B_PBNFT9;
}

public byte getB_PBNFT96() {
return B_PBNFT96;
}

public byte getB_PENMCN() {
return B_PENMCN;
}

public byte getB_PENMEX() {
return B_PENMEX;
}

protected double B_PENMPY() {
return B_PENMPY;
}

public byte getB_PENMTP() {
return B_PENMTP;
}

public boolean getB_PENSIONER_DV() {
return B_PENSIONER_DV;
}

public byte getB_PENSPB() {
return B_PENSPB;
}

public byte getB_PERBFTS() {
return B_PERBFTS;
}

public byte getB_PERPOLINF() {
return B_PERPOLINF;
}

public byte getB_PJBPTFT() {
return B_PJBPTFT;
}

public byte getB_PJSPTFT() {
return B_PJSPTFT;
}

public byte getB_PJULK4WK() {
return B_PJULK4WK;
}

public byte getB_PLBORNC() {
return B_PLBORNC;
}

public byte getB_PLNOWM() {
return B_PLNOWM;
}

public short getB_PLNOWY4() {
return B_PLNOWY4;
}

public int getB_PN1PID() {
return B_PN1PID;
}

public byte getB_PN1PNO() {
return B_PN1PNO;
}

public byte getB_PN1SEX() {
return B_PN1SEX;
}

public int getB_PN2PID() {
return B_PN2PID;
}

public byte getB_PN2PNO() {
return B_PN2PNO;
}

public byte getB_PN2SEX() {
return B_PN2SEX;
}

public byte getB_PNO() {
return B_PNO;
}

public int getB_PNS1PID() {
return B_PNS1PID;
}

public byte getB_PNS1PNO() {
return B_PNS1PNO;
}

public byte getB_PNS1SEX() {
return B_PNS1SEX;
}

public int getB_PNS2PID() {
return B_PNS2PID;
}

public byte getB_PNS2PNO() {
return B_PNS2PNO;
}

public byte getB_PNS2SEX() {
return B_PNS2SEX;
}

public byte getB_POLCOST() {
return B_POLCOST;
}

public byte getB_PPEN() {
return B_PPEN;
}

public byte getB_PPENT() {
return B_PPENT;
}

public int getB_PPID() {
return B_PPID;
}

public byte getB_PPNO() {
return B_PPNO;
}

public byte getB_PPPEX() {
return B_PPPEX;
}

public byte getB_PPPEXM() {
return B_PPPEXM;
}

public int getB_PPRAM() {
return B_PPRAM;
}

public byte getB_PPRAMPC() {
return B_PPRAMPC;
}

public byte getB_PPREG() {
return B_PPREG;
}

public byte getB_PPSEX() {
return B_PPSEX;
}

public short getB_PPYRS() {
return B_PPYRS;
}

public byte getB_PREARN() {
return B_PREARN;
}

public byte getB_PREARNA() {
return B_PREARNA;
}

public byte getB_PREARNW() {
return B_PREARNW;
}

public byte getB_PREASON() {
return B_PREASON;
}

public byte getB_PREG() {
return B_PREG;
}

public byte getB_PREGDRINK1() {
return B_PREGDRINK1;
}

public byte getB_PREGDRINK2() {
return B_PREGDRINK2;
}

public boolean getB_PREGDRINK3() {
return B_PREGDRINK3;
}

public boolean getB_PREGDRINK4() {
return B_PREGDRINK4;
}

public byte getB_PREGDRINK5() {
return B_PREGDRINK5;
}

public byte getB_PREGEND1() {
return B_PREGEND1;
}

public byte getB_PREGEND2() {
return B_PREGEND2;
}

public byte getB_PREGEND3() {
return B_PREGEND3;
}

public byte getB_PREGEND4() {
return B_PREGEND4;
}

public boolean getB_PREGEND5() {
return B_PREGEND5;
}

public byte getB_PREGFERT1() {
return B_PREGFERT1;
}

public byte getB_PREGFERT2() {
return B_PREGFERT2;
}

public byte getB_PREGFERT3() {
return B_PREGFERT3;
}

public byte getB_PREGFERT4() {
return B_PREGFERT4;
}

public boolean getB_PREGFERT5() {
return B_PREGFERT5;
}

public byte getB_PREGM1() {
return B_PREGM1;
}

public byte getB_PREGM2() {
return B_PREGM2;
}

public byte getB_PREGM3() {
return B_PREGM3;
}

public byte getB_PREGM4() {
return B_PREGM4;
}

public boolean getB_PREGM5() {
return B_PREGM5;
}

public byte getB_PREGOUT1() {
return B_PREGOUT1;
}

public byte getB_PREGOUT2() {
return B_PREGOUT2;
}

public byte getB_PREGOUT3() {
return B_PREGOUT3;
}

public byte getB_PREGOUT4() {
return B_PREGOUT4;
}

public byte getB_PREGOUT5() {
return B_PREGOUT5;
}

public byte getB_PREGSMK11() {
return B_PREGSMK11;
}

public boolean getB_PREGSMK12() {
return B_PREGSMK12;
}

public boolean getB_PREGSMK13() {
return B_PREGSMK13;
}

public boolean getB_PREGSMK14() {
return B_PREGSMK14;
}

public boolean getB_PREGSMK15() {
return B_PREGSMK15;
}

public byte getB_PREGSMK21() {
return B_PREGSMK21;
}

public boolean getB_PREGSMK22() {
return B_PREGSMK22;
}

public boolean getB_PREGSMK23() {
return B_PREGSMK23;
}

public boolean getB_PREGSMK24() {
return B_PREGSMK24;
}

public boolean getB_PREGSMK25() {
return B_PREGSMK25;
}

public byte getB_PREGSMK31() {
return B_PREGSMK31;
}

public byte getB_PREGSMK32() {
return B_PREGSMK32;
}

public boolean getB_PREGSMK33() {
return B_PREGSMK33;
}

public boolean getB_PREGSMK34() {
return B_PREGSMK34;
}

public boolean getB_PREGSMK35() {
return B_PREGSMK35;
}

public byte getB_PREGSMOKE1() {
return B_PREGSMOKE1;
}

public byte getB_PREGSMOKE2() {
return B_PREGSMOKE2;
}

public boolean getB_PREGSMOKE3() {
return B_PREGSMOKE3;
}

public boolean getB_PREGSMOKE4() {
return B_PREGSMOKE4;
}

public byte getB_PREGSMOKE5() {
return B_PREGSMOKE5;
}

public short getB_PREGY41() {
return B_PREGY41;
}

public short getB_PREGY42() {
return B_PREGY42;
}

public short getB_PREGY43() {
return B_PREGY43;
}

public short getB_PREGY44() {
return B_PREGY44;
}

public boolean getB_PREGY45() {
return B_PREGY45;
}

public byte getB_PREL() {
return B_PREL;
}

public byte getB_PRFITB() {
return B_PRFITB;
}

public byte getB_PRFITBA() {
return B_PRFITBA;
}

public byte getB_PRFITBW() {
return B_PRFITBW;
}

public byte getB_PRIDE10() {
return B_PRIDE10;
}

public byte getB_PRIDE11() {
return B_PRIDE11;
}

public byte getB_PRIDE12() {
return B_PRIDE12;
}

public byte getB_PRIDE13() {
return B_PRIDE13;
}

public byte getB_PRIDE14() {
return B_PRIDE14;
}

public byte getB_PRIDE2() {
return B_PRIDE2;
}

public byte getB_PRIDE4A() {
return B_PRIDE4A;
}

public byte getB_PRIDE4B() {
return B_PRIDE4B;
}

public byte getB_PRIDE5() {
return B_PRIDE5;
}

public byte getB_PRIDE6() {
return B_PRIDE6;
}

public byte getB_PRIDE7() {
return B_PRIDE7;
}

public byte getB_PRIDE8() {
return B_PRIDE8;
}

public byte getB_PRIDE9() {
return B_PRIDE9;
}

public byte getB_PRIPN() {
return B_PRIPN;
}

public int getB_PSU() {
return B_PSU;
}

public byte getB_QFHIGH() {
return B_QFHIGH;
}

public boolean getB_QFHIGHFL_DV() {
return B_QFHIGHFL_DV;
}

public byte getB_QFHIGH_DV() {
return B_QFHIGH_DV;
}

public byte getB_QFVOC1() {
return B_QFVOC1;
}

public byte getB_QFVOC10() {
return B_QFVOC10;
}

public byte getB_QFVOC11() {
return B_QFVOC11;
}

public byte getB_QFVOC12() {
return B_QFVOC12;
}

public byte getB_QFVOC13() {
return B_QFVOC13;
}

public byte getB_QFVOC14() {
return B_QFVOC14;
}

public byte getB_QFVOC15() {
return B_QFVOC15;
}

public byte getB_QFVOC2() {
return B_QFVOC2;
}

public byte getB_QFVOC3() {
return B_QFVOC3;
}

public byte getB_QFVOC4() {
return B_QFVOC4;
}

public byte getB_QFVOC5() {
return B_QFVOC5;
}

public byte getB_QFVOC6() {
return B_QFVOC6;
}

public byte getB_QFVOC7() {
return B_QFVOC7;
}

public byte getB_QFVOC8() {
return B_QFVOC8;
}

public byte getB_QFVOC9() {
return B_QFVOC9;
}

public byte getB_QFVOC96() {
return B_QFVOC96;
}

public byte getB_QUALNE() {
return B_QUALNE;
}

public byte getB_QUALNEW1() {
return B_QUALNEW1;
}

public byte getB_QUALNEW10() {
return B_QUALNEW10;
}

public byte getB_QUALNEW11() {
return B_QUALNEW11;
}

public byte getB_QUALNEW13() {
return B_QUALNEW13;
}

public byte getB_QUALNEW15() {
return B_QUALNEW15;
}

public byte getB_QUALNEW16() {
return B_QUALNEW16;
}

public byte getB_QUALNEW17() {
return B_QUALNEW17;
}

public byte getB_QUALNEW18() {
return B_QUALNEW18;
}

public byte getB_QUALNEW19() {
return B_QUALNEW19;
}

public byte getB_QUALNEW20() {
return B_QUALNEW20;
}

public byte getB_QUALNEW21() {
return B_QUALNEW21;
}

public byte getB_QUALNEW22() {
return B_QUALNEW22;
}

public byte getB_QUALNEW23() {
return B_QUALNEW23;
}

public byte getB_QUALNEW24() {
return B_QUALNEW24;
}

public byte getB_QUALNEW25() {
return B_QUALNEW25;
}

public byte getB_QUALNEW26() {
return B_QUALNEW26;
}

public byte getB_QUALNEW27() {
return B_QUALNEW27;
}

public byte getB_QUALNEW28() {
return B_QUALNEW28;
}

public byte getB_QUALNEW29() {
return B_QUALNEW29;
}

public byte getB_QUALNEW3() {
return B_QUALNEW3;
}

public byte getB_QUALNEW30() {
return B_QUALNEW30;
}

public byte getB_QUALNEW31() {
return B_QUALNEW31;
}

public byte getB_QUALNEW4() {
return B_QUALNEW4;
}

public byte getB_QUALNEW5() {
return B_QUALNEW5;
}

public byte getB_QUALNEW6() {
return B_QUALNEW6;
}

public byte getB_QUALNEW7() {
return B_QUALNEW7;
}

public byte getB_QUALNEW8() {
return B_QUALNEW8;
}

public byte getB_QUALNEW9() {
return B_QUALNEW9;
}

public byte getB_QUALOC() {
return B_QUALOC;
}

public byte getB_RACEL() {
return B_RACEL;
}

public byte getB_RACELO_CODE() {
return B_RACELO_CODE;
}

public byte getB_RACEL_DV() {
return B_RACEL_DV;
}

public byte getB_RACH16_DV() {
return B_RACH16_DV;
}

public byte getB_REASEND1() {
return B_REASEND1;
}

public boolean getB_REASEND10() {
return B_REASEND10;
}

public byte getB_REASEND2() {
return B_REASEND2;
}

public byte getB_REASEND3() {
return B_REASEND3;
}

public byte getB_REASEND4() {
return B_REASEND4;
}

public byte getB_REASEND5() {
return B_REASEND5;
}

public byte getB_REASEND6() {
return B_REASEND6;
}

public byte getB_REASEND7() {
return B_REASEND7;
}

public boolean getB_REASEND8() {
return B_REASEND8;
}

public byte getB_REASEND9() {
return B_REASEND9;
}

public byte getB_RELUP() {
return B_RELUP;
}

public byte getB_REMAIL_CODE() {
return B_REMAIL_CODE;
}

public boolean getB_RESPF16() {
return B_RESPF16;
}

public boolean getB_RESPF16_DV() {
return B_RESPF16_DV;
}

public boolean getB_RESPM16() {
return B_RESPM16;
}

public boolean getB_RESPM16_DV() {
return B_RESPM16_DV;
}

public byte getB_RETAMT() {
return B_RETAMT;
}

public byte getB_RETCHK() {
return B_RETCHK;
}

public byte getB_RETSUF() {
return B_RETSUF;
}

public byte getB_RHLAND_CODE() {
return B_RHLAND_CODE;
}

public byte getB_RPHMOB_CODE() {
return B_RPHMOB_CODE;
}

public byte getB_RPHWRK_CODE() {
return B_RPHWRK_CODE;
}

public byte getB_RTCON1() {
return B_RTCON1;
}

public byte getB_RTCON2() {
return B_RTCON2;
}

public byte getB_RTCON3() {
return B_RTCON3;
}

public byte getB_RTCON4() {
return B_RTCON4;
}

public byte getB_RTEXPJB() {
return B_RTEXPJB;
}

public byte getB_RTFND1() {
return B_RTFND1;
}

public byte getB_RTFND10() {
return B_RTFND10;
}

public byte getB_RTFND2() {
return B_RTFND2;
}

public byte getB_RTFND3() {
return B_RTFND3;
}

public byte getB_RTFND4() {
return B_RTFND4;
}

public byte getB_RTFND5() {
return B_RTFND5;
}

public byte getB_RTFND6() {
return B_RTFND6;
}

public byte getB_RTFND7() {
return B_RTFND7;
}

public byte getB_RTFND8() {
return B_RTFND8;
}

public byte getB_RTFND9() {
return B_RTFND9;
}

public byte getB_RTFND96() {
return B_RTFND96;
}

public byte getB_RTPRO1() {
return B_RTPRO1;
}

public byte getB_RTPRO2() {
return B_RTPRO2;
}

public byte getB_RTPRO3() {
return B_RTPRO3;
}

public byte getB_RTPRO4() {
return B_RTPRO4;
}

public byte getB_RTPRO5() {
return B_RTPRO5;
}

public byte getB_RTPRO6() {
return B_RTPRO6;
}

public byte getB_SAMEJOB() {
return B_SAMEJOB;
}

public byte getB_SAMPST() {
return B_SAMPST;
}

public byte getB_SAVE() {
return B_SAVE;
}

public int getB_SAVED() {
return B_SAVED;
}

public byte getB_SAVLT() {
return B_SAVLT;
}

public byte getB_SAVREG() {
return B_SAVREG;
}

public byte getB_SCAGE1DRINK() {
return B_SCAGE1DRINK;
}

public byte getB_SCALCL7D() {
return B_SCALCL7D;
}

public byte getB_SCANYELSETXT() {
return B_SCANYELSETXT;
}

public byte getB_SCDEM2MANY() {
return B_SCDEM2MANY;
}

public short getB_SCDOBY4() {
return B_SCDOBY4;
}

public byte getB_SCEND() {
return B_SCEND;
}

public byte getB_SCEVERDRNK() {
return B_SCEVERDRNK;
}

public byte getB_SCFALCDRNK() {
return B_SCFALCDRNK;
}

public byte getB_SCFANNOY() {
return B_SCFANNOY;
}

public byte getB_SCFCRITIC() {
return B_SCFCRITIC;
}

public boolean getB_SCFLAG_DV() {
return B_SCFLAG_DV;
}

public byte getB_SCFLETDWN() {
return B_SCFLETDWN;
}

public byte getB_SCFOPENUP() {
return B_SCFOPENUP;
}

public byte getB_SCFRELY() {
return B_SCFRELY;
}

public byte getB_SCFRENDANY() {
return B_SCFRENDANY;
}

public byte getB_SCFUNDSTND() {
return B_SCFUNDSTND;
}

public byte getB_SCGHQ1_DV() {
return B_SCGHQ1_DV;
}

public byte getB_SCGHQ2_DV() {
return B_SCGHQ2_DV;
}

public byte getB_SCGHQA() {
return B_SCGHQA;
}

public byte getB_SCGHQB() {
return B_SCGHQB;
}

public byte getB_SCGHQC() {
return B_SCGHQC;
}

public byte getB_SCGHQD() {
return B_SCGHQD;
}

public byte getB_SCGHQE() {
return B_SCGHQE;
}

public byte getB_SCGHQF() {
return B_SCGHQF;
}

public byte getB_SCGHQG() {
return B_SCGHQG;
}

public byte getB_SCGHQH() {
return B_SCGHQH;
}

public byte getB_SCGHQI() {
return B_SCGHQI;
}

public byte getB_SCGHQJ() {
return B_SCGHQJ;
}

public byte getB_SCGHQK() {
return B_SCGHQK;
}

public byte getB_SCGHQL() {
return B_SCGHQL;
}

public byte getB_SCHLLOC() {
return B_SCHLLOC;
}

public byte getB_SCHMCONT() {
return B_SCHMCONT;
}

public byte getB_SCHOK() {
return B_SCHOK;
}

public byte getB_SCHOOL() {
return B_SCHOOL;
}

public byte getB_SCLFSAT1() {
return B_SCLFSAT1;
}

public byte getB_SCLFSAT2() {
return B_SCLFSAT2;
}

public byte getB_SCLFSAT7() {
return B_SCLFSAT7;
}

public byte getB_SCLFSATO() {
return B_SCLFSATO;
}

public byte getB_SCLOUTCONT() {
return B_SCLOUTCONT;
}

public byte getB_SCMOLWP() {
return B_SCMOLWP;
}

public byte getB_SCNALCL7D() {
return B_SCNALCL7D;
}

protected double B_SCNALCPINT() {
return B_SCNALCPINT;
}

protected double B_SCNALCPOPS() {
return B_SCNALCPOPS;
}

protected double B_SCNALCSHOT() {
return B_SCNALCSHOT;
}

protected double B_SCNALCWINE() {
return B_SCNALCWINE;
}

public byte getB_SCOPFAMA() {
return B_SCOPFAMA;
}

public byte getB_SCOPFAMB() {
return B_SCOPFAMB;
}

public byte getB_SCOPFAMD() {
return B_SCOPFAMD;
}

public byte getB_SCOPFAMF() {
return B_SCOPFAMF;
}

public byte getB_SCOPFAMH() {
return B_SCOPFAMH;
}

public byte getB_SCPANNOY() {
return B_SCPANNOY;
}

public byte getB_SCPCRITIC() {
return B_SCPCRITIC;
}

public byte getB_SCPLETDWN() {
return B_SCPLETDWN;
}

public byte getB_SCPOPENUP() {
return B_SCPOPENUP;
}

public byte getB_SCPRELY() {
return B_SCPRELY;
}

public byte getB_SCPUNDSTND() {
return B_SCPUNDSTND;
}

public byte getB_SCRANNOY() {
return B_SCRANNOY;
}

public byte getB_SCRCRITIC() {
return B_SCRCRITIC;
}

public byte getB_SCRELANY() {
return B_SCRELANY;
}

public byte getB_SCRLETDWN() {
return B_SCRLETDWN;
}

public byte getB_SCROPENUP() {
return B_SCROPENUP;
}

public byte getB_SCRRELY() {
return B_SCRRELY;
}

public byte getB_SCRUNDSTND() {
return B_SCRUNDSTND;
}

public byte getB_SCSEX() {
return B_SCSEX;
}

public byte getB_SCSF1() {
return B_SCSF1;
}

public byte getB_SCSF2A() {
return B_SCSF2A;
}

public byte getB_SCSF2B() {
return B_SCSF2B;
}

public byte getB_SCSF3A() {
return B_SCSF3A;
}

public byte getB_SCSF3B() {
return B_SCSF3B;
}

public byte getB_SCSF4A() {
return B_SCSF4A;
}

public byte getB_SCSF4B() {
return B_SCSF4B;
}

public byte getB_SCSF5() {
return B_SCSF5;
}

public byte getB_SCSF6A() {
return B_SCSF6A;
}

public byte getB_SCSF6B() {
return B_SCSF6B;
}

public byte getB_SCSF6C() {
return B_SCSF6C;
}

public byte getB_SCSF7() {
return B_SCSF7;
}

public byte getB_SCSSUP1() {
return B_SCSSUP1;
}

public byte getB_SCSSUPR2R() {
return B_SCSSUPR2R;
}

public byte getB_SCTIMEMNUF() {
return B_SCTIMEMNUF;
}

public byte getB_SCWHORUAGE() {
return B_SCWHORUAGE;
}

public byte getB_SCWHORUEDU() {
return B_SCWHORUEDU;
}

public byte getB_SCWHORUFAM() {
return B_SCWHORUFAM;
}

public byte getB_SCWHORUPOL() {
return B_SCWHORUPOL;
}

public byte getB_SCWHORUPRO() {
return B_SCWHORUPRO;
}

public byte getB_SCWHORURAC() {
return B_SCWHORURAC;
}

public byte getB_SCWHORUSEX() {
return B_SCWHORUSEX;
}

public byte getB_SCWKVFAST() {
return B_SCWKVFAST;
}

protected double B_SEEARNGRS_DV() {
return B_SEEARNGRS_DV;
}

public byte getB_SEEARNGRS_IF() {
return B_SEEARNGRS_IF;
}

protected double B_SEEARNNET_DV() {
return B_SEEARNNET_DV;
}

public boolean getB_SEX() {
return B_SEX;
}

public byte getB_SEX_DV() {
return B_SEX_DV;
}

public byte getB_SF1() {
return B_SF1;
}

protected double B_SF12MCS_DV() {
return B_SF12MCS_DV;
}

protected double B_SF12PCS_DV() {
return B_SF12PCS_DV;
}

public boolean getB_SINGLE_DV() {
return B_SINGLE_DV;
}

public byte getB_SMAGBG() {
return B_SMAGBG;
}

public byte getB_SMCIGS() {
return B_SMCIGS;
}

public byte getB_SMEVER() {
return B_SMEVER;
}

public byte getB_SMKMNTH11() {
return B_SMKMNTH11;
}

public byte getB_SMKMNTH12() {
return B_SMKMNTH12;
}

public boolean getB_SMKMNTH13() {
return B_SMKMNTH13;
}

public boolean getB_SMKMNTH14() {
return B_SMKMNTH14;
}

public boolean getB_SMKMNTH15() {
return B_SMKMNTH15;
}

public byte getB_SMKMNTH21() {
return B_SMKMNTH21;
}

public byte getB_SMKMNTH22() {
return B_SMKMNTH22;
}

public boolean getB_SMKMNTH23() {
return B_SMKMNTH23;
}

public boolean getB_SMKMNTH24() {
return B_SMKMNTH24;
}

public boolean getB_SMKMNTH25() {
return B_SMKMNTH25;
}

public byte getB_SMKMNTH31() {
return B_SMKMNTH31;
}

public byte getB_SMKMNTH32() {
return B_SMKMNTH32;
}

public boolean getB_SMKMNTH33() {
return B_SMKMNTH33;
}

public boolean getB_SMKMNTH34() {
return B_SMKMNTH34;
}

public boolean getB_SMKMNTH35() {
return B_SMKMNTH35;
}

public byte getB_SMNCIGS() {
return B_SMNCIGS;
}

public byte getB_SMNOW() {
return B_SMNOW;
}

public byte getB_SPORTACT() {
return B_SPORTACT;
}

public byte getB_SPORTS11() {
return B_SPORTS11;
}

public byte getB_SPORTS110() {
return B_SPORTS110;
}

public byte getB_SPORTS111() {
return B_SPORTS111;
}

public byte getB_SPORTS112() {
return B_SPORTS112;
}

public byte getB_SPORTS113() {
return B_SPORTS113;
}

public byte getB_SPORTS114() {
return B_SPORTS114;
}

public byte getB_SPORTS12() {
return B_SPORTS12;
}

public byte getB_SPORTS13() {
return B_SPORTS13;
}

public byte getB_SPORTS14() {
return B_SPORTS14;
}

public byte getB_SPORTS15() {
return B_SPORTS15;
}

public byte getB_SPORTS16() {
return B_SPORTS16;
}

public byte getB_SPORTS17() {
return B_SPORTS17;
}

public byte getB_SPORTS18() {
return B_SPORTS18;
}

public byte getB_SPORTS19() {
return B_SPORTS19;
}

public byte getB_SPORTS196() {
return B_SPORTS196;
}

public byte getB_SPORTS216() {
return B_SPORTS216;
}

public byte getB_SPORTS217() {
return B_SPORTS217;
}

public byte getB_SPORTS218() {
return B_SPORTS218;
}

public byte getB_SPORTS219() {
return B_SPORTS219;
}

public byte getB_SPORTS220() {
return B_SPORTS220;
}

public byte getB_SPORTS221() {
return B_SPORTS221;
}

public byte getB_SPORTS222() {
return B_SPORTS222;
}

public byte getB_SPORTS223() {
return B_SPORTS223;
}

public byte getB_SPORTS224() {
return B_SPORTS224;
}

public byte getB_SPORTS225() {
return B_SPORTS225;
}

public byte getB_SPORTS226() {
return B_SPORTS226;
}

public byte getB_SPORTS227() {
return B_SPORTS227;
}

public byte getB_SPORTS228() {
return B_SPORTS228;
}

public byte getB_SPORTS229() {
return B_SPORTS229;
}

public byte getB_SPORTS230() {
return B_SPORTS230;
}

public byte getB_SPORTS231() {
return B_SPORTS231;
}

public byte getB_SPORTS296() {
return B_SPORTS296;
}

public byte getB_SPORTS31() {
return B_SPORTS31;
}

public byte getB_SPORTS32() {
return B_SPORTS32;
}

public byte getB_SPORTS33() {
return B_SPORTS33;
}

public byte getB_SPORTS34() {
return B_SPORTS34;
}

public byte getB_SPORTS35() {
return B_SPORTS35;
}

public byte getB_SPORTS36() {
return B_SPORTS36;
}

public byte getB_SPORTS37() {
return B_SPORTS37;
}

public byte getB_SPORTS38() {
return B_SPORTS38;
}

public byte getB_SPORTS39() {
return B_SPORTS39;
}

public byte getB_SPORTS396() {
return B_SPORTS396;
}

public byte getB_SPORTS3FREQ() {
return B_SPORTS3FREQ;
}

public byte getB_SPORTSFREQ() {
return B_SPORTSFREQ;
}

public byte getB_SPPEN() {
return B_SPPEN;
}

public int getB_SPPID() {
return B_SPPID;
}

public byte getB_SPPNO() {
return B_SPPNO;
}

public byte getB_STATCM1() {
return B_STATCM1;
}

public byte getB_STATCM2() {
return B_STATCM2;
}

public byte getB_STATCM3() {
return B_STATCM3;
}

public short getB_STATCY41() {
return B_STATCY41;
}

public short getB_STATCY42() {
return B_STATCY42;
}

public short getB_STATCY43() {
return B_STATCY43;
}

public byte getB_STATENDD1() {
return B_STATENDD1;
}

public boolean getB_STATENDD10() {
return B_STATENDD10;
}

public byte getB_STATENDD2() {
return B_STATENDD2;
}

public byte getB_STATENDD3() {
return B_STATENDD3;
}

public byte getB_STATENDD4() {
return B_STATENDD4;
}

public byte getB_STATENDD5() {
return B_STATENDD5;
}

public byte getB_STATENDD6() {
return B_STATENDD6;
}

public byte getB_STATENDD7() {
return B_STATENDD7;
}

public byte getB_STATENDD8() {
return B_STATENDD8;
}

public byte getB_STATENDD9() {
return B_STATENDD9;
}

public byte getB_STATENDM1() {
return B_STATENDM1;
}

public boolean getB_STATENDM10() {
return B_STATENDM10;
}

public byte getB_STATENDM2() {
return B_STATENDM2;
}

public byte getB_STATENDM3() {
return B_STATENDM3;
}

public byte getB_STATENDM4() {
return B_STATENDM4;
}

public byte getB_STATENDM5() {
return B_STATENDM5;
}

public byte getB_STATENDM6() {
return B_STATENDM6;
}

public byte getB_STATENDM7() {
return B_STATENDM7;
}

public byte getB_STATENDM8() {
return B_STATENDM8;
}

public byte getB_STATENDM9() {
return B_STATENDM9;
}

public short getB_STATENDY41() {
return B_STATENDY41;
}

public boolean getB_STATENDY410() {
return B_STATENDY410;
}

public short getB_STATENDY42() {
return B_STATENDY42;
}

public short getB_STATENDY43() {
return B_STATENDY43;
}

public short getB_STATENDY44() {
return B_STATENDY44;
}

public short getB_STATENDY45() {
return B_STATENDY45;
}

public short getB_STATENDY46() {
return B_STATENDY46;
}

public short getB_STATENDY47() {
return B_STATENDY47;
}

public short getB_STATENDY48() {
return B_STATENDY48;
}

public short getB_STATENDY49() {
return B_STATENDY49;
}

public byte getB_STENDREAS() {
return B_STENDREAS;
}

public short getB_STRATA() {
return B_STRATA;
}

public byte getB_SUSP() {
return B_SUSP;
}

public byte getB_TRAINANY() {
return B_TRAINANY;
}

public short getB_TRAINDAYS1() {
return B_TRAINDAYS1;
}

public short getB_TRAINDAYS2() {
return B_TRAINDAYS2;
}

public short getB_TRAINDAYS3() {
return B_TRAINDAYS3;
}

public byte getB_TRAINEND1() {
return B_TRAINEND1;
}

public byte getB_TRAINEND2() {
return B_TRAINEND2;
}

public byte getB_TRAINEND3() {
return B_TRAINEND3;
}

public byte getB_TRAINHRS1() {
return B_TRAINHRS1;
}

public byte getB_TRAINHRS2() {
return B_TRAINHRS2;
}

public byte getB_TRAINHRS3() {
return B_TRAINHRS3;
}

public byte getB_TRAINN() {
return B_TRAINN;
}

public byte getB_TRAINPURP11() {
return B_TRAINPURP11;
}

public byte getB_TRAINPURP12() {
return B_TRAINPURP12;
}

public byte getB_TRAINPURP13() {
return B_TRAINPURP13;
}

public byte getB_TRAINPURP21() {
return B_TRAINPURP21;
}

public byte getB_TRAINPURP22() {
return B_TRAINPURP22;
}

public byte getB_TRAINPURP23() {
return B_TRAINPURP23;
}

public byte getB_TRAINPURP31() {
return B_TRAINPURP31;
}

public byte getB_TRAINPURP32() {
return B_TRAINPURP32;
}

public byte getB_TRAINPURP33() {
return B_TRAINPURP33;
}

public byte getB_TRAINPURP41() {
return B_TRAINPURP41;
}

public byte getB_TRAINPURP42() {
return B_TRAINPURP42;
}

public byte getB_TRAINPURP43() {
return B_TRAINPURP43;
}

public byte getB_TRAINPURP51() {
return B_TRAINPURP51;
}

public byte getB_TRAINPURP52() {
return B_TRAINPURP52;
}

public byte getB_TRAINPURP53() {
return B_TRAINPURP53;
}

public byte getB_TRAINPURP61() {
return B_TRAINPURP61;
}

public byte getB_TRAINPURP62() {
return B_TRAINPURP62;
}

public byte getB_TRAINPURP63() {
return B_TRAINPURP63;
}

public byte getB_TRAINPURP71() {
return B_TRAINPURP71;
}

public byte getB_TRAINPURP72() {
return B_TRAINPURP72;
}

public byte getB_TRAINPURP73() {
return B_TRAINPURP73;
}

public byte getB_TRAINQUAL1() {
return B_TRAINQUAL1;
}

public byte getB_TRAINQUAL2() {
return B_TRAINQUAL2;
}

public byte getB_TRAINQUAL3() {
return B_TRAINQUAL3;
}

public byte getB_TRQUAL1() {
return B_TRQUAL1;
}

public byte getB_TRQUAL10() {
return B_TRQUAL10;
}

public byte getB_TRQUAL11() {
return B_TRQUAL11;
}

public byte getB_TRQUAL13() {
return B_TRQUAL13;
}

public byte getB_TRQUAL15() {
return B_TRQUAL15;
}

public byte getB_TRQUAL16() {
return B_TRQUAL16;
}

public byte getB_TRQUAL17() {
return B_TRQUAL17;
}

public byte getB_TRQUAL18() {
return B_TRQUAL18;
}

public byte getB_TRQUAL19() {
return B_TRQUAL19;
}

public byte getB_TRQUAL2() {
return B_TRQUAL2;
}

public byte getB_TRQUAL20() {
return B_TRQUAL20;
}

public byte getB_TRQUAL21() {
return B_TRQUAL21;
}

public byte getB_TRQUAL22() {
return B_TRQUAL22;
}

public byte getB_TRQUAL23() {
return B_TRQUAL23;
}

public byte getB_TRQUAL24() {
return B_TRQUAL24;
}

public byte getB_TRQUAL25() {
return B_TRQUAL25;
}

public byte getB_TRQUAL26() {
return B_TRQUAL26;
}

public byte getB_TRQUAL27() {
return B_TRQUAL27;
}

public byte getB_TRQUAL28() {
return B_TRQUAL28;
}

public byte getB_TRQUAL29() {
return B_TRQUAL29;
}

public byte getB_TRQUAL3() {
return B_TRQUAL3;
}

public byte getB_TRQUAL30() {
return B_TRQUAL30;
}

public byte getB_TRQUAL31() {
return B_TRQUAL31;
}

public byte getB_TRQUAL4() {
return B_TRQUAL4;
}

public byte getB_TRQUAL5() {
return B_TRQUAL5;
}

public byte getB_TRQUAL6() {
return B_TRQUAL6;
}

public byte getB_TRQUAL7() {
return B_TRQUAL7;
}

public byte getB_TRQUAL8() {
return B_TRQUAL8;
}

public byte getB_TRQUAL9() {
return B_TRQUAL9;
}

public byte getB_TRWHO1() {
return B_TRWHO1;
}

public byte getB_TRWHO2() {
return B_TRWHO2;
}

public byte getB_TRWHO3() {
return B_TRWHO3;
}

public byte getB_TUIN1() {
return B_TUIN1;
}

public byte getB_TUJBPL() {
return B_TUJBPL;
}

public byte getB_TWKCAR() {
return B_TWKCAR;
}

public byte getB_TWKCARY1() {
return B_TWKCARY1;
}

public byte getB_TWKCARY10() {
return B_TWKCARY10;
}

public byte getB_TWKCARY11() {
return B_TWKCARY11;
}

public byte getB_TWKCARY12() {
return B_TWKCARY12;
}

public byte getB_TWKCARY13() {
return B_TWKCARY13;
}

public byte getB_TWKCARY14() {
return B_TWKCARY14;
}

public byte getB_TWKCARY2() {
return B_TWKCARY2;
}

public byte getB_TWKCARY3() {
return B_TWKCARY3;
}

public byte getB_TWKCARY4() {
return B_TWKCARY4;
}

public byte getB_TWKCARY5() {
return B_TWKCARY5;
}

public byte getB_TWKCARY6() {
return B_TWKCARY6;
}

public byte getB_TWKCARY7() {
return B_TWKCARY7;
}

public byte getB_TWKCARY8() {
return B_TWKCARY8;
}

public byte getB_TWKCARY9() {
return B_TWKCARY9;
}

public byte getB_TWKCARY97() {
return B_TWKCARY97;
}

public byte getB_TWKCARYM() {
return B_TWKCARYM;
}

public byte getB_TWKDIFF1() {
return B_TWKDIFF1;
}

public byte getB_TWKDIFF2() {
return B_TWKDIFF2;
}

public byte getB_TWKDIFF3() {
return B_TWKDIFF3;
}

public byte getB_TWKDIFF4() {
return B_TWKDIFF4;
}

public byte getB_TWKDIFF5() {
return B_TWKDIFF5;
}

public byte getB_TWKDIFF6() {
return B_TWKDIFF6;
}

public byte getB_TWKDIFF7() {
return B_TWKDIFF7;
}

public byte getB_TWKDIFF8() {
return B_TWKDIFF8;
}

public byte getB_TWKDIFF97() {
return B_TWKDIFF97;
}

public byte getB_TWKDIFFM() {
return B_TWKDIFFM;
}

public byte getB_UKBORN() {
return B_UKBORN;
}

public byte getB_UNDQUS() {
return B_UNDQUS;
}

public byte getB_URBAN_DV() {
return B_URBAN_DV;
}

public byte getB_USBREAD() {
return B_USBREAD;
}

public byte getB_USDAIRY() {
return B_USDAIRY;
}

public byte getB_VOLFREQ() {
return B_VOLFREQ;
}

public short getB_VOLHRS() {
return B_VOLHRS;
}

public byte getB_VOLUN() {
return B_VOLUN;
}

public byte getB_VOTE1() {
return B_VOTE1;
}

public byte getB_VOTE2() {
return B_VOTE2;
}

public byte getB_VOTE3() {
return B_VOTE3;
}

public byte getB_VOTE4() {
return B_VOTE4;
}

public byte getB_VOTE5() {
return B_VOTE5;
}

public byte getB_VOTE6() {
return B_VOTE6;
}

public byte getB_VOTE7() {
return B_VOTE7;
}

public byte getB_VOTE8() {
return B_VOTE8;
}

public byte getB_VOTEINTENT() {
return B_VOTEINTENT;
}

public byte getB_VOTENORM() {
return B_VOTENORM;
}

public byte getB_VOUCHER() {
return B_VOUCHER;
}

public byte getB_WALKPACE() {
return B_WALKPACE;
}

public byte getB_WKAUT1() {
return B_WKAUT1;
}

public byte getB_WKAUT2() {
return B_WKAUT2;
}

public byte getB_WKAUT3() {
return B_WKAUT3;
}

public byte getB_WKAUT4() {
return B_WKAUT4;
}

public byte getB_WKAUT5() {
return B_WKAUT5;
}

public byte getB_WKENDS() {
return B_WKENDS;
}

public byte getB_WKFRUIT() {
return B_WKFRUIT;
}

public byte getB_WKHOME() {
return B_WKHOME;
}

public byte getB_WKPHYS() {
return B_WKPHYS;
}

public byte getB_WKPLSAM() {
return B_WKPLSAM;
}

public byte getB_WKTIME() {
return B_WKTIME;
}

public byte getB_WKVEGE() {
return B_WKVEGE;
}

public byte getB_WLK10M() {
return B_WLK10M;
}

public byte getB_WLK30MIN() {
return B_WLK30MIN;
}

public short getB_WORKDIS() {
return B_WORKDIS;
}

public byte getB_WORKTRAV() {
return B_WORKTRAV;
}

public byte getB_XPMOVE() {
return B_XPMOVE;
}

public byte getB_XTRA5MINOSM_DV() {
return B_XTRA5MINOSM_DV;
}

public byte getB_XTRA5MIN_DV() {
return B_XTRA5MIN_DV;
}

public short getB_YR2UK4() {
return B_YR2UK4;
}

public int getPID() {
return PID;
}

public US_Wave2_HHOLD_Record(String line) {
s = line.split("\t");
initPIDP(s[0]);
initPID(s[1]);
initB_HIDP(s[2]);
initB_PNO(s[3]);
initB_HHORIG(s[4]);
initB_MEMORIG(s[5]);
initB_PSU(s[6]);
initB_STRATA(s[7]);
initB_SAMPST(s[8]);
initB_MONTH(s[9]);
initB_IVFIO(s[10]);
initB_IOUTCOME(s[11]);
initB_SEX(s[12]);
initB_DVAGE(s[13]);
initB_BIRTHY(s[14]);
initB_CINDTIME(s[15]);
initB_NEWPER(s[16]);
initB_NEWENTRANT(s[17]);
initB_LVWHY(s[18]);
initB_LVMTHP(s[19]);
initB_LVYRP(s[20]);
initB_ADSTATUS(s[21]);
initB_NCH14RESP(s[22]);
initB_NCH415RESP(s[23]);
initB_NCHRESP(s[24]);
initB_NCHUND18RESP(s[25]);
initB_NATCH01(s[26]);
initB_NATCH02(s[27]);
initB_NATCH03(s[28]);
initB_NATCH04(s[29]);
initB_NATCH05(s[30]);
initB_NATCH06(s[31]);
initB_NATCH07(s[32]);
initB_NATCH08(s[33]);
initB_NATCH09(s[34]);
initB_NATCH10(s[35]);
initB_NATCH11(s[36]);
initB_NATCH12(s[37]);
initB_NATCH13(s[38]);
initB_NATCH14(s[39]);
initB_NATCH15(s[40]);
initB_NATCH16(s[41]);
initB_NNATCH(s[42]);
initB_NADOPTCH(s[43]);
initB_ADOPTCH01(s[44]);
initB_ADOPTCH02(s[45]);
initB_ADOPTCH03(s[46]);
initB_ADOPTCH04(s[47]);
initB_ADOPTCH05(s[48]);
initB_ADOPTCH06(s[49]);
initB_ADOPTCH07(s[50]);
initB_ADOPTCH08(s[51]);
initB_ADOPTCH09(s[52]);
initB_ADOPTCH10(s[53]);
initB_ADOPTCH11(s[54]);
initB_ADOPTCH12(s[55]);
initB_ADOPTCH13(s[56]);
initB_ADOPTCH14(s[57]);
initB_ADOPTCH15(s[58]);
initB_ADOPTCH16(s[59]);
initB_NCHUNDER16(s[60]);
initB_NCH5TO15(s[61]);
initB_NCH10TO15(s[62]);
initB_ALLCH01(s[63]);
initB_ALLCH02(s[64]);
initB_ALLCH03(s[65]);
initB_ALLCH04(s[66]);
initB_ALLCH05(s[67]);
initB_ALLCH06(s[68]);
initB_ALLCH07(s[69]);
initB_ALLCH08(s[70]);
initB_ALLCH09(s[71]);
initB_ALLCH10(s[72]);
initB_ALLCH11(s[73]);
initB_ALLCH12(s[74]);
initB_ALLCH13(s[75]);
initB_ALLCH14(s[76]);
initB_ALLCH15(s[77]);
initB_ALLCH16(s[78]);
initB_ISTRTDATY(s[79]);
initB_ISTRTDATM(s[80]);
initB_ISTRTDATD(s[81]);
initB_CHKSEX(s[82]);
initB_CHKDOB(s[83]);
initB_MVEVER(s[84]);
initB_MVMNTH(s[85]);
initB_MVYR(s[86]);
initB_LKMOVE(s[87]);
initB_XPMOVE(s[88]);
initB_JBSTAT(s[89]);
initB_MLSTATCHK(s[90]);
initB_MLSTAT(s[91]);
initB_DRIVE(s[92]);
initB_CARUSE(s[93]);
initB_MOBUSE(s[94]);
initB_NETUSE(s[95]);
initB_UKBORN(s[96]);
initB_PLBORNC(s[97]);
initB_YR2UK4(s[98]);
initB_CITZN1(s[99]);
initB_CITZN2(s[100]);
initB_CITZN3(s[101]);
initB_QFHIGH(s[102]);
initB_QUALOC(s[103]);
initB_QFVOC1(s[104]);
initB_QFVOC2(s[105]);
initB_QFVOC3(s[106]);
initB_QFVOC4(s[107]);
initB_QFVOC5(s[108]);
initB_QFVOC6(s[109]);
initB_QFVOC7(s[110]);
initB_QFVOC8(s[111]);
initB_QFVOC9(s[112]);
initB_QFVOC10(s[113]);
initB_QFVOC11(s[114]);
initB_QFVOC12(s[115]);
initB_QFVOC13(s[116]);
initB_QFVOC14(s[117]);
initB_QFVOC15(s[118]);
initB_QFVOC96(s[119]);
initB_SCHOOL(s[120]);
initB_SCEND(s[121]);
initB_SCHLLOC(s[122]);
initB_SCHOK(s[123]);
initB_FENOW(s[124]);
initB_FEEND(s[125]);
initB_J1NONE(s[126]);
initB_J1SEMP(s[127]);
initB_J1BOSS(s[128]);
initB_J1MNGR(s[129]);
initB_PAEDQF(s[130]);
initB_MAEDQF(s[131]);
initB_EDTYPE(s[132]);
initB_EDASP(s[133]);
initB_FEDLIK(s[134]);
initB_FEDNT(s[135]);
initB_OCIMPA(s[136]);
initB_OCIMPB(s[137]);
initB_OCIMPE(s[138]);
initB_OCIMPF(s[139]);
initB_OCIMPI(s[140]);
initB_OCIMPK(s[141]);
initB_OCIMPL(s[142]);
initB_FUTRA(s[143]);
initB_FUTRB(s[144]);
initB_FUTRC(s[145]);
initB_FUTRD(s[146]);
initB_FUTRE(s[147]);
initB_FUTRF(s[148]);
initB_FUTRG(s[149]);
initB_FUTRH(s[150]);
initB_FUTRI(s[151]);
initB_FUTRJ(s[152]);
initB_FUTRK(s[153]);
initB_FUTRL(s[154]);
initB_PAJU(s[155]);
initB_MAJU(s[156]);
initB_PACOB(s[157]);
initB_PAYRUK(s[158]);
initB_MACOB(s[159]);
initB_MAYRUK(s[160]);
initB_NATID1(s[161]);
initB_NATID2(s[162]);
initB_NATID3(s[163]);
initB_NATID4(s[164]);
initB_NATID5(s[165]);
initB_NATID6(s[166]);
initB_NATID97(s[167]);
initB_RACEL(s[168]);
initB_RACELO_CODE(s[169]);
initB_KIDLANG(s[170]);
initB_ETHID2(s[171]);
initB_ETHID3(s[172]);
initB_ETHID4A(s[173]);
initB_ETHID4B(s[174]);
initB_ETHID5(s[175]);
initB_ETHID6(s[176]);
initB_ETHID7(s[177]);
initB_ETHID8(s[178]);
initB_ETHID9(s[179]);
initB_ETHID10(s[180]);
initB_ETHID11(s[181]);
initB_ETHID12(s[182]);
initB_ETHID13(s[183]);
initB_ETHID14(s[184]);
initB_ETHCLOSE1(s[185]);
initB_ETHCLOSE2A(s[186]);
initB_ETHCLOSE2B(s[187]);
initB_ETHCLOSE3(s[188]);
initB_ETHCLOSE4A(s[189]);
initB_ETHCLOSE4B(s[190]);
initB_ETHCLOSE5(s[191]);
initB_ETHCLOSE6(s[192]);
initB_ETHCLOSE7(s[193]);
initB_ETHCLOSE8(s[194]);
initB_ETHCLOSE9(s[195]);
initB_ETHCLOSE10(s[196]);
initB_ETHCLOSE11(s[197]);
initB_PRIDE2(s[198]);
initB_PRIDE4A(s[199]);
initB_PRIDE4B(s[200]);
initB_PRIDE6(s[201]);
initB_PRIDE7(s[202]);
initB_PRIDE5(s[203]);
initB_PRIDE8(s[204]);
initB_PRIDE9(s[205]);
initB_PRIDE10(s[206]);
initB_PRIDE11(s[207]);
initB_PRIDE12(s[208]);
initB_PRIDE13(s[209]);
initB_PRIDE14(s[210]);
initB_FOOD1(s[211]);
initB_FOOD2(s[212]);
initB_FOOD3(s[213]);
initB_FOOD4(s[214]);
initB_FOOD5(s[215]);
initB_FOOD6(s[216]);
initB_FOOD7(s[217]);
initB_OPRLG(s[218]);
initB_OPRLG0NI(s[219]);
initB_NIREL(s[220]);
initB_NIACT(s[221]);
initB_OPRLG0(s[222]);
initB_OPRLG1(s[223]);
initB_SF1(s[224]);
initB_USDAIRY(s[225]);
initB_USBREAD(s[226]);
initB_WKFRUIT(s[227]);
initB_WKVEGE(s[228]);
initB_FRUVEGE(s[229]);
initB_WLK10M(s[230]);
initB_DAYWLK(s[231]);
initB_WLK30MIN(s[232]);
initB_WALKPACE(s[233]);
initB_SMEVER(s[234]);
initB_SMNOW(s[235]);
initB_NCIGS(s[236]);
initB_SMCIGS(s[237]);
initB_SMNCIGS(s[238]);
initB_AGLQUIT(s[239]);
initB_SMAGBG(s[240]);
initB_HEALTH(s[241]);
initB_HOSPC1(s[242]);
initB_HOSPDC1(s[243]);
initB_HOSPC2(s[244]);
initB_HOSPDC2(s[245]);
initB_HOSPC3(s[246]);
initB_HOSPDC3(s[247]);
initB_HOSPC4(s[248]);
initB_HOSPDC4(s[249]);
initB_HOSPC5(s[250]);
initB_HOSPDC5(s[251]);
initB_HOSPC6(s[252]);
initB_HOSPDC6(s[253]);
initB_HOSPC7(s[254]);
initB_HOSPDC7(s[255]);
initB_HOSPC8(s[256]);
initB_HOSPDC8(s[257]);
initB_DISDIF1(s[258]);
initB_DISDIF2(s[259]);
initB_DISDIF3(s[260]);
initB_DISDIF4(s[261]);
initB_DISDIF5(s[262]);
initB_DISDIF6(s[263]);
initB_DISDIF7(s[264]);
initB_DISDIF8(s[265]);
initB_DISDIF9(s[266]);
initB_DISDIF10(s[267]);
initB_DISDIF11(s[268]);
initB_DISDIF12(s[269]);
initB_DISDIF96(s[270]);
initB_AIDHH(s[271]);
initB_AIDHUA1(s[272]);
initB_AIDHUA2(s[273]);
initB_AIDHUA3(s[274]);
initB_AIDHUA4(s[275]);
initB_AIDHUA5(s[276]);
initB_AIDHUA6(s[277]);
initB_AIDHUA7(s[278]);
initB_AIDHUA8(s[279]);
initB_AIDHUA9(s[280]);
initB_AIDHUA10(s[281]);
initB_AIDHUA11(s[282]);
initB_AIDHUA12(s[283]);
initB_AIDHUA13(s[284]);
initB_AIDHUA14(s[285]);
initB_AIDHUA15(s[286]);
initB_AIDHUA16(s[287]);
initB_AIDXHH(s[288]);
initB_NAIDXHH(s[289]);
initB_AIDHU1(s[290]);
initB_AIDHU2(s[291]);
initB_AIDHRS(s[292]);
initB_AIDEFT(s[293]);
initB_LCOHNPI(s[294]);
initB_COH1BM(s[295]);
initB_COH1BY(s[296]);
initB_COH1MR(s[297]);
initB_COH1EM(s[298]);
initB_COH1EY(s[299]);
initB_NMAR(s[300]);
initB_LMAR1M(s[301]);
initB_LMAR1Y(s[302]);
initB_LADOPT(s[303]);
initB_LNADOPT(s[304]);
initB_LPRNT(s[305]);
initB_LNPRNT(s[306]);
initB_CH1BY4(s[307]);
initB_MOVY11(s[308]);
initB_MOVY12(s[309]);
initB_MOVY13(s[310]);
initB_MOVY14(s[311]);
initB_MOVY15(s[312]);
initB_MOVY16(s[313]);
initB_FAMILY(s[314]);
initB_EDUCATION(s[315]);
initB_MEMPLOY(s[316]);
initB_HOUSING(s[317]);
initB_AREA(s[318]);
initB_MOVEOTH_CODE(s[319]);
initB_MOVDIR(s[320]);
initB_PLNOWM(s[321]);
initB_PLNOWY4(s[322]);
initB_RELUP(s[323]);
initB_MSTATSAM(s[324]);
initB_LWWRONG(s[325]);
initB_MSTATSAMN(s[326]);
initB_LASTMSTATCH1(s[327]);
initB_MSTATCH1(s[328]);
initB_STATCM1(s[329]);
initB_STATCY41(s[330]);
initB_DIVCHK1(s[331]);
initB_DIVFIN1(s[332]);
initB_DVM1(s[333]);
initB_DVY41(s[334]);
initB_CMLSTAT1(s[335]);
initB_LASTMSTATCH2(s[336]);
initB_MSTATCH2(s[337]);
initB_STATCM2(s[338]);
initB_STATCY42(s[339]);
initB_DIVCHK2(s[340]);
initB_DIVFIN2(s[341]);
initB_DVM2(s[342]);
initB_DVY42(s[343]);
initB_CMLSTAT2(s[344]);
initB_LASTMSTATCH3(s[345]);
initB_MSTATCH3(s[346]);
initB_STATCM3(s[347]);
initB_STATCY43(s[348]);
initB_DIVCHK3(s[349]);
initB_DIVFIN3(s[350]);
initB_DVM3(s[351]);
initB_DVY43(s[352]);
initB_CMLSTAT3(s[353]);
initB_COHAB(s[354]);
initB_COHABN(s[355]);
initB_LMCBM1(s[356]);
initB_LMCBY41(s[357]);
initB_CURRPART1(s[358]);
initB_LMSPM1(s[359]);
initB_LMSPY41(s[360]);
initB_LMCBM2(s[361]);
initB_LMCBY42(s[362]);
initB_CURRPART2(s[363]);
initB_LMSPM2(s[364]);
initB_LMSPY42(s[365]);
initB_LMCBM3(s[366]);
initB_LMCBY43(s[367]);
initB_CURRPART3(s[368]);
initB_LMSPM3(s[369]);
initB_LMSPY43(s[370]);
initB_LMCBM4(s[371]);
initB_LMCBY44(s[372]);
initB_CURRPART4(s[373]);
initB_LMSPM4(s[374]);
initB_LMSPY44(s[375]);
initB_FATHER(s[376]);
initB_NCHILD(s[377]);
initB_PREG(s[378]);
initB_PREGM1(s[379]);
initB_PREGY41(s[380]);
initB_PREGFERT1(s[381]);
initB_INVITRO1(s[382]);
initB_PREGOUT1(s[383]);
initB_PREGEND1(s[384]);
initB_ENDMNTH1(s[385]);
initB_PREGSMOKE1(s[386]);
initB_SMKMNTH11(s[387]);
initB_SMKMNTH21(s[388]);
initB_SMKMNTH31(s[389]);
initB_PREGSMK11(s[390]);
initB_PREGSMK21(s[391]);
initB_PREGSMK31(s[392]);
initB_PREGDRINK1(s[393]);
initB_LCHMULTI1(s[394]);
initB_PREGM2(s[395]);
initB_PREGY42(s[396]);
initB_PREGFERT2(s[397]);
initB_INVITRO2(s[398]);
initB_PREGOUT2(s[399]);
initB_PREGEND2(s[400]);
initB_ENDMNTH2(s[401]);
initB_PREGSMOKE2(s[402]);
initB_SMKMNTH12(s[403]);
initB_SMKMNTH22(s[404]);
initB_SMKMNTH32(s[405]);
initB_PREGSMK12(s[406]);
initB_PREGSMK22(s[407]);
initB_PREGSMK32(s[408]);
initB_PREGDRINK2(s[409]);
initB_LCHMULTI2(s[410]);
initB_PREGM3(s[411]);
initB_PREGY43(s[412]);
initB_PREGFERT3(s[413]);
initB_INVITRO3(s[414]);
initB_PREGOUT3(s[415]);
initB_PREGEND3(s[416]);
initB_ENDMNTH3(s[417]);
initB_PREGSMOKE3(s[418]);
initB_SMKMNTH13(s[419]);
initB_SMKMNTH23(s[420]);
initB_SMKMNTH33(s[421]);
initB_PREGSMK13(s[422]);
initB_PREGSMK23(s[423]);
initB_PREGSMK33(s[424]);
initB_PREGDRINK3(s[425]);
initB_LCHMULTI3(s[426]);
initB_PREGM4(s[427]);
initB_PREGY44(s[428]);
initB_PREGFERT4(s[429]);
initB_INVITRO4(s[430]);
initB_PREGOUT4(s[431]);
initB_PREGEND4(s[432]);
initB_ENDMNTH4(s[433]);
initB_PREGSMOKE4(s[434]);
initB_SMKMNTH14(s[435]);
initB_SMKMNTH24(s[436]);
initB_SMKMNTH34(s[437]);
initB_PREGSMK14(s[438]);
initB_PREGSMK24(s[439]);
initB_PREGSMK34(s[440]);
initB_PREGDRINK4(s[441]);
initB_LCHMULTI4(s[442]);
initB_PREGM5(s[443]);
initB_PREGY45(s[444]);
initB_PREGFERT5(s[445]);
initB_INVITRO5(s[446]);
initB_PREGOUT5(s[447]);
initB_PREGEND5(s[448]);
initB_ENDMNTH5(s[449]);
initB_PREGSMOKE5(s[450]);
initB_SMKMNTH15(s[451]);
initB_SMKMNTH25(s[452]);
initB_SMKMNTH35(s[453]);
initB_PREGSMK15(s[454]);
initB_PREGSMK25(s[455]);
initB_PREGSMK35(s[456]);
initB_PREGDRINK5(s[457]);
initB_LCHMULTI5(s[458]);
initB_NNEWBORN(s[459]);
initB_HCONDNO1(s[460]);
initB_HCONDNS1(s[461]);
initB_HCONDNO2(s[462]);
initB_HCONDNS2(s[463]);
initB_HCONDNO3(s[464]);
initB_HCONDNS3(s[465]);
initB_HCONDNO4(s[466]);
initB_HCONDNS4(s[467]);
initB_HCONDNO5(s[468]);
initB_HCONDNS5(s[469]);
initB_HCONDNO6(s[470]);
initB_HCONDNS6(s[471]);
initB_HCONDNO7(s[472]);
initB_HCONDNS7(s[473]);
initB_HCONDNO8(s[474]);
initB_HCONDNS8(s[475]);
initB_HCONDN1(s[476]);
initB_HCONDN2(s[477]);
initB_HCONDN3(s[478]);
initB_HCONDN4(s[479]);
initB_HCONDN5(s[480]);
initB_HCONDN6(s[481]);
initB_HCONDN7(s[482]);
initB_HCONDN8(s[483]);
initB_HCONDN9(s[484]);
initB_HCONDN10(s[485]);
initB_HCONDN11(s[486]);
initB_HCONDN12(s[487]);
initB_HCONDN13(s[488]);
initB_HCONDN14(s[489]);
initB_HCONDN15(s[490]);
initB_HCONDN16(s[491]);
initB_HCONDN17(s[492]);
initB_HCONDN96(s[493]);
initB_CONTFT(s[494]);
initB_FTENDM(s[495]);
initB_FTENDY4(s[496]);
initB_FTEDANY(s[497]);
initB_FTQUALS(s[498]);
initB_FTEDSTARTM1(s[499]);
initB_FTEDSTARTY41(s[500]);
initB_FTEDEND1(s[501]);
initB_FT2ENDM1(s[502]);
initB_FT2ENDY41(s[503]);
initB_FTEDMOR1(s[504]);
initB_FTEDSTARTM2(s[505]);
initB_FTEDSTARTY42(s[506]);
initB_FTEDEND2(s[507]);
initB_FT2ENDM2(s[508]);
initB_FT2ENDY42(s[509]);
initB_FTEDMOR2(s[510]);
initB_QUALNEW1(s[511]);
initB_QUALNE(s[512]);
initB_QUALNEW3(s[513]);
initB_QUALNEW4(s[514]);
initB_QUALNEW5(s[515]);
initB_QUALNEW6(s[516]);
initB_QUALNEW7(s[517]);
initB_QUALNEW8(s[518]);
initB_QUALNEW9(s[519]);
initB_QUALNEW10(s[520]);
initB_QUALNEW11(s[521]);
initB_QUALNEW13(s[522]);
initB_QUALNEW15(s[523]);
initB_QUALNEW16(s[524]);
initB_QUALNEW17(s[525]);
initB_QUALNEW18(s[526]);
initB_QUALNEW19(s[527]);
initB_QUALNEW20(s[528]);
initB_QUALNEW21(s[529]);
initB_QUALNEW22(s[530]);
initB_QUALNEW23(s[531]);
initB_QUALNEW24(s[532]);
initB_QUALNEW25(s[533]);
initB_QUALNEW26(s[534]);
initB_QUALNEW27(s[535]);
initB_QUALNEW28(s[536]);
initB_QUALNEW29(s[537]);
initB_QUALNEW30(s[538]);
initB_QUALNEW31(s[539]);
initB_TRAINANY(s[540]);
initB_TRWHO1(s[541]);
initB_TRAINDAYS1(s[542]);
initB_TRAINHRS1(s[543]);
initB_TRAINEND1(s[544]);
initB_TRAINPURP11(s[545]);
initB_TRAINPURP21(s[546]);
initB_TRAINPURP31(s[547]);
initB_TRAINPURP41(s[548]);
initB_TRAINPURP51(s[549]);
initB_TRAINPURP61(s[550]);
initB_TRAINPURP71(s[551]);
initB_TRAINQUAL1(s[552]);
initB_TRWHO2(s[553]);
initB_TRAINDAYS2(s[554]);
initB_TRAINHRS2(s[555]);
initB_TRAINEND2(s[556]);
initB_TRAINPURP12(s[557]);
initB_TRAINPURP22(s[558]);
initB_TRAINPURP32(s[559]);
initB_TRAINPURP42(s[560]);
initB_TRAINPURP52(s[561]);
initB_TRAINPURP62(s[562]);
initB_TRAINPURP72(s[563]);
initB_TRAINQUAL2(s[564]);
initB_TRWHO3(s[565]);
initB_TRAINDAYS3(s[566]);
initB_TRAINHRS3(s[567]);
initB_TRAINEND3(s[568]);
initB_TRAINPURP13(s[569]);
initB_TRAINPURP23(s[570]);
initB_TRAINPURP33(s[571]);
initB_TRAINPURP43(s[572]);
initB_TRAINPURP53(s[573]);
initB_TRAINPURP63(s[574]);
initB_TRAINPURP73(s[575]);
initB_TRAINQUAL3(s[576]);
initB_TRAINN(s[577]);
initB_TRQUAL1(s[578]);
initB_TRQUAL2(s[579]);
initB_TRQUAL3(s[580]);
initB_TRQUAL4(s[581]);
initB_TRQUAL5(s[582]);
initB_TRQUAL6(s[583]);
initB_TRQUAL7(s[584]);
initB_TRQUAL8(s[585]);
initB_TRQUAL9(s[586]);
initB_TRQUAL10(s[587]);
initB_TRQUAL11(s[588]);
initB_TRQUAL13(s[589]);
initB_TRQUAL15(s[590]);
initB_TRQUAL16(s[591]);
initB_TRQUAL17(s[592]);
initB_TRQUAL18(s[593]);
initB_TRQUAL19(s[594]);
initB_TRQUAL20(s[595]);
initB_TRQUAL21(s[596]);
initB_TRQUAL22(s[597]);
initB_TRQUAL23(s[598]);
initB_TRQUAL24(s[599]);
initB_TRQUAL25(s[600]);
initB_TRQUAL26(s[601]);
initB_TRQUAL27(s[602]);
initB_TRQUAL28(s[603]);
initB_TRQUAL29(s[604]);
initB_TRQUAL30(s[605]);
initB_TRQUAL31(s[606]);
initB_NOTEMPCHK(s[607]);
initB_EMPCHK(s[608]);
initB_EMPSTENDD(s[609]);
initB_EMPSTENDM(s[610]);
initB_EMPSTENDY4(s[611]);
initB_STENDREAS(s[612]);
initB_NXTST(s[613]);
initB_NXTSTELSE(s[614]);
initB_CSTAT(s[615]);
initB_NXTSTENDD(s[616]);
initB_NXTSTENDM(s[617]);
initB_NXTSTENDY4(s[618]);
initB_JBSAMR(s[619]);
initB_WKPLSAM(s[620]);
initB_SAMEJOB(s[621]);
initB_MATLV(s[622]);
initB_MATLVSTD(s[623]);
initB_MATLVSTM(s[624]);
initB_MATLVSTY4(s[625]);
initB_MATLVENDD(s[626]);
initB_MATLVENDM(s[627]);
initB_MATLVENDY4(s[628]);
initB_JBENDD(s[629]);
initB_JBENDM(s[630]);
initB_JBENDY4(s[631]);
initB_JBENDREAS(s[632]);
initB_CJOB(s[633]);
initB_NXTJBHRS(s[634]);
initB_NXTJBES(s[635]);
initB_NXTJBENDD(s[636]);
initB_NXTJBENDM(s[637]);
initB_NXTJBENDY4(s[638]);
initB_CJBATT(s[639]);
initB_NEXT(s[640]);
initB_NEXTSTAT1(s[641]);
initB_NEXTELSE1(s[642]);
initB_CURRSTAT1(s[643]);
initB_NEXTJOB1(s[644]);
initB_CURRJOB1(s[645]);
initB_JOBHOURS1(s[646]);
initB_REASEND1(s[647]);
initB_JBATT1(s[648]);
initB_STATENDD1(s[649]);
initB_STATENDM1(s[650]);
initB_STATENDY41(s[651]);
initB_NEXTSTAT2(s[652]);
initB_NEXTELSE2(s[653]);
initB_CURRSTAT2(s[654]);
initB_NEXTJOB2(s[655]);
initB_CURRJOB2(s[656]);
initB_JOBHOURS2(s[657]);
initB_REASEND2(s[658]);
initB_JBATT2(s[659]);
initB_STATENDD2(s[660]);
initB_STATENDM2(s[661]);
initB_STATENDY42(s[662]);
initB_NEXTSTAT3(s[663]);
initB_NEXTELSE3(s[664]);
initB_CURRSTAT3(s[665]);
initB_NEXTJOB3(s[666]);
initB_CURRJOB3(s[667]);
initB_JOBHOURS3(s[668]);
initB_REASEND3(s[669]);
initB_JBATT3(s[670]);
initB_STATENDD3(s[671]);
initB_STATENDM3(s[672]);
initB_STATENDY43(s[673]);
initB_NEXTSTAT4(s[674]);
initB_NEXTELSE4(s[675]);
initB_CURRSTAT4(s[676]);
initB_NEXTJOB4(s[677]);
initB_CURRJOB4(s[678]);
initB_JOBHOURS4(s[679]);
initB_REASEND4(s[680]);
initB_JBATT4(s[681]);
initB_STATENDD4(s[682]);
initB_STATENDM4(s[683]);
initB_STATENDY44(s[684]);
initB_NEXTSTAT5(s[685]);
initB_NEXTELSE5(s[686]);
initB_CURRSTAT5(s[687]);
initB_NEXTJOB5(s[688]);
initB_CURRJOB5(s[689]);
initB_JOBHOURS5(s[690]);
initB_REASEND5(s[691]);
initB_JBATT5(s[692]);
initB_STATENDD5(s[693]);
initB_STATENDM5(s[694]);
initB_STATENDY45(s[695]);
initB_NEXTSTAT6(s[696]);
initB_NEXTELSE6(s[697]);
initB_CURRSTAT6(s[698]);
initB_NEXTJOB6(s[699]);
initB_CURRJOB6(s[700]);
initB_JOBHOURS6(s[701]);
initB_REASEND6(s[702]);
initB_JBATT6(s[703]);
initB_STATENDD6(s[704]);
initB_STATENDM6(s[705]);
initB_STATENDY46(s[706]);
initB_NEXTSTAT7(s[707]);
initB_NEXTELSE7(s[708]);
initB_CURRSTAT7(s[709]);
initB_NEXTJOB7(s[710]);
initB_CURRJOB7(s[711]);
initB_JOBHOURS7(s[712]);
initB_REASEND7(s[713]);
initB_JBATT7(s[714]);
initB_STATENDD7(s[715]);
initB_STATENDM7(s[716]);
initB_STATENDY47(s[717]);
initB_NEXTSTAT8(s[718]);
initB_NEXTELSE8(s[719]);
initB_CURRSTAT8(s[720]);
initB_NEXTJOB8(s[721]);
initB_CURRJOB8(s[722]);
initB_JOBHOURS8(s[723]);
initB_REASEND8(s[724]);
initB_JBATT8(s[725]);
initB_STATENDD8(s[726]);
initB_STATENDM8(s[727]);
initB_STATENDY48(s[728]);
initB_NEXTSTAT9(s[729]);
initB_NEXTELSE9(s[730]);
initB_CURRSTAT9(s[731]);
initB_NEXTJOB9(s[732]);
initB_CURRJOB9(s[733]);
initB_JOBHOURS9(s[734]);
initB_REASEND9(s[735]);
initB_JBATT9(s[736]);
initB_STATENDD9(s[737]);
initB_STATENDM9(s[738]);
initB_STATENDY49(s[739]);
initB_NEXTSTAT10(s[740]);
initB_NEXTELSE10(s[741]);
initB_CURRSTAT10(s[742]);
initB_NEXTJOB10(s[743]);
initB_CURRJOB10(s[744]);
initB_JOBHOURS10(s[745]);
initB_REASEND10(s[746]);
initB_JBATT10(s[747]);
initB_STATENDD10(s[748]);
initB_STATENDM10(s[749]);
initB_STATENDY410(s[750]);
initB_JBHAS(s[751]);
initB_JBOFF(s[752]);
initB_JBOFFY(s[753]);
initB_JBTERM1(s[754]);
initB_JBTERM2(s[755]);
initB_JBSIC07CHK(s[756]);
initB_JBSOC00CHK(s[757]);
initB_JBSEMPCHK(s[758]);
initB_JBSEMP(s[759]);
initB_JBBGD(s[760]);
initB_JBBGM(s[761]);
initB_JBBGY(s[762]);
initB_JBMNGRCHK(s[763]);
initB_JBMNGR(s[764]);
initB_JBSIZECHK(s[765]);
initB_JBSIZE(s[766]);
initB_JBSECT(s[767]);
initB_JBSECTPUB(s[768]);
initB_JBHRS(s[769]);
initB_JBOT(s[770]);
initB_JBOTPD(s[771]);
initB_PAYGWC(s[772]);
initB_PAYNWC(s[773]);
initB_PAYUSL(s[774]);
initB_PAYU(s[775]);
initB_PAYUWC(s[776]);
initB_PAYUG(s[777]);
initB_PAYTYP(s[778]);
initB_OVTPAY(s[779]);
initB_EXTNSA(s[780]);
initB_EXTRATE(s[781]);
initB_EXTREST(s[782]);
initB_BASNSA(s[783]);
initB_BASRATE(s[784]);
initB_BASREST(s[785]);
initB_OVTNSA(s[786]);
initB_OVTRATE(s[787]);
initB_OVTREST(s[788]);
initB_JBPL(s[789]);
initB_JBTTWT(s[790]);
initB_WORKTRAV(s[791]);
initB_JSBOSS(s[792]);
initB_JSSIZE(s[793]);
initB_JSHRS(s[794]);
initB_JSTYPEB(s[795]);
initB_JSACCS(s[796]);
initB_JSPART(s[797]);
initB_JSPRBM(s[798]);
initB_JSPRBY4(s[799]);
initB_JSPREM(s[800]);
initB_JSPREY4(s[801]);
initB_JSPRLS(s[802]);
initB_JSPRTX(s[803]);
initB_JSPRNI(s[804]);
initB_JSPAYU(s[805]);
initB_JSPAYW(s[806]);
initB_JSPYTX(s[807]);
initB_JSPYNI(s[808]);
initB_JSPL(s[809]);
initB_JSTTWT(s[810]);
initB_JSTTWTB(s[811]);
initB_JSWORKTRAV(s[812]);
initB_WORKDIS(s[813]);
initB_TWKDIFF1(s[814]);
initB_TWKDIFF2(s[815]);
initB_TWKDIFF3(s[816]);
initB_TWKDIFF4(s[817]);
initB_TWKDIFF5(s[818]);
initB_TWKDIFF6(s[819]);
initB_TWKDIFF7(s[820]);
initB_TWKDIFF8(s[821]);
initB_TWKDIFF97(s[822]);
initB_TWKDIFFM(s[823]);
initB_TWKCAR(s[824]);
initB_TWKCARY1(s[825]);
initB_TWKCARY2(s[826]);
initB_TWKCARY3(s[827]);
initB_TWKCARY4(s[828]);
initB_TWKCARY5(s[829]);
initB_TWKCARY6(s[830]);
initB_TWKCARY7(s[831]);
initB_TWKCARY8(s[832]);
initB_TWKCARY9(s[833]);
initB_TWKCARY10(s[834]);
initB_TWKCARY11(s[835]);
initB_TWKCARY12(s[836]);
initB_TWKCARY13(s[837]);
initB_TWKCARY14(s[838]);
initB_TWKCARY97(s[839]);
initB_TWKCARYM(s[840]);
initB_ALTCAR1(s[841]);
initB_ALTCAR2(s[842]);
initB_ALTCAR3(s[843]);
initB_ALTCAR4(s[844]);
initB_ALTCAR5(s[845]);
initB_ALTCAR6(s[846]);
initB_ALTCAR7(s[847]);
initB_ALTCAR8(s[848]);
initB_ALTCAR9(s[849]);
initB_ALTCAR10(s[850]);
initB_ALTCAR11(s[851]);
initB_ALTCAR12(s[852]);
initB_ALTCAR96(s[853]);
initB_ALTCAR97(s[854]);
initB_CARCLUB(s[855]);
initB_CARSHARE(s[856]);
initB_WKHOME(s[857]);
initB_LIFTHH(s[858]);
initB_LIFTXHH(s[859]);
initB_MOTCYC(s[860]);
initB_COMTAXI(s[861]);
initB_COMBUS(s[862]);
initB_COMTRAIN(s[863]);
initB_COMMETRO(s[864]);
initB_COMBIKE(s[865]);
initB_COMWALK(s[866]);
initB_COMOTHER(s[867]);
initB_JBSAT(s[868]);
initB_WKPHYS(s[869]);
initB_JBPERFP(s[870]);
initB_JBONUS(s[871]);
initB_JBRISE(s[872]);
initB_TUJBPL(s[873]);
initB_TUIN1(s[874]);
initB_JBPEN(s[875]);
initB_JBPENM(s[876]);
initB_JBPENY4(s[877]);
initB_PENMCN(s[878]);
initB_PENMPY(s[879]);
initB_PENMTP(s[880]);
initB_PENSPB(s[881]);
initB_WKTIME(s[882]);
initB_WKENDS(s[883]);
initB_JBFLEX1(s[884]);
initB_JBFLEX2(s[885]);
initB_JBFLEX3(s[886]);
initB_JBFLEX4(s[887]);
initB_JBFLEX5(s[888]);
initB_JBFLEX6(s[889]);
initB_JBFLEX7(s[890]);
initB_JBFLEX8(s[891]);
initB_JBFLEX96(s[892]);
initB_JBFXUSE1(s[893]);
initB_JBFXUSE2(s[894]);
initB_JBFXUSE3(s[895]);
initB_JBFXUSE4(s[896]);
initB_JBFXUSE5(s[897]);
initB_JBFXUSE6(s[898]);
initB_JBFXUSE7(s[899]);
initB_JBFXUSE8(s[900]);
initB_JBFXUSE96(s[901]);
initB_JBFXINF(s[902]);
initB_WKAUT1(s[903]);
initB_WKAUT2(s[904]);
initB_WKAUT3(s[905]);
initB_WKAUT4(s[906]);
initB_WKAUT5(s[907]);
initB_DEPENTH1(s[908]);
initB_DEPENTH2(s[909]);
initB_DEPENTH3(s[910]);
initB_DEPENTH4(s[911]);
initB_DEPENTH5(s[912]);
initB_DEPENTH6(s[913]);
initB_JBLKCHA(s[914]);
initB_JBXPCHA(s[915]);
initB_JBLKCHB(s[916]);
initB_JBXPCHB(s[917]);
initB_JBLKCHC(s[918]);
initB_JBXPCHC(s[919]);
initB_JBLKCHD(s[920]);
initB_JBXPCHD(s[921]);
initB_JBLKCHE(s[922]);
initB_JBXPCHE(s[923]);
initB_JBSEC(s[924]);
initB_JULK4WK(s[925]);
initB_JULKJB(s[926]);
initB_JUBGN(s[927]);
initB_JULK4X1(s[928]);
initB_JULK4X2(s[929]);
initB_JULK4X3(s[930]);
initB_JULK4X4(s[931]);
initB_JULK4X5(s[932]);
initB_JULK4X6(s[933]);
initB_JULK4X96(s[934]);
initB_JBHAD(s[935]);
initB_JLENDM(s[936]);
initB_JLENDY(s[937]);
initB_JLSEMP(s[938]);
initB_JLBOSS(s[939]);
initB_JLMNGR(s[940]);
initB_JLSIZE(s[941]);
initB_EPROSH(s[942]);
initB_J2HAS(s[943]);
initB_J2SEMP(s[944]);
initB_J2HRS(s[945]);
initB_J2PAY(s[946]);
initB_RETCHK(s[947]);
initB_AGERET(s[948]);
initB_RTPRO1(s[949]);
initB_RTPRO2(s[950]);
initB_RTPRO3(s[951]);
initB_RTPRO4(s[952]);
initB_RTPRO5(s[953]);
initB_RTPRO6(s[954]);
initB_RTCON1(s[955]);
initB_RTCON2(s[956]);
initB_RTCON3(s[957]);
initB_RTCON4(s[958]);
initB_PENMEX(s[959]);
initB_PPPEX(s[960]);
initB_PPPEXM(s[961]);
initB_SPPEN(s[962]);
initB_RTEXPJB(s[963]);
initB_RTFND1(s[964]);
initB_RTFND2(s[965]);
initB_RTFND3(s[966]);
initB_RTFND4(s[967]);
initB_RTFND5(s[968]);
initB_RTFND6(s[969]);
initB_RTFND7(s[970]);
initB_RTFND8(s[971]);
initB_RTFND9(s[972]);
initB_RTFND10(s[973]);
initB_RTFND96(s[974]);
initB_RETAMT(s[975]);
initB_RETSUF(s[976]);
initB_VOLUN(s[977]);
initB_VOLFREQ(s[978]);
initB_VOLHRS(s[979]);
initB_CHARGV(s[980]);
initB_CHARFREQ(s[981]);
initB_CHARAM(s[982]);
initB_CCARE(s[983]);
initB_CCWORK(s[984]);
initB_BTYPE1(s[985]);
initB_BTYPE2(s[986]);
initB_BTYPE3(s[987]);
initB_BTYPE4(s[988]);
initB_BTYPE5(s[989]);
initB_BTYPE6(s[990]);
initB_BTYPE7(s[991]);
initB_BTYPE8(s[992]);
initB_BTYPE9(s[993]);
initB_BTYPE96(s[994]);
initB_BENUNEMP1(s[995]);
initB_BENUNEMP2(s[996]);
initB_BENUNEMP96(s[997]);
initB_BENDIS1(s[998]);
initB_BENDIS2(s[999]);
initB_BENDIS3(s[1000]);
initB_BENDIS4(s[1001]);
initB_BENDIS5(s[1002]);
initB_BENDIS6(s[1003]);
initB_BENDIS7(s[1004]);
initB_BENDIS8(s[1005]);
initB_BENDIS9(s[1006]);
initB_BENDIS10(s[1007]);
initB_BENDIS11(s[1008]);
initB_BENDIS96(s[1009]);
initB_BENPEN1(s[1010]);
initB_BENPEN2(s[1011]);
initB_BENPEN3(s[1012]);
initB_BENPEN4(s[1013]);
initB_BENPEN5(s[1014]);
initB_BENPEN6(s[1015]);
initB_BENPEN7(s[1016]);
initB_BENPEN8(s[1017]);
initB_BENPEN96(s[1018]);
initB_NISERPS(s[1019]);
initB_BENCB(s[1020]);
initB_BENCTC(s[1021]);
initB_BENFAM1(s[1022]);
initB_BENFAM2(s[1023]);
initB_BENFAM3(s[1024]);
initB_BENFAM4(s[1025]);
initB_BENFAM5(s[1026]);
initB_BENFAM96(s[1027]);
initB_BENTAX1(s[1028]);
initB_BENTAX2(s[1029]);
initB_BENTAX3(s[1030]);
initB_BENTAX4(s[1031]);
initB_BENTAX5(s[1032]);
initB_BENTAX96(s[1033]);
initB_BENHOU1(s[1034]);
initB_BENHOU2(s[1035]);
initB_BENHOU3(s[1036]);
initB_BENHOU4(s[1037]);
initB_BENHOU96(s[1038]);
initB_BENSTA1(s[1039]);
initB_BENSTA2(s[1040]);
initB_BENSTA3(s[1041]);
initB_BENSTA4(s[1042]);
initB_BENSTA5(s[1043]);
initB_BENSTA6(s[1044]);
initB_BENSTA7(s[1045]);
initB_BENSTA8(s[1046]);
initB_BENSTA96(s[1047]);
initB_NFH01(s[1048]);
initB_NFH02(s[1049]);
initB_NFH03(s[1050]);
initB_NFH04(s[1051]);
initB_NFH05(s[1052]);
initB_NFH06(s[1053]);
initB_NFH07(s[1054]);
initB_NFH08(s[1055]);
initB_NFH09(s[1056]);
initB_NFH10(s[1057]);
initB_NFH11(s[1058]);
initB_NFH12(s[1059]);
initB_NFH13(s[1060]);
initB_NFH14(s[1061]);
initB_NFH15(s[1062]);
initB_NFH16(s[1063]);
initB_NFH17(s[1064]);
initB_NFH18(s[1065]);
initB_NFH19(s[1066]);
initB_NFH20(s[1067]);
initB_NFH21(s[1068]);
initB_NFH22(s[1069]);
initB_NFH23(s[1070]);
initB_NFH24(s[1071]);
initB_NFH25(s[1072]);
initB_NFH26(s[1073]);
initB_NFH27(s[1074]);
initB_NFH28(s[1075]);
initB_NFH29(s[1076]);
initB_NFH30(s[1077]);
initB_NFH31(s[1078]);
initB_NFH32(s[1079]);
initB_NFH33(s[1080]);
initB_NFH34(s[1081]);
initB_NFH35(s[1082]);
initB_NFH36(s[1083]);
initB_NFH37(s[1084]);
initB_NFH38(s[1085]);
initB_FIYRDIA(s[1086]);
initB_FIYRDB1(s[1087]);
initB_FIYRDB2(s[1088]);
initB_FIYRDB3(s[1089]);
initB_FIYRDB4(s[1090]);
initB_FIYRDB5(s[1091]);
initB_FIYRDB6(s[1092]);
initB_FINNOW(s[1093]);
initB_FINFUT(s[1094]);
initB_PPEN(s[1095]);
initB_PPENT(s[1096]);
initB_PPYRS(s[1097]);
initB_PPREG(s[1098]);
initB_PPRAM(s[1099]);
initB_PPRAMPC(s[1100]);
initB_SAVE(s[1101]);
initB_SAVED(s[1102]);
initB_SAVREG(s[1103]);
initB_SAVLT(s[1104]);
initB_HUBUYS(s[1105]);
initB_HUFRYS(s[1106]);
initB_HUMOPS(s[1107]);
initB_HUIRON(s[1108]);
initB_HUPOTS(s[1109]);
initB_HUDIY(s[1110]);
initB_HUSITS(s[1111]);
initB_HUBOSS(s[1112]);
initB_HOWLNG(s[1113]);
initB_VOTE1(s[1114]);
initB_VOTE2(s[1115]);
initB_VOTE3(s[1116]);
initB_VOTE4(s[1117]);
initB_VOTE5(s[1118]);
initB_VOTE6(s[1119]);
initB_PERPOLINF(s[1120]);
initB_COLBENS1(s[1121]);
initB_COLBENS2(s[1122]);
initB_COLBENS3(s[1123]);
initB_CIVICDUTY(s[1124]);
initB_POLCOST(s[1125]);
initB_VOTENORM(s[1126]);
initB_PERBFTS(s[1127]);
initB_GRPBFTS(s[1128]);
initB_VOTEINTENT(s[1129]);
initB_DEMORIENT(s[1130]);
initB_VOTE7(s[1131]);
initB_VOTE8(s[1132]);
initB_ARTS1A1(s[1133]);
initB_ARTS1A2(s[1134]);
initB_ARTS1A3(s[1135]);
initB_ARTS1A4(s[1136]);
initB_ARTS1A5(s[1137]);
initB_ARTS1A6(s[1138]);
initB_ARTS1A7(s[1139]);
initB_ARTS1A96(s[1140]);
initB_ARTS1B9(s[1141]);
initB_ARTS1B10(s[1142]);
initB_ARTS1B11(s[1143]);
initB_ARTS1B12(s[1144]);
initB_ARTS1B13(s[1145]);
initB_ARTS1B14(s[1146]);
initB_ARTS1B15(s[1147]);
initB_ARTS1B96(s[1148]);
initB_ARTS1FREQ(s[1149]);
initB_ARTS2A1(s[1150]);
initB_ARTS2A2(s[1151]);
initB_ARTS2A3(s[1152]);
initB_ARTS2A4(s[1153]);
initB_ARTS2A5(s[1154]);
initB_ARTS2A6(s[1155]);
initB_ARTS2A7(s[1156]);
initB_ARTS2A96(s[1157]);
initB_ARTS2B9(s[1158]);
initB_ARTS2B10(s[1159]);
initB_ARTS2B11(s[1160]);
initB_ARTS2B12(s[1161]);
initB_ARTS2B13(s[1162]);
initB_ARTS2B14(s[1163]);
initB_ARTS2B15(s[1164]);
initB_ARTS2B96(s[1165]);
initB_ARTS2FREQ(s[1166]);
initB_MLA1(s[1167]);
initB_MLA2(s[1168]);
initB_MLA3(s[1169]);
initB_MLA96(s[1170]);
initB_LIBFREQ(s[1171]);
initB_ARCFREQ(s[1172]);
initB_MUSFREQ(s[1173]);
initB_HERITAGE1(s[1174]);
initB_HERITAGE2(s[1175]);
initB_HERITAGE3(s[1176]);
initB_HERITAGE4(s[1177]);
initB_HERITAGE5(s[1178]);
initB_HERITAGE6(s[1179]);
initB_HERITAGE7(s[1180]);
initB_HERITAGE8(s[1181]);
initB_HERITAGE96(s[1182]);
initB_HERFREQ(s[1183]);
initB_SPORTS11(s[1184]);
initB_SPORTS12(s[1185]);
initB_SPORTS13(s[1186]);
initB_SPORTS14(s[1187]);
initB_SPORTS15(s[1188]);
initB_SPORTS16(s[1189]);
initB_SPORTS17(s[1190]);
initB_SPORTS18(s[1191]);
initB_SPORTS19(s[1192]);
initB_SPORTS110(s[1193]);
initB_SPORTS111(s[1194]);
initB_SPORTS112(s[1195]);
initB_SPORTS113(s[1196]);
initB_SPORTS114(s[1197]);
initB_SPORTS196(s[1198]);
initB_SPORTS216(s[1199]);
initB_SPORTS217(s[1200]);
initB_SPORTS218(s[1201]);
initB_SPORTS219(s[1202]);
initB_SPORTS220(s[1203]);
initB_SPORTS221(s[1204]);
initB_SPORTS222(s[1205]);
initB_SPORTS223(s[1206]);
initB_SPORTS224(s[1207]);
initB_SPORTS225(s[1208]);
initB_SPORTS226(s[1209]);
initB_SPORTS227(s[1210]);
initB_SPORTS228(s[1211]);
initB_SPORTS229(s[1212]);
initB_SPORTS230(s[1213]);
initB_SPORTS231(s[1214]);
initB_SPORTS296(s[1215]);
initB_SPORTSFREQ(s[1216]);
initB_SPORTS31(s[1217]);
initB_SPORTS32(s[1218]);
initB_SPORTS33(s[1219]);
initB_SPORTS34(s[1220]);
initB_SPORTS35(s[1221]);
initB_SPORTS36(s[1222]);
initB_SPORTS37(s[1223]);
initB_SPORTS38(s[1224]);
initB_SPORTS39(s[1225]);
initB_SPORTS396(s[1226]);
initB_SPORTS3FREQ(s[1227]);
initB_CLUB(s[1228]);
initB_SPORTACT(s[1229]);
initB_ACCESS(s[1230]);
initB_ACC1TO161(s[1231]);
initB_ACC1TO162(s[1232]);
initB_ACC1TO163(s[1233]);
initB_ACC1TO164(s[1234]);
initB_ACC1TO165(s[1235]);
initB_ACC1TO166(s[1236]);
initB_ACC1TO167(s[1237]);
initB_ACC1TO168(s[1238]);
initB_ACC1TO169(s[1239]);
initB_ACC1TO1610(s[1240]);
initB_ACC1TO1611(s[1241]);
initB_ACC1TO1612(s[1242]);
initB_ACC1TO1613(s[1243]);
initB_ACC1TO1614(s[1244]);
initB_ACC1TO1697(s[1245]);
initB_ADVVOUCHER(s[1246]);
initB_VOUCHER(s[1247]);
initB_CHKCOA(s[1248]);
initB_GIVECOA(s[1249]);
initB_LENINDINTV(s[1250]);
initB_INDMODE(s[1251]);
initB_EVENT1(s[1252]);
initB_EVENT1S(s[1253]);
initB_EVENT2(s[1254]);
initB_EVENT2S(s[1255]);
initB_EVENT3(s[1256]);
initB_EVENT3S(s[1257]);
initB_EVENT4(s[1258]);
initB_EVENT4S(s[1259]);
initB_RHLAND_CODE(s[1260]);
initB_RPHMOB_CODE(s[1261]);
initB_RPHWRK_CODE(s[1262]);
initB_REMAIL_CODE(s[1263]);
initB_CTADD1_CODE(s[1264]);
initB_CTADD2_CODE(s[1265]);
initB_CTTOWN_CODE(s[1266]);
initB_CTCNTY_CODE(s[1267]);
initB_CTPCODE_CODE(s[1268]);
initB_CTTEL1_CODE(s[1269]);
initB_CTTEL2_CODE(s[1270]);
initB_CTEMAIL_CODE(s[1271]);
initB_MARSTAT(s[1272]);
initB_LIVESP(s[1273]);
initB_LIVEWITH(s[1274]);
initB_EMPLOY(s[1275]);
initB_LINGUA(s[1276]);
initB_PREL(s[1277]);
initB_PREASON(s[1278]);
initB_PRIPN(s[1279]);
initB_PJULK4WK(s[1280]);
initB_PJBPTFT(s[1281]);
initB_PJSPTFT(s[1282]);
initB_PREARN(s[1283]);
initB_PREARNW(s[1284]);
initB_PREARNA(s[1285]);
initB_PBNFT1(s[1286]);
initB_PBNFT2(s[1287]);
initB_PBNFT3(s[1288]);
initB_PBNFT4(s[1289]);
initB_PBNFT5(s[1290]);
initB_PBNFT6(s[1291]);
initB_PBNFT7(s[1292]);
initB_PBNFT8(s[1293]);
initB_PBNFT9(s[1294]);
initB_PBNFT10(s[1295]);
initB_PBNFT11(s[1296]);
initB_PBNFT12(s[1297]);
initB_PBNFT96(s[1298]);
initB_PRFITB(s[1299]);
initB_PRFITBW(s[1300]);
initB_PRFITBA(s[1301]);
initB_IVINTLANG(s[1302]);
initB_IVWHOINT(s[1303]);
initB_IVCOOP(s[1304]);
initB_SUSP(s[1305]);
initB_UNDQUS(s[1306]);
initB_IVPRSNT(s[1307]);
initB_IVINFNCE(s[1308]);
initB_IVAFFCT11(s[1309]);
initB_IVAFFCT12(s[1310]);
initB_IVAFFCT13(s[1311]);
initB_IVAFFCT14(s[1312]);
initB_IVAFFCT15(s[1313]);
initB_IVAFFCT17(s[1314]);
initB_IVAFFCT21(s[1315]);
initB_IVAFFCT22(s[1316]);
initB_IVAFFCT23(s[1317]);
initB_IVAFFCT27(s[1318]);
initB_IVAFFCT30(s[1319]);
initB_IVAFFCT97(s[1320]);
initB_IVTRANS(s[1321]);
initB_HGBIOM(s[1322]);
initB_HGBIOF(s[1323]);
initB_RESPM16(s[1324]);
initB_RESPF16(s[1325]);
initB_HGADOPTM(s[1326]);
initB_HGADOPTF(s[1327]);
initB_ADRESP17(s[1328]);
initB_HGPART(s[1329]);
initB_ORIGADD(s[1330]);
initB_SCDOBY4(s[1331]);
initB_SCSEX(s[1332]);
initB_SCSF1(s[1333]);
initB_SCSF2A(s[1334]);
initB_SCSF2B(s[1335]);
initB_SCSF3A(s[1336]);
initB_SCSF3B(s[1337]);
initB_SCSF4A(s[1338]);
initB_SCSF4B(s[1339]);
initB_SCSF5(s[1340]);
initB_SCSF6A(s[1341]);
initB_SCSF6B(s[1342]);
initB_SCSF6C(s[1343]);
initB_SCSF7(s[1344]);
initB_SCGHQA(s[1345]);
initB_SCGHQB(s[1346]);
initB_SCGHQC(s[1347]);
initB_SCGHQD(s[1348]);
initB_SCGHQE(s[1349]);
initB_SCGHQF(s[1350]);
initB_SCGHQG(s[1351]);
initB_SCGHQH(s[1352]);
initB_SCGHQI(s[1353]);
initB_SCGHQJ(s[1354]);
initB_SCGHQK(s[1355]);
initB_SCGHQL(s[1356]);
initB_SCWHORUPRO(s[1357]);
initB_SCWHORUEDU(s[1358]);
initB_SCWHORURAC(s[1359]);
initB_SCWHORUPOL(s[1360]);
initB_SCWHORUFAM(s[1361]);
initB_SCWHORUSEX(s[1362]);
initB_SCWHORUAGE(s[1363]);
initB_SCAGE1DRINK(s[1364]);
initB_SCEVERDRNK(s[1365]);
initB_SCFALCDRNK(s[1366]);
initB_SCALCL7D(s[1367]);
initB_SCNALCL7D(s[1368]);
initB_SCNALCPINT(s[1369]);
initB_SCNALCSHOT(s[1370]);
initB_SCNALCWINE(s[1371]);
initB_SCNALCPOPS(s[1372]);
initB_SCLFSAT1(s[1373]);
initB_SCLFSAT2(s[1374]);
initB_SCLFSAT7(s[1375]);
initB_SCLFSATO(s[1376]);
initB_SCHMCONT(s[1377]);
initB_SCLOUTCONT(s[1378]);
initB_SCDEM2MANY(s[1379]);
initB_SCTIMEMNUF(s[1380]);
initB_SCWKVFAST(s[1381]);
initB_SCMOLWP(s[1382]);
initB_SCPUNDSTND(s[1383]);
initB_SCPRELY(s[1384]);
initB_SCPOPENUP(s[1385]);
initB_SCPCRITIC(s[1386]);
initB_SCPLETDWN(s[1387]);
initB_SCPANNOY(s[1388]);
initB_SCRELANY(s[1389]);
initB_SCRUNDSTND(s[1390]);
initB_SCRRELY(s[1391]);
initB_SCROPENUP(s[1392]);
initB_SCRCRITIC(s[1393]);
initB_SCRLETDWN(s[1394]);
initB_SCRANNOY(s[1395]);
initB_SCFRENDANY(s[1396]);
initB_SCFUNDSTND(s[1397]);
initB_SCFRELY(s[1398]);
initB_SCFOPENUP(s[1399]);
initB_SCFCRITIC(s[1400]);
initB_SCFLETDWN(s[1401]);
initB_SCFANNOY(s[1402]);
initB_SCSSUP1(s[1403]);
initB_SCSSUPR2R(s[1404]);
initB_SCOPFAMA(s[1405]);
initB_SCOPFAMB(s[1406]);
initB_SCOPFAMD(s[1407]);
initB_SCOPFAMF(s[1408]);
initB_SCOPFAMH(s[1409]);
initB_SCANYELSETXT(s[1410]);
initB_ISTRTDATHH(s[1411]);
initB_ISTRTDATMM(s[1412]);
initB_ISTRTDATSS(s[1413]);
initB_IENDDATHH(s[1414]);
initB_IENDDATMM(s[1415]);
initB_IENDDATSS(s[1416]);
initB_PPSEX(s[1417]);
initB_FNPID(s[1418]);
initB_MNPID(s[1419]);
initB_PN1PID(s[1420]);
initB_PN1PNO(s[1421]);
initB_PN1SEX(s[1422]);
initB_PN2PID(s[1423]);
initB_PN2PNO(s[1424]);
initB_PN2SEX(s[1425]);
initB_PNS1PID(s[1426]);
initB_PNS1PNO(s[1427]);
initB_PNS1SEX(s[1428]);
initB_PNS2PID(s[1429]);
initB_PNS2PNO(s[1430]);
initB_PNS2SEX(s[1431]);
initB_GRFPID(s[1432]);
initB_GRMPID(s[1433]);
initB_J2PAY_IF(s[1434]);
initB_FIMNGRS_TC(s[1435]);
initB_FIMNGRS_DV(s[1436]);
initB_FIMNLABGRS_TC(s[1437]);
initB_FIMNLABGRS_DV(s[1438]);
initB_FIMNLABNET_TC(s[1439]);
initB_FIMNLABNET_DV(s[1440]);
initB_FIYRINVINC_TC(s[1441]);
initB_FIYRINVINC_DV(s[1442]);
initB_FIBENOTHR_TC(s[1443]);
initB_FIBENOTHR_DV(s[1444]);
initB_PAYGL(s[1445]);
initB_PAYNL(s[1446]);
initB_JSPRF(s[1447]);
initB_PAYGU_DV(s[1448]);
initB_PAYG_DV(s[1449]);
initB_PAYNU_DV(s[1450]);
initB_PAYN_DV(s[1451]);
initB_SEEARNGRS_DV(s[1452]);
initB_SEEARNNET_DV(s[1453]);
initB_J2PAY_DV(s[1454]);
initB_J2PAYNET_DV(s[1455]);
initB_FF_IVLOLW(s[1456]);
initB_FF_EVERINT(s[1457]);
initB_FF_JBSTAT(s[1458]);
initB_FF_EMPLW(s[1459]);
initB_FF_TEL(s[1460]);
initB_FF_BENTYPE01(s[1461]);
initB_FF_BENTYPE02(s[1462]);
initB_FF_BENTYPE03(s[1463]);
initB_FF_BENTYPE04(s[1464]);
initB_FF_BENTYPE05(s[1465]);
initB_FF_BENTYPE06(s[1466]);
initB_FF_BENTYPE07(s[1467]);
initB_FF_BENTYPE08(s[1468]);
initB_FF_BENTYPE09(s[1469]);
initB_FF_BENTYPE10(s[1470]);
initB_FF_BENTYPE11(s[1471]);
initB_FF_BENTYPE12(s[1472]);
initB_FF_BENTYPE13(s[1473]);
initB_FF_BENTYPE14(s[1474]);
initB_FF_BENTYPE15(s[1475]);
initB_FF_BENTYPE16(s[1476]);
initB_FF_BENTYPE17(s[1477]);
initB_FF_BENTYPE18(s[1478]);
initB_FF_BENTYPE19(s[1479]);
initB_FF_BENTYPE20(s[1480]);
initB_FF_BENTYPE21(s[1481]);
initB_FF_BENTYPE22(s[1482]);
initB_FF_BENTYPE23(s[1483]);
initB_FF_BENTYPE24(s[1484]);
initB_FF_BENTYPE25(s[1485]);
initB_FF_BENTYPE26(s[1486]);
initB_FF_BENTYPE27(s[1487]);
initB_FF_BENTYPE28(s[1488]);
initB_FF_BENTYPE29(s[1489]);
initB_FF_BENTYPE30(s[1490]);
initB_FF_BENTYPE31(s[1491]);
initB_FF_BENTYPE32(s[1492]);
initB_FF_BENTYPE33(s[1493]);
initB_FF_BENTYPE34(s[1494]);
initB_FF_BENTYPE35(s[1495]);
initB_FF_BENTYPE36(s[1496]);
initB_FF_BENTYPE37(s[1497]);
initB_FF_BENTYPE38(s[1498]);
initB_FF_JBSEMP(s[1499]);
initB_FF_JBMNGR(s[1500]);
initB_FF_JBSIZE(s[1501]);
initB_FF_OPRLG(s[1502]);
initB_FF_OPRLG0(s[1503]);
initB_FF_OPRLG0NI(s[1504]);
initB_FF_UKBORN(s[1505]);
initB_FF_YR2UK4(s[1506]);
initB_SEX_DV(s[1507]);
initB_AGE_DV(s[1508]);
initB_ETHN_DV(s[1509]);
initB_INTDATD_DV(s[1510]);
initB_INTDATM_DV(s[1511]);
initB_INTDATY_DV(s[1512]);
initB_DOBY_DV(s[1513]);
initB_PENSIONER_DV(s[1514]);
initB_NPN_DV(s[1515]);
initB_NPNS_DV(s[1516]);
initB_NGRP_DV(s[1517]);
initB_NNSIB_DV(s[1518]);
initB_NNSSIB_DV(s[1519]);
initB_NPENSIONER_DV(s[1520]);
initB_JBSOCGR_DV(s[1521]);
initB_FIMNMISC_DV(s[1522]);
initB_FIMNPRBEN_DV(s[1523]);
initB_FIMNINVNET_DV(s[1524]);
initB_FIMNPEN_DV(s[1525]);
initB_FIMNSBEN_DV(s[1526]);
initB_FIMNNET_DV(s[1527]);
initB_COUNTRY(s[1528]);
initB_GOR_DV(s[1529]);
initB_URBAN_DV(s[1530]);
initB_HHRESP_DV(s[1531]);
initB_XTRA5MIN_DV(s[1532]);
initB_XTRA5MINOSM_DV(s[1533]);
initB_AGEGR5_DV(s[1534]);
initB_AGEGR10_DV(s[1535]);
initB_AGEGR13_DV(s[1536]);
initB_LIVESP_DV(s[1537]);
initB_COHAB_DV(s[1538]);
initB_SINGLE_DV(s[1539]);
initB_MASTAT_DV(s[1540]);
initB_HHTYPE_DV(s[1541]);
initB_BUNO_DV(s[1542]);
initB_DEPCHL_DV(s[1543]);
initB_NCHILD_DV(s[1544]);
initB_NDEPCHL_DV(s[1545]);
initB_RESPM16_DV(s[1546]);
initB_RESPF16_DV(s[1547]);
initB_RACH16_DV(s[1548]);
initB_HRPID(s[1549]);
initB_HRPNO(s[1550]);
initB_PPID(s[1551]);
initB_PPNO(s[1552]);
initB_SPPID(s[1553]);
initB_SPPNO(s[1554]);
initB_FNPNO(s[1555]);
initB_FNSPID(s[1556]);
initB_FNSPNO(s[1557]);
initB_MNPNO(s[1558]);
initB_MNSPID(s[1559]);
initB_MNSPNO(s[1560]);
initB_GRFPNO(s[1561]);
initB_GRMPNO(s[1562]);
initB_QFHIGH_DV(s[1563]);
initB_NQFHIGH_DV(s[1564]);
initB_QFHIGHFL_DV(s[1565]);
initB_HIQUAL_DV(s[1566]);
initB_NHIQUAL_DV(s[1567]);
initB_NNMPSP_DV(s[1568]);
initB_NMPSP_DV(s[1569]);
initB_NUNMPSP_DV(s[1570]);
initB_JBFT_DV(s[1571]);
initB_JBSOC00_CC(s[1572]);
initB_JBSIC07_CC(s[1573]);
initB_JBIINDB_DV(s[1574]);
initB_JBES2000(s[1575]);
initB_JBSEG_DV(s[1576]);
initB_JBRGSC_DV(s[1577]);
initB_JBNSSEC_DV(s[1578]);
initB_JBNSSEC8_DV(s[1579]);
initB_JBNSSEC5_DV(s[1580]);
initB_JBNSSEC3_DV(s[1581]);
initB_JBISCO88_CC(s[1582]);
initB_JLSOC00_CC(s[1583]);
initB_JLSIC07_CC(s[1584]);
initB_JLIINDB_DV(s[1585]);
initB_JLES2000(s[1586]);
initB_JLSEG_DV(s[1587]);
initB_JLRGSC_DV(s[1588]);
initB_JLNSSEC_DV(s[1589]);
initB_JLNSSEC8_DV(s[1590]);
initB_JLNSSEC5_DV(s[1591]);
initB_JLNSSEC3_DV(s[1592]);
initB_JLISCO88_CC(s[1593]);
initB_PASOC90_CC(s[1594]);
initB_PASOC00_CC(s[1595]);
initB_PASOC10_CC(s[1596]);
initB_PANSSEC5_DV(s[1597]);
initB_MASOC90_CC(s[1598]);
initB_MASOC00_CC(s[1599]);
initB_MASOC10_CC(s[1600]);
initB_MANSSEC5_DV(s[1601]);
initB_J1SOC90_CC(s[1602]);
initB_J1SOC00_CC(s[1603]);
initB_J1SOC10_CC(s[1604]);
initB_J1NSSEC5_DV(s[1605]);
initB_J2SOC90_CC(s[1606]);
initB_J2SOC00_CC(s[1607]);
initB_J2SOC10_CC(s[1608]);
initB_J2NSSEC5_DV(s[1609]);
initB_SCGHQ1_DV(s[1610]);
initB_SCGHQ2_DV(s[1611]);
initB_SF12PCS_DV(s[1612]);
initB_SF12MCS_DV(s[1613]);
initB_JWBS1_DV(s[1614]);
initB_JWBS2_DV(s[1615]);
initB_SCFLAG_DV(s[1616]);
initB_PAYU_DV(s[1617]);
initB_PAYGU_IF(s[1618]);
initB_PAYNU_IF(s[1619]);
initB_SEEARNGRS_IF(s[1620]);
initB_FIYRINVINC_IF(s[1621]);
initB_FIBENOTHR_IF(s[1622]);
initB_FIMNLABGRS_IF(s[1623]);
initB_FIMNGRS_IF(s[1624]);
initB_INDPXUS_XW(s[1625]);
initB_INDINUS_XW(s[1626]);
initB_INDSCUS_XW(s[1627]);
initB_INDPXBH_XW(s[1628]);
initB_INDINBH_XW(s[1629]);
initB_INDSCBH_XW(s[1630]);
initB_INDIN91_LW(s[1631]);
initB_INDIN01_LW(s[1632]);
initB_INDPXUS_LW(s[1633]);
initB_INDINUS_LW(s[1634]);
initB_INDSCUS_LW(s[1635]);
initB_IND5MUS_LW(s[1636]);
initB_INDPXUB_XW(s[1637]);
initB_INDINUB_XW(s[1638]);
initB_INDSCUB_XW(s[1639]);
initB_RACEL_DV(s[1640]);
}
}
