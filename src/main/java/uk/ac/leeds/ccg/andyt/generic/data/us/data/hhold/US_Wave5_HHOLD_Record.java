/**
 * Source code generated by uk.ac.leeds.ccg.andyt.generic.data.us.process.US_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.generic.data.us.data.hhold;
public class US_Wave5_HHOLD_Record extends US_Wave4Or5_HHOLD_Record {
protected byte E_ADCTS;
protected byte E_ADOPTCH01;
protected byte E_ADOPTCH02;
protected byte E_ADOPTCH03;
protected byte E_ADOPTCH04;
protected byte E_ADOPTCH05;
protected boolean E_ADOPTCH06;
protected boolean E_ADOPTCH07;
protected boolean E_ADOPTCH08;
protected boolean E_ADOPTCH09;
protected boolean E_ADOPTCH10;
protected boolean E_ADOPTCH11;
protected boolean E_ADOPTCH12;
protected boolean E_ADOPTCH13;
protected boolean E_ADOPTCH14;
protected boolean E_ADOPTCH15;
protected boolean E_ADOPTCH16;
protected byte E_ADSTATUS;
protected byte E_ADVVOUCHER;
protected byte E_AEDROF1;
protected byte E_AEDROF2;
protected boolean E_AEDROF3;
protected double E_AEPUDA1;
protected byte E_AEPUDA2;
protected boolean E_AEPUDA3;
protected byte E_AEPUWK1;
protected boolean E_AEPUWK2;
protected boolean E_AEPUWK3;
protected byte E_AGEGR10_DV;
protected byte E_AGEGR13_DV;
protected byte E_AGEGR5_DV;
protected byte E_AGERET;
protected byte E_AGE_DV;
protected byte E_AGLQUIT;
protected byte E_AHVWELL;
protected byte E_AIDEFT;
protected byte E_AIDHH;
protected byte E_AIDHRS;
protected byte E_AIDHU1;
protected byte E_AIDHU2;
protected byte E_AIDHUA1;
protected byte E_AIDHUA10;
protected byte E_AIDHUA11;
protected byte E_AIDHUA12;
protected byte E_AIDHUA13;
protected byte E_AIDHUA14;
protected byte E_AIDHUA15;
protected byte E_AIDHUA16;
protected byte E_AIDHUA2;
protected byte E_AIDHUA3;
protected byte E_AIDHUA4;
protected byte E_AIDHUA5;
protected byte E_AIDHUA6;
protected byte E_AIDHUA7;
protected byte E_AIDHUA8;
protected byte E_AIDHUA9;
protected byte E_AIDXHH;
protected byte E_ALLCH01;
protected byte E_ALLCH02;
protected byte E_ALLCH03;
protected byte E_ALLCH04;
protected byte E_ALLCH05;
protected byte E_ALLCH06;
protected byte E_ALLCH07;
protected boolean E_ALLCH08;
protected boolean E_ALLCH09;
protected boolean E_ALLCH10;
protected boolean E_ALLCH11;
protected boolean E_ALLCH12;
protected boolean E_ALLCH13;
protected boolean E_ALLCH14;
protected boolean E_ALLCH15;
protected boolean E_ALLCH16;
protected byte E_ANYMORE;
protected byte E_ANYMORE2;
protected byte E_ANYMORE3;
protected byte E_ANYMORE4;
protected byte E_APVOCIMP;
protected byte E_ARCFREQ;
protected byte E_AREA;
protected byte E_ARGF;
protected byte E_ARGM;
protected byte E_ARTS1A1;
protected byte E_ARTS1A2;
protected byte E_ARTS1A3;
protected byte E_ARTS1A4;
protected byte E_ARTS1A5;
protected byte E_ARTS1A6;
protected byte E_ARTS1A7;
protected byte E_ARTS1A96;
protected byte E_ARTS1B10;
protected byte E_ARTS1B11;
protected byte E_ARTS1B12;
protected byte E_ARTS1B13;
protected byte E_ARTS1B14;
protected byte E_ARTS1B15;
protected byte E_ARTS1B9;
protected byte E_ARTS1B96;
protected byte E_ARTS1FREQ;
protected byte E_ARTS2A1;
protected byte E_ARTS2A2;
protected byte E_ARTS2A3;
protected byte E_ARTS2A4;
protected byte E_ARTS2A5;
protected byte E_ARTS2A6;
protected byte E_ARTS2A7;
protected byte E_ARTS2A96;
protected byte E_ARTS2B10;
protected byte E_ARTS2B11;
protected byte E_ARTS2B12;
protected byte E_ARTS2B13;
protected byte E_ARTS2B14;
protected byte E_ARTS2B15;
protected byte E_ARTS2B9;
protected byte E_ARTS2B96;
protected byte E_ARTS2FREQ;
protected byte E_ATTACKED1;
protected byte E_ATTACKED10;
protected byte E_ATTACKED11;
protected byte E_ATTACKED2;
protected byte E_ATTACKED3;
protected byte E_ATTACKED4;
protected byte E_ATTACKED5;
protected byte E_ATTACKED6;
protected byte E_ATTACKED7;
protected byte E_ATTACKED8;
protected byte E_ATTACKED9;
protected byte E_ATTACKED96;
protected byte E_ATTACKED97;
protected byte E_ATTACKEDO_CODE;
protected byte E_ATTACKED_DV;
protected byte E_AVOIDANCE1;
protected byte E_AVOIDANCE10;
protected byte E_AVOIDANCE11;
protected byte E_AVOIDANCE2;
protected byte E_AVOIDANCE3;
protected byte E_AVOIDANCE4;
protected byte E_AVOIDANCE5;
protected byte E_AVOIDANCE6;
protected byte E_AVOIDANCE7;
protected byte E_AVOIDANCE8;
protected byte E_AVOIDANCE9;
protected byte E_AVOIDANCE96;
protected byte E_AVOIDANCE97;
protected byte E_AVOIDANCEO_CODE;
protected byte E_AVOIDED_DV;
protected byte E_BASNSA;
protected double E_BASRATE;
protected byte E_BASREST;
protected byte E_BENCB;
protected byte E_BENCTC;
protected byte E_BENDIS1;
protected byte E_BENDIS10;
protected byte E_BENDIS11;
protected byte E_BENDIS12;
protected byte E_BENDIS2;
protected byte E_BENDIS3;
protected byte E_BENDIS4;
protected byte E_BENDIS5;
protected byte E_BENDIS6;
protected byte E_BENDIS7;
protected byte E_BENDIS8;
protected byte E_BENDIS9;
protected byte E_BENDIS96;
protected byte E_BENDIS97;
protected byte E_BENESA;
protected byte E_BENFAM1;
protected byte E_BENFAM10;
protected byte E_BENFAM2;
protected byte E_BENFAM3;
protected byte E_BENFAM4;
protected byte E_BENFAM5;
protected byte E_BENFAM6;
protected byte E_BENFAM7;
protected byte E_BENFAM8;
protected byte E_BENFAM9;
protected byte E_BENFAM96;
protected byte E_BENHOU1;
protected byte E_BENHOU2;
protected byte E_BENHOU3;
protected byte E_BENHOU4;
protected byte E_BENHOU5;
protected byte E_BENHOU6;
protected byte E_BENHOU7;
protected byte E_BENHOU8;
protected byte E_BENHOU9;
protected byte E_BENHOU96;
protected byte E_BENPEN1;
protected byte E_BENPEN10;
protected byte E_BENPEN11;
protected byte E_BENPEN12;
protected byte E_BENPEN13;
protected byte E_BENPEN2;
protected byte E_BENPEN3;
protected byte E_BENPEN4;
protected byte E_BENPEN5;
protected byte E_BENPEN6;
protected byte E_BENPEN7;
protected byte E_BENPEN8;
protected byte E_BENPEN96;
protected byte E_BENSTA1;
protected byte E_BENSTA10;
protected byte E_BENSTA11;
protected byte E_BENSTA12;
protected byte E_BENSTA13;
protected byte E_BENSTA2;
protected byte E_BENSTA3;
protected byte E_BENSTA4;
protected byte E_BENSTA5;
protected byte E_BENSTA6;
protected byte E_BENSTA7;
protected byte E_BENSTA9;
protected byte E_BENSTA96;
protected byte E_BENSTA97;
protected byte E_BENTAX1;
protected byte E_BENTAX10;
protected byte E_BENTAX2;
protected byte E_BENTAX3;
protected byte E_BENTAX4;
protected byte E_BENTAX5;
protected byte E_BENTAX7;
protected byte E_BENTAX8;
protected byte E_BENTAX9;
protected byte E_BENTAX96;
protected byte E_BENUNEMP1;
protected byte E_BENUNEMP2;
protected byte E_BENUNEMP3;
protected byte E_BENUNEMP4;
protected byte E_BENUNEMP5;
protected byte E_BENUNEMP6;
protected byte E_BENUNEMP7;
protected byte E_BENUNEMP96;
protected short E_BIRTHY;
protected byte E_BOSSETHN;
protected byte E_BOSSSEX;
protected byte E_BTYPE1;
protected byte E_BTYPE10;
protected byte E_BTYPE2;
protected byte E_BTYPE3;
protected byte E_BTYPE4;
protected byte E_BTYPE5;
protected byte E_BTYPE6;
protected byte E_BTYPE7;
protected byte E_BTYPE8;
protected byte E_BTYPE9;
protected byte E_BTYPE96;
protected byte E_BUNO_DV;
protected byte E_CAIDU1;
protected byte E_CAIDU2;
protected byte E_CAIDU3;
protected byte E_CAIDU4;
protected byte E_CAIDU5;
protected byte E_CAIDU6;
protected byte E_CAIDU7;
protected byte E_CAIDU8;
protected byte E_CAIDU96;
protected byte E_CAIDU97;
protected byte E_CAPGIFTV;
protected byte E_CARUSE;
protected byte E_CASIEND;
protected byte E_CATGIFTV;
protected byte E_CATVOUCHER;
protected byte E_CCARE;
protected byte E_CCWORK;
protected byte E_CDPREAMBLE;
protected short E_CH1BY4;
protected byte E_CHAID1;
protected byte E_CHAID2;
protected byte E_CHAID3;
protected byte E_CHAID4;
protected byte E_CHAID5;
protected byte E_CHAID6;
protected byte E_CHAID7;
protected byte E_CHAID8;
protected byte E_CHAID96;
protected byte E_CHAID97;
protected byte E_CHCON;
protected byte E_CHFAR;
protected byte E_CHILDPNO;
protected byte E_CHKCOA;
protected byte E_CHKRESP;
protected byte E_CHSEE;
protected int E_CINDTIME;
protected byte E_CITZN1;
protected byte E_CITZN2;
protected byte E_CITZN3;
protected byte E_CJBATT;
protected byte E_CJOB;
protected byte E_CLUB;
protected byte E_CMCOKIDNO1;
protected byte E_CMCOKIDNO2;
protected byte E_CMCOKIDNO3;
protected byte E_CMCOKIDNO4;
protected byte E_CMCOKIDNO5;
protected byte E_CMCORD;
protected byte E_CMCORDALL;
protected double E_CMCORDAM;
protected byte E_CMCORDPER;
protected short E_CMCORDRCAM;
protected boolean E_CMCORDRCPR;
protected byte E_CMCORDREC;
protected byte E_CMCORDTM;
protected byte E_CMCSAACT;
protected byte E_CMCSAALL;
protected short E_CMCSAAM;
protected byte E_CMCSANIL1;
protected byte E_CMCSANIL2;
protected byte E_CMCSANIL3;
protected byte E_CMCSANIL4;
protected byte E_CMCSANIL5;
protected byte E_CMCSANIL6;
protected byte E_CMCSANIL7;
protected byte E_CMCSANIL8;
protected byte E_CMCSANIL9;
protected byte E_CMCSANIL97;
protected byte E_CMCSAPER;
protected boolean E_CMCSAPR;
protected byte E_CMFLAG;
protected byte E_CMKNDEVR1;
protected byte E_CMKNDEVR2;
protected byte E_CMKNDEVR3;
protected byte E_CMKNDEVR4;
protected byte E_CMKNDEVR96;
protected byte E_CMKNDEVR97;
protected byte E_CMLSTAT1;
protected byte E_CMLSTAT2;
protected byte E_CMNIL1;
protected byte E_CMNIL10;
protected byte E_CMNIL2;
protected byte E_CMNIL3;
protected byte E_CMNIL4;
protected byte E_CMNIL5;
protected byte E_CMNIL6;
protected byte E_CMNIL7;
protected byte E_CMNIL8;
protected byte E_CMNIL9;
protected byte E_CMNIL97;
protected byte E_CMNKY1;
protected byte E_CMNKY2;
protected byte E_CMNKY3;
protected byte E_CMOTHPAY1;
protected byte E_CMOTHPAY10;
protected byte E_CMOTHPAY11;
protected byte E_CMOTHPAY2;
protected byte E_CMOTHPAY3;
protected byte E_CMOTHPAY4;
protected byte E_CMOTHPAY5;
protected byte E_CMOTHPAY6;
protected byte E_CMOTHPAY7;
protected byte E_CMOTHPAY8;
protected byte E_CMOTHPAY9;
protected byte E_CMOTHPAY96;
protected byte E_CMOTHPAY97;
protected byte E_CMROUTE;
protected byte E_CMSAMEA;
protected byte E_CMSAMEB;
protected byte E_CMSAMEC;
protected byte E_CMVOL;
protected byte E_CMVOLALL;
protected double E_CMVOLAM;
protected byte E_CMVOLKIDNO1;
protected byte E_CMVOLKIDNO2;
protected byte E_CMVOLKIDNO3;
protected byte E_CMVOLKIDNO4;
protected byte E_CMVOLKIDNO5;
protected byte E_CMVOLPER;
protected short E_CMVOLRCAM;
protected byte E_CMVOLRCPR;
protected byte E_CMVOLREC;
protected byte E_CMVOLTM;
protected byte E_COH1BM;
protected short E_COH1BY;
protected byte E_COH1EM;
protected short E_COH1EY;
protected byte E_COH1MR;
protected byte E_COHAB;
protected byte E_COHABN;
protected boolean E_COHAB_DV;
protected byte E_CONSINTRO;
protected byte E_CONTFT;
protected byte E_CORDRECPER;
protected byte E_COUNTRY;
protected byte E_COWOSEXN;
protected byte E_COWOSEXP;
protected byte E_CSACALC;
protected double E_CSACALCAM;
protected byte E_CSAKIDNO1;
protected byte E_CSAKIDNO2;
protected byte E_CSAKIDNO3;
protected byte E_CSAKIDNO4;
protected byte E_CSAKIDNO5;
protected byte E_CSAPAYTO;
protected byte E_CSARECPER;
protected byte E_CSTAT;
protected byte E_CTADD1_CODE;
protected byte E_CTADD2_CODE;
protected byte E_CTCNTY_CODE;
protected byte E_CTCONS;
protected byte E_CTCONSCONF1;
protected byte E_CTCONSCONF2;
protected byte E_CTCONSCONF3;
protected byte E_CTCONSCONF4;
protected byte E_CTCONSCONF5;
protected byte E_CTCONSCONF6;
protected byte E_CTCONSCONF7;
protected byte E_CTCONSCONF8;
protected byte E_CTCONSCONF94;
protected byte E_CTEMAIL_CODE;
protected byte E_CTPCODE_CODE;
protected byte E_CTREL;
protected byte E_CTTEL1_CODE;
protected byte E_CTTEL2_CODE;
protected byte E_CTTOWN_CODE;
protected byte E_CUDDLEKID;
protected byte E_CULTUREA;
protected byte E_CULTUREB;
protected byte E_CULTUREC;
protected byte E_CULTURED;
protected byte E_CULTUREE;
protected byte E_CULTUREF;
protected byte E_CULTUREG;
protected byte E_CURRJOB1;
protected byte E_CURRJOB2;
protected byte E_CURRJOB3;
protected byte E_CURRJOB4;
protected byte E_CURRJOB5;
protected byte E_CURRJOB6;
protected byte E_CURRPART1;
protected byte E_CURRPART2;
protected byte E_CURRPART3;
protected boolean E_CURRPART4;
protected byte E_CURRSTAT1;
protected byte E_CURRSTAT2;
protected byte E_CURRSTAT3;
protected byte E_CURRSTAT4;
protected byte E_CURRSTAT5;
protected boolean E_CURRSTAT6;
protected byte E_DAYWLK;
protected byte E_DCSATM;
protected byte E_DELAY1;
protected byte E_DELAY10;
protected byte E_DELAY2;
protected byte E_DELAY3;
protected byte E_DELAY4;
protected byte E_DELAY5;
protected byte E_DELAY6;
protected byte E_DELAY7;
protected byte E_DELAY8;
protected byte E_DELAY9;
protected boolean E_DEPCHL_DV;
protected byte E_DETINC1;
protected byte E_DETINC2;
protected byte E_DETINC3;
protected byte E_DETINC4;
protected byte E_DETINC5;
protected byte E_DETINC6;
protected byte E_DINNER;
protected byte E_DISDIF1;
protected byte E_DISDIF10;
protected byte E_DISDIF11;
protected byte E_DISDIF12;
protected byte E_DISDIF2;
protected byte E_DISDIF3;
protected byte E_DISDIF4;
protected byte E_DISDIF5;
protected byte E_DISDIF6;
protected byte E_DISDIF7;
protected byte E_DISDIF8;
protected byte E_DISDIF9;
protected byte E_DISDIF96;
protected byte E_DISEFFECTS1;
protected byte E_DISEFFECTS2;
protected byte E_DISEFFECTS3;
protected byte E_DISEFFECTS4;
protected byte E_DISEFFECTS5;
protected byte E_DIVCHK1;
protected boolean E_DIVCHK2;
protected byte E_DIVFIN1;
protected boolean E_DIVFIN2;
protected short E_DOBY_DV;
protected byte E_DONEPROXY;
protected byte E_DRGMJ;
protected byte E_DRGOTH;
protected byte E_DRGSOL;
protected byte E_DRIVE;
protected byte E_DVAGE;
protected byte E_DVM1;
protected boolean E_DVM2;
protected short E_DVY41;
protected boolean E_DVY42;
protected byte E_EATLIVU;
protected byte E_EDASP;
protected byte E_EDLINK;
protected boolean E_EDLINKCONF;
protected boolean E_EDLINKCONFB;
protected boolean E_EDLINKKIDCONFSW;
protected boolean E_EDLINKKIDE;
protected boolean E_EDLINKKIDSWN;
protected boolean E_EDLKKIDCONFE;
protected byte E_EDTYPE;
protected byte E_EDUCATION;
protected byte E_EDUCISGN;
protected boolean E_EDUCKIDSN;
protected byte E_EDUCLINKB1;
protected byte E_EDUCLINKB2;
protected byte E_EDUCLINKB3;
protected byte E_EDUCRECD;
protected byte E_EDUCRSGN;
protected byte E_EDUCSN;
protected byte E_EMAILENT;
protected byte E_EMPCHK;
protected byte E_EMPINTRO;
protected byte E_EMPLOY;
protected byte E_EMPSTENDD;
protected byte E_EMPSTENDM;
protected short E_EMPSTENDY4;
protected byte E_ENDMNTH1;
protected byte E_ENDMNTH2;
protected boolean E_ENDMNTH3;
protected byte E_ENGFORM;
protected byte E_ENGLANG;
protected byte E_ENGREAD;
protected byte E_ENGSPK;
protected byte E_ENGTEL;
protected byte E_EPROSH;
protected byte E_ETCOOTN;
protected byte E_ETCOOTP;
protected byte E_ETCOSAMN;
protected byte E_ETCOSAMP;
protected byte E_ETCOWHN;
protected byte E_ETCOWHP;
protected byte E_ETHCLOSE1;
protected byte E_ETHCLOSE10;
protected byte E_ETHCLOSE11;
protected byte E_ETHCLOSE2A;
protected byte E_ETHCLOSE2B;
protected byte E_ETHCLOSE3;
protected byte E_ETHCLOSE4A;
protected byte E_ETHCLOSE4B;
protected byte E_ETHCLOSE5;
protected byte E_ETHCLOSE6;
protected byte E_ETHCLOSE7;
protected byte E_ETHCLOSE8;
protected byte E_ETHCLOSE9;
protected byte E_ETHID10;
protected byte E_ETHID11;
protected byte E_ETHID12;
protected byte E_ETHID13;
protected byte E_ETHID14;
protected byte E_ETHID2;
protected byte E_ETHID3;
protected byte E_ETHID4A;
protected byte E_ETHID4B;
protected byte E_ETHID5;
protected byte E_ETHID6;
protected byte E_ETHID7;
protected byte E_ETHID8;
protected byte E_ETHID9;
protected byte E_ETHN_DV;
protected byte E_EVENT1;
protected byte E_EVENT1S;
protected byte E_EVENT2;
protected byte E_EVENT2S;
protected byte E_EVENT3;
protected byte E_EVENT3S;
protected byte E_EVENT4;
protected byte E_EVENT4S;
protected byte E_EXPREAM;
protected byte E_EXSAME;
protected byte E_EXTNSA;
protected double E_EXTRATE;
protected byte E_EXTREST;
protected byte E_FAMILY;
protected byte E_FAMSUP;
protected byte E_FARKID;
protected byte E_FATHER;
protected byte E_FEEND;
protected byte E_FENOW;
protected byte E_FF_BENTYPE01;
protected byte E_FF_BENTYPE02;
protected byte E_FF_BENTYPE03;
protected byte E_FF_BENTYPE04;
protected byte E_FF_BENTYPE05;
protected byte E_FF_BENTYPE06;
protected byte E_FF_BENTYPE07;
protected byte E_FF_BENTYPE08;
protected byte E_FF_BENTYPE09;
protected byte E_FF_BENTYPE10;
protected byte E_FF_BENTYPE11;
protected byte E_FF_BENTYPE12;
protected byte E_FF_BENTYPE13;
protected byte E_FF_BENTYPE14;
protected byte E_FF_BENTYPE15;
protected byte E_FF_BENTYPE16;
protected byte E_FF_BENTYPE17;
protected byte E_FF_BENTYPE18;
protected byte E_FF_BENTYPE19;
protected byte E_FF_BENTYPE20;
protected byte E_FF_BENTYPE21;
protected byte E_FF_BENTYPE22;
protected byte E_FF_BENTYPE23;
protected byte E_FF_BENTYPE24;
protected byte E_FF_BENTYPE25;
protected byte E_FF_BENTYPE26;
protected byte E_FF_BENTYPE27;
protected byte E_FF_BENTYPE28;
protected byte E_FF_BENTYPE29;
protected byte E_FF_BENTYPE30;
protected byte E_FF_BENTYPE31;
protected byte E_FF_BENTYPE32;
protected byte E_FF_BENTYPE33;
protected byte E_FF_BENTYPE34;
protected byte E_FF_BENTYPE35;
protected byte E_FF_BENTYPE36;
protected byte E_FF_BENTYPE37;
protected byte E_FF_BENTYPE38;
protected byte E_FF_BENTYPE39;
protected boolean E_FF_BENTYPE40;
protected boolean E_FF_BENTYPE41;
protected byte E_FF_EMPLW;
protected byte E_FF_EVERINT;
protected byte E_FF_IVINTLANG;
protected byte E_FF_IVLOLW;
protected byte E_FF_JBMNGR;
protected byte E_FF_JBSEMP;
protected byte E_FF_JBSIZE;
protected byte E_FF_JBSTAT;
protected byte E_FF_OPRLG;
protected byte E_FF_OPRLG0;
protected byte E_FF_OPRLG0NI;
protected byte E_FF_TEL;
protected byte E_FF_UKBORN;
protected short E_FF_YR2UK4;
protected double E_FIBENOTHR_DV;
protected double E_FIBENOTHR_IF;
protected boolean E_FIBENOTHR_TC;
protected double E_FIMNGRS_DV;
protected double E_FIMNGRS_IF;
protected boolean E_FIMNGRS_TC;
protected double E_FIMNINVNET_DV;
protected double E_FIMNLABGRS_DV;
protected double E_FIMNLABGRS_IF;
protected boolean E_FIMNLABGRS_TC;
protected double E_FIMNLABNET_DV;
protected boolean E_FIMNLABNET_TC;
protected double E_FIMNMISC_DV;
protected double E_FIMNNET_DV;
protected double E_FIMNPEN_DV;
protected double E_FIMNPRBEN_DV;
protected double E_FIMNSBEN_DV;
protected byte E_FINFUT;
protected byte E_FINNOW;
protected byte E_FIYRDB1;
protected byte E_FIYRDB2;
protected byte E_FIYRDB3;
protected byte E_FIYRDB4;
protected byte E_FIYRDB5;
protected byte E_FIYRDB6;
protected int E_FIYRDIA;
protected double E_FIYRINVINC_DV;
protected byte E_FIYRINVINC_IF;
protected boolean E_FIYRINVINC_TC;
protected byte E_FLAGLINKB1;
protected byte E_FLAGLINKB2;
protected byte E_FLAGLINKB3;
protected int E_FNPID;
protected byte E_FNPNO;
protected int E_FNSPID;
protected byte E_FNSPNO;
protected byte E_FOOD1;
protected byte E_FOOD2;
protected byte E_FOOD3;
protected byte E_FOOD4;
protected byte E_FOOD5;
protected byte E_FOOD6;
protected byte E_FOOD7;
protected byte E_FORMDIF;
protected byte E_FRDRG;
protected byte E_FROBULLI;
protected byte E_FROBULLY;
protected byte E_FRPBULLI;
protected byte E_FRPBULLY;
protected byte E_FRUVEGE;
protected byte E_FT2ENDM1;
protected byte E_FT2ENDM2;
protected short E_FT2ENDY41;
protected short E_FT2ENDY42;
protected byte E_FTEDANY;
protected byte E_FTEDEND1;
protected byte E_FTEDEND2;
protected byte E_FTEDMOR1;
protected byte E_FTEDMOR2;
protected byte E_FTEDSTARTM1;
protected byte E_FTEDSTARTM2;
protected short E_FTEDSTARTY41;
protected short E_FTEDSTARTY42;
protected byte E_FTENDM;
protected short E_FTENDY4;
protected short E_FTEXV;
protected byte E_FTEXW;
protected byte E_FTQUALS;
protected short E_FUTRA;
protected short E_FUTRB;
protected short E_FUTRC;
protected short E_FUTRD;
protected short E_FUTRE;
protected short E_FUTRF;
protected short E_FUTRG;
protected short E_FUTRH;
protected short E_FUTRI;
protected short E_FUTRJ;
protected short E_FUTRK;
protected byte E_FUTRL;
protected byte E_GIVECOA;
protected byte E_GOR_DV;
protected int E_GRFPID;
protected byte E_GRFPNO;
protected int E_GRMPID;
protected byte E_GRMPNO;
protected byte E_HASEMAIL;
protected byte E_HASSTEP;
protected byte E_HCOND1;
protected byte E_HCOND10;
protected byte E_HCOND11;
protected byte E_HCOND12;
protected byte E_HCOND13;
protected byte E_HCOND14;
protected byte E_HCOND15;
protected byte E_HCOND16;
protected byte E_HCOND17;
protected byte E_HCOND2;
protected byte E_HCOND3;
protected byte E_HCOND4;
protected byte E_HCOND5;
protected byte E_HCOND6;
protected byte E_HCOND7;
protected byte E_HCOND8;
protected byte E_HCOND9;
protected byte E_HCOND96;
protected byte E_HCONDA01;
protected byte E_HCONDA02;
protected byte E_HCONDA03;
protected byte E_HCONDA04;
protected byte E_HCONDA05;
protected byte E_HCONDA06;
protected byte E_HCONDA07;
protected byte E_HCONDA08;
protected byte E_HCONDA09;
protected byte E_HCONDA10;
protected byte E_HCONDA11;
protected byte E_HCONDA12;
protected byte E_HCONDA13;
protected byte E_HCONDA14;
protected byte E_HCONDA15;
protected byte E_HCONDA16;
protected byte E_HCONDA17;
protected byte E_HCONDN1;
protected byte E_HCONDN10;
protected byte E_HCONDN11;
protected byte E_HCONDN12;
protected byte E_HCONDN13;
protected byte E_HCONDN14;
protected byte E_HCONDN15;
protected byte E_HCONDN16;
protected byte E_HCONDN17;
protected byte E_HCONDN2;
protected byte E_HCONDN3;
protected byte E_HCONDN4;
protected byte E_HCONDN5;
protected byte E_HCONDN6;
protected byte E_HCONDN7;
protected byte E_HCONDN8;
protected byte E_HCONDN9;
protected byte E_HCONDN96;
protected byte E_HCONDNO1;
protected byte E_HCONDNO2;
protected byte E_HCONDNO3;
protected byte E_HCONDNO4;
protected byte E_HCONDNO5;
protected byte E_HCONDNO6;
protected byte E_HCONDNO7;
protected byte E_HCONDNS1;
protected byte E_HCONDNS2;
protected byte E_HCONDNS3;
protected byte E_HCONDNS4;
protected byte E_HCONDNS5;
protected byte E_HCONDNS6;
protected byte E_HCONDNS7;
protected byte E_HCONDS01;
protected byte E_HCONDS02;
protected byte E_HCONDS03;
protected byte E_HCONDS04;
protected byte E_HCONDS05;
protected byte E_HCONDS08;
protected byte E_HCONDS09;
protected byte E_HCONDS10;
protected byte E_HCONDS11;
protected byte E_HCONDS12;
protected byte E_HCONDS13;
protected byte E_HCONDS14;
protected byte E_HCONDS15;
protected byte E_HCONDS16;
protected byte E_HCONDS17;
protected byte E_HEALTH;
protected boolean E_HEALTHKIDSN;
protected byte E_HEALTHSN;
protected byte E_HEDLIK;
protected byte E_HEDNT;
protected byte E_HEDNTO_CODE;
protected byte E_HERFREQ;
protected byte E_HERITAGE1;
protected byte E_HERITAGE2;
protected byte E_HERITAGE3;
protected byte E_HERITAGE4;
protected byte E_HERITAGE5;
protected byte E_HERITAGE6;
protected byte E_HERITAGE7;
protected byte E_HERITAGE8;
protected byte E_HERITAGE96;
protected byte E_HESACONS;
protected byte E_HGADOPTF;
protected byte E_HGADOPTM;
protected byte E_HGBIOF;
protected byte E_HGBIOM;
protected byte E_HGPART;
protected byte E_HHORIG;
protected byte E_HHRESP_DV;
protected byte E_HHTYPE_DV;
protected int E_HIDP;
protected byte E_HIQUAL_DV;
protected byte E_HITSIB;
protected byte E_HLPHMWK;
protected byte E_HLTHISGN;
protected boolean E_HLTHKIDLINK;
protected byte E_HLTHLINK;
protected byte E_HLTHLINKB1;
protected byte E_HLTHLINKB2;
protected byte E_HLTHLINKB3;
protected byte E_HLTHRECD;
protected byte E_HLTHRSGN;
protected byte E_HMRCLINK;
protected byte E_HOSPC1;
protected byte E_HOSPC2;
protected byte E_HOSPC3;
protected byte E_HOSPC4;
protected byte E_HOSPC5;
protected byte E_HOSPC6;
protected byte E_HOSPC7;
protected short E_HOSPDC1;
protected short E_HOSPDC2;
protected byte E_HOSPDC3;
protected byte E_HOSPDC4;
protected byte E_HOSPDC5;
protected byte E_HOSPDC6;
protected boolean E_HOSPDC7;
protected byte E_HOUSING;
protected int E_HRPID;
protected byte E_HRPNO;
protected byte E_IENDDATD;
protected byte E_IENDDATHH;
protected byte E_IENDDATM;
protected byte E_IENDDATMM;
protected byte E_IENDDATSS;
protected short E_IENDDATY;
protected double E_IND5MUS_LW;
protected double E_IND5MUS_XW;
protected double E_INDBD91_LW;
protected double E_INDBDUB_LW;
protected double E_INDIN01_LW;
protected double E_INDIN91_LW;
protected double E_INDINUB_LW;
protected double E_INDINUB_XW;
protected double E_INDINUS_LW;
protected boolean E_INDMODE;
protected double E_INDNS91_LW;
protected double E_INDNSUB_LW;
protected double E_INDPXUB_LW;
protected double E_INDPXUB_XW;
protected double E_INDPXUS_LW;
protected double E_INDSCUB_LW;
protected double E_INDSCUB_XW;
protected double E_INDSCUS_LW;
protected byte E_INSTOK;
protected byte E_INSTOK2;
protected byte E_INSTOK3;
protected byte E_INSTOK4;
protected byte E_INSULTED1;
protected byte E_INSULTED10;
protected byte E_INSULTED11;
protected byte E_INSULTED2;
protected byte E_INSULTED3;
protected byte E_INSULTED4;
protected byte E_INSULTED5;
protected byte E_INSULTED6;
protected byte E_INSULTED7;
protected byte E_INSULTED8;
protected byte E_INSULTED9;
protected byte E_INSULTED96;
protected byte E_INSULTED97;
protected byte E_INSULTEDO_CODE;
protected byte E_INSULTED_DV;
protected byte E_INTCONTACT;
protected byte E_INTDATD_DV;
protected byte E_INTDATM_DV;
protected short E_INTDATY_DV;
protected byte E_INTSIGNHEALTH;
protected byte E_INVITRO1;
protected boolean E_INVITRO2;
protected boolean E_INVITRO3;
protected byte E_IOUTCOME;
protected byte E_ISTRTDATD;
protected byte E_ISTRTDATHH;
protected byte E_ISTRTDATM;
protected byte E_ISTRTDATMM;
protected byte E_ISTRTDATSS;
protected short E_ISTRTDATY;
protected short E_ISYEAR;
protected byte E_IVAFFCT11;
protected byte E_IVAFFCT12;
protected byte E_IVAFFCT13;
protected byte E_IVAFFCT14;
protected byte E_IVAFFCT15;
protected byte E_IVAFFCT17;
protected byte E_IVAFFCT21;
protected byte E_IVAFFCT22;
protected byte E_IVAFFCT23;
protected byte E_IVAFFCT27;
protected byte E_IVAFFCT30;
protected byte E_IVAFFCT97;
protected byte E_IVCOOP;
protected boolean E_IVFIO;
protected byte E_IVINFNCE;
protected byte E_IVLIBAL;
protected byte E_IVLIENG;
protected byte E_IVLITRANS;
protected byte E_IVLIWHO;
protected byte E_IVPRSNT;
protected byte E_J1BOSS;
protected byte E_J1MNGR;
protected byte E_J1NONE;
protected byte E_J1NSSEC5_DV;
protected byte E_J1SEMP;
protected short E_J1SOC00_CC;
protected short E_J1SOC10_CC;
protected byte E_J1SOC90_CC;
protected byte E_J2HAS;
protected short E_J2HRS;
protected byte E_J2NSSEC5_DV;
protected int E_J2PAY;
protected double E_J2PAYNET_DV;
protected double E_J2PAY_DV;
protected byte E_J2PAY_IF;
protected byte E_J2SEMP;
protected short E_J2SOC00_CC;
protected short E_J2SOC10_CC;
protected byte E_J2SOC90_CC;
protected byte E_JBATT1;
protected byte E_JBATT2;
protected byte E_JBATT3;
protected byte E_JBATT4;
protected byte E_JBATT5;
protected byte E_JBATT6;
protected byte E_JBBGD;
protected byte E_JBBGDATD;
protected byte E_JBBGDATM;
protected short E_JBBGDATY;
protected byte E_JBBGM;
protected short E_JBBGY;
protected byte E_JBENDD;
protected byte E_JBENDM;
protected byte E_JBENDREAS;
protected short E_JBENDY4;
protected byte E_JBES2000;
protected byte E_JBFT_DV;
protected byte E_JBHAD;
protected byte E_JBHAS;
protected double E_JBHRS;
protected byte E_JBIINDB_DV;
protected short E_JBISCO88_CC;
protected byte E_JBMNGR;
protected byte E_JBMNGRCHK;
protected byte E_JBNSSEC3_DV;
protected byte E_JBNSSEC5_DV;
protected byte E_JBNSSEC8_DV;
protected byte E_JBNSSEC_DV;
protected byte E_JBOFF;
protected byte E_JBOFFY;
protected byte E_JBOT;
protected byte E_JBOTPD;
protected byte E_JBPL;
protected byte E_JBRGSC_DV;
protected byte E_JBSAMR;
protected byte E_JBSAT;
protected byte E_JBSECT;
protected byte E_JBSECTPUB;
protected byte E_JBSEG_DV;
protected byte E_JBSEMP;
protected byte E_JBSEMPCHK;
protected byte E_JBSIC07CHK;
protected byte E_JBSIC07_CC;
protected byte E_JBSIZE;
protected byte E_JBSIZECHK;
protected byte E_JBSOC00CHK;
protected short E_JBSOC00_CC;
protected short E_JBSOC10_CC;
protected byte E_JBSOCGR_DV;
protected byte E_JBSTAT;
protected byte E_JBTERM1;
protected byte E_JBTERM2;
protected short E_JBTTWT;
protected byte E_JLBOSS;
protected byte E_JLENDM;
protected short E_JLENDY;
protected byte E_JLES2000;
protected byte E_JLIINDB_DV;
protected short E_JLISCO88_CC;
protected byte E_JLMNGR;
protected byte E_JLNSSEC3_DV;
protected byte E_JLNSSEC5_DV;
protected byte E_JLNSSEC8_DV;
protected byte E_JLNSSEC_DV;
protected byte E_JLRGSC_DV;
protected byte E_JLSEG_DV;
protected byte E_JLSEMP;
protected byte E_JLSIC07_CC;
protected byte E_JLSIZE;
protected short E_JLSOC00_CC;
protected short E_JLSOC10_CC;
protected byte E_JOBDENY;
protected byte E_JOBHOURS1;
protected byte E_JOBHOURS2;
protected byte E_JOBHOURS3;
protected byte E_JOBHOURS4;
protected byte E_JOBHOURS5;
protected boolean E_JOBHOURS6;
protected byte E_JOBLOOK;
protected byte E_JSACCS;
protected byte E_JSBOSS;
protected byte E_JSHRS;
protected byte E_JSPART;
protected int E_JSPAYU;
protected byte E_JSPAYW;
protected byte E_JSPL;
protected byte E_JSPRBM;
protected short E_JSPRBY4;
protected byte E_JSPREM;
protected short E_JSPREY4;
protected int E_JSPRF;
protected byte E_JSPRLS;
protected byte E_JSPRNI;
protected byte E_JSPRTX;
protected byte E_JSPYNI;
protected byte E_JSPYTX;
protected byte E_JSSIZE;
protected byte E_JSTTWT;
protected short E_JSTTWTB;
protected byte E_JSTYPEB;
protected byte E_JSWORKTRAV;
protected byte E_JUBGN;
protected byte E_JULK4WK;
protected byte E_JULK4X1;
protected byte E_JULK4X2;
protected byte E_JULK4X3;
protected byte E_JULK4X4;
protected byte E_JULK4X5;
protected byte E_JULK4X6;
protected byte E_JULK4X96;
protected byte E_JULKJB;
protected byte E_KID2UNI01;
protected byte E_KID2UNI02;
protected byte E_KID2UNI03;
protected byte E_KID2UNI04;
protected byte E_KID2UNI05;
protected byte E_KID2UNI06;
protected byte E_KID2UNI07;
protected byte E_KID2UNI08;
protected byte E_KID2UNI09;
protected byte E_KID2UNI10;
protected byte E_KID2UNI11;
protected boolean E_KID2UNI12;
protected boolean E_KID2UNI13;
protected boolean E_KID2UNI14;
protected boolean E_KID2UNI15;
protected boolean E_KID2UNI16;
protected byte E_KIDSPT;
protected byte E_LADOPT;
protected byte E_LATE;
protected byte E_LCHMOR;
protected byte E_LCHMORN;
protected byte E_LCHMULTI1;
protected byte E_LCHMULTI2;
protected boolean E_LCHMULTI3;
protected byte E_LCOHNPI;
protected double E_LENINDINTV;
protected byte E_LEVELIMP;
protected byte E_LGAPED;
protected byte E_LIBFREQ;
protected byte E_LIENG;
protected byte E_LIHOW;
protected byte E_LINGUA;
protected byte E_LITRANS;
protected byte E_LIVESP;
protected boolean E_LIVESP_DV;
protected byte E_LIVEWITH;
protected byte E_LIWHO;
protected byte E_LKMOVE;
protected byte E_LMAR1M;
protected short E_LMAR1Y;
protected byte E_LMCBM1;
protected byte E_LMCBM2;
protected byte E_LMCBM3;
protected byte E_LMCBM4;
protected short E_LMCBY41;
protected short E_LMCBY42;
protected short E_LMCBY43;
protected short E_LMCBY44;
protected byte E_LMSPM1;
protected byte E_LMSPM2;
protected byte E_LMSPM3;
protected byte E_LMSPM4;
protected short E_LMSPY41;
protected short E_LMSPY42;
protected short E_LMSPY43;
protected short E_LMSPY44;
protected byte E_LNADOPT;
protected byte E_LNPRNT;
protected byte E_LPRNT;
protected byte E_LVHM;
protected byte E_LVREL1;
protected byte E_LVREL10;
protected byte E_LVREL2;
protected byte E_LVREL3;
protected byte E_LVREL4;
protected byte E_LVREL5;
protected byte E_LVREL6;
protected byte E_LVREL7;
protected byte E_LVREL8;
protected byte E_LVREL9;
protected byte E_LVREL96;
protected byte E_LVSCHDO;
protected byte E_LWWRONG;
protected byte E_MAAGE;
protected byte E_MACOB;
protected byte E_MACON;
protected byte E_MAFAR;
protected byte E_MAJU;
protected byte E_MALONE;
protected byte E_MAMOSTCON;
protected byte E_MANSSEC5_DV;
protected byte E_MARSTAT;
protected byte E_MASEE;
protected short E_MASOC00_CC;
protected short E_MASOC10_CC;
protected byte E_MASOC90_CC;
protected byte E_MASTAT_DV;
protected byte E_MATLEAVE;
protected byte E_MATLV;
protected byte E_MATLVENDD;
protected byte E_MATLVENDM;
protected short E_MATLVENDY4;
protected byte E_MATLVSTD;
protected byte E_MATLVSTM;
protected short E_MATLVSTY4;
protected byte E_MAYRUK;
protected byte E_MEMORIG;
protected byte E_MEMPLOY;
protected byte E_MLA1;
protected byte E_MLA2;
protected byte E_MLA3;
protected byte E_MLA96;
protected byte E_MLAGST;
protected byte E_MLAGSTU;
protected byte E_MLFUTR;
protected byte E_MLRNOT1;
protected byte E_MLRNOT10;
protected byte E_MLRNOT11;
protected byte E_MLRNOT12;
protected byte E_MLRNOT13;
protected byte E_MLRNOT2;
protected byte E_MLRNOT3;
protected byte E_MLRNOT4;
protected byte E_MLRNOT5;
protected byte E_MLRNOT6;
protected byte E_MLRNOT7;
protected byte E_MLRNOT8;
protected byte E_MLRNOT9;
protected byte E_MLRNOT97;
protected byte E_MLSTAT;
protected byte E_MLSTATCHK;
protected byte E_MLWKFPT;
protected int E_MNPID;
protected byte E_MNPNO;
protected int E_MNSPID;
protected byte E_MNSPNO;
protected byte E_MOBCOMP;
protected byte E_MOBUSE;
protected byte E_MONTH;
protected byte E_MOVDIR;
protected byte E_MOVEOTH_CODE;
protected byte E_MOVY11;
protected byte E_MOVY12;
protected byte E_MOVY13;
protected byte E_MOVY14;
protected byte E_MOVY15;
protected byte E_MOVY16;
protected byte E_MPWEB;
protected byte E_MSTATCH1;
protected byte E_MSTATCH2;
protected byte E_MSTATSAM;
protected byte E_MSTATSAMN;
protected byte E_MUSFREQ;
protected byte E_MVEVER;
protected byte E_MVMNTH;
protected short E_MVYR;
protected byte E_N1619ABS;
protected byte E_NADOPTCH;
protected byte E_NAIDXHH;
protected byte E_NATCH01;
protected byte E_NATCH02;
protected byte E_NATCH03;
protected byte E_NATCH04;
protected byte E_NATCH05;
protected byte E_NATCH06;
protected byte E_NATCH07;
protected byte E_NATCH08;
protected byte E_NATCH09;
protected byte E_NATCH10;
protected byte E_NATCH11;
protected boolean E_NATCH12;
protected boolean E_NATCH13;
protected boolean E_NATCH14;
protected boolean E_NATCH15;
protected boolean E_NATCH16;
protected byte E_NATID1;
protected byte E_NATID2;
protected byte E_NATID3;
protected byte E_NATID4;
protected byte E_NATID5;
protected byte E_NATID6;
protected byte E_NATID97;
protected byte E_NCARS;
protected byte E_NCH10;
protected byte E_NCH10TO15;
protected byte E_NCH14RESP;
protected byte E_NCH3RESP;
protected byte E_NCH415RESP;
protected byte E_NCH5RESP;
protected byte E_NCH5TO15;
protected byte E_NCH8RESP;
protected byte E_NCHILD;
protected byte E_NCHILD_DV;
protected byte E_NCHRESP;
protected byte E_NCHUND18RESP;
protected byte E_NCHUNDER16;
protected byte E_NCIGS;
protected byte E_NCRR1;
protected byte E_NCRR11;
protected byte E_NCRR12;
protected byte E_NCRR3;
protected byte E_NCRR4;
protected byte E_NCRR5;
protected byte E_NCRR6;
protected byte E_NCRR8;
protected byte E_NCRR9;
protected byte E_NCRRM;
protected short E_NCRRY4;
protected byte E_NDEPCHL_DV;
protected byte E_NETPUSE;
protected byte E_NETUSE;
protected byte E_NEXT;
protected byte E_NEXT1;
protected byte E_NEXT2;
protected byte E_NEXT3;
protected byte E_NEXT4;
protected byte E_NEXT5;
protected byte E_NEXT6;
protected byte E_NEXTELSE1;
protected byte E_NEXTELSE2;
protected byte E_NEXTELSE3;
protected byte E_NEXTELSE4;
protected byte E_NEXTELSE5;
protected boolean E_NEXTELSE6;
protected byte E_NEXTJOB1;
protected byte E_NEXTJOB2;
protected byte E_NEXTJOB3;
protected byte E_NEXTJOB4;
protected byte E_NEXTJOB5;
protected byte E_NEXTJOB6;
protected byte E_NEXTSTAT1;
protected byte E_NEXTSTAT2;
protected byte E_NEXTSTAT3;
protected byte E_NEXTSTAT4;
protected byte E_NEXTSTAT5;
protected byte E_NEXTSTAT6;
protected byte E_NFH01;
protected byte E_NFH02;
protected byte E_NFH03;
protected byte E_NFH04;
protected byte E_NFH05;
protected byte E_NFH06;
protected byte E_NFH07;
protected byte E_NFH08;
protected byte E_NFH09;
protected byte E_NFH10;
protected byte E_NFH11;
protected byte E_NFH12;
protected byte E_NFH13;
protected byte E_NFH14;
protected byte E_NFH15;
protected byte E_NFH16;
protected byte E_NFH17;
protected byte E_NFH18;
protected byte E_NFH19;
protected byte E_NFH20;
protected byte E_NFH21;
protected byte E_NFH22;
protected byte E_NFH23;
protected byte E_NFH24;
protected byte E_NFH25;
protected byte E_NFH26;
protected byte E_NFH27;
protected byte E_NFH28;
protected byte E_NFH29;
protected byte E_NFH30;
protected byte E_NFH31;
protected byte E_NFH32;
protected byte E_NFH33;
protected byte E_NFH34;
protected byte E_NFH35;
protected boolean E_NFH36;
protected byte E_NFH37;
protected byte E_NFH38;
protected byte E_NFH39;
protected byte E_NGRP_DV;
protected byte E_NHIQUAL_DV;
protected byte E_NIACT;
protected byte E_NIREL;
protected byte E_NISERPS;
protected byte E_NJOBHIST;
protected byte E_NMAR;
protected byte E_NMPSP_DV;
protected byte E_NNATCH;
protected byte E_NNEWBORN;
protected byte E_NNMPSP_DV;
protected byte E_NNSIB_DV;
protected byte E_NNSSIB_DV;
protected byte E_NOTEMPCHK;
protected byte E_NPENSIONER_DV;
protected byte E_NPNS_DV;
protected byte E_NPN_DV;
protected byte E_NQFHIGH_DV;
protected byte E_NRELS1;
protected byte E_NRELS2;
protected byte E_NRELS3;
protected byte E_NRELS4;
protected byte E_NRELS5;
protected byte E_NRELS6;
protected byte E_NUNDER16;
protected byte E_NUNDER16ABS;
protected byte E_NUNDER20ABS;
protected byte E_NUNMPSP_DV;
protected byte E_NXTENDREAS;
protected byte E_NXTJBENDD;
protected byte E_NXTJBENDM;
protected short E_NXTJBENDY4;
protected byte E_NXTJBES;
protected byte E_NXTJBHRS;
protected byte E_NXTST;
protected byte E_NXTSTELSE;
protected byte E_NXTSTENDD;
protected byte E_NXTSTENDM;
protected short E_NXTSTENDY4;
protected byte E_OCIMPA;
protected byte E_OCIMPB;
protected byte E_OCIMPE;
protected byte E_OCIMPF;
protected byte E_OCIMPI;
protected byte E_OCIMPK;
protected byte E_OCIMPL;
protected byte E_OHCH16;
protected byte E_OLYMACT31;
protected byte E_OLYMACT32;
protected byte E_OLYMACT33;
protected byte E_OLYMACT34;
protected byte E_OLYMACT35;
protected byte E_OLYMACT36;
protected byte E_OLYMACT37;
protected byte E_OLYMACT38;
protected byte E_OLYMACT396;
protected byte E_OLYMACT398;
protected byte E_OLYMPAS31;
protected byte E_OLYMPAS32;
protected byte E_OLYMPAS33;
protected byte E_OLYMPAS34;
protected byte E_OLYMPAS35;
protected byte E_OLYMPAS396;
protected byte E_OLYMPAS398;
protected byte E_OPRLG;
protected byte E_OPRLG0;
protected byte E_OPRLG0NI;
protected byte E_OPRLG1;
protected boolean E_ORIGADD;
protected byte E_OTHCONT;
protected byte E_OVTNSA;
protected byte E_OVTPAY;
protected double E_OVTRATE;
protected byte E_OVTREST;
protected byte E_PAAGE;
protected byte E_PAAID1;
protected byte E_PAAID2;
protected byte E_PAAID3;
protected byte E_PAAID4;
protected byte E_PAAID5;
protected byte E_PAAID6;
protected byte E_PAAID7;
protected byte E_PAAID8;
protected byte E_PAAID96;
protected byte E_PAAID97;
protected byte E_PACOB;
protected byte E_PACON;
protected byte E_PAFAR;
protected byte E_PAIDU1;
protected byte E_PAIDU2;
protected byte E_PAIDU3;
protected byte E_PAIDU4;
protected byte E_PAIDU5;
protected byte E_PAIDU6;
protected byte E_PAIDU7;
protected byte E_PAIDU8;
protected byte E_PAIDU96;
protected byte E_PAIDU97;
protected byte E_PAJU;
protected byte E_PALONE;
protected byte E_PAMOSTCON;
protected byte E_PANSSEC5_DV;
protected byte E_PARCHILD;
protected byte E_PAREVE;
protected byte E_PARMAR;
protected byte E_PARSCH;
protected byte E_PASEE;
protected short E_PASOC00_CC;
protected short E_PASOC10_CC;
protected byte E_PASOC90_CC;
protected int E_PAYGL;
protected double E_PAYGU_DV;
protected byte E_PAYGU_IF;
protected byte E_PAYGWC;
protected double E_PAYG_DV;
protected int E_PAYNL;
protected double E_PAYNU_DV;
protected byte E_PAYNU_IF;
protected byte E_PAYNWC;
protected double E_PAYN_DV;
protected byte E_PAYRUK;
protected byte E_PAYTYP;
protected int E_PAYU;
protected byte E_PAYUG;
protected byte E_PAYUSL;
protected byte E_PAYUWC;
protected double E_PAYU_DV;
protected byte E_PBNFT1;
protected byte E_PBNFT10;
protected byte E_PBNFT11;
protected byte E_PBNFT12;
protected byte E_PBNFT13;
protected byte E_PBNFT2;
protected byte E_PBNFT3;
protected byte E_PBNFT4;
protected byte E_PBNFT5;
protected byte E_PBNFT6;
protected byte E_PBNFT7;
protected byte E_PBNFT8;
protected byte E_PBNFT9;
protected byte E_PBNFT96;
protected byte E_PENMEX;
protected boolean E_PENSIONER_DV;
protected byte E_PJBPTFT;
protected byte E_PJSPTFT;
protected byte E_PJULK4WK;
protected byte E_PLBORNC;
protected byte E_PLIVPAR;
protected byte E_PLNOWM;
protected short E_PLNOWY4;
protected int E_PN1PID;
protected byte E_PN1PNO;
protected byte E_PN1SEX;
protected int E_PN2PID;
protected byte E_PN2PNO;
protected byte E_PN2SEX;
protected byte E_PNO;
protected int E_PNS1PID;
protected byte E_PNS1PNO;
protected byte E_PNS1SEX;
protected int E_PNS2PID;
protected byte E_PNS2PNO;
protected byte E_PNS2SEX;
protected byte E_PPENSIONER;
protected int E_PPID;
protected byte E_PPNO;
protected byte E_PPPEX;
protected byte E_PPPEXM;
protected byte E_PPSEX;
protected byte E_PRAISEKID;
protected byte E_PREARN;
protected byte E_PREARNA;
protected byte E_PREARNW;
protected byte E_PREASON;
protected byte E_PREG;
protected byte E_PREGEND1;
protected byte E_PREGEND2;
protected boolean E_PREGEND3;
protected byte E_PREGFERT1;
protected byte E_PREGFERT2;
protected byte E_PREGFERT3;
protected byte E_PREGM1;
protected byte E_PREGM2;
protected byte E_PREGM3;
protected byte E_PREGOUT1;
protected byte E_PREGOUT2;
protected byte E_PREGOUT3;
protected byte E_PREGSMK11;
protected byte E_PREGSMK12;
protected boolean E_PREGSMK13;
protected byte E_PREGSMK21;
protected byte E_PREGSMK22;
protected boolean E_PREGSMK23;
protected byte E_PREGSMK31;
protected byte E_PREGSMK32;
protected boolean E_PREGSMK33;
protected byte E_PREGSMOKE1;
protected byte E_PREGSMOKE2;
protected boolean E_PREGSMOKE3;
protected short E_PREGY41;
protected short E_PREGY42;
protected short E_PREGY43;
protected byte E_PREL;
protected byte E_PRFITB;
protected byte E_PRFITBA;
protected byte E_PRFITBW;
protected byte E_PRIDE10;
protected byte E_PRIDE11;
protected byte E_PRIDE12;
protected byte E_PRIDE13;
protected byte E_PRIDE14;
protected byte E_PRIDE2;
protected byte E_PRIDE4A;
protected byte E_PRIDE4B;
protected byte E_PRIDE5;
protected byte E_PRIDE6;
protected byte E_PRIDE7;
protected byte E_PRIDE8;
protected byte E_PRIDE9;
protected byte E_PRIPN;
protected byte E_PS1;
protected byte E_PS10;
protected byte E_PS11;
protected byte E_PS12;
protected byte E_PS13;
protected byte E_PS14;
protected byte E_PS15;
protected byte E_PS16;
protected byte E_PS17;
protected byte E_PS18;
protected byte E_PS19;
protected byte E_PS2;
protected byte E_PS20;
protected byte E_PS21;
protected byte E_PS22;
protected byte E_PS23;
protected byte E_PS24;
protected byte E_PS25;
protected byte E_PS26;
protected byte E_PS27;
protected byte E_PS28;
protected byte E_PS29;
protected byte E_PS3;
protected byte E_PS30;
protected byte E_PS31;
protected byte E_PS32;
protected byte E_PS4;
protected byte E_PS5;
protected byte E_PS6;
protected byte E_PS7;
protected byte E_PS8;
protected byte E_PS9;
protected byte E_PSDQA_DV;
protected byte E_PSDQB_DV;
protected byte E_PSDQC_DV;
protected byte E_PSNUMCH;
protected int E_PSU;
protected byte E_PYENRL;
protected byte E_QFHIGH;
protected boolean E_QFHIGHFL_DV;
protected byte E_QFHIGH_DV;
protected byte E_QFVOC1;
protected byte E_QFVOC10;
protected byte E_QFVOC11;
protected byte E_QFVOC12;
protected byte E_QFVOC13;
protected byte E_QFVOC14;
protected byte E_QFVOC15;
protected byte E_QFVOC2;
protected byte E_QFVOC3;
protected byte E_QFVOC4;
protected byte E_QFVOC5;
protected byte E_QFVOC6;
protected byte E_QFVOC7;
protected byte E_QFVOC8;
protected byte E_QFVOC9;
protected byte E_QFVOC96;
protected byte E_QUALNE;
protected byte E_QUALNEW1;
protected byte E_QUALNEW10;
protected byte E_QUALNEW11;
protected byte E_QUALNEW13;
protected byte E_QUALNEW15;
protected byte E_QUALNEW16;
protected byte E_QUALNEW17;
protected byte E_QUALNEW18;
protected byte E_QUALNEW19;
protected byte E_QUALNEW2;
protected byte E_QUALNEW20;
protected byte E_QUALNEW21;
protected byte E_QUALNEW22;
protected byte E_QUALNEW23;
protected byte E_QUALNEW24;
protected byte E_QUALNEW25;
protected byte E_QUALNEW26;
protected byte E_QUALNEW27;
protected byte E_QUALNEW28;
protected byte E_QUALNEW29;
protected byte E_QUALNEW3;
protected byte E_QUALNEW30;
protected byte E_QUALNEW31;
protected byte E_QUALNEW4;
protected byte E_QUALNEW6;
protected byte E_QUALNEW7;
protected byte E_QUALNEW8;
protected byte E_QUALNEW9;
protected byte E_QUALOC;
protected byte E_QUARREL;
protected byte E_RACEL;
protected byte E_RACELAT;
protected byte E_RACELBT;
protected byte E_RACELMT;
protected byte E_RACELOT_CODE;
protected byte E_RACELO_CODE;
protected byte E_RACELT;
protected byte E_RACELWT;
protected byte E_RACEL_DV;
protected boolean E_RACH16_DV;
protected byte E_READDIF;
protected byte E_REASEND1;
protected byte E_REASEND2;
protected byte E_REASEND3;
protected byte E_REASEND4;
protected byte E_REASEND5;
protected boolean E_REASEND6;
protected byte E_RELKID;
protected byte E_RELUP;
protected byte E_REMAIL_CODE;
protected byte E_RESATTACKED1_1;
protected byte E_RESATTACKED1_10;
protected byte E_RESATTACKED1_11;
protected byte E_RESATTACKED1_12;
protected byte E_RESATTACKED1_2;
protected byte E_RESATTACKED1_3;
protected byte E_RESATTACKED1_4;
protected byte E_RESATTACKED1_5;
protected byte E_RESATTACKED1_6;
protected boolean E_RESATTACKED1_7;
protected byte E_RESATTACKED1_8;
protected byte E_RESATTACKED1_9;
protected byte E_RESATTACKED2_1;
protected byte E_RESATTACKED2_10;
protected byte E_RESATTACKED2_11;
protected byte E_RESATTACKED2_12;
protected byte E_RESATTACKED2_2;
protected byte E_RESATTACKED2_3;
protected byte E_RESATTACKED2_4;
protected byte E_RESATTACKED2_5;
protected byte E_RESATTACKED2_6;
protected boolean E_RESATTACKED2_7;
protected byte E_RESATTACKED2_8;
protected byte E_RESATTACKED2_9;
protected byte E_RESATTACKED3_1;
protected byte E_RESATTACKED3_10;
protected byte E_RESATTACKED3_11;
protected byte E_RESATTACKED3_12;
protected byte E_RESATTACKED3_2;
protected byte E_RESATTACKED3_3;
protected byte E_RESATTACKED3_4;
protected byte E_RESATTACKED3_5;
protected byte E_RESATTACKED3_6;
protected boolean E_RESATTACKED3_7;
protected byte E_RESATTACKED3_8;
protected byte E_RESATTACKED3_9;
protected byte E_RESATTACKED4_1;
protected byte E_RESATTACKED4_10;
protected byte E_RESATTACKED4_11;
protected byte E_RESATTACKED4_12;
protected byte E_RESATTACKED4_2;
protected byte E_RESATTACKED4_3;
protected byte E_RESATTACKED4_4;
protected byte E_RESATTACKED4_5;
protected byte E_RESATTACKED4_6;
protected boolean E_RESATTACKED4_7;
protected byte E_RESATTACKED4_8;
protected byte E_RESATTACKED4_9;
protected byte E_RESATTACKED5_1;
protected byte E_RESATTACKED5_10;
protected byte E_RESATTACKED5_11;
protected byte E_RESATTACKED5_12;
protected byte E_RESATTACKED5_2;
protected byte E_RESATTACKED5_3;
protected byte E_RESATTACKED5_4;
protected byte E_RESATTACKED5_5;
protected byte E_RESATTACKED5_6;
protected boolean E_RESATTACKED5_7;
protected byte E_RESATTACKED5_8;
protected byte E_RESATTACKED5_9;
protected byte E_RESATTACKED6_1;
protected byte E_RESATTACKED6_10;
protected byte E_RESATTACKED6_11;
protected byte E_RESATTACKED6_12;
protected byte E_RESATTACKED6_2;
protected byte E_RESATTACKED6_3;
protected byte E_RESATTACKED6_4;
protected byte E_RESATTACKED6_5;
protected byte E_RESATTACKED6_6;
protected boolean E_RESATTACKED6_7;
protected byte E_RESATTACKED6_8;
protected byte E_RESATTACKED6_9;
protected byte E_RESATTACKED7_1;
protected byte E_RESATTACKED7_10;
protected byte E_RESATTACKED7_11;
protected byte E_RESATTACKED7_12;
protected byte E_RESATTACKED7_2;
protected byte E_RESATTACKED7_3;
protected byte E_RESATTACKED7_4;
protected byte E_RESATTACKED7_5;
protected byte E_RESATTACKED7_6;
protected boolean E_RESATTACKED7_7;
protected byte E_RESATTACKED7_8;
protected byte E_RESATTACKED7_9;
protected byte E_RESATTACKED8_1;
protected byte E_RESATTACKED8_10;
protected byte E_RESATTACKED8_11;
protected byte E_RESATTACKED8_12;
protected byte E_RESATTACKED8_2;
protected byte E_RESATTACKED8_3;
protected byte E_RESATTACKED8_4;
protected byte E_RESATTACKED8_5;
protected byte E_RESATTACKED8_6;
protected boolean E_RESATTACKED8_7;
protected byte E_RESATTACKED8_8;
protected byte E_RESATTACKED8_9;
protected byte E_RESATTACKED96_1;
protected byte E_RESATTACKED96_10;
protected byte E_RESATTACKED96_11;
protected byte E_RESATTACKED96_12;
protected byte E_RESATTACKED96_2;
protected byte E_RESATTACKED96_3;
protected byte E_RESATTACKED96_4;
protected byte E_RESATTACKED96_5;
protected byte E_RESATTACKED96_6;
protected boolean E_RESATTACKED96_7;
protected byte E_RESATTACKED96_8;
protected byte E_RESATTACKED96_9;
protected byte E_RESATTACKED97_1;
protected byte E_RESATTACKED97_10;
protected byte E_RESATTACKED97_11;
protected byte E_RESATTACKED97_12;
protected byte E_RESATTACKED97_2;
protected byte E_RESATTACKED97_3;
protected byte E_RESATTACKED97_4;
protected byte E_RESATTACKED97_5;
protected byte E_RESATTACKED97_6;
protected boolean E_RESATTACKED97_7;
protected byte E_RESATTACKED97_8;
protected byte E_RESATTACKED97_9;
protected byte E_RESATTACKED9_1;
protected byte E_RESATTACKED9_10;
protected byte E_RESATTACKED9_11;
protected byte E_RESATTACKED9_12;
protected byte E_RESATTACKED9_2;
protected byte E_RESATTACKED9_3;
protected byte E_RESATTACKED9_4;
protected byte E_RESATTACKED9_5;
protected byte E_RESATTACKED9_6;
protected boolean E_RESATTACKED9_7;
protected byte E_RESATTACKED9_8;
protected byte E_RESATTACKED9_9;
protected byte E_RESAVOID1_1;
protected byte E_RESAVOID1_10;
protected byte E_RESAVOID1_11;
protected byte E_RESAVOID1_12;
protected byte E_RESAVOID1_2;
protected byte E_RESAVOID1_3;
protected byte E_RESAVOID1_4;
protected byte E_RESAVOID1_5;
protected byte E_RESAVOID1_6;
protected byte E_RESAVOID1_7;
protected byte E_RESAVOID1_8;
protected byte E_RESAVOID1_9;
protected byte E_RESAVOID2_1;
protected byte E_RESAVOID2_10;
protected byte E_RESAVOID2_11;
protected byte E_RESAVOID2_12;
protected byte E_RESAVOID2_2;
protected byte E_RESAVOID2_3;
protected byte E_RESAVOID2_4;
protected byte E_RESAVOID2_5;
protected byte E_RESAVOID2_6;
protected byte E_RESAVOID2_7;
protected byte E_RESAVOID2_8;
protected byte E_RESAVOID2_9;
protected byte E_RESAVOID3_1;
protected byte E_RESAVOID3_10;
protected byte E_RESAVOID3_11;
protected byte E_RESAVOID3_12;
protected byte E_RESAVOID3_2;
protected byte E_RESAVOID3_3;
protected byte E_RESAVOID3_4;
protected byte E_RESAVOID3_5;
protected byte E_RESAVOID3_6;
protected byte E_RESAVOID3_7;
protected byte E_RESAVOID3_8;
protected byte E_RESAVOID3_9;
protected byte E_RESAVOID4_1;
protected byte E_RESAVOID4_10;
protected byte E_RESAVOID4_11;
protected byte E_RESAVOID4_12;
protected byte E_RESAVOID4_2;
protected byte E_RESAVOID4_3;
protected byte E_RESAVOID4_4;
protected byte E_RESAVOID4_5;
protected byte E_RESAVOID4_6;
protected byte E_RESAVOID4_7;
protected byte E_RESAVOID4_8;
protected byte E_RESAVOID4_9;
protected byte E_RESAVOID5_1;
protected byte E_RESAVOID5_10;
protected byte E_RESAVOID5_11;
protected byte E_RESAVOID5_12;
protected byte E_RESAVOID5_2;
protected byte E_RESAVOID5_3;
protected byte E_RESAVOID5_4;
protected byte E_RESAVOID5_5;
protected byte E_RESAVOID5_6;
protected byte E_RESAVOID5_7;
protected byte E_RESAVOID5_8;
protected byte E_RESAVOID5_9;
protected byte E_RESAVOID6_1;
protected byte E_RESAVOID6_10;
protected byte E_RESAVOID6_11;
protected byte E_RESAVOID6_12;
protected byte E_RESAVOID6_2;
protected byte E_RESAVOID6_3;
protected byte E_RESAVOID6_4;
protected byte E_RESAVOID6_5;
protected byte E_RESAVOID6_6;
protected byte E_RESAVOID6_7;
protected byte E_RESAVOID6_8;
protected byte E_RESAVOID6_9;
protected byte E_RESAVOID7_1;
protected byte E_RESAVOID7_10;
protected byte E_RESAVOID7_11;
protected byte E_RESAVOID7_12;
protected byte E_RESAVOID7_2;
protected byte E_RESAVOID7_3;
protected byte E_RESAVOID7_4;
protected byte E_RESAVOID7_5;
protected byte E_RESAVOID7_6;
protected byte E_RESAVOID7_7;
protected byte E_RESAVOID7_8;
protected byte E_RESAVOID7_9;
protected byte E_RESAVOID8_1;
protected byte E_RESAVOID8_10;
protected byte E_RESAVOID8_11;
protected byte E_RESAVOID8_12;
protected byte E_RESAVOID8_2;
protected byte E_RESAVOID8_3;
protected byte E_RESAVOID8_4;
protected byte E_RESAVOID8_5;
protected byte E_RESAVOID8_6;
protected byte E_RESAVOID8_7;
protected byte E_RESAVOID8_8;
protected byte E_RESAVOID8_9;
protected byte E_RESAVOID96_1;
protected byte E_RESAVOID96_10;
protected byte E_RESAVOID96_11;
protected byte E_RESAVOID96_12;
protected byte E_RESAVOID96_2;
protected byte E_RESAVOID96_3;
protected byte E_RESAVOID96_4;
protected byte E_RESAVOID96_5;
protected byte E_RESAVOID96_6;
protected byte E_RESAVOID96_7;
protected byte E_RESAVOID96_8;
protected byte E_RESAVOID96_9;
protected byte E_RESAVOID97_1;
protected byte E_RESAVOID97_10;
protected byte E_RESAVOID97_11;
protected byte E_RESAVOID97_12;
protected byte E_RESAVOID97_2;
protected byte E_RESAVOID97_3;
protected byte E_RESAVOID97_4;
protected byte E_RESAVOID97_5;
protected byte E_RESAVOID97_6;
protected byte E_RESAVOID97_7;
protected byte E_RESAVOID97_8;
protected byte E_RESAVOID97_9;
protected byte E_RESAVOID9_1;
protected byte E_RESAVOID9_10;
protected byte E_RESAVOID9_11;
protected byte E_RESAVOID9_12;
protected byte E_RESAVOID9_2;
protected byte E_RESAVOID9_3;
protected byte E_RESAVOID9_4;
protected byte E_RESAVOID9_5;
protected byte E_RESAVOID9_6;
protected byte E_RESAVOID9_7;
protected byte E_RESAVOID9_8;
protected byte E_RESAVOID9_9;
protected byte E_RESINSULTED1_1;
protected byte E_RESINSULTED1_10;
protected byte E_RESINSULTED1_11;
protected byte E_RESINSULTED1_12;
protected byte E_RESINSULTED1_2;
protected byte E_RESINSULTED1_3;
protected byte E_RESINSULTED1_4;
protected byte E_RESINSULTED1_5;
protected byte E_RESINSULTED1_6;
protected byte E_RESINSULTED1_7;
protected byte E_RESINSULTED1_8;
protected byte E_RESINSULTED1_9;
protected byte E_RESINSULTED2_1;
protected byte E_RESINSULTED2_10;
protected byte E_RESINSULTED2_11;
protected byte E_RESINSULTED2_12;
protected byte E_RESINSULTED2_2;
protected byte E_RESINSULTED2_3;
protected byte E_RESINSULTED2_4;
protected byte E_RESINSULTED2_5;
protected byte E_RESINSULTED2_6;
protected byte E_RESINSULTED2_7;
protected byte E_RESINSULTED2_8;
protected byte E_RESINSULTED2_9;
protected byte E_RESINSULTED3_1;
protected byte E_RESINSULTED3_10;
protected byte E_RESINSULTED3_11;
protected byte E_RESINSULTED3_12;
protected byte E_RESINSULTED3_2;
protected byte E_RESINSULTED3_3;
protected byte E_RESINSULTED3_4;
protected byte E_RESINSULTED3_5;
protected byte E_RESINSULTED3_6;
protected byte E_RESINSULTED3_7;
protected byte E_RESINSULTED3_8;
protected byte E_RESINSULTED3_9;
protected byte E_RESINSULTED4_1;
protected byte E_RESINSULTED4_10;
protected byte E_RESINSULTED4_11;
protected byte E_RESINSULTED4_12;
protected byte E_RESINSULTED4_2;
protected byte E_RESINSULTED4_3;
protected byte E_RESINSULTED4_4;
protected byte E_RESINSULTED4_5;
protected byte E_RESINSULTED4_6;
protected byte E_RESINSULTED4_7;
protected byte E_RESINSULTED4_8;
protected byte E_RESINSULTED4_9;
protected byte E_RESINSULTED5_1;
protected byte E_RESINSULTED5_10;
protected byte E_RESINSULTED5_11;
protected byte E_RESINSULTED5_12;
protected byte E_RESINSULTED5_2;
protected byte E_RESINSULTED5_3;
protected byte E_RESINSULTED5_4;
protected byte E_RESINSULTED5_5;
protected byte E_RESINSULTED5_6;
protected byte E_RESINSULTED5_7;
protected byte E_RESINSULTED5_8;
protected byte E_RESINSULTED5_9;
protected byte E_RESINSULTED6_1;
protected byte E_RESINSULTED6_10;
protected byte E_RESINSULTED6_11;
protected byte E_RESINSULTED6_12;
protected byte E_RESINSULTED6_2;
protected byte E_RESINSULTED6_3;
protected byte E_RESINSULTED6_4;
protected byte E_RESINSULTED6_5;
protected byte E_RESINSULTED6_6;
protected byte E_RESINSULTED6_7;
protected byte E_RESINSULTED6_8;
protected byte E_RESINSULTED6_9;
protected byte E_RESINSULTED7_1;
protected byte E_RESINSULTED7_10;
protected byte E_RESINSULTED7_11;
protected byte E_RESINSULTED7_12;
protected byte E_RESINSULTED7_2;
protected byte E_RESINSULTED7_3;
protected byte E_RESINSULTED7_4;
protected byte E_RESINSULTED7_5;
protected byte E_RESINSULTED7_6;
protected byte E_RESINSULTED7_7;
protected byte E_RESINSULTED7_8;
protected byte E_RESINSULTED7_9;
protected byte E_RESINSULTED8_1;
protected byte E_RESINSULTED8_10;
protected byte E_RESINSULTED8_11;
protected byte E_RESINSULTED8_12;
protected byte E_RESINSULTED8_2;
protected byte E_RESINSULTED8_3;
protected byte E_RESINSULTED8_4;
protected byte E_RESINSULTED8_5;
protected byte E_RESINSULTED8_6;
protected byte E_RESINSULTED8_7;
protected byte E_RESINSULTED8_8;
protected byte E_RESINSULTED8_9;
protected byte E_RESINSULTED96_1;
protected byte E_RESINSULTED96_10;
protected byte E_RESINSULTED96_11;
protected byte E_RESINSULTED96_12;
protected byte E_RESINSULTED96_2;
protected byte E_RESINSULTED96_3;
protected byte E_RESINSULTED96_4;
protected byte E_RESINSULTED96_5;
protected byte E_RESINSULTED96_6;
protected byte E_RESINSULTED96_7;
protected byte E_RESINSULTED96_8;
protected byte E_RESINSULTED96_9;
protected byte E_RESINSULTED97_1;
protected byte E_RESINSULTED97_10;
protected byte E_RESINSULTED97_11;
protected byte E_RESINSULTED97_12;
protected byte E_RESINSULTED97_2;
protected byte E_RESINSULTED97_3;
protected byte E_RESINSULTED97_4;
protected byte E_RESINSULTED97_5;
protected byte E_RESINSULTED97_6;
protected byte E_RESINSULTED97_7;
protected byte E_RESINSULTED97_8;
protected byte E_RESINSULTED97_9;
protected byte E_RESINSULTED9_1;
protected byte E_RESINSULTED9_10;
protected byte E_RESINSULTED9_11;
protected byte E_RESINSULTED9_12;
protected byte E_RESINSULTED9_2;
protected byte E_RESINSULTED9_3;
protected byte E_RESINSULTED9_4;
protected byte E_RESINSULTED9_5;
protected byte E_RESINSULTED9_6;
protected byte E_RESINSULTED9_7;
protected byte E_RESINSULTED9_8;
protected byte E_RESINSULTED9_9;
protected byte E_RESJOBDENY1;
protected byte E_RESJOBDENY2;
protected byte E_RESJOBDENY3;
protected byte E_RESJOBDENY4;
protected byte E_RESJOBDENY5;
protected byte E_RESJOBDENY6;
protected byte E_RESJOBDENY7;
protected byte E_RESJOBDENY8;
protected byte E_RESJOBDENY9;
protected byte E_RESJOBDENY96;
protected byte E_RESJOBDENY97;
protected boolean E_RESPF16;
protected boolean E_RESPF16_DV;
protected boolean E_RESPM16;
protected boolean E_RESPM16_DV;
protected byte E_RESUNSAFE1_1;
protected byte E_RESUNSAFE1_10;
protected byte E_RESUNSAFE1_11;
protected byte E_RESUNSAFE1_12;
protected byte E_RESUNSAFE1_2;
protected byte E_RESUNSAFE1_3;
protected byte E_RESUNSAFE1_4;
protected byte E_RESUNSAFE1_5;
protected byte E_RESUNSAFE1_6;
protected byte E_RESUNSAFE1_7;
protected byte E_RESUNSAFE1_8;
protected byte E_RESUNSAFE1_9;
protected byte E_RESUNSAFE2_1;
protected byte E_RESUNSAFE2_10;
protected byte E_RESUNSAFE2_11;
protected byte E_RESUNSAFE2_12;
protected byte E_RESUNSAFE2_2;
protected byte E_RESUNSAFE2_3;
protected byte E_RESUNSAFE2_4;
protected byte E_RESUNSAFE2_5;
protected byte E_RESUNSAFE2_6;
protected byte E_RESUNSAFE2_7;
protected byte E_RESUNSAFE2_8;
protected byte E_RESUNSAFE2_9;
protected byte E_RESUNSAFE3_1;
protected byte E_RESUNSAFE3_10;
protected byte E_RESUNSAFE3_11;
protected byte E_RESUNSAFE3_12;
protected byte E_RESUNSAFE3_2;
protected byte E_RESUNSAFE3_3;
protected byte E_RESUNSAFE3_4;
protected byte E_RESUNSAFE3_5;
protected byte E_RESUNSAFE3_6;
protected byte E_RESUNSAFE3_7;
protected byte E_RESUNSAFE3_8;
protected byte E_RESUNSAFE3_9;
protected byte E_RESUNSAFE4_1;
protected byte E_RESUNSAFE4_10;
protected byte E_RESUNSAFE4_11;
protected byte E_RESUNSAFE4_12;
protected byte E_RESUNSAFE4_2;
protected byte E_RESUNSAFE4_3;
protected byte E_RESUNSAFE4_4;
protected byte E_RESUNSAFE4_5;
protected byte E_RESUNSAFE4_6;
protected byte E_RESUNSAFE4_7;
protected byte E_RESUNSAFE4_8;
protected byte E_RESUNSAFE4_9;
protected byte E_RESUNSAFE5_1;
protected byte E_RESUNSAFE5_10;
protected byte E_RESUNSAFE5_11;
protected byte E_RESUNSAFE5_12;
protected byte E_RESUNSAFE5_2;
protected byte E_RESUNSAFE5_3;
protected byte E_RESUNSAFE5_4;
protected byte E_RESUNSAFE5_5;
protected byte E_RESUNSAFE5_6;
protected byte E_RESUNSAFE5_7;
protected byte E_RESUNSAFE5_8;
protected byte E_RESUNSAFE5_9;
protected byte E_RESUNSAFE6_1;
protected byte E_RESUNSAFE6_10;
protected byte E_RESUNSAFE6_11;
protected byte E_RESUNSAFE6_12;
protected byte E_RESUNSAFE6_2;
protected byte E_RESUNSAFE6_3;
protected byte E_RESUNSAFE6_4;
protected byte E_RESUNSAFE6_5;
protected byte E_RESUNSAFE6_6;
protected byte E_RESUNSAFE6_7;
protected byte E_RESUNSAFE6_8;
protected byte E_RESUNSAFE6_9;
protected byte E_RESUNSAFE7_1;
protected byte E_RESUNSAFE7_10;
protected byte E_RESUNSAFE7_11;
protected byte E_RESUNSAFE7_12;
protected byte E_RESUNSAFE7_2;
protected byte E_RESUNSAFE7_3;
protected byte E_RESUNSAFE7_4;
protected byte E_RESUNSAFE7_5;
protected byte E_RESUNSAFE7_6;
protected byte E_RESUNSAFE7_7;
protected byte E_RESUNSAFE7_8;
protected byte E_RESUNSAFE7_9;
protected byte E_RESUNSAFE8_1;
protected byte E_RESUNSAFE8_10;
protected byte E_RESUNSAFE8_11;
protected byte E_RESUNSAFE8_12;
protected byte E_RESUNSAFE8_2;
protected byte E_RESUNSAFE8_3;
protected byte E_RESUNSAFE8_4;
protected byte E_RESUNSAFE8_5;
protected byte E_RESUNSAFE8_6;
protected byte E_RESUNSAFE8_7;
protected byte E_RESUNSAFE8_8;
protected byte E_RESUNSAFE8_9;
protected byte E_RESUNSAFE96_1;
protected byte E_RESUNSAFE96_10;
protected byte E_RESUNSAFE96_11;
protected byte E_RESUNSAFE96_12;
protected byte E_RESUNSAFE96_2;
protected byte E_RESUNSAFE96_3;
protected byte E_RESUNSAFE96_4;
protected byte E_RESUNSAFE96_5;
protected byte E_RESUNSAFE96_6;
protected byte E_RESUNSAFE96_7;
protected byte E_RESUNSAFE96_8;
protected byte E_RESUNSAFE96_9;
protected byte E_RESUNSAFE97_1;
protected byte E_RESUNSAFE97_10;
protected byte E_RESUNSAFE97_11;
protected byte E_RESUNSAFE97_12;
protected byte E_RESUNSAFE97_2;
protected byte E_RESUNSAFE97_3;
protected byte E_RESUNSAFE97_4;
protected byte E_RESUNSAFE97_5;
protected byte E_RESUNSAFE97_6;
protected byte E_RESUNSAFE97_7;
protected byte E_RESUNSAFE97_8;
protected byte E_RESUNSAFE97_9;
protected byte E_RESUNSAFE9_1;
protected byte E_RESUNSAFE9_10;
protected byte E_RESUNSAFE9_11;
protected byte E_RESUNSAFE9_12;
protected byte E_RESUNSAFE9_2;
protected byte E_RESUNSAFE9_3;
protected byte E_RESUNSAFE9_4;
protected byte E_RESUNSAFE9_5;
protected byte E_RESUNSAFE9_6;
protected byte E_RESUNSAFE9_7;
protected byte E_RESUNSAFE9_8;
protected byte E_RESUNSAFE9_9;
protected byte E_RETAMT;
protected byte E_RETCHK;
protected byte E_RETSUF;
protected byte E_RHLAND_CODE;
protected byte E_RPHMOB_CODE;
protected byte E_RPHWRK_CODE;
protected byte E_RTCON1;
protected byte E_RTCON2;
protected byte E_RTCON3;
protected byte E_RTCON4;
protected byte E_RTEXPJB;
protected byte E_RTFND1;
protected byte E_RTFND10;
protected byte E_RTFND2;
protected byte E_RTFND3;
protected byte E_RTFND4;
protected byte E_RTFND5;
protected byte E_RTFND6;
protected byte E_RTFND7;
protected byte E_RTFND8;
protected byte E_RTFND9;
protected byte E_RTFND96;
protected byte E_RTPRO1;
protected byte E_RTPRO2;
protected byte E_RTPRO3;
protected byte E_RTPRO4;
protected byte E_RTPRO5;
protected byte E_RTPRO6;
protected byte E_RULESKID;
protected byte E_SAMEJOB;
protected byte E_SAMPST;
protected byte E_SCAC;
protected byte E_SCAGE1DRNK;
protected byte E_SCALCL7D;
protected byte E_SCDASCOH_DV;
protected byte E_SCDASSAT_DV;
protected byte E_SCEND;
protected byte E_SCEVERDRNK;
protected byte E_SCFALCDRNK;
protected byte E_SCFANNOY;
protected byte E_SCFCRITIC;
protected boolean E_SCFLAG_DV;
protected byte E_SCFLETDWN;
protected byte E_SCFOPENUP;
protected byte E_SCFRELY;
protected byte E_SCFRENDANY;
protected byte E_SCFUNDSTND;
protected byte E_SCGHQ1_DV;
protected byte E_SCGHQ2_DV;
protected byte E_SCGHQA;
protected byte E_SCGHQB;
protected byte E_SCGHQC;
protected byte E_SCGHQD;
protected byte E_SCGHQE;
protected byte E_SCGHQF;
protected byte E_SCGHQG;
protected byte E_SCGHQH;
protected byte E_SCGHQI;
protected byte E_SCGHQJ;
protected byte E_SCGHQK;
protected byte E_SCGHQL;
protected byte E_SCHLLOC;
protected byte E_SCHOK;
protected byte E_SCHOOL;
protected byte E_SCHOOLCNTRY1;
protected byte E_SCHOOLCNTRY2;
protected byte E_SCHOOLCNTRY3;
protected byte E_SCHOOLCNTRY4;
protected byte E_SCHOOLCNTRY5;
protected byte E_SCLFSAT1;
protected byte E_SCLFSAT2;
protected byte E_SCLFSAT7;
protected byte E_SCLFSATO;
protected byte E_SCNALCL7D;
protected byte E_SCNALCPINT;
protected byte E_SCNALCPOPS;
protected byte E_SCNALCSHOT;
protected byte E_SCNALCWINE;
protected byte E_SCOTVOT1;
protected byte E_SCOTVOT2;
protected byte E_SCOTVOT3;
protected byte E_SCOTVOT4;
protected byte E_SCPANNOY;
protected byte E_SCPAROUTINT;
protected byte E_SCPCRITIC;
protected byte E_SCPLETDWN;
protected byte E_SCPOPENUP;
protected byte E_SCPRELY;
protected byte E_SCPUNDSTND;
protected byte E_SCRANNOY;
protected byte E_SCRCRITIC;
protected byte E_SCRELANY;
protected byte E_SCRELHAPPY;
protected byte E_SCRELPARAR;
protected byte E_SCRELPARCD;
protected byte E_SCRELPARDS;
protected byte E_SCRELPAREI;
protected byte E_SCRELPARIR;
protected byte E_SCRELPARKS;
protected byte E_SCRELPARRG;
protected byte E_SCRELPARWT;
protected byte E_SCRF1;
protected byte E_SCRF2;
protected byte E_SCRF3;
protected byte E_SCRF4;
protected byte E_SCRF5;
protected byte E_SCRF6;
protected byte E_SCRF97;
protected byte E_SCRLETDWN;
protected byte E_SCROPENUP;
protected byte E_SCRRELY;
protected byte E_SCRUNDSTND;
protected byte E_SCRX_CODE;
protected byte E_SCSF1;
protected byte E_SCSF2A;
protected byte E_SCSF2B;
protected byte E_SCSF3A;
protected byte E_SCSF3B;
protected byte E_SCSF4A;
protected byte E_SCSF4B;
protected byte E_SCSF5;
protected byte E_SCSF6A;
protected byte E_SCSF6B;
protected byte E_SCSF6C;
protected byte E_SCSF7;
protected byte E_SCSSUP1;
protected byte E_SCSSUPR2R;
protected byte E_SCUN1;
protected byte E_SCUN2;
protected byte E_SCUN3;
protected byte E_SCUN97;
protected byte E_SCUX_CODE;
protected byte E_SCWHORUAGE;
protected byte E_SCWHORUEDU;
protected byte E_SCWHORUFAM;
protected byte E_SCWHORUPOL;
protected byte E_SCWHORUPRO;
protected byte E_SCWHORURAC;
protected byte E_SCWHORUSEX;
protected byte E_SE1;
protected byte E_SE10;
protected byte E_SE2;
protected byte E_SE3;
protected byte E_SE4;
protected byte E_SE5;
protected byte E_SE6;
protected byte E_SE7;
protected byte E_SE8;
protected byte E_SE9;
protected double E_SEEARNGRS_DV;
protected byte E_SEEARNGRS_IF;
protected double E_SEEARNNET_DV;
protected byte E_SEEKID;
protected boolean E_SEX;
protected byte E_SEXUOR;
protected byte E_SEX_DV;
protected byte E_SF1;
protected double E_SF12MCS_DV;
protected double E_SF12PCS_DV;
protected byte E_SIBHIT;
protected byte E_SIBLING;
protected byte E_SIBSTEAL;
protected byte E_SIBTEASE;
protected byte E_SIBVERAB;
protected boolean E_SIGNEDUCKIDS1;
protected boolean E_SIGNEDUCKIDS2;
protected boolean E_SIGNHEALTHKIDS1;
protected boolean E_SIGNHEALTHKIDS2;
protected boolean E_SINGLE_DV;
protected byte E_SLAPKID;
protected byte E_SMAGBG;
protected byte E_SMARTMOB;
protected byte E_SMCIGS;
protected byte E_SMEVER;
protected byte E_SMKMNTH11;
protected byte E_SMKMNTH12;
protected boolean E_SMKMNTH13;
protected byte E_SMKMNTH21;
protected byte E_SMKMNTH22;
protected boolean E_SMKMNTH23;
protected byte E_SMKMNTH31;
protected byte E_SMKMNTH32;
protected boolean E_SMKMNTH33;
protected byte E_SMNCIGS;
protected byte E_SMNOW;
protected byte E_SOCCONT;
protected byte E_SOCIALKID;
protected byte E_SPKDIF;
protected byte E_SPORTACT;
protected byte E_SPORTOTH_CODE;
protected byte E_SPORTS11;
protected byte E_SPORTS110;
protected byte E_SPORTS111;
protected byte E_SPORTS112;
protected byte E_SPORTS113;
protected byte E_SPORTS114;
protected byte E_SPORTS12;
protected byte E_SPORTS13;
protected byte E_SPORTS14;
protected byte E_SPORTS15;
protected byte E_SPORTS16;
protected byte E_SPORTS17;
protected byte E_SPORTS18;
protected byte E_SPORTS19;
protected byte E_SPORTS196;
protected byte E_SPORTS216;
protected byte E_SPORTS217;
protected byte E_SPORTS218;
protected byte E_SPORTS219;
protected byte E_SPORTS220;
protected byte E_SPORTS221;
protected byte E_SPORTS222;
protected byte E_SPORTS223;
protected byte E_SPORTS224;
protected byte E_SPORTS225;
protected byte E_SPORTS226;
protected byte E_SPORTS227;
protected byte E_SPORTS228;
protected byte E_SPORTS229;
protected byte E_SPORTS230;
protected byte E_SPORTS231;
protected byte E_SPORTS296;
protected byte E_SPORTS31;
protected byte E_SPORTS32;
protected byte E_SPORTS33;
protected byte E_SPORTS34;
protected byte E_SPORTS35;
protected byte E_SPORTS36;
protected byte E_SPORTS37;
protected byte E_SPORTS38;
protected byte E_SPORTS39;
protected byte E_SPORTS396;
protected byte E_SPORTS3FREQ;
protected byte E_SPORTSFREQ;
protected byte E_SPPEN;
protected int E_SPPID;
protected byte E_SPPNO;
protected byte E_STATCM1;
protected byte E_STATCM2;
protected short E_STATCY41;
protected short E_STATCY42;
protected byte E_STATENDD1;
protected byte E_STATENDD2;
protected byte E_STATENDD3;
protected byte E_STATENDD4;
protected byte E_STATENDD5;
protected boolean E_STATENDD6;
protected byte E_STATENDM1;
protected byte E_STATENDM2;
protected byte E_STATENDM3;
protected byte E_STATENDM4;
protected byte E_STATENDM5;
protected boolean E_STATENDM6;
protected short E_STATENDY41;
protected short E_STATENDY42;
protected short E_STATENDY43;
protected short E_STATENDY44;
protected short E_STATENDY45;
protected boolean E_STATENDY46;
protected short E_STAYKID;
protected byte E_STAYKIDW;
protected byte E_STEALSIB;
protected byte E_STENDREAS;
protected byte E_STEPREL;
protected short E_STRATA;
protected byte E_SUSP;
protected byte E_TALKMATTER;
protected byte E_TEASESIB;
protected byte E_TELDIF;
protected byte E_TLKF;
protected byte E_TLKM;
protected short E_TMTIME;
protected byte E_TRAINANY;
protected short E_TRAINDAYS1;
protected short E_TRAINDAYS2;
protected short E_TRAINDAYS3;
protected byte E_TRAINEND1;
protected byte E_TRAINEND2;
protected byte E_TRAINEND3;
protected byte E_TRAINHRS1;
protected byte E_TRAINHRS2;
protected byte E_TRAINHRS3;
protected byte E_TRAINN;
protected byte E_TRAINPURP11;
protected byte E_TRAINPURP12;
protected byte E_TRAINPURP13;
protected byte E_TRAINPURP21;
protected byte E_TRAINPURP22;
protected byte E_TRAINPURP23;
protected byte E_TRAINPURP31;
protected byte E_TRAINPURP32;
protected byte E_TRAINPURP33;
protected byte E_TRAINPURP41;
protected byte E_TRAINPURP42;
protected byte E_TRAINPURP43;
protected byte E_TRAINPURP51;
protected byte E_TRAINPURP52;
protected byte E_TRAINPURP53;
protected byte E_TRAINPURP61;
protected byte E_TRAINPURP62;
protected byte E_TRAINPURP63;
protected byte E_TRAINPURP71;
protected byte E_TRAINPURP72;
protected byte E_TRAINPURP73;
protected byte E_TRAINQUAL1;
protected byte E_TRAINQUAL2;
protected byte E_TRAINQUAL3;
protected byte E_TRQUAL1;
protected byte E_TRQUAL10;
protected byte E_TRQUAL11;
protected byte E_TRQUAL13;
protected byte E_TRQUAL15;
protected byte E_TRQUAL16;
protected byte E_TRQUAL17;
protected byte E_TRQUAL18;
protected byte E_TRQUAL19;
protected byte E_TRQUAL2;
protected byte E_TRQUAL20;
protected byte E_TRQUAL21;
protected byte E_TRQUAL22;
protected byte E_TRQUAL23;
protected byte E_TRQUAL24;
protected byte E_TRQUAL25;
protected byte E_TRQUAL26;
protected byte E_TRQUAL27;
protected byte E_TRQUAL28;
protected byte E_TRQUAL29;
protected byte E_TRQUAL3;
protected byte E_TRQUAL30;
protected byte E_TRQUAL31;
protected byte E_TRQUAL4;
protected byte E_TRQUAL5;
protected byte E_TRQUAL6;
protected byte E_TRQUAL7;
protected byte E_TRQUAL8;
protected byte E_TRQUAL9;
protected byte E_TRWHO1;
protected byte E_TRWHO2;
protected byte E_TRWHO3;
protected byte E_UKBORN;
protected byte E_UNDQUS;
protected byte E_UNSAFE1;
protected byte E_UNSAFE10;
protected byte E_UNSAFE11;
protected byte E_UNSAFE2;
protected byte E_UNSAFE3;
protected byte E_UNSAFE4;
protected byte E_UNSAFE5;
protected byte E_UNSAFE6;
protected byte E_UNSAFE7;
protected byte E_UNSAFE8;
protected byte E_UNSAFE9;
protected byte E_UNSAFE96;
protected byte E_UNSAFE97;
protected byte E_UNSAFEO_CODE;
protected byte E_UNSAFE_DV;
protected byte E_UPSET;
protected byte E_URBAN_DV;
protected byte E_USBREAD;
protected byte E_USDAIRY;
protected byte E_VERABSIB;
protected byte E_VOLRECPER;
protected byte E_VOTE1;
protected byte E_VOTE2;
protected byte E_VOTE3;
protected byte E_VOTE4;
protected byte E_VOTE5;
protected byte E_VOTE6;
protected byte E_VOUCHER;
protected boolean E_VOUCHERNI;
protected byte E_VREGLINK;
protected byte E_VREGUKN;
protected byte E_WALKPACE;
protected byte E_WEKID;
protected byte E_WKFRUIT;
protected byte E_WKPHYS;
protected byte E_WKPLSAM;
protected byte E_WKVEGE;
protected byte E_WLK10M;
protected byte E_WLK30MIN;
protected byte E_WORKTRAV;
protected byte E_XPMOVE;
protected byte E_XPMVMNTH;
protected byte E_XPMVWHN;
protected byte E_XPMVWHR;
protected short E_XPMVYR;
protected byte E_XTRA5MINOSM_DV;
protected byte E_XTRA5MIN_DV;
protected byte E_YAJBSRV1;
protected byte E_YAJBSRV2;
protected byte E_YAJBSRV3;
protected byte E_YAJBSRV4;
protected byte E_YAJBSRV5;
protected byte E_YAJBSRV7;
protected byte E_YAJBSRV8;
protected byte E_YAJBSRV96;
protected byte E_YANSSEC5_DV;
protected short E_YASOC00_CC;
protected short E_YASOC10_CC;
protected byte E_YASOC90_CC;
protected byte E_YELLKID;
protected byte E_YPNETCHT;
protected byte E_YPNPAL;
protected byte E_YPSOCWEB;
protected short E_YR2UK4;
protected final void initE_ADCTS(String s) {
if (!s.trim().isEmpty()) {
E_ADCTS = Byte.parseByte(s);
} else {
E_ADCTS = Byte.MIN_VALUE;
}
}

protected final void initE_ADOPTCH01(String s) {
if (!s.trim().isEmpty()) {
E_ADOPTCH01 = Byte.parseByte(s);
} else {
E_ADOPTCH01 = Byte.MIN_VALUE;
}
}

protected final void initE_ADOPTCH02(String s) {
if (!s.trim().isEmpty()) {
E_ADOPTCH02 = Byte.parseByte(s);
} else {
E_ADOPTCH02 = Byte.MIN_VALUE;
}
}

protected final void initE_ADOPTCH03(String s) {
if (!s.trim().isEmpty()) {
E_ADOPTCH03 = Byte.parseByte(s);
} else {
E_ADOPTCH03 = Byte.MIN_VALUE;
}
}

protected final void initE_ADOPTCH04(String s) {
if (!s.trim().isEmpty()) {
E_ADOPTCH04 = Byte.parseByte(s);
} else {
E_ADOPTCH04 = Byte.MIN_VALUE;
}
}

protected final void initE_ADOPTCH05(String s) {
if (!s.trim().isEmpty()) {
E_ADOPTCH05 = Byte.parseByte(s);
} else {
E_ADOPTCH05 = Byte.MIN_VALUE;
}
}

protected final void initE_ADOPTCH06(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH06 = false;
} else {
E_ADOPTCH06 = true;
}
}
}

protected final void initE_ADOPTCH07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH07 = false;
} else {
E_ADOPTCH07 = true;
}
}
}

protected final void initE_ADOPTCH08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH08 = false;
} else {
E_ADOPTCH08 = true;
}
}
}

protected final void initE_ADOPTCH09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH09 = false;
} else {
E_ADOPTCH09 = true;
}
}
}

protected final void initE_ADOPTCH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH10 = false;
} else {
E_ADOPTCH10 = true;
}
}
}

protected final void initE_ADOPTCH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH11 = false;
} else {
E_ADOPTCH11 = true;
}
}
}

protected final void initE_ADOPTCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH12 = false;
} else {
E_ADOPTCH12 = true;
}
}
}

protected final void initE_ADOPTCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH13 = false;
} else {
E_ADOPTCH13 = true;
}
}
}

protected final void initE_ADOPTCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH14 = false;
} else {
E_ADOPTCH14 = true;
}
}
}

protected final void initE_ADOPTCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH15 = false;
} else {
E_ADOPTCH15 = true;
}
}
}

protected final void initE_ADOPTCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ADOPTCH16 = false;
} else {
E_ADOPTCH16 = true;
}
}
}

protected final void initE_ADSTATUS(String s) {
if (!s.trim().isEmpty()) {
E_ADSTATUS = Byte.parseByte(s);
} else {
E_ADSTATUS = Byte.MIN_VALUE;
}
}

protected final void initE_ADVVOUCHER(String s) {
if (!s.trim().isEmpty()) {
E_ADVVOUCHER = Byte.parseByte(s);
} else {
E_ADVVOUCHER = Byte.MIN_VALUE;
}
}

protected final void initE_AEDROF1(String s) {
if (!s.trim().isEmpty()) {
E_AEDROF1 = Byte.parseByte(s);
} else {
E_AEDROF1 = Byte.MIN_VALUE;
}
}

protected final void initE_AEDROF2(String s) {
if (!s.trim().isEmpty()) {
E_AEDROF2 = Byte.parseByte(s);
} else {
E_AEDROF2 = Byte.MIN_VALUE;
}
}

protected final void initE_AEDROF3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_AEDROF3 = false;
} else {
E_AEDROF3 = true;
}
}
}

protected final void initE_AEPUDA1(String s) {
if (!s.trim().isEmpty()) {
E_AEPUDA1 = Double.parseDouble(s);
} else {
E_AEPUDA1 = Double.NaN;
}
}

protected final void initE_AEPUDA2(String s) {
if (!s.trim().isEmpty()) {
E_AEPUDA2 = Byte.parseByte(s);
} else {
E_AEPUDA2 = Byte.MIN_VALUE;
}
}

protected final void initE_AEPUDA3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_AEPUDA3 = false;
} else {
E_AEPUDA3 = true;
}
}
}

protected final void initE_AEPUWK1(String s) {
if (!s.trim().isEmpty()) {
E_AEPUWK1 = Byte.parseByte(s);
} else {
E_AEPUWK1 = Byte.MIN_VALUE;
}
}

protected final void initE_AEPUWK2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_AEPUWK2 = false;
} else {
E_AEPUWK2 = true;
}
}
}

protected final void initE_AEPUWK3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_AEPUWK3 = false;
} else {
E_AEPUWK3 = true;
}
}
}

protected final void initE_AGEGR10_DV(String s) {
if (!s.trim().isEmpty()) {
E_AGEGR10_DV = Byte.parseByte(s);
} else {
E_AGEGR10_DV = Byte.MIN_VALUE;
}
}

protected final void initE_AGEGR13_DV(String s) {
if (!s.trim().isEmpty()) {
E_AGEGR13_DV = Byte.parseByte(s);
} else {
E_AGEGR13_DV = Byte.MIN_VALUE;
}
}

protected final void initE_AGEGR5_DV(String s) {
if (!s.trim().isEmpty()) {
E_AGEGR5_DV = Byte.parseByte(s);
} else {
E_AGEGR5_DV = Byte.MIN_VALUE;
}
}

protected final void initE_AGERET(String s) {
if (!s.trim().isEmpty()) {
E_AGERET = Byte.parseByte(s);
} else {
E_AGERET = Byte.MIN_VALUE;
}
}

protected final void initE_AGE_DV(String s) {
if (!s.trim().isEmpty()) {
E_AGE_DV = Byte.parseByte(s);
} else {
E_AGE_DV = Byte.MIN_VALUE;
}
}

protected final void initE_AGLQUIT(String s) {
if (!s.trim().isEmpty()) {
E_AGLQUIT = Byte.parseByte(s);
} else {
E_AGLQUIT = Byte.MIN_VALUE;
}
}

protected final void initE_AHVWELL(String s) {
if (!s.trim().isEmpty()) {
E_AHVWELL = Byte.parseByte(s);
} else {
E_AHVWELL = Byte.MIN_VALUE;
}
}

protected final void initE_AIDEFT(String s) {
if (!s.trim().isEmpty()) {
E_AIDEFT = Byte.parseByte(s);
} else {
E_AIDEFT = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHH(String s) {
if (!s.trim().isEmpty()) {
E_AIDHH = Byte.parseByte(s);
} else {
E_AIDHH = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHRS(String s) {
if (!s.trim().isEmpty()) {
E_AIDHRS = Byte.parseByte(s);
} else {
E_AIDHRS = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHU1(String s) {
if (!s.trim().isEmpty()) {
E_AIDHU1 = Byte.parseByte(s);
} else {
E_AIDHU1 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHU2(String s) {
if (!s.trim().isEmpty()) {
E_AIDHU2 = Byte.parseByte(s);
} else {
E_AIDHU2 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA1(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA1 = Byte.parseByte(s);
} else {
E_AIDHUA1 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA10(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA10 = Byte.parseByte(s);
} else {
E_AIDHUA10 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA11(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA11 = Byte.parseByte(s);
} else {
E_AIDHUA11 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA12(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA12 = Byte.parseByte(s);
} else {
E_AIDHUA12 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA13(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA13 = Byte.parseByte(s);
} else {
E_AIDHUA13 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA14(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA14 = Byte.parseByte(s);
} else {
E_AIDHUA14 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA15(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA15 = Byte.parseByte(s);
} else {
E_AIDHUA15 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA16(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA16 = Byte.parseByte(s);
} else {
E_AIDHUA16 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA2(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA2 = Byte.parseByte(s);
} else {
E_AIDHUA2 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA3(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA3 = Byte.parseByte(s);
} else {
E_AIDHUA3 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA4(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA4 = Byte.parseByte(s);
} else {
E_AIDHUA4 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA5(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA5 = Byte.parseByte(s);
} else {
E_AIDHUA5 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA6(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA6 = Byte.parseByte(s);
} else {
E_AIDHUA6 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA7(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA7 = Byte.parseByte(s);
} else {
E_AIDHUA7 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA8(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA8 = Byte.parseByte(s);
} else {
E_AIDHUA8 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDHUA9(String s) {
if (!s.trim().isEmpty()) {
E_AIDHUA9 = Byte.parseByte(s);
} else {
E_AIDHUA9 = Byte.MIN_VALUE;
}
}

protected final void initE_AIDXHH(String s) {
if (!s.trim().isEmpty()) {
E_AIDXHH = Byte.parseByte(s);
} else {
E_AIDXHH = Byte.MIN_VALUE;
}
}

protected final void initE_ALLCH01(String s) {
if (!s.trim().isEmpty()) {
E_ALLCH01 = Byte.parseByte(s);
} else {
E_ALLCH01 = Byte.MIN_VALUE;
}
}

protected final void initE_ALLCH02(String s) {
if (!s.trim().isEmpty()) {
E_ALLCH02 = Byte.parseByte(s);
} else {
E_ALLCH02 = Byte.MIN_VALUE;
}
}

protected final void initE_ALLCH03(String s) {
if (!s.trim().isEmpty()) {
E_ALLCH03 = Byte.parseByte(s);
} else {
E_ALLCH03 = Byte.MIN_VALUE;
}
}

protected final void initE_ALLCH04(String s) {
if (!s.trim().isEmpty()) {
E_ALLCH04 = Byte.parseByte(s);
} else {
E_ALLCH04 = Byte.MIN_VALUE;
}
}

protected final void initE_ALLCH05(String s) {
if (!s.trim().isEmpty()) {
E_ALLCH05 = Byte.parseByte(s);
} else {
E_ALLCH05 = Byte.MIN_VALUE;
}
}

protected final void initE_ALLCH06(String s) {
if (!s.trim().isEmpty()) {
E_ALLCH06 = Byte.parseByte(s);
} else {
E_ALLCH06 = Byte.MIN_VALUE;
}
}

protected final void initE_ALLCH07(String s) {
if (!s.trim().isEmpty()) {
E_ALLCH07 = Byte.parseByte(s);
} else {
E_ALLCH07 = Byte.MIN_VALUE;
}
}

protected final void initE_ALLCH08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH08 = false;
} else {
E_ALLCH08 = true;
}
}
}

protected final void initE_ALLCH09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH09 = false;
} else {
E_ALLCH09 = true;
}
}
}

protected final void initE_ALLCH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH10 = false;
} else {
E_ALLCH10 = true;
}
}
}

protected final void initE_ALLCH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH11 = false;
} else {
E_ALLCH11 = true;
}
}
}

protected final void initE_ALLCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH12 = false;
} else {
E_ALLCH12 = true;
}
}
}

protected final void initE_ALLCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH13 = false;
} else {
E_ALLCH13 = true;
}
}
}

protected final void initE_ALLCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH14 = false;
} else {
E_ALLCH14 = true;
}
}
}

protected final void initE_ALLCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH15 = false;
} else {
E_ALLCH15 = true;
}
}
}

protected final void initE_ALLCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_ALLCH16 = false;
} else {
E_ALLCH16 = true;
}
}
}

protected final void initE_ANYMORE(String s) {
if (!s.trim().isEmpty()) {
E_ANYMORE = Byte.parseByte(s);
} else {
E_ANYMORE = Byte.MIN_VALUE;
}
}

protected final void initE_ANYMORE2(String s) {
if (!s.trim().isEmpty()) {
E_ANYMORE2 = Byte.parseByte(s);
} else {
E_ANYMORE2 = Byte.MIN_VALUE;
}
}

protected final void initE_ANYMORE3(String s) {
if (!s.trim().isEmpty()) {
E_ANYMORE3 = Byte.parseByte(s);
} else {
E_ANYMORE3 = Byte.MIN_VALUE;
}
}

protected final void initE_ANYMORE4(String s) {
if (!s.trim().isEmpty()) {
E_ANYMORE4 = Byte.parseByte(s);
} else {
E_ANYMORE4 = Byte.MIN_VALUE;
}
}

protected final void initE_APVOCIMP(String s) {
if (!s.trim().isEmpty()) {
E_APVOCIMP = Byte.parseByte(s);
} else {
E_APVOCIMP = Byte.MIN_VALUE;
}
}

protected final void initE_ARCFREQ(String s) {
if (!s.trim().isEmpty()) {
E_ARCFREQ = Byte.parseByte(s);
} else {
E_ARCFREQ = Byte.MIN_VALUE;
}
}

protected final void initE_AREA(String s) {
if (!s.trim().isEmpty()) {
E_AREA = Byte.parseByte(s);
} else {
E_AREA = Byte.MIN_VALUE;
}
}

protected final void initE_ARGF(String s) {
if (!s.trim().isEmpty()) {
E_ARGF = Byte.parseByte(s);
} else {
E_ARGF = Byte.MIN_VALUE;
}
}

protected final void initE_ARGM(String s) {
if (!s.trim().isEmpty()) {
E_ARGM = Byte.parseByte(s);
} else {
E_ARGM = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1A1(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1A1 = Byte.parseByte(s);
} else {
E_ARTS1A1 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1A2(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1A2 = Byte.parseByte(s);
} else {
E_ARTS1A2 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1A3(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1A3 = Byte.parseByte(s);
} else {
E_ARTS1A3 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1A4(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1A4 = Byte.parseByte(s);
} else {
E_ARTS1A4 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1A5(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1A5 = Byte.parseByte(s);
} else {
E_ARTS1A5 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1A6(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1A6 = Byte.parseByte(s);
} else {
E_ARTS1A6 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1A7(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1A7 = Byte.parseByte(s);
} else {
E_ARTS1A7 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1A96(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1A96 = Byte.parseByte(s);
} else {
E_ARTS1A96 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1B10(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1B10 = Byte.parseByte(s);
} else {
E_ARTS1B10 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1B11(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1B11 = Byte.parseByte(s);
} else {
E_ARTS1B11 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1B12(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1B12 = Byte.parseByte(s);
} else {
E_ARTS1B12 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1B13(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1B13 = Byte.parseByte(s);
} else {
E_ARTS1B13 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1B14(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1B14 = Byte.parseByte(s);
} else {
E_ARTS1B14 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1B15(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1B15 = Byte.parseByte(s);
} else {
E_ARTS1B15 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1B9(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1B9 = Byte.parseByte(s);
} else {
E_ARTS1B9 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1B96(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1B96 = Byte.parseByte(s);
} else {
E_ARTS1B96 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS1FREQ(String s) {
if (!s.trim().isEmpty()) {
E_ARTS1FREQ = Byte.parseByte(s);
} else {
E_ARTS1FREQ = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2A1(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2A1 = Byte.parseByte(s);
} else {
E_ARTS2A1 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2A2(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2A2 = Byte.parseByte(s);
} else {
E_ARTS2A2 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2A3(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2A3 = Byte.parseByte(s);
} else {
E_ARTS2A3 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2A4(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2A4 = Byte.parseByte(s);
} else {
E_ARTS2A4 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2A5(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2A5 = Byte.parseByte(s);
} else {
E_ARTS2A5 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2A6(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2A6 = Byte.parseByte(s);
} else {
E_ARTS2A6 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2A7(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2A7 = Byte.parseByte(s);
} else {
E_ARTS2A7 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2A96(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2A96 = Byte.parseByte(s);
} else {
E_ARTS2A96 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2B10(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2B10 = Byte.parseByte(s);
} else {
E_ARTS2B10 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2B11(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2B11 = Byte.parseByte(s);
} else {
E_ARTS2B11 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2B12(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2B12 = Byte.parseByte(s);
} else {
E_ARTS2B12 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2B13(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2B13 = Byte.parseByte(s);
} else {
E_ARTS2B13 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2B14(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2B14 = Byte.parseByte(s);
} else {
E_ARTS2B14 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2B15(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2B15 = Byte.parseByte(s);
} else {
E_ARTS2B15 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2B9(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2B9 = Byte.parseByte(s);
} else {
E_ARTS2B9 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2B96(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2B96 = Byte.parseByte(s);
} else {
E_ARTS2B96 = Byte.MIN_VALUE;
}
}

protected final void initE_ARTS2FREQ(String s) {
if (!s.trim().isEmpty()) {
E_ARTS2FREQ = Byte.parseByte(s);
} else {
E_ARTS2FREQ = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED1(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED1 = Byte.parseByte(s);
} else {
E_ATTACKED1 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED10(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED10 = Byte.parseByte(s);
} else {
E_ATTACKED10 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED11(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED11 = Byte.parseByte(s);
} else {
E_ATTACKED11 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED2(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED2 = Byte.parseByte(s);
} else {
E_ATTACKED2 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED3(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED3 = Byte.parseByte(s);
} else {
E_ATTACKED3 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED4(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED4 = Byte.parseByte(s);
} else {
E_ATTACKED4 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED5(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED5 = Byte.parseByte(s);
} else {
E_ATTACKED5 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED6(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED6 = Byte.parseByte(s);
} else {
E_ATTACKED6 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED7(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED7 = Byte.parseByte(s);
} else {
E_ATTACKED7 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED8(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED8 = Byte.parseByte(s);
} else {
E_ATTACKED8 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED9(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED9 = Byte.parseByte(s);
} else {
E_ATTACKED9 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED96(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED96 = Byte.parseByte(s);
} else {
E_ATTACKED96 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED97(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED97 = Byte.parseByte(s);
} else {
E_ATTACKED97 = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKEDO_CODE(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKEDO_CODE = Byte.parseByte(s);
} else {
E_ATTACKEDO_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_ATTACKED_DV(String s) {
if (!s.trim().isEmpty()) {
E_ATTACKED_DV = Byte.parseByte(s);
} else {
E_ATTACKED_DV = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE1(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE1 = Byte.parseByte(s);
} else {
E_AVOIDANCE1 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE10(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE10 = Byte.parseByte(s);
} else {
E_AVOIDANCE10 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE11(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE11 = Byte.parseByte(s);
} else {
E_AVOIDANCE11 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE2(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE2 = Byte.parseByte(s);
} else {
E_AVOIDANCE2 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE3(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE3 = Byte.parseByte(s);
} else {
E_AVOIDANCE3 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE4(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE4 = Byte.parseByte(s);
} else {
E_AVOIDANCE4 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE5(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE5 = Byte.parseByte(s);
} else {
E_AVOIDANCE5 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE6(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE6 = Byte.parseByte(s);
} else {
E_AVOIDANCE6 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE7(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE7 = Byte.parseByte(s);
} else {
E_AVOIDANCE7 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE8(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE8 = Byte.parseByte(s);
} else {
E_AVOIDANCE8 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE9(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE9 = Byte.parseByte(s);
} else {
E_AVOIDANCE9 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE96(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE96 = Byte.parseByte(s);
} else {
E_AVOIDANCE96 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCE97(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCE97 = Byte.parseByte(s);
} else {
E_AVOIDANCE97 = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDANCEO_CODE(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDANCEO_CODE = Byte.parseByte(s);
} else {
E_AVOIDANCEO_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_AVOIDED_DV(String s) {
if (!s.trim().isEmpty()) {
E_AVOIDED_DV = Byte.parseByte(s);
} else {
E_AVOIDED_DV = Byte.MIN_VALUE;
}
}

protected final void initE_BASNSA(String s) {
if (!s.trim().isEmpty()) {
E_BASNSA = Byte.parseByte(s);
} else {
E_BASNSA = Byte.MIN_VALUE;
}
}

protected final void initE_BASRATE(String s) {
if (!s.trim().isEmpty()) {
E_BASRATE = Double.parseDouble(s);
} else {
E_BASRATE = Double.NaN;
}
}

protected final void initE_BASREST(String s) {
if (!s.trim().isEmpty()) {
E_BASREST = Byte.parseByte(s);
} else {
E_BASREST = Byte.MIN_VALUE;
}
}

protected final void initE_BENCB(String s) {
if (!s.trim().isEmpty()) {
E_BENCB = Byte.parseByte(s);
} else {
E_BENCB = Byte.MIN_VALUE;
}
}

protected final void initE_BENCTC(String s) {
if (!s.trim().isEmpty()) {
E_BENCTC = Byte.parseByte(s);
} else {
E_BENCTC = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS1(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS1 = Byte.parseByte(s);
} else {
E_BENDIS1 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS10(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS10 = Byte.parseByte(s);
} else {
E_BENDIS10 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS11(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS11 = Byte.parseByte(s);
} else {
E_BENDIS11 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS12(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS12 = Byte.parseByte(s);
} else {
E_BENDIS12 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS2(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS2 = Byte.parseByte(s);
} else {
E_BENDIS2 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS3(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS3 = Byte.parseByte(s);
} else {
E_BENDIS3 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS4(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS4 = Byte.parseByte(s);
} else {
E_BENDIS4 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS5(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS5 = Byte.parseByte(s);
} else {
E_BENDIS5 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS6(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS6 = Byte.parseByte(s);
} else {
E_BENDIS6 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS7(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS7 = Byte.parseByte(s);
} else {
E_BENDIS7 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS8(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS8 = Byte.parseByte(s);
} else {
E_BENDIS8 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS9(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS9 = Byte.parseByte(s);
} else {
E_BENDIS9 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS96(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS96 = Byte.parseByte(s);
} else {
E_BENDIS96 = Byte.MIN_VALUE;
}
}

protected final void initE_BENDIS97(String s) {
if (!s.trim().isEmpty()) {
E_BENDIS97 = Byte.parseByte(s);
} else {
E_BENDIS97 = Byte.MIN_VALUE;
}
}

protected final void initE_BENESA(String s) {
if (!s.trim().isEmpty()) {
E_BENESA = Byte.parseByte(s);
} else {
E_BENESA = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM1(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM1 = Byte.parseByte(s);
} else {
E_BENFAM1 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM10(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM10 = Byte.parseByte(s);
} else {
E_BENFAM10 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM2(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM2 = Byte.parseByte(s);
} else {
E_BENFAM2 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM3(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM3 = Byte.parseByte(s);
} else {
E_BENFAM3 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM4(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM4 = Byte.parseByte(s);
} else {
E_BENFAM4 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM5(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM5 = Byte.parseByte(s);
} else {
E_BENFAM5 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM6(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM6 = Byte.parseByte(s);
} else {
E_BENFAM6 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM7(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM7 = Byte.parseByte(s);
} else {
E_BENFAM7 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM8(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM8 = Byte.parseByte(s);
} else {
E_BENFAM8 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM9(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM9 = Byte.parseByte(s);
} else {
E_BENFAM9 = Byte.MIN_VALUE;
}
}

protected final void initE_BENFAM96(String s) {
if (!s.trim().isEmpty()) {
E_BENFAM96 = Byte.parseByte(s);
} else {
E_BENFAM96 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU1(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU1 = Byte.parseByte(s);
} else {
E_BENHOU1 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU2(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU2 = Byte.parseByte(s);
} else {
E_BENHOU2 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU3(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU3 = Byte.parseByte(s);
} else {
E_BENHOU3 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU4(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU4 = Byte.parseByte(s);
} else {
E_BENHOU4 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU5(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU5 = Byte.parseByte(s);
} else {
E_BENHOU5 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU6(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU6 = Byte.parseByte(s);
} else {
E_BENHOU6 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU7(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU7 = Byte.parseByte(s);
} else {
E_BENHOU7 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU8(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU8 = Byte.parseByte(s);
} else {
E_BENHOU8 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU9(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU9 = Byte.parseByte(s);
} else {
E_BENHOU9 = Byte.MIN_VALUE;
}
}

protected final void initE_BENHOU96(String s) {
if (!s.trim().isEmpty()) {
E_BENHOU96 = Byte.parseByte(s);
} else {
E_BENHOU96 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN1(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN1 = Byte.parseByte(s);
} else {
E_BENPEN1 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN10(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN10 = Byte.parseByte(s);
} else {
E_BENPEN10 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN11(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN11 = Byte.parseByte(s);
} else {
E_BENPEN11 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN12(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN12 = Byte.parseByte(s);
} else {
E_BENPEN12 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN13(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN13 = Byte.parseByte(s);
} else {
E_BENPEN13 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN2(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN2 = Byte.parseByte(s);
} else {
E_BENPEN2 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN3(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN3 = Byte.parseByte(s);
} else {
E_BENPEN3 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN4(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN4 = Byte.parseByte(s);
} else {
E_BENPEN4 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN5(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN5 = Byte.parseByte(s);
} else {
E_BENPEN5 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN6(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN6 = Byte.parseByte(s);
} else {
E_BENPEN6 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN7(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN7 = Byte.parseByte(s);
} else {
E_BENPEN7 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN8(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN8 = Byte.parseByte(s);
} else {
E_BENPEN8 = Byte.MIN_VALUE;
}
}

protected final void initE_BENPEN96(String s) {
if (!s.trim().isEmpty()) {
E_BENPEN96 = Byte.parseByte(s);
} else {
E_BENPEN96 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA1(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA1 = Byte.parseByte(s);
} else {
E_BENSTA1 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA10(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA10 = Byte.parseByte(s);
} else {
E_BENSTA10 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA11(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA11 = Byte.parseByte(s);
} else {
E_BENSTA11 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA12(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA12 = Byte.parseByte(s);
} else {
E_BENSTA12 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA13(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA13 = Byte.parseByte(s);
} else {
E_BENSTA13 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA2(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA2 = Byte.parseByte(s);
} else {
E_BENSTA2 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA3(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA3 = Byte.parseByte(s);
} else {
E_BENSTA3 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA4(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA4 = Byte.parseByte(s);
} else {
E_BENSTA4 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA5(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA5 = Byte.parseByte(s);
} else {
E_BENSTA5 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA6(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA6 = Byte.parseByte(s);
} else {
E_BENSTA6 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA7(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA7 = Byte.parseByte(s);
} else {
E_BENSTA7 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA9(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA9 = Byte.parseByte(s);
} else {
E_BENSTA9 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA96(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA96 = Byte.parseByte(s);
} else {
E_BENSTA96 = Byte.MIN_VALUE;
}
}

protected final void initE_BENSTA97(String s) {
if (!s.trim().isEmpty()) {
E_BENSTA97 = Byte.parseByte(s);
} else {
E_BENSTA97 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX1(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX1 = Byte.parseByte(s);
} else {
E_BENTAX1 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX10(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX10 = Byte.parseByte(s);
} else {
E_BENTAX10 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX2(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX2 = Byte.parseByte(s);
} else {
E_BENTAX2 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX3(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX3 = Byte.parseByte(s);
} else {
E_BENTAX3 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX4(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX4 = Byte.parseByte(s);
} else {
E_BENTAX4 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX5(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX5 = Byte.parseByte(s);
} else {
E_BENTAX5 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX7(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX7 = Byte.parseByte(s);
} else {
E_BENTAX7 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX8(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX8 = Byte.parseByte(s);
} else {
E_BENTAX8 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX9(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX9 = Byte.parseByte(s);
} else {
E_BENTAX9 = Byte.MIN_VALUE;
}
}

protected final void initE_BENTAX96(String s) {
if (!s.trim().isEmpty()) {
E_BENTAX96 = Byte.parseByte(s);
} else {
E_BENTAX96 = Byte.MIN_VALUE;
}
}

protected final void initE_BENUNEMP1(String s) {
if (!s.trim().isEmpty()) {
E_BENUNEMP1 = Byte.parseByte(s);
} else {
E_BENUNEMP1 = Byte.MIN_VALUE;
}
}

protected final void initE_BENUNEMP2(String s) {
if (!s.trim().isEmpty()) {
E_BENUNEMP2 = Byte.parseByte(s);
} else {
E_BENUNEMP2 = Byte.MIN_VALUE;
}
}

protected final void initE_BENUNEMP3(String s) {
if (!s.trim().isEmpty()) {
E_BENUNEMP3 = Byte.parseByte(s);
} else {
E_BENUNEMP3 = Byte.MIN_VALUE;
}
}

protected final void initE_BENUNEMP4(String s) {
if (!s.trim().isEmpty()) {
E_BENUNEMP4 = Byte.parseByte(s);
} else {
E_BENUNEMP4 = Byte.MIN_VALUE;
}
}

protected final void initE_BENUNEMP5(String s) {
if (!s.trim().isEmpty()) {
E_BENUNEMP5 = Byte.parseByte(s);
} else {
E_BENUNEMP5 = Byte.MIN_VALUE;
}
}

protected final void initE_BENUNEMP6(String s) {
if (!s.trim().isEmpty()) {
E_BENUNEMP6 = Byte.parseByte(s);
} else {
E_BENUNEMP6 = Byte.MIN_VALUE;
}
}

protected final void initE_BENUNEMP7(String s) {
if (!s.trim().isEmpty()) {
E_BENUNEMP7 = Byte.parseByte(s);
} else {
E_BENUNEMP7 = Byte.MIN_VALUE;
}
}

protected final void initE_BENUNEMP96(String s) {
if (!s.trim().isEmpty()) {
E_BENUNEMP96 = Byte.parseByte(s);
} else {
E_BENUNEMP96 = Byte.MIN_VALUE;
}
}

protected final void initE_BIRTHY(String s) {
if (!s.trim().isEmpty()) {
E_BIRTHY = Short.parseShort(s);
} else {
E_BIRTHY = Short.MIN_VALUE;
}
}

protected final void initE_BOSSETHN(String s) {
if (!s.trim().isEmpty()) {
E_BOSSETHN = Byte.parseByte(s);
} else {
E_BOSSETHN = Byte.MIN_VALUE;
}
}

protected final void initE_BOSSSEX(String s) {
if (!s.trim().isEmpty()) {
E_BOSSSEX = Byte.parseByte(s);
} else {
E_BOSSSEX = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE1(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE1 = Byte.parseByte(s);
} else {
E_BTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE10(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE10 = Byte.parseByte(s);
} else {
E_BTYPE10 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE2(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE2 = Byte.parseByte(s);
} else {
E_BTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE3(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE3 = Byte.parseByte(s);
} else {
E_BTYPE3 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE4(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE4 = Byte.parseByte(s);
} else {
E_BTYPE4 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE5(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE5 = Byte.parseByte(s);
} else {
E_BTYPE5 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE6(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE6 = Byte.parseByte(s);
} else {
E_BTYPE6 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE7(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE7 = Byte.parseByte(s);
} else {
E_BTYPE7 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE8(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE8 = Byte.parseByte(s);
} else {
E_BTYPE8 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE9(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE9 = Byte.parseByte(s);
} else {
E_BTYPE9 = Byte.MIN_VALUE;
}
}

protected final void initE_BTYPE96(String s) {
if (!s.trim().isEmpty()) {
E_BTYPE96 = Byte.parseByte(s);
} else {
E_BTYPE96 = Byte.MIN_VALUE;
}
}

protected final void initE_BUNO_DV(String s) {
if (!s.trim().isEmpty()) {
E_BUNO_DV = Byte.parseByte(s);
} else {
E_BUNO_DV = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU1(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU1 = Byte.parseByte(s);
} else {
E_CAIDU1 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU2(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU2 = Byte.parseByte(s);
} else {
E_CAIDU2 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU3(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU3 = Byte.parseByte(s);
} else {
E_CAIDU3 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU4(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU4 = Byte.parseByte(s);
} else {
E_CAIDU4 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU5(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU5 = Byte.parseByte(s);
} else {
E_CAIDU5 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU6(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU6 = Byte.parseByte(s);
} else {
E_CAIDU6 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU7(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU7 = Byte.parseByte(s);
} else {
E_CAIDU7 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU8(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU8 = Byte.parseByte(s);
} else {
E_CAIDU8 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU96(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU96 = Byte.parseByte(s);
} else {
E_CAIDU96 = Byte.MIN_VALUE;
}
}

protected final void initE_CAIDU97(String s) {
if (!s.trim().isEmpty()) {
E_CAIDU97 = Byte.parseByte(s);
} else {
E_CAIDU97 = Byte.MIN_VALUE;
}
}

protected final void initE_CAPGIFTV(String s) {
if (!s.trim().isEmpty()) {
E_CAPGIFTV = Byte.parseByte(s);
} else {
E_CAPGIFTV = Byte.MIN_VALUE;
}
}

protected final void initE_CARUSE(String s) {
if (!s.trim().isEmpty()) {
E_CARUSE = Byte.parseByte(s);
} else {
E_CARUSE = Byte.MIN_VALUE;
}
}

protected final void initE_CASIEND(String s) {
if (!s.trim().isEmpty()) {
E_CASIEND = Byte.parseByte(s);
} else {
E_CASIEND = Byte.MIN_VALUE;
}
}

protected final void initE_CATGIFTV(String s) {
if (!s.trim().isEmpty()) {
E_CATGIFTV = Byte.parseByte(s);
} else {
E_CATGIFTV = Byte.MIN_VALUE;
}
}

protected final void initE_CATVOUCHER(String s) {
if (!s.trim().isEmpty()) {
E_CATVOUCHER = Byte.parseByte(s);
} else {
E_CATVOUCHER = Byte.MIN_VALUE;
}
}

protected final void initE_CCARE(String s) {
if (!s.trim().isEmpty()) {
E_CCARE = Byte.parseByte(s);
} else {
E_CCARE = Byte.MIN_VALUE;
}
}

protected final void initE_CCWORK(String s) {
if (!s.trim().isEmpty()) {
E_CCWORK = Byte.parseByte(s);
} else {
E_CCWORK = Byte.MIN_VALUE;
}
}

protected final void initE_CDPREAMBLE(String s) {
if (!s.trim().isEmpty()) {
E_CDPREAMBLE = Byte.parseByte(s);
} else {
E_CDPREAMBLE = Byte.MIN_VALUE;
}
}

protected final void initE_CH1BY4(String s) {
if (!s.trim().isEmpty()) {
E_CH1BY4 = Short.parseShort(s);
} else {
E_CH1BY4 = Short.MIN_VALUE;
}
}

protected final void initE_CHAID1(String s) {
if (!s.trim().isEmpty()) {
E_CHAID1 = Byte.parseByte(s);
} else {
E_CHAID1 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID2(String s) {
if (!s.trim().isEmpty()) {
E_CHAID2 = Byte.parseByte(s);
} else {
E_CHAID2 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID3(String s) {
if (!s.trim().isEmpty()) {
E_CHAID3 = Byte.parseByte(s);
} else {
E_CHAID3 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID4(String s) {
if (!s.trim().isEmpty()) {
E_CHAID4 = Byte.parseByte(s);
} else {
E_CHAID4 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID5(String s) {
if (!s.trim().isEmpty()) {
E_CHAID5 = Byte.parseByte(s);
} else {
E_CHAID5 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID6(String s) {
if (!s.trim().isEmpty()) {
E_CHAID6 = Byte.parseByte(s);
} else {
E_CHAID6 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID7(String s) {
if (!s.trim().isEmpty()) {
E_CHAID7 = Byte.parseByte(s);
} else {
E_CHAID7 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID8(String s) {
if (!s.trim().isEmpty()) {
E_CHAID8 = Byte.parseByte(s);
} else {
E_CHAID8 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID96(String s) {
if (!s.trim().isEmpty()) {
E_CHAID96 = Byte.parseByte(s);
} else {
E_CHAID96 = Byte.MIN_VALUE;
}
}

protected final void initE_CHAID97(String s) {
if (!s.trim().isEmpty()) {
E_CHAID97 = Byte.parseByte(s);
} else {
E_CHAID97 = Byte.MIN_VALUE;
}
}

protected final void initE_CHCON(String s) {
if (!s.trim().isEmpty()) {
E_CHCON = Byte.parseByte(s);
} else {
E_CHCON = Byte.MIN_VALUE;
}
}

protected final void initE_CHFAR(String s) {
if (!s.trim().isEmpty()) {
E_CHFAR = Byte.parseByte(s);
} else {
E_CHFAR = Byte.MIN_VALUE;
}
}

protected final void initE_CHILDPNO(String s) {
if (!s.trim().isEmpty()) {
E_CHILDPNO = Byte.parseByte(s);
} else {
E_CHILDPNO = Byte.MIN_VALUE;
}
}

protected final void initE_CHKCOA(String s) {
if (!s.trim().isEmpty()) {
E_CHKCOA = Byte.parseByte(s);
} else {
E_CHKCOA = Byte.MIN_VALUE;
}
}

protected final void initE_CHKRESP(String s) {
if (!s.trim().isEmpty()) {
E_CHKRESP = Byte.parseByte(s);
} else {
E_CHKRESP = Byte.MIN_VALUE;
}
}

protected final void initE_CHSEE(String s) {
if (!s.trim().isEmpty()) {
E_CHSEE = Byte.parseByte(s);
} else {
E_CHSEE = Byte.MIN_VALUE;
}
}

protected final void initE_CINDTIME(String s) {
if (!s.trim().isEmpty()) {
E_CINDTIME = Integer.parseInt(s);
} else {
E_CINDTIME = Integer.MIN_VALUE;
}
}

protected final void initE_CITZN1(String s) {
if (!s.trim().isEmpty()) {
E_CITZN1 = Byte.parseByte(s);
} else {
E_CITZN1 = Byte.MIN_VALUE;
}
}

protected final void initE_CITZN2(String s) {
if (!s.trim().isEmpty()) {
E_CITZN2 = Byte.parseByte(s);
} else {
E_CITZN2 = Byte.MIN_VALUE;
}
}

protected final void initE_CITZN3(String s) {
if (!s.trim().isEmpty()) {
E_CITZN3 = Byte.parseByte(s);
} else {
E_CITZN3 = Byte.MIN_VALUE;
}
}

protected final void initE_CJBATT(String s) {
if (!s.trim().isEmpty()) {
E_CJBATT = Byte.parseByte(s);
} else {
E_CJBATT = Byte.MIN_VALUE;
}
}

protected final void initE_CJOB(String s) {
if (!s.trim().isEmpty()) {
E_CJOB = Byte.parseByte(s);
} else {
E_CJOB = Byte.MIN_VALUE;
}
}

protected final void initE_CLUB(String s) {
if (!s.trim().isEmpty()) {
E_CLUB = Byte.parseByte(s);
} else {
E_CLUB = Byte.MIN_VALUE;
}
}

protected final void initE_CMCOKIDNO1(String s) {
if (!s.trim().isEmpty()) {
E_CMCOKIDNO1 = Byte.parseByte(s);
} else {
E_CMCOKIDNO1 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCOKIDNO2(String s) {
if (!s.trim().isEmpty()) {
E_CMCOKIDNO2 = Byte.parseByte(s);
} else {
E_CMCOKIDNO2 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCOKIDNO3(String s) {
if (!s.trim().isEmpty()) {
E_CMCOKIDNO3 = Byte.parseByte(s);
} else {
E_CMCOKIDNO3 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCOKIDNO4(String s) {
if (!s.trim().isEmpty()) {
E_CMCOKIDNO4 = Byte.parseByte(s);
} else {
E_CMCOKIDNO4 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCOKIDNO5(String s) {
if (!s.trim().isEmpty()) {
E_CMCOKIDNO5 = Byte.parseByte(s);
} else {
E_CMCOKIDNO5 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCORD(String s) {
if (!s.trim().isEmpty()) {
E_CMCORD = Byte.parseByte(s);
} else {
E_CMCORD = Byte.MIN_VALUE;
}
}

protected final void initE_CMCORDALL(String s) {
if (!s.trim().isEmpty()) {
E_CMCORDALL = Byte.parseByte(s);
} else {
E_CMCORDALL = Byte.MIN_VALUE;
}
}

protected final void initE_CMCORDAM(String s) {
if (!s.trim().isEmpty()) {
E_CMCORDAM = Double.parseDouble(s);
} else {
E_CMCORDAM = Double.NaN;
}
}

protected final void initE_CMCORDPER(String s) {
if (!s.trim().isEmpty()) {
E_CMCORDPER = Byte.parseByte(s);
} else {
E_CMCORDPER = Byte.MIN_VALUE;
}
}

protected final void initE_CMCORDRCAM(String s) {
if (!s.trim().isEmpty()) {
E_CMCORDRCAM = Short.parseShort(s);
} else {
E_CMCORDRCAM = Short.MIN_VALUE;
}
}

protected final void initE_CMCORDRCPR(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_CMCORDRCPR = false;
} else {
E_CMCORDRCPR = true;
}
}
}

protected final void initE_CMCORDREC(String s) {
if (!s.trim().isEmpty()) {
E_CMCORDREC = Byte.parseByte(s);
} else {
E_CMCORDREC = Byte.MIN_VALUE;
}
}

protected final void initE_CMCORDTM(String s) {
if (!s.trim().isEmpty()) {
E_CMCORDTM = Byte.parseByte(s);
} else {
E_CMCORDTM = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSAACT(String s) {
if (!s.trim().isEmpty()) {
E_CMCSAACT = Byte.parseByte(s);
} else {
E_CMCSAACT = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSAALL(String s) {
if (!s.trim().isEmpty()) {
E_CMCSAALL = Byte.parseByte(s);
} else {
E_CMCSAALL = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSAAM(String s) {
if (!s.trim().isEmpty()) {
E_CMCSAAM = Short.parseShort(s);
} else {
E_CMCSAAM = Short.MIN_VALUE;
}
}

protected final void initE_CMCSANIL1(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL1 = Byte.parseByte(s);
} else {
E_CMCSANIL1 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL2(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL2 = Byte.parseByte(s);
} else {
E_CMCSANIL2 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL3(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL3 = Byte.parseByte(s);
} else {
E_CMCSANIL3 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL4(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL4 = Byte.parseByte(s);
} else {
E_CMCSANIL4 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL5(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL5 = Byte.parseByte(s);
} else {
E_CMCSANIL5 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL6(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL6 = Byte.parseByte(s);
} else {
E_CMCSANIL6 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL7(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL7 = Byte.parseByte(s);
} else {
E_CMCSANIL7 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL8(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL8 = Byte.parseByte(s);
} else {
E_CMCSANIL8 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL9(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL9 = Byte.parseByte(s);
} else {
E_CMCSANIL9 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSANIL97(String s) {
if (!s.trim().isEmpty()) {
E_CMCSANIL97 = Byte.parseByte(s);
} else {
E_CMCSANIL97 = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSAPER(String s) {
if (!s.trim().isEmpty()) {
E_CMCSAPER = Byte.parseByte(s);
} else {
E_CMCSAPER = Byte.MIN_VALUE;
}
}

protected final void initE_CMCSAPR(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_CMCSAPR = false;
} else {
E_CMCSAPR = true;
}
}
}

protected final void initE_CMFLAG(String s) {
if (!s.trim().isEmpty()) {
E_CMFLAG = Byte.parseByte(s);
} else {
E_CMFLAG = Byte.MIN_VALUE;
}
}

protected final void initE_CMKNDEVR1(String s) {
if (!s.trim().isEmpty()) {
E_CMKNDEVR1 = Byte.parseByte(s);
} else {
E_CMKNDEVR1 = Byte.MIN_VALUE;
}
}

protected final void initE_CMKNDEVR2(String s) {
if (!s.trim().isEmpty()) {
E_CMKNDEVR2 = Byte.parseByte(s);
} else {
E_CMKNDEVR2 = Byte.MIN_VALUE;
}
}

protected final void initE_CMKNDEVR3(String s) {
if (!s.trim().isEmpty()) {
E_CMKNDEVR3 = Byte.parseByte(s);
} else {
E_CMKNDEVR3 = Byte.MIN_VALUE;
}
}

protected final void initE_CMKNDEVR4(String s) {
if (!s.trim().isEmpty()) {
E_CMKNDEVR4 = Byte.parseByte(s);
} else {
E_CMKNDEVR4 = Byte.MIN_VALUE;
}
}

protected final void initE_CMKNDEVR96(String s) {
if (!s.trim().isEmpty()) {
E_CMKNDEVR96 = Byte.parseByte(s);
} else {
E_CMKNDEVR96 = Byte.MIN_VALUE;
}
}

protected final void initE_CMKNDEVR97(String s) {
if (!s.trim().isEmpty()) {
E_CMKNDEVR97 = Byte.parseByte(s);
} else {
E_CMKNDEVR97 = Byte.MIN_VALUE;
}
}

protected final void initE_CMLSTAT1(String s) {
if (!s.trim().isEmpty()) {
E_CMLSTAT1 = Byte.parseByte(s);
} else {
E_CMLSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initE_CMLSTAT2(String s) {
if (!s.trim().isEmpty()) {
E_CMLSTAT2 = Byte.parseByte(s);
} else {
E_CMLSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL1(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL1 = Byte.parseByte(s);
} else {
E_CMNIL1 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL10(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL10 = Byte.parseByte(s);
} else {
E_CMNIL10 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL2(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL2 = Byte.parseByte(s);
} else {
E_CMNIL2 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL3(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL3 = Byte.parseByte(s);
} else {
E_CMNIL3 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL4(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL4 = Byte.parseByte(s);
} else {
E_CMNIL4 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL5(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL5 = Byte.parseByte(s);
} else {
E_CMNIL5 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL6(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL6 = Byte.parseByte(s);
} else {
E_CMNIL6 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL7(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL7 = Byte.parseByte(s);
} else {
E_CMNIL7 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL8(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL8 = Byte.parseByte(s);
} else {
E_CMNIL8 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL9(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL9 = Byte.parseByte(s);
} else {
E_CMNIL9 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNIL97(String s) {
if (!s.trim().isEmpty()) {
E_CMNIL97 = Byte.parseByte(s);
} else {
E_CMNIL97 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNKY1(String s) {
if (!s.trim().isEmpty()) {
E_CMNKY1 = Byte.parseByte(s);
} else {
E_CMNKY1 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNKY2(String s) {
if (!s.trim().isEmpty()) {
E_CMNKY2 = Byte.parseByte(s);
} else {
E_CMNKY2 = Byte.MIN_VALUE;
}
}

protected final void initE_CMNKY3(String s) {
if (!s.trim().isEmpty()) {
E_CMNKY3 = Byte.parseByte(s);
} else {
E_CMNKY3 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY1(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY1 = Byte.parseByte(s);
} else {
E_CMOTHPAY1 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY10(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY10 = Byte.parseByte(s);
} else {
E_CMOTHPAY10 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY11(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY11 = Byte.parseByte(s);
} else {
E_CMOTHPAY11 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY2(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY2 = Byte.parseByte(s);
} else {
E_CMOTHPAY2 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY3(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY3 = Byte.parseByte(s);
} else {
E_CMOTHPAY3 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY4(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY4 = Byte.parseByte(s);
} else {
E_CMOTHPAY4 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY5(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY5 = Byte.parseByte(s);
} else {
E_CMOTHPAY5 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY6(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY6 = Byte.parseByte(s);
} else {
E_CMOTHPAY6 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY7(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY7 = Byte.parseByte(s);
} else {
E_CMOTHPAY7 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY8(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY8 = Byte.parseByte(s);
} else {
E_CMOTHPAY8 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY9(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY9 = Byte.parseByte(s);
} else {
E_CMOTHPAY9 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY96(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY96 = Byte.parseByte(s);
} else {
E_CMOTHPAY96 = Byte.MIN_VALUE;
}
}

protected final void initE_CMOTHPAY97(String s) {
if (!s.trim().isEmpty()) {
E_CMOTHPAY97 = Byte.parseByte(s);
} else {
E_CMOTHPAY97 = Byte.MIN_VALUE;
}
}

protected final void initE_CMROUTE(String s) {
if (!s.trim().isEmpty()) {
E_CMROUTE = Byte.parseByte(s);
} else {
E_CMROUTE = Byte.MIN_VALUE;
}
}

protected final void initE_CMSAMEA(String s) {
if (!s.trim().isEmpty()) {
E_CMSAMEA = Byte.parseByte(s);
} else {
E_CMSAMEA = Byte.MIN_VALUE;
}
}

protected final void initE_CMSAMEB(String s) {
if (!s.trim().isEmpty()) {
E_CMSAMEB = Byte.parseByte(s);
} else {
E_CMSAMEB = Byte.MIN_VALUE;
}
}

protected final void initE_CMSAMEC(String s) {
if (!s.trim().isEmpty()) {
E_CMSAMEC = Byte.parseByte(s);
} else {
E_CMSAMEC = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOL(String s) {
if (!s.trim().isEmpty()) {
E_CMVOL = Byte.parseByte(s);
} else {
E_CMVOL = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLALL(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLALL = Byte.parseByte(s);
} else {
E_CMVOLALL = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLAM(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLAM = Double.parseDouble(s);
} else {
E_CMVOLAM = Double.NaN;
}
}

protected final void initE_CMVOLKIDNO1(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLKIDNO1 = Byte.parseByte(s);
} else {
E_CMVOLKIDNO1 = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLKIDNO2(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLKIDNO2 = Byte.parseByte(s);
} else {
E_CMVOLKIDNO2 = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLKIDNO3(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLKIDNO3 = Byte.parseByte(s);
} else {
E_CMVOLKIDNO3 = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLKIDNO4(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLKIDNO4 = Byte.parseByte(s);
} else {
E_CMVOLKIDNO4 = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLKIDNO5(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLKIDNO5 = Byte.parseByte(s);
} else {
E_CMVOLKIDNO5 = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLPER(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLPER = Byte.parseByte(s);
} else {
E_CMVOLPER = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLRCAM(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLRCAM = Short.parseShort(s);
} else {
E_CMVOLRCAM = Short.MIN_VALUE;
}
}

protected final void initE_CMVOLRCPR(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLRCPR = Byte.parseByte(s);
} else {
E_CMVOLRCPR = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLREC(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLREC = Byte.parseByte(s);
} else {
E_CMVOLREC = Byte.MIN_VALUE;
}
}

protected final void initE_CMVOLTM(String s) {
if (!s.trim().isEmpty()) {
E_CMVOLTM = Byte.parseByte(s);
} else {
E_CMVOLTM = Byte.MIN_VALUE;
}
}

protected final void initE_COH1BM(String s) {
if (!s.trim().isEmpty()) {
E_COH1BM = Byte.parseByte(s);
} else {
E_COH1BM = Byte.MIN_VALUE;
}
}

protected final void initE_COH1BY(String s) {
if (!s.trim().isEmpty()) {
E_COH1BY = Short.parseShort(s);
} else {
E_COH1BY = Short.MIN_VALUE;
}
}

protected final void initE_COH1EM(String s) {
if (!s.trim().isEmpty()) {
E_COH1EM = Byte.parseByte(s);
} else {
E_COH1EM = Byte.MIN_VALUE;
}
}

protected final void initE_COH1EY(String s) {
if (!s.trim().isEmpty()) {
E_COH1EY = Short.parseShort(s);
} else {
E_COH1EY = Short.MIN_VALUE;
}
}

protected final void initE_COH1MR(String s) {
if (!s.trim().isEmpty()) {
E_COH1MR = Byte.parseByte(s);
} else {
E_COH1MR = Byte.MIN_VALUE;
}
}

protected final void initE_COHAB(String s) {
if (!s.trim().isEmpty()) {
E_COHAB = Byte.parseByte(s);
} else {
E_COHAB = Byte.MIN_VALUE;
}
}

protected final void initE_COHABN(String s) {
if (!s.trim().isEmpty()) {
E_COHABN = Byte.parseByte(s);
} else {
E_COHABN = Byte.MIN_VALUE;
}
}

protected final void initE_COHAB_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_COHAB_DV = false;
} else {
E_COHAB_DV = true;
}
}
}

protected final void initE_CONSINTRO(String s) {
if (!s.trim().isEmpty()) {
E_CONSINTRO = Byte.parseByte(s);
} else {
E_CONSINTRO = Byte.MIN_VALUE;
}
}

protected final void initE_CONTFT(String s) {
if (!s.trim().isEmpty()) {
E_CONTFT = Byte.parseByte(s);
} else {
E_CONTFT = Byte.MIN_VALUE;
}
}

protected final void initE_CORDRECPER(String s) {
if (!s.trim().isEmpty()) {
E_CORDRECPER = Byte.parseByte(s);
} else {
E_CORDRECPER = Byte.MIN_VALUE;
}
}

protected final void initE_COUNTRY(String s) {
if (!s.trim().isEmpty()) {
E_COUNTRY = Byte.parseByte(s);
} else {
E_COUNTRY = Byte.MIN_VALUE;
}
}

protected final void initE_COWOSEXN(String s) {
if (!s.trim().isEmpty()) {
E_COWOSEXN = Byte.parseByte(s);
} else {
E_COWOSEXN = Byte.MIN_VALUE;
}
}

protected final void initE_COWOSEXP(String s) {
if (!s.trim().isEmpty()) {
E_COWOSEXP = Byte.parseByte(s);
} else {
E_COWOSEXP = Byte.MIN_VALUE;
}
}

protected final void initE_CSACALC(String s) {
if (!s.trim().isEmpty()) {
E_CSACALC = Byte.parseByte(s);
} else {
E_CSACALC = Byte.MIN_VALUE;
}
}

protected final void initE_CSACALCAM(String s) {
if (!s.trim().isEmpty()) {
E_CSACALCAM = Double.parseDouble(s);
} else {
E_CSACALCAM = Double.NaN;
}
}

protected final void initE_CSAKIDNO1(String s) {
if (!s.trim().isEmpty()) {
E_CSAKIDNO1 = Byte.parseByte(s);
} else {
E_CSAKIDNO1 = Byte.MIN_VALUE;
}
}

protected final void initE_CSAKIDNO2(String s) {
if (!s.trim().isEmpty()) {
E_CSAKIDNO2 = Byte.parseByte(s);
} else {
E_CSAKIDNO2 = Byte.MIN_VALUE;
}
}

protected final void initE_CSAKIDNO3(String s) {
if (!s.trim().isEmpty()) {
E_CSAKIDNO3 = Byte.parseByte(s);
} else {
E_CSAKIDNO3 = Byte.MIN_VALUE;
}
}

protected final void initE_CSAKIDNO4(String s) {
if (!s.trim().isEmpty()) {
E_CSAKIDNO4 = Byte.parseByte(s);
} else {
E_CSAKIDNO4 = Byte.MIN_VALUE;
}
}

protected final void initE_CSAKIDNO5(String s) {
if (!s.trim().isEmpty()) {
E_CSAKIDNO5 = Byte.parseByte(s);
} else {
E_CSAKIDNO5 = Byte.MIN_VALUE;
}
}

protected final void initE_CSAPAYTO(String s) {
if (!s.trim().isEmpty()) {
E_CSAPAYTO = Byte.parseByte(s);
} else {
E_CSAPAYTO = Byte.MIN_VALUE;
}
}

protected final void initE_CSARECPER(String s) {
if (!s.trim().isEmpty()) {
E_CSARECPER = Byte.parseByte(s);
} else {
E_CSARECPER = Byte.MIN_VALUE;
}
}

protected final void initE_CSTAT(String s) {
if (!s.trim().isEmpty()) {
E_CSTAT = Byte.parseByte(s);
} else {
E_CSTAT = Byte.MIN_VALUE;
}
}

protected final void initE_CTADD1_CODE(String s) {
if (!s.trim().isEmpty()) {
E_CTADD1_CODE = Byte.parseByte(s);
} else {
E_CTADD1_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_CTADD2_CODE(String s) {
if (!s.trim().isEmpty()) {
E_CTADD2_CODE = Byte.parseByte(s);
} else {
E_CTADD2_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_CTCNTY_CODE(String s) {
if (!s.trim().isEmpty()) {
E_CTCNTY_CODE = Byte.parseByte(s);
} else {
E_CTCNTY_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONS(String s) {
if (!s.trim().isEmpty()) {
E_CTCONS = Byte.parseByte(s);
} else {
E_CTCONS = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF1(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF1 = Byte.parseByte(s);
} else {
E_CTCONSCONF1 = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF2(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF2 = Byte.parseByte(s);
} else {
E_CTCONSCONF2 = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF3(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF3 = Byte.parseByte(s);
} else {
E_CTCONSCONF3 = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF4(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF4 = Byte.parseByte(s);
} else {
E_CTCONSCONF4 = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF5(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF5 = Byte.parseByte(s);
} else {
E_CTCONSCONF5 = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF6(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF6 = Byte.parseByte(s);
} else {
E_CTCONSCONF6 = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF7(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF7 = Byte.parseByte(s);
} else {
E_CTCONSCONF7 = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF8(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF8 = Byte.parseByte(s);
} else {
E_CTCONSCONF8 = Byte.MIN_VALUE;
}
}

protected final void initE_CTCONSCONF94(String s) {
if (!s.trim().isEmpty()) {
E_CTCONSCONF94 = Byte.parseByte(s);
} else {
E_CTCONSCONF94 = Byte.MIN_VALUE;
}
}

protected final void initE_CTEMAIL_CODE(String s) {
if (!s.trim().isEmpty()) {
E_CTEMAIL_CODE = Byte.parseByte(s);
} else {
E_CTEMAIL_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_CTPCODE_CODE(String s) {
if (!s.trim().isEmpty()) {
E_CTPCODE_CODE = Byte.parseByte(s);
} else {
E_CTPCODE_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_CTREL(String s) {
if (!s.trim().isEmpty()) {
E_CTREL = Byte.parseByte(s);
} else {
E_CTREL = Byte.MIN_VALUE;
}
}

protected final void initE_CTTEL1_CODE(String s) {
if (!s.trim().isEmpty()) {
E_CTTEL1_CODE = Byte.parseByte(s);
} else {
E_CTTEL1_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_CTTEL2_CODE(String s) {
if (!s.trim().isEmpty()) {
E_CTTEL2_CODE = Byte.parseByte(s);
} else {
E_CTTEL2_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_CTTOWN_CODE(String s) {
if (!s.trim().isEmpty()) {
E_CTTOWN_CODE = Byte.parseByte(s);
} else {
E_CTTOWN_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_CUDDLEKID(String s) {
if (!s.trim().isEmpty()) {
E_CUDDLEKID = Byte.parseByte(s);
} else {
E_CUDDLEKID = Byte.MIN_VALUE;
}
}

protected final void initE_CULTUREA(String s) {
if (!s.trim().isEmpty()) {
E_CULTUREA = Byte.parseByte(s);
} else {
E_CULTUREA = Byte.MIN_VALUE;
}
}

protected final void initE_CULTUREB(String s) {
if (!s.trim().isEmpty()) {
E_CULTUREB = Byte.parseByte(s);
} else {
E_CULTUREB = Byte.MIN_VALUE;
}
}

protected final void initE_CULTUREC(String s) {
if (!s.trim().isEmpty()) {
E_CULTUREC = Byte.parseByte(s);
} else {
E_CULTUREC = Byte.MIN_VALUE;
}
}

protected final void initE_CULTURED(String s) {
if (!s.trim().isEmpty()) {
E_CULTURED = Byte.parseByte(s);
} else {
E_CULTURED = Byte.MIN_VALUE;
}
}

protected final void initE_CULTUREE(String s) {
if (!s.trim().isEmpty()) {
E_CULTUREE = Byte.parseByte(s);
} else {
E_CULTUREE = Byte.MIN_VALUE;
}
}

protected final void initE_CULTUREF(String s) {
if (!s.trim().isEmpty()) {
E_CULTUREF = Byte.parseByte(s);
} else {
E_CULTUREF = Byte.MIN_VALUE;
}
}

protected final void initE_CULTUREG(String s) {
if (!s.trim().isEmpty()) {
E_CULTUREG = Byte.parseByte(s);
} else {
E_CULTUREG = Byte.MIN_VALUE;
}
}

protected final void initE_CURRJOB1(String s) {
if (!s.trim().isEmpty()) {
E_CURRJOB1 = Byte.parseByte(s);
} else {
E_CURRJOB1 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRJOB2(String s) {
if (!s.trim().isEmpty()) {
E_CURRJOB2 = Byte.parseByte(s);
} else {
E_CURRJOB2 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRJOB3(String s) {
if (!s.trim().isEmpty()) {
E_CURRJOB3 = Byte.parseByte(s);
} else {
E_CURRJOB3 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRJOB4(String s) {
if (!s.trim().isEmpty()) {
E_CURRJOB4 = Byte.parseByte(s);
} else {
E_CURRJOB4 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRJOB5(String s) {
if (!s.trim().isEmpty()) {
E_CURRJOB5 = Byte.parseByte(s);
} else {
E_CURRJOB5 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRJOB6(String s) {
if (!s.trim().isEmpty()) {
E_CURRJOB6 = Byte.parseByte(s);
} else {
E_CURRJOB6 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRPART1(String s) {
if (!s.trim().isEmpty()) {
E_CURRPART1 = Byte.parseByte(s);
} else {
E_CURRPART1 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRPART2(String s) {
if (!s.trim().isEmpty()) {
E_CURRPART2 = Byte.parseByte(s);
} else {
E_CURRPART2 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRPART3(String s) {
if (!s.trim().isEmpty()) {
E_CURRPART3 = Byte.parseByte(s);
} else {
E_CURRPART3 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRPART4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_CURRPART4 = false;
} else {
E_CURRPART4 = true;
}
}
}

protected final void initE_CURRSTAT1(String s) {
if (!s.trim().isEmpty()) {
E_CURRSTAT1 = Byte.parseByte(s);
} else {
E_CURRSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRSTAT2(String s) {
if (!s.trim().isEmpty()) {
E_CURRSTAT2 = Byte.parseByte(s);
} else {
E_CURRSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRSTAT3(String s) {
if (!s.trim().isEmpty()) {
E_CURRSTAT3 = Byte.parseByte(s);
} else {
E_CURRSTAT3 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRSTAT4(String s) {
if (!s.trim().isEmpty()) {
E_CURRSTAT4 = Byte.parseByte(s);
} else {
E_CURRSTAT4 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRSTAT5(String s) {
if (!s.trim().isEmpty()) {
E_CURRSTAT5 = Byte.parseByte(s);
} else {
E_CURRSTAT5 = Byte.MIN_VALUE;
}
}

protected final void initE_CURRSTAT6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_CURRSTAT6 = false;
} else {
E_CURRSTAT6 = true;
}
}
}

protected final void initE_DAYWLK(String s) {
if (!s.trim().isEmpty()) {
E_DAYWLK = Byte.parseByte(s);
} else {
E_DAYWLK = Byte.MIN_VALUE;
}
}

protected final void initE_DCSATM(String s) {
if (!s.trim().isEmpty()) {
E_DCSATM = Byte.parseByte(s);
} else {
E_DCSATM = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY1(String s) {
if (!s.trim().isEmpty()) {
E_DELAY1 = Byte.parseByte(s);
} else {
E_DELAY1 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY10(String s) {
if (!s.trim().isEmpty()) {
E_DELAY10 = Byte.parseByte(s);
} else {
E_DELAY10 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY2(String s) {
if (!s.trim().isEmpty()) {
E_DELAY2 = Byte.parseByte(s);
} else {
E_DELAY2 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY3(String s) {
if (!s.trim().isEmpty()) {
E_DELAY3 = Byte.parseByte(s);
} else {
E_DELAY3 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY4(String s) {
if (!s.trim().isEmpty()) {
E_DELAY4 = Byte.parseByte(s);
} else {
E_DELAY4 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY5(String s) {
if (!s.trim().isEmpty()) {
E_DELAY5 = Byte.parseByte(s);
} else {
E_DELAY5 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY6(String s) {
if (!s.trim().isEmpty()) {
E_DELAY6 = Byte.parseByte(s);
} else {
E_DELAY6 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY7(String s) {
if (!s.trim().isEmpty()) {
E_DELAY7 = Byte.parseByte(s);
} else {
E_DELAY7 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY8(String s) {
if (!s.trim().isEmpty()) {
E_DELAY8 = Byte.parseByte(s);
} else {
E_DELAY8 = Byte.MIN_VALUE;
}
}

protected final void initE_DELAY9(String s) {
if (!s.trim().isEmpty()) {
E_DELAY9 = Byte.parseByte(s);
} else {
E_DELAY9 = Byte.MIN_VALUE;
}
}

protected final void initE_DEPCHL_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_DEPCHL_DV = false;
} else {
E_DEPCHL_DV = true;
}
}
}

protected final void initE_DETINC1(String s) {
if (!s.trim().isEmpty()) {
E_DETINC1 = Byte.parseByte(s);
} else {
E_DETINC1 = Byte.MIN_VALUE;
}
}

protected final void initE_DETINC2(String s) {
if (!s.trim().isEmpty()) {
E_DETINC2 = Byte.parseByte(s);
} else {
E_DETINC2 = Byte.MIN_VALUE;
}
}

protected final void initE_DETINC3(String s) {
if (!s.trim().isEmpty()) {
E_DETINC3 = Byte.parseByte(s);
} else {
E_DETINC3 = Byte.MIN_VALUE;
}
}

protected final void initE_DETINC4(String s) {
if (!s.trim().isEmpty()) {
E_DETINC4 = Byte.parseByte(s);
} else {
E_DETINC4 = Byte.MIN_VALUE;
}
}

protected final void initE_DETINC5(String s) {
if (!s.trim().isEmpty()) {
E_DETINC5 = Byte.parseByte(s);
} else {
E_DETINC5 = Byte.MIN_VALUE;
}
}

protected final void initE_DETINC6(String s) {
if (!s.trim().isEmpty()) {
E_DETINC6 = Byte.parseByte(s);
} else {
E_DETINC6 = Byte.MIN_VALUE;
}
}

protected final void initE_DINNER(String s) {
if (!s.trim().isEmpty()) {
E_DINNER = Byte.parseByte(s);
} else {
E_DINNER = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF1(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF1 = Byte.parseByte(s);
} else {
E_DISDIF1 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF10(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF10 = Byte.parseByte(s);
} else {
E_DISDIF10 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF11(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF11 = Byte.parseByte(s);
} else {
E_DISDIF11 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF12(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF12 = Byte.parseByte(s);
} else {
E_DISDIF12 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF2(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF2 = Byte.parseByte(s);
} else {
E_DISDIF2 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF3(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF3 = Byte.parseByte(s);
} else {
E_DISDIF3 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF4(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF4 = Byte.parseByte(s);
} else {
E_DISDIF4 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF5(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF5 = Byte.parseByte(s);
} else {
E_DISDIF5 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF6(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF6 = Byte.parseByte(s);
} else {
E_DISDIF6 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF7(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF7 = Byte.parseByte(s);
} else {
E_DISDIF7 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF8(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF8 = Byte.parseByte(s);
} else {
E_DISDIF8 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF9(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF9 = Byte.parseByte(s);
} else {
E_DISDIF9 = Byte.MIN_VALUE;
}
}

protected final void initE_DISDIF96(String s) {
if (!s.trim().isEmpty()) {
E_DISDIF96 = Byte.parseByte(s);
} else {
E_DISDIF96 = Byte.MIN_VALUE;
}
}

protected final void initE_DISEFFECTS1(String s) {
if (!s.trim().isEmpty()) {
E_DISEFFECTS1 = Byte.parseByte(s);
} else {
E_DISEFFECTS1 = Byte.MIN_VALUE;
}
}

protected final void initE_DISEFFECTS2(String s) {
if (!s.trim().isEmpty()) {
E_DISEFFECTS2 = Byte.parseByte(s);
} else {
E_DISEFFECTS2 = Byte.MIN_VALUE;
}
}

protected final void initE_DISEFFECTS3(String s) {
if (!s.trim().isEmpty()) {
E_DISEFFECTS3 = Byte.parseByte(s);
} else {
E_DISEFFECTS3 = Byte.MIN_VALUE;
}
}

protected final void initE_DISEFFECTS4(String s) {
if (!s.trim().isEmpty()) {
E_DISEFFECTS4 = Byte.parseByte(s);
} else {
E_DISEFFECTS4 = Byte.MIN_VALUE;
}
}

protected final void initE_DISEFFECTS5(String s) {
if (!s.trim().isEmpty()) {
E_DISEFFECTS5 = Byte.parseByte(s);
} else {
E_DISEFFECTS5 = Byte.MIN_VALUE;
}
}

protected final void initE_DIVCHK1(String s) {
if (!s.trim().isEmpty()) {
E_DIVCHK1 = Byte.parseByte(s);
} else {
E_DIVCHK1 = Byte.MIN_VALUE;
}
}

protected final void initE_DIVCHK2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_DIVCHK2 = false;
} else {
E_DIVCHK2 = true;
}
}
}

protected final void initE_DIVFIN1(String s) {
if (!s.trim().isEmpty()) {
E_DIVFIN1 = Byte.parseByte(s);
} else {
E_DIVFIN1 = Byte.MIN_VALUE;
}
}

protected final void initE_DIVFIN2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_DIVFIN2 = false;
} else {
E_DIVFIN2 = true;
}
}
}

protected final void initE_DOBY_DV(String s) {
if (!s.trim().isEmpty()) {
E_DOBY_DV = Short.parseShort(s);
} else {
E_DOBY_DV = Short.MIN_VALUE;
}
}

protected final void initE_DONEPROXY(String s) {
if (!s.trim().isEmpty()) {
E_DONEPROXY = Byte.parseByte(s);
} else {
E_DONEPROXY = Byte.MIN_VALUE;
}
}

protected final void initE_DRGMJ(String s) {
if (!s.trim().isEmpty()) {
E_DRGMJ = Byte.parseByte(s);
} else {
E_DRGMJ = Byte.MIN_VALUE;
}
}

protected final void initE_DRGOTH(String s) {
if (!s.trim().isEmpty()) {
E_DRGOTH = Byte.parseByte(s);
} else {
E_DRGOTH = Byte.MIN_VALUE;
}
}

protected final void initE_DRGSOL(String s) {
if (!s.trim().isEmpty()) {
E_DRGSOL = Byte.parseByte(s);
} else {
E_DRGSOL = Byte.MIN_VALUE;
}
}

protected final void initE_DRIVE(String s) {
if (!s.trim().isEmpty()) {
E_DRIVE = Byte.parseByte(s);
} else {
E_DRIVE = Byte.MIN_VALUE;
}
}

protected final void initE_DVAGE(String s) {
if (!s.trim().isEmpty()) {
E_DVAGE = Byte.parseByte(s);
} else {
E_DVAGE = Byte.MIN_VALUE;
}
}

protected final void initE_DVM1(String s) {
if (!s.trim().isEmpty()) {
E_DVM1 = Byte.parseByte(s);
} else {
E_DVM1 = Byte.MIN_VALUE;
}
}

protected final void initE_DVM2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_DVM2 = false;
} else {
E_DVM2 = true;
}
}
}

protected final void initE_DVY41(String s) {
if (!s.trim().isEmpty()) {
E_DVY41 = Short.parseShort(s);
} else {
E_DVY41 = Short.MIN_VALUE;
}
}

protected final void initE_DVY42(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_DVY42 = false;
} else {
E_DVY42 = true;
}
}
}

protected final void initE_EATLIVU(String s) {
if (!s.trim().isEmpty()) {
E_EATLIVU = Byte.parseByte(s);
} else {
E_EATLIVU = Byte.MIN_VALUE;
}
}

protected final void initE_EDASP(String s) {
if (!s.trim().isEmpty()) {
E_EDASP = Byte.parseByte(s);
} else {
E_EDASP = Byte.MIN_VALUE;
}
}

protected final void initE_EDLINK(String s) {
if (!s.trim().isEmpty()) {
E_EDLINK = Byte.parseByte(s);
} else {
E_EDLINK = Byte.MIN_VALUE;
}
}

protected final void initE_EDLINKCONF(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_EDLINKCONF = false;
} else {
E_EDLINKCONF = true;
}
}
}

protected final void initE_EDLINKCONFB(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_EDLINKCONFB = false;
} else {
E_EDLINKCONFB = true;
}
}
}

protected final void initE_EDLINKKIDCONFSW(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_EDLINKKIDCONFSW = false;
} else {
E_EDLINKKIDCONFSW = true;
}
}
}

protected final void initE_EDLINKKIDE(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_EDLINKKIDE = false;
} else {
E_EDLINKKIDE = true;
}
}
}

protected final void initE_EDLINKKIDSWN(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_EDLINKKIDSWN = false;
} else {
E_EDLINKKIDSWN = true;
}
}
}

protected final void initE_EDLKKIDCONFE(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_EDLKKIDCONFE = false;
} else {
E_EDLKKIDCONFE = true;
}
}
}

protected final void initE_EDTYPE(String s) {
if (!s.trim().isEmpty()) {
E_EDTYPE = Byte.parseByte(s);
} else {
E_EDTYPE = Byte.MIN_VALUE;
}
}

protected final void initE_EDUCATION(String s) {
if (!s.trim().isEmpty()) {
E_EDUCATION = Byte.parseByte(s);
} else {
E_EDUCATION = Byte.MIN_VALUE;
}
}

protected final void initE_EDUCISGN(String s) {
if (!s.trim().isEmpty()) {
E_EDUCISGN = Byte.parseByte(s);
} else {
E_EDUCISGN = Byte.MIN_VALUE;
}
}

protected final void initE_EDUCKIDSN(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_EDUCKIDSN = false;
} else {
E_EDUCKIDSN = true;
}
}
}

protected final void initE_EDUCLINKB1(String s) {
if (!s.trim().isEmpty()) {
E_EDUCLINKB1 = Byte.parseByte(s);
} else {
E_EDUCLINKB1 = Byte.MIN_VALUE;
}
}

protected final void initE_EDUCLINKB2(String s) {
if (!s.trim().isEmpty()) {
E_EDUCLINKB2 = Byte.parseByte(s);
} else {
E_EDUCLINKB2 = Byte.MIN_VALUE;
}
}

protected final void initE_EDUCLINKB3(String s) {
if (!s.trim().isEmpty()) {
E_EDUCLINKB3 = Byte.parseByte(s);
} else {
E_EDUCLINKB3 = Byte.MIN_VALUE;
}
}

protected final void initE_EDUCRECD(String s) {
if (!s.trim().isEmpty()) {
E_EDUCRECD = Byte.parseByte(s);
} else {
E_EDUCRECD = Byte.MIN_VALUE;
}
}

protected final void initE_EDUCRSGN(String s) {
if (!s.trim().isEmpty()) {
E_EDUCRSGN = Byte.parseByte(s);
} else {
E_EDUCRSGN = Byte.MIN_VALUE;
}
}

protected final void initE_EDUCSN(String s) {
if (!s.trim().isEmpty()) {
E_EDUCSN = Byte.parseByte(s);
} else {
E_EDUCSN = Byte.MIN_VALUE;
}
}

protected final void initE_EMAILENT(String s) {
if (!s.trim().isEmpty()) {
E_EMAILENT = Byte.parseByte(s);
} else {
E_EMAILENT = Byte.MIN_VALUE;
}
}

protected final void initE_EMPCHK(String s) {
if (!s.trim().isEmpty()) {
E_EMPCHK = Byte.parseByte(s);
} else {
E_EMPCHK = Byte.MIN_VALUE;
}
}

protected final void initE_EMPINTRO(String s) {
if (!s.trim().isEmpty()) {
E_EMPINTRO = Byte.parseByte(s);
} else {
E_EMPINTRO = Byte.MIN_VALUE;
}
}

protected final void initE_EMPLOY(String s) {
if (!s.trim().isEmpty()) {
E_EMPLOY = Byte.parseByte(s);
} else {
E_EMPLOY = Byte.MIN_VALUE;
}
}

protected final void initE_EMPSTENDD(String s) {
if (!s.trim().isEmpty()) {
E_EMPSTENDD = Byte.parseByte(s);
} else {
E_EMPSTENDD = Byte.MIN_VALUE;
}
}

protected final void initE_EMPSTENDM(String s) {
if (!s.trim().isEmpty()) {
E_EMPSTENDM = Byte.parseByte(s);
} else {
E_EMPSTENDM = Byte.MIN_VALUE;
}
}

protected final void initE_EMPSTENDY4(String s) {
if (!s.trim().isEmpty()) {
E_EMPSTENDY4 = Short.parseShort(s);
} else {
E_EMPSTENDY4 = Short.MIN_VALUE;
}
}

protected final void initE_ENDMNTH1(String s) {
if (!s.trim().isEmpty()) {
E_ENDMNTH1 = Byte.parseByte(s);
} else {
E_ENDMNTH1 = Byte.MIN_VALUE;
}
}

protected final void initE_ENDMNTH2(String s) {
if (!s.trim().isEmpty()) {
E_ENDMNTH2 = Byte.parseByte(s);
} else {
E_ENDMNTH2 = Byte.MIN_VALUE;
}
}

protected final void initE_ENDMNTH3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_ENDMNTH3 = false;
} else {
E_ENDMNTH3 = true;
}
}
}

protected final void initE_ENGFORM(String s) {
if (!s.trim().isEmpty()) {
E_ENGFORM = Byte.parseByte(s);
} else {
E_ENGFORM = Byte.MIN_VALUE;
}
}

protected final void initE_ENGLANG(String s) {
if (!s.trim().isEmpty()) {
E_ENGLANG = Byte.parseByte(s);
} else {
E_ENGLANG = Byte.MIN_VALUE;
}
}

protected final void initE_ENGREAD(String s) {
if (!s.trim().isEmpty()) {
E_ENGREAD = Byte.parseByte(s);
} else {
E_ENGREAD = Byte.MIN_VALUE;
}
}

protected final void initE_ENGSPK(String s) {
if (!s.trim().isEmpty()) {
E_ENGSPK = Byte.parseByte(s);
} else {
E_ENGSPK = Byte.MIN_VALUE;
}
}

protected final void initE_ENGTEL(String s) {
if (!s.trim().isEmpty()) {
E_ENGTEL = Byte.parseByte(s);
} else {
E_ENGTEL = Byte.MIN_VALUE;
}
}

protected final void initE_EPROSH(String s) {
if (!s.trim().isEmpty()) {
E_EPROSH = Byte.parseByte(s);
} else {
E_EPROSH = Byte.MIN_VALUE;
}
}

protected final void initE_ETCOOTN(String s) {
if (!s.trim().isEmpty()) {
E_ETCOOTN = Byte.parseByte(s);
} else {
E_ETCOOTN = Byte.MIN_VALUE;
}
}

protected final void initE_ETCOOTP(String s) {
if (!s.trim().isEmpty()) {
E_ETCOOTP = Byte.parseByte(s);
} else {
E_ETCOOTP = Byte.MIN_VALUE;
}
}

protected final void initE_ETCOSAMN(String s) {
if (!s.trim().isEmpty()) {
E_ETCOSAMN = Byte.parseByte(s);
} else {
E_ETCOSAMN = Byte.MIN_VALUE;
}
}

protected final void initE_ETCOSAMP(String s) {
if (!s.trim().isEmpty()) {
E_ETCOSAMP = Byte.parseByte(s);
} else {
E_ETCOSAMP = Byte.MIN_VALUE;
}
}

protected final void initE_ETCOWHN(String s) {
if (!s.trim().isEmpty()) {
E_ETCOWHN = Byte.parseByte(s);
} else {
E_ETCOWHN = Byte.MIN_VALUE;
}
}

protected final void initE_ETCOWHP(String s) {
if (!s.trim().isEmpty()) {
E_ETCOWHP = Byte.parseByte(s);
} else {
E_ETCOWHP = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE1(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE1 = Byte.parseByte(s);
} else {
E_ETHCLOSE1 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE10(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE10 = Byte.parseByte(s);
} else {
E_ETHCLOSE10 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE11(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE11 = Byte.parseByte(s);
} else {
E_ETHCLOSE11 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE2A(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE2A = Byte.parseByte(s);
} else {
E_ETHCLOSE2A = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE2B(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE2B = Byte.parseByte(s);
} else {
E_ETHCLOSE2B = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE3(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE3 = Byte.parseByte(s);
} else {
E_ETHCLOSE3 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE4A(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE4A = Byte.parseByte(s);
} else {
E_ETHCLOSE4A = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE4B(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE4B = Byte.parseByte(s);
} else {
E_ETHCLOSE4B = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE5(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE5 = Byte.parseByte(s);
} else {
E_ETHCLOSE5 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE6(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE6 = Byte.parseByte(s);
} else {
E_ETHCLOSE6 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE7(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE7 = Byte.parseByte(s);
} else {
E_ETHCLOSE7 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE8(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE8 = Byte.parseByte(s);
} else {
E_ETHCLOSE8 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHCLOSE9(String s) {
if (!s.trim().isEmpty()) {
E_ETHCLOSE9 = Byte.parseByte(s);
} else {
E_ETHCLOSE9 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID10(String s) {
if (!s.trim().isEmpty()) {
E_ETHID10 = Byte.parseByte(s);
} else {
E_ETHID10 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID11(String s) {
if (!s.trim().isEmpty()) {
E_ETHID11 = Byte.parseByte(s);
} else {
E_ETHID11 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID12(String s) {
if (!s.trim().isEmpty()) {
E_ETHID12 = Byte.parseByte(s);
} else {
E_ETHID12 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID13(String s) {
if (!s.trim().isEmpty()) {
E_ETHID13 = Byte.parseByte(s);
} else {
E_ETHID13 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID14(String s) {
if (!s.trim().isEmpty()) {
E_ETHID14 = Byte.parseByte(s);
} else {
E_ETHID14 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID2(String s) {
if (!s.trim().isEmpty()) {
E_ETHID2 = Byte.parseByte(s);
} else {
E_ETHID2 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID3(String s) {
if (!s.trim().isEmpty()) {
E_ETHID3 = Byte.parseByte(s);
} else {
E_ETHID3 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID4A(String s) {
if (!s.trim().isEmpty()) {
E_ETHID4A = Byte.parseByte(s);
} else {
E_ETHID4A = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID4B(String s) {
if (!s.trim().isEmpty()) {
E_ETHID4B = Byte.parseByte(s);
} else {
E_ETHID4B = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID5(String s) {
if (!s.trim().isEmpty()) {
E_ETHID5 = Byte.parseByte(s);
} else {
E_ETHID5 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID6(String s) {
if (!s.trim().isEmpty()) {
E_ETHID6 = Byte.parseByte(s);
} else {
E_ETHID6 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID7(String s) {
if (!s.trim().isEmpty()) {
E_ETHID7 = Byte.parseByte(s);
} else {
E_ETHID7 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID8(String s) {
if (!s.trim().isEmpty()) {
E_ETHID8 = Byte.parseByte(s);
} else {
E_ETHID8 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHID9(String s) {
if (!s.trim().isEmpty()) {
E_ETHID9 = Byte.parseByte(s);
} else {
E_ETHID9 = Byte.MIN_VALUE;
}
}

protected final void initE_ETHN_DV(String s) {
if (!s.trim().isEmpty()) {
E_ETHN_DV = Byte.parseByte(s);
} else {
E_ETHN_DV = Byte.MIN_VALUE;
}
}

protected final void initE_EVENT1(String s) {
if (!s.trim().isEmpty()) {
E_EVENT1 = Byte.parseByte(s);
} else {
E_EVENT1 = Byte.MIN_VALUE;
}
}

protected final void initE_EVENT1S(String s) {
if (!s.trim().isEmpty()) {
E_EVENT1S = Byte.parseByte(s);
} else {
E_EVENT1S = Byte.MIN_VALUE;
}
}

protected final void initE_EVENT2(String s) {
if (!s.trim().isEmpty()) {
E_EVENT2 = Byte.parseByte(s);
} else {
E_EVENT2 = Byte.MIN_VALUE;
}
}

protected final void initE_EVENT2S(String s) {
if (!s.trim().isEmpty()) {
E_EVENT2S = Byte.parseByte(s);
} else {
E_EVENT2S = Byte.MIN_VALUE;
}
}

protected final void initE_EVENT3(String s) {
if (!s.trim().isEmpty()) {
E_EVENT3 = Byte.parseByte(s);
} else {
E_EVENT3 = Byte.MIN_VALUE;
}
}

protected final void initE_EVENT3S(String s) {
if (!s.trim().isEmpty()) {
E_EVENT3S = Byte.parseByte(s);
} else {
E_EVENT3S = Byte.MIN_VALUE;
}
}

protected final void initE_EVENT4(String s) {
if (!s.trim().isEmpty()) {
E_EVENT4 = Byte.parseByte(s);
} else {
E_EVENT4 = Byte.MIN_VALUE;
}
}

protected final void initE_EVENT4S(String s) {
if (!s.trim().isEmpty()) {
E_EVENT4S = Byte.parseByte(s);
} else {
E_EVENT4S = Byte.MIN_VALUE;
}
}

protected final void initE_EXPREAM(String s) {
if (!s.trim().isEmpty()) {
E_EXPREAM = Byte.parseByte(s);
} else {
E_EXPREAM = Byte.MIN_VALUE;
}
}

protected final void initE_EXSAME(String s) {
if (!s.trim().isEmpty()) {
E_EXSAME = Byte.parseByte(s);
} else {
E_EXSAME = Byte.MIN_VALUE;
}
}

protected final void initE_EXTNSA(String s) {
if (!s.trim().isEmpty()) {
E_EXTNSA = Byte.parseByte(s);
} else {
E_EXTNSA = Byte.MIN_VALUE;
}
}

protected final void initE_EXTRATE(String s) {
if (!s.trim().isEmpty()) {
E_EXTRATE = Double.parseDouble(s);
} else {
E_EXTRATE = Double.NaN;
}
}

protected final void initE_EXTREST(String s) {
if (!s.trim().isEmpty()) {
E_EXTREST = Byte.parseByte(s);
} else {
E_EXTREST = Byte.MIN_VALUE;
}
}

protected final void initE_FAMILY(String s) {
if (!s.trim().isEmpty()) {
E_FAMILY = Byte.parseByte(s);
} else {
E_FAMILY = Byte.MIN_VALUE;
}
}

protected final void initE_FAMSUP(String s) {
if (!s.trim().isEmpty()) {
E_FAMSUP = Byte.parseByte(s);
} else {
E_FAMSUP = Byte.MIN_VALUE;
}
}

protected final void initE_FARKID(String s) {
if (!s.trim().isEmpty()) {
E_FARKID = Byte.parseByte(s);
} else {
E_FARKID = Byte.MIN_VALUE;
}
}

protected final void initE_FATHER(String s) {
if (!s.trim().isEmpty()) {
E_FATHER = Byte.parseByte(s);
} else {
E_FATHER = Byte.MIN_VALUE;
}
}

protected final void initE_FEEND(String s) {
if (!s.trim().isEmpty()) {
E_FEEND = Byte.parseByte(s);
} else {
E_FEEND = Byte.MIN_VALUE;
}
}

protected final void initE_FENOW(String s) {
if (!s.trim().isEmpty()) {
E_FENOW = Byte.parseByte(s);
} else {
E_FENOW = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE01(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE01 = Byte.parseByte(s);
} else {
E_FF_BENTYPE01 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE02(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE02 = Byte.parseByte(s);
} else {
E_FF_BENTYPE02 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE03(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE03 = Byte.parseByte(s);
} else {
E_FF_BENTYPE03 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE04(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE04 = Byte.parseByte(s);
} else {
E_FF_BENTYPE04 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE05(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE05 = Byte.parseByte(s);
} else {
E_FF_BENTYPE05 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE06(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE06 = Byte.parseByte(s);
} else {
E_FF_BENTYPE06 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE07(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE07 = Byte.parseByte(s);
} else {
E_FF_BENTYPE07 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE08(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE08 = Byte.parseByte(s);
} else {
E_FF_BENTYPE08 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE09(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE09 = Byte.parseByte(s);
} else {
E_FF_BENTYPE09 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE10(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE10 = Byte.parseByte(s);
} else {
E_FF_BENTYPE10 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE11(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE11 = Byte.parseByte(s);
} else {
E_FF_BENTYPE11 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE12(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE12 = Byte.parseByte(s);
} else {
E_FF_BENTYPE12 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE13(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE13 = Byte.parseByte(s);
} else {
E_FF_BENTYPE13 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE14(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE14 = Byte.parseByte(s);
} else {
E_FF_BENTYPE14 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE15(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE15 = Byte.parseByte(s);
} else {
E_FF_BENTYPE15 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE16(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE16 = Byte.parseByte(s);
} else {
E_FF_BENTYPE16 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE17(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE17 = Byte.parseByte(s);
} else {
E_FF_BENTYPE17 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE18(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE18 = Byte.parseByte(s);
} else {
E_FF_BENTYPE18 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE19(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE19 = Byte.parseByte(s);
} else {
E_FF_BENTYPE19 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE20(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE20 = Byte.parseByte(s);
} else {
E_FF_BENTYPE20 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE21(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE21 = Byte.parseByte(s);
} else {
E_FF_BENTYPE21 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE22(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE22 = Byte.parseByte(s);
} else {
E_FF_BENTYPE22 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE23(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE23 = Byte.parseByte(s);
} else {
E_FF_BENTYPE23 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE24(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE24 = Byte.parseByte(s);
} else {
E_FF_BENTYPE24 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE25(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE25 = Byte.parseByte(s);
} else {
E_FF_BENTYPE25 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE26(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE26 = Byte.parseByte(s);
} else {
E_FF_BENTYPE26 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE27(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE27 = Byte.parseByte(s);
} else {
E_FF_BENTYPE27 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE28(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE28 = Byte.parseByte(s);
} else {
E_FF_BENTYPE28 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE29(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE29 = Byte.parseByte(s);
} else {
E_FF_BENTYPE29 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE30(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE30 = Byte.parseByte(s);
} else {
E_FF_BENTYPE30 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE31(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE31 = Byte.parseByte(s);
} else {
E_FF_BENTYPE31 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE32(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE32 = Byte.parseByte(s);
} else {
E_FF_BENTYPE32 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE33(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE33 = Byte.parseByte(s);
} else {
E_FF_BENTYPE33 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE34(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE34 = Byte.parseByte(s);
} else {
E_FF_BENTYPE34 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE35(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE35 = Byte.parseByte(s);
} else {
E_FF_BENTYPE35 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE36(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE36 = Byte.parseByte(s);
} else {
E_FF_BENTYPE36 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE37(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE37 = Byte.parseByte(s);
} else {
E_FF_BENTYPE37 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE38(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE38 = Byte.parseByte(s);
} else {
E_FF_BENTYPE38 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE39(String s) {
if (!s.trim().isEmpty()) {
E_FF_BENTYPE39 = Byte.parseByte(s);
} else {
E_FF_BENTYPE39 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_BENTYPE40(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_FF_BENTYPE40 = false;
} else {
E_FF_BENTYPE40 = true;
}
}
}

protected final void initE_FF_BENTYPE41(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_FF_BENTYPE41 = false;
} else {
E_FF_BENTYPE41 = true;
}
}
}

protected final void initE_FF_EMPLW(String s) {
if (!s.trim().isEmpty()) {
E_FF_EMPLW = Byte.parseByte(s);
} else {
E_FF_EMPLW = Byte.MIN_VALUE;
}
}

protected final void initE_FF_EVERINT(String s) {
if (!s.trim().isEmpty()) {
E_FF_EVERINT = Byte.parseByte(s);
} else {
E_FF_EVERINT = Byte.MIN_VALUE;
}
}

protected final void initE_FF_IVINTLANG(String s) {
if (!s.trim().isEmpty()) {
E_FF_IVINTLANG = Byte.parseByte(s);
} else {
E_FF_IVINTLANG = Byte.MIN_VALUE;
}
}

protected final void initE_FF_IVLOLW(String s) {
if (!s.trim().isEmpty()) {
E_FF_IVLOLW = Byte.parseByte(s);
} else {
E_FF_IVLOLW = Byte.MIN_VALUE;
}
}

protected final void initE_FF_JBMNGR(String s) {
if (!s.trim().isEmpty()) {
E_FF_JBMNGR = Byte.parseByte(s);
} else {
E_FF_JBMNGR = Byte.MIN_VALUE;
}
}

protected final void initE_FF_JBSEMP(String s) {
if (!s.trim().isEmpty()) {
E_FF_JBSEMP = Byte.parseByte(s);
} else {
E_FF_JBSEMP = Byte.MIN_VALUE;
}
}

protected final void initE_FF_JBSIZE(String s) {
if (!s.trim().isEmpty()) {
E_FF_JBSIZE = Byte.parseByte(s);
} else {
E_FF_JBSIZE = Byte.MIN_VALUE;
}
}

protected final void initE_FF_JBSTAT(String s) {
if (!s.trim().isEmpty()) {
E_FF_JBSTAT = Byte.parseByte(s);
} else {
E_FF_JBSTAT = Byte.MIN_VALUE;
}
}

protected final void initE_FF_OPRLG(String s) {
if (!s.trim().isEmpty()) {
E_FF_OPRLG = Byte.parseByte(s);
} else {
E_FF_OPRLG = Byte.MIN_VALUE;
}
}

protected final void initE_FF_OPRLG0(String s) {
if (!s.trim().isEmpty()) {
E_FF_OPRLG0 = Byte.parseByte(s);
} else {
E_FF_OPRLG0 = Byte.MIN_VALUE;
}
}

protected final void initE_FF_OPRLG0NI(String s) {
if (!s.trim().isEmpty()) {
E_FF_OPRLG0NI = Byte.parseByte(s);
} else {
E_FF_OPRLG0NI = Byte.MIN_VALUE;
}
}

protected final void initE_FF_TEL(String s) {
if (!s.trim().isEmpty()) {
E_FF_TEL = Byte.parseByte(s);
} else {
E_FF_TEL = Byte.MIN_VALUE;
}
}

protected final void initE_FF_UKBORN(String s) {
if (!s.trim().isEmpty()) {
E_FF_UKBORN = Byte.parseByte(s);
} else {
E_FF_UKBORN = Byte.MIN_VALUE;
}
}

protected final void initE_FF_YR2UK4(String s) {
if (!s.trim().isEmpty()) {
E_FF_YR2UK4 = Short.parseShort(s);
} else {
E_FF_YR2UK4 = Short.MIN_VALUE;
}
}

protected final void initE_FIBENOTHR_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIBENOTHR_DV = Double.parseDouble(s);
} else {
E_FIBENOTHR_DV = Double.NaN;
}
}

protected final void initE_FIBENOTHR_IF(String s) {
if (!s.trim().isEmpty()) {
E_FIBENOTHR_IF = Double.parseDouble(s);
} else {
E_FIBENOTHR_IF = Double.NaN;
}
}

protected final void initE_FIBENOTHR_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_FIBENOTHR_TC = false;
} else {
E_FIBENOTHR_TC = true;
}
}
}

protected final void initE_FIMNGRS_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNGRS_DV = Double.parseDouble(s);
} else {
E_FIMNGRS_DV = Double.NaN;
}
}

protected final void initE_FIMNGRS_IF(String s) {
if (!s.trim().isEmpty()) {
E_FIMNGRS_IF = Double.parseDouble(s);
} else {
E_FIMNGRS_IF = Double.NaN;
}
}

protected final void initE_FIMNGRS_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_FIMNGRS_TC = false;
} else {
E_FIMNGRS_TC = true;
}
}
}

protected final void initE_FIMNINVNET_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNINVNET_DV = Double.parseDouble(s);
} else {
E_FIMNINVNET_DV = Double.NaN;
}
}

protected final void initE_FIMNLABGRS_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNLABGRS_DV = Double.parseDouble(s);
} else {
E_FIMNLABGRS_DV = Double.NaN;
}
}

protected final void initE_FIMNLABGRS_IF(String s) {
if (!s.trim().isEmpty()) {
E_FIMNLABGRS_IF = Double.parseDouble(s);
} else {
E_FIMNLABGRS_IF = Double.NaN;
}
}

protected final void initE_FIMNLABGRS_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_FIMNLABGRS_TC = false;
} else {
E_FIMNLABGRS_TC = true;
}
}
}

protected final void initE_FIMNLABNET_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNLABNET_DV = Double.parseDouble(s);
} else {
E_FIMNLABNET_DV = Double.NaN;
}
}

protected final void initE_FIMNLABNET_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_FIMNLABNET_TC = false;
} else {
E_FIMNLABNET_TC = true;
}
}
}

protected final void initE_FIMNMISC_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNMISC_DV = Double.parseDouble(s);
} else {
E_FIMNMISC_DV = Double.NaN;
}
}

protected final void initE_FIMNNET_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNNET_DV = Double.parseDouble(s);
} else {
E_FIMNNET_DV = Double.NaN;
}
}

protected final void initE_FIMNPEN_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNPEN_DV = Double.parseDouble(s);
} else {
E_FIMNPEN_DV = Double.NaN;
}
}

protected final void initE_FIMNPRBEN_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNPRBEN_DV = Double.parseDouble(s);
} else {
E_FIMNPRBEN_DV = Double.NaN;
}
}

protected final void initE_FIMNSBEN_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIMNSBEN_DV = Double.parseDouble(s);
} else {
E_FIMNSBEN_DV = Double.NaN;
}
}

protected final void initE_FINFUT(String s) {
if (!s.trim().isEmpty()) {
E_FINFUT = Byte.parseByte(s);
} else {
E_FINFUT = Byte.MIN_VALUE;
}
}

protected final void initE_FINNOW(String s) {
if (!s.trim().isEmpty()) {
E_FINNOW = Byte.parseByte(s);
} else {
E_FINNOW = Byte.MIN_VALUE;
}
}

protected final void initE_FIYRDB1(String s) {
if (!s.trim().isEmpty()) {
E_FIYRDB1 = Byte.parseByte(s);
} else {
E_FIYRDB1 = Byte.MIN_VALUE;
}
}

protected final void initE_FIYRDB2(String s) {
if (!s.trim().isEmpty()) {
E_FIYRDB2 = Byte.parseByte(s);
} else {
E_FIYRDB2 = Byte.MIN_VALUE;
}
}

protected final void initE_FIYRDB3(String s) {
if (!s.trim().isEmpty()) {
E_FIYRDB3 = Byte.parseByte(s);
} else {
E_FIYRDB3 = Byte.MIN_VALUE;
}
}

protected final void initE_FIYRDB4(String s) {
if (!s.trim().isEmpty()) {
E_FIYRDB4 = Byte.parseByte(s);
} else {
E_FIYRDB4 = Byte.MIN_VALUE;
}
}

protected final void initE_FIYRDB5(String s) {
if (!s.trim().isEmpty()) {
E_FIYRDB5 = Byte.parseByte(s);
} else {
E_FIYRDB5 = Byte.MIN_VALUE;
}
}

protected final void initE_FIYRDB6(String s) {
if (!s.trim().isEmpty()) {
E_FIYRDB6 = Byte.parseByte(s);
} else {
E_FIYRDB6 = Byte.MIN_VALUE;
}
}

protected final void initE_FIYRDIA(String s) {
if (!s.trim().isEmpty()) {
E_FIYRDIA = Integer.parseInt(s);
} else {
E_FIYRDIA = Integer.MIN_VALUE;
}
}

protected final void initE_FIYRINVINC_DV(String s) {
if (!s.trim().isEmpty()) {
E_FIYRINVINC_DV = Double.parseDouble(s);
} else {
E_FIYRINVINC_DV = Double.NaN;
}
}

protected final void initE_FIYRINVINC_IF(String s) {
if (!s.trim().isEmpty()) {
E_FIYRINVINC_IF = Byte.parseByte(s);
} else {
E_FIYRINVINC_IF = Byte.MIN_VALUE;
}
}

protected final void initE_FIYRINVINC_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_FIYRINVINC_TC = false;
} else {
E_FIYRINVINC_TC = true;
}
}
}

protected final void initE_FLAGLINKB1(String s) {
if (!s.trim().isEmpty()) {
E_FLAGLINKB1 = Byte.parseByte(s);
} else {
E_FLAGLINKB1 = Byte.MIN_VALUE;
}
}

protected final void initE_FLAGLINKB2(String s) {
if (!s.trim().isEmpty()) {
E_FLAGLINKB2 = Byte.parseByte(s);
} else {
E_FLAGLINKB2 = Byte.MIN_VALUE;
}
}

protected final void initE_FLAGLINKB3(String s) {
if (!s.trim().isEmpty()) {
E_FLAGLINKB3 = Byte.parseByte(s);
} else {
E_FLAGLINKB3 = Byte.MIN_VALUE;
}
}

protected final void initE_FNPID(String s) {
if (!s.trim().isEmpty()) {
E_FNPID = Integer.parseInt(s);
} else {
E_FNPID = Integer.MIN_VALUE;
}
}

protected final void initE_FNPNO(String s) {
if (!s.trim().isEmpty()) {
E_FNPNO = Byte.parseByte(s);
} else {
E_FNPNO = Byte.MIN_VALUE;
}
}

protected final void initE_FNSPID(String s) {
if (!s.trim().isEmpty()) {
E_FNSPID = Integer.parseInt(s);
} else {
E_FNSPID = Integer.MIN_VALUE;
}
}

protected final void initE_FNSPNO(String s) {
if (!s.trim().isEmpty()) {
E_FNSPNO = Byte.parseByte(s);
} else {
E_FNSPNO = Byte.MIN_VALUE;
}
}

protected final void initE_FOOD1(String s) {
if (!s.trim().isEmpty()) {
E_FOOD1 = Byte.parseByte(s);
} else {
E_FOOD1 = Byte.MIN_VALUE;
}
}

protected final void initE_FOOD2(String s) {
if (!s.trim().isEmpty()) {
E_FOOD2 = Byte.parseByte(s);
} else {
E_FOOD2 = Byte.MIN_VALUE;
}
}

protected final void initE_FOOD3(String s) {
if (!s.trim().isEmpty()) {
E_FOOD3 = Byte.parseByte(s);
} else {
E_FOOD3 = Byte.MIN_VALUE;
}
}

protected final void initE_FOOD4(String s) {
if (!s.trim().isEmpty()) {
E_FOOD4 = Byte.parseByte(s);
} else {
E_FOOD4 = Byte.MIN_VALUE;
}
}

protected final void initE_FOOD5(String s) {
if (!s.trim().isEmpty()) {
E_FOOD5 = Byte.parseByte(s);
} else {
E_FOOD5 = Byte.MIN_VALUE;
}
}

protected final void initE_FOOD6(String s) {
if (!s.trim().isEmpty()) {
E_FOOD6 = Byte.parseByte(s);
} else {
E_FOOD6 = Byte.MIN_VALUE;
}
}

protected final void initE_FOOD7(String s) {
if (!s.trim().isEmpty()) {
E_FOOD7 = Byte.parseByte(s);
} else {
E_FOOD7 = Byte.MIN_VALUE;
}
}

protected final void initE_FORMDIF(String s) {
if (!s.trim().isEmpty()) {
E_FORMDIF = Byte.parseByte(s);
} else {
E_FORMDIF = Byte.MIN_VALUE;
}
}

protected final void initE_FRDRG(String s) {
if (!s.trim().isEmpty()) {
E_FRDRG = Byte.parseByte(s);
} else {
E_FRDRG = Byte.MIN_VALUE;
}
}

protected final void initE_FROBULLI(String s) {
if (!s.trim().isEmpty()) {
E_FROBULLI = Byte.parseByte(s);
} else {
E_FROBULLI = Byte.MIN_VALUE;
}
}

protected final void initE_FROBULLY(String s) {
if (!s.trim().isEmpty()) {
E_FROBULLY = Byte.parseByte(s);
} else {
E_FROBULLY = Byte.MIN_VALUE;
}
}

protected final void initE_FRPBULLI(String s) {
if (!s.trim().isEmpty()) {
E_FRPBULLI = Byte.parseByte(s);
} else {
E_FRPBULLI = Byte.MIN_VALUE;
}
}

protected final void initE_FRPBULLY(String s) {
if (!s.trim().isEmpty()) {
E_FRPBULLY = Byte.parseByte(s);
} else {
E_FRPBULLY = Byte.MIN_VALUE;
}
}

protected final void initE_FRUVEGE(String s) {
if (!s.trim().isEmpty()) {
E_FRUVEGE = Byte.parseByte(s);
} else {
E_FRUVEGE = Byte.MIN_VALUE;
}
}

protected final void initE_FT2ENDM1(String s) {
if (!s.trim().isEmpty()) {
E_FT2ENDM1 = Byte.parseByte(s);
} else {
E_FT2ENDM1 = Byte.MIN_VALUE;
}
}

protected final void initE_FT2ENDM2(String s) {
if (!s.trim().isEmpty()) {
E_FT2ENDM2 = Byte.parseByte(s);
} else {
E_FT2ENDM2 = Byte.MIN_VALUE;
}
}

protected final void initE_FT2ENDY41(String s) {
if (!s.trim().isEmpty()) {
E_FT2ENDY41 = Short.parseShort(s);
} else {
E_FT2ENDY41 = Short.MIN_VALUE;
}
}

protected final void initE_FT2ENDY42(String s) {
if (!s.trim().isEmpty()) {
E_FT2ENDY42 = Short.parseShort(s);
} else {
E_FT2ENDY42 = Short.MIN_VALUE;
}
}

protected final void initE_FTEDANY(String s) {
if (!s.trim().isEmpty()) {
E_FTEDANY = Byte.parseByte(s);
} else {
E_FTEDANY = Byte.MIN_VALUE;
}
}

protected final void initE_FTEDEND1(String s) {
if (!s.trim().isEmpty()) {
E_FTEDEND1 = Byte.parseByte(s);
} else {
E_FTEDEND1 = Byte.MIN_VALUE;
}
}

protected final void initE_FTEDEND2(String s) {
if (!s.trim().isEmpty()) {
E_FTEDEND2 = Byte.parseByte(s);
} else {
E_FTEDEND2 = Byte.MIN_VALUE;
}
}

protected final void initE_FTEDMOR1(String s) {
if (!s.trim().isEmpty()) {
E_FTEDMOR1 = Byte.parseByte(s);
} else {
E_FTEDMOR1 = Byte.MIN_VALUE;
}
}

protected final void initE_FTEDMOR2(String s) {
if (!s.trim().isEmpty()) {
E_FTEDMOR2 = Byte.parseByte(s);
} else {
E_FTEDMOR2 = Byte.MIN_VALUE;
}
}

protected final void initE_FTEDSTARTM1(String s) {
if (!s.trim().isEmpty()) {
E_FTEDSTARTM1 = Byte.parseByte(s);
} else {
E_FTEDSTARTM1 = Byte.MIN_VALUE;
}
}

protected final void initE_FTEDSTARTM2(String s) {
if (!s.trim().isEmpty()) {
E_FTEDSTARTM2 = Byte.parseByte(s);
} else {
E_FTEDSTARTM2 = Byte.MIN_VALUE;
}
}

protected final void initE_FTEDSTARTY41(String s) {
if (!s.trim().isEmpty()) {
E_FTEDSTARTY41 = Short.parseShort(s);
} else {
E_FTEDSTARTY41 = Short.MIN_VALUE;
}
}

protected final void initE_FTEDSTARTY42(String s) {
if (!s.trim().isEmpty()) {
E_FTEDSTARTY42 = Short.parseShort(s);
} else {
E_FTEDSTARTY42 = Short.MIN_VALUE;
}
}

protected final void initE_FTENDM(String s) {
if (!s.trim().isEmpty()) {
E_FTENDM = Byte.parseByte(s);
} else {
E_FTENDM = Byte.MIN_VALUE;
}
}

protected final void initE_FTENDY4(String s) {
if (!s.trim().isEmpty()) {
E_FTENDY4 = Short.parseShort(s);
} else {
E_FTENDY4 = Short.MIN_VALUE;
}
}

protected final void initE_FTEXV(String s) {
if (!s.trim().isEmpty()) {
E_FTEXV = Short.parseShort(s);
} else {
E_FTEXV = Short.MIN_VALUE;
}
}

protected final void initE_FTEXW(String s) {
if (!s.trim().isEmpty()) {
E_FTEXW = Byte.parseByte(s);
} else {
E_FTEXW = Byte.MIN_VALUE;
}
}

protected final void initE_FTQUALS(String s) {
if (!s.trim().isEmpty()) {
E_FTQUALS = Byte.parseByte(s);
} else {
E_FTQUALS = Byte.MIN_VALUE;
}
}

protected final void initE_FUTRA(String s) {
if (!s.trim().isEmpty()) {
E_FUTRA = Short.parseShort(s);
} else {
E_FUTRA = Short.MIN_VALUE;
}
}

protected final void initE_FUTRB(String s) {
if (!s.trim().isEmpty()) {
E_FUTRB = Short.parseShort(s);
} else {
E_FUTRB = Short.MIN_VALUE;
}
}

protected final void initE_FUTRC(String s) {
if (!s.trim().isEmpty()) {
E_FUTRC = Short.parseShort(s);
} else {
E_FUTRC = Short.MIN_VALUE;
}
}

protected final void initE_FUTRD(String s) {
if (!s.trim().isEmpty()) {
E_FUTRD = Short.parseShort(s);
} else {
E_FUTRD = Short.MIN_VALUE;
}
}

protected final void initE_FUTRE(String s) {
if (!s.trim().isEmpty()) {
E_FUTRE = Short.parseShort(s);
} else {
E_FUTRE = Short.MIN_VALUE;
}
}

protected final void initE_FUTRF(String s) {
if (!s.trim().isEmpty()) {
E_FUTRF = Short.parseShort(s);
} else {
E_FUTRF = Short.MIN_VALUE;
}
}

protected final void initE_FUTRG(String s) {
if (!s.trim().isEmpty()) {
E_FUTRG = Short.parseShort(s);
} else {
E_FUTRG = Short.MIN_VALUE;
}
}

protected final void initE_FUTRH(String s) {
if (!s.trim().isEmpty()) {
E_FUTRH = Short.parseShort(s);
} else {
E_FUTRH = Short.MIN_VALUE;
}
}

protected final void initE_FUTRI(String s) {
if (!s.trim().isEmpty()) {
E_FUTRI = Short.parseShort(s);
} else {
E_FUTRI = Short.MIN_VALUE;
}
}

protected final void initE_FUTRJ(String s) {
if (!s.trim().isEmpty()) {
E_FUTRJ = Short.parseShort(s);
} else {
E_FUTRJ = Short.MIN_VALUE;
}
}

protected final void initE_FUTRK(String s) {
if (!s.trim().isEmpty()) {
E_FUTRK = Short.parseShort(s);
} else {
E_FUTRK = Short.MIN_VALUE;
}
}

protected final void initE_FUTRL(String s) {
if (!s.trim().isEmpty()) {
E_FUTRL = Byte.parseByte(s);
} else {
E_FUTRL = Byte.MIN_VALUE;
}
}

protected final void initE_GIVECOA(String s) {
if (!s.trim().isEmpty()) {
E_GIVECOA = Byte.parseByte(s);
} else {
E_GIVECOA = Byte.MIN_VALUE;
}
}

protected final void initE_GOR_DV(String s) {
if (!s.trim().isEmpty()) {
E_GOR_DV = Byte.parseByte(s);
} else {
E_GOR_DV = Byte.MIN_VALUE;
}
}

protected final void initE_GRFPID(String s) {
if (!s.trim().isEmpty()) {
E_GRFPID = Integer.parseInt(s);
} else {
E_GRFPID = Integer.MIN_VALUE;
}
}

protected final void initE_GRFPNO(String s) {
if (!s.trim().isEmpty()) {
E_GRFPNO = Byte.parseByte(s);
} else {
E_GRFPNO = Byte.MIN_VALUE;
}
}

protected final void initE_GRMPID(String s) {
if (!s.trim().isEmpty()) {
E_GRMPID = Integer.parseInt(s);
} else {
E_GRMPID = Integer.MIN_VALUE;
}
}

protected final void initE_GRMPNO(String s) {
if (!s.trim().isEmpty()) {
E_GRMPNO = Byte.parseByte(s);
} else {
E_GRMPNO = Byte.MIN_VALUE;
}
}

protected final void initE_HASEMAIL(String s) {
if (!s.trim().isEmpty()) {
E_HASEMAIL = Byte.parseByte(s);
} else {
E_HASEMAIL = Byte.MIN_VALUE;
}
}

protected final void initE_HASSTEP(String s) {
if (!s.trim().isEmpty()) {
E_HASSTEP = Byte.parseByte(s);
} else {
E_HASSTEP = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND1(String s) {
if (!s.trim().isEmpty()) {
E_HCOND1 = Byte.parseByte(s);
} else {
E_HCOND1 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND10(String s) {
if (!s.trim().isEmpty()) {
E_HCOND10 = Byte.parseByte(s);
} else {
E_HCOND10 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND11(String s) {
if (!s.trim().isEmpty()) {
E_HCOND11 = Byte.parseByte(s);
} else {
E_HCOND11 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND12(String s) {
if (!s.trim().isEmpty()) {
E_HCOND12 = Byte.parseByte(s);
} else {
E_HCOND12 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND13(String s) {
if (!s.trim().isEmpty()) {
E_HCOND13 = Byte.parseByte(s);
} else {
E_HCOND13 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND14(String s) {
if (!s.trim().isEmpty()) {
E_HCOND14 = Byte.parseByte(s);
} else {
E_HCOND14 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND15(String s) {
if (!s.trim().isEmpty()) {
E_HCOND15 = Byte.parseByte(s);
} else {
E_HCOND15 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND16(String s) {
if (!s.trim().isEmpty()) {
E_HCOND16 = Byte.parseByte(s);
} else {
E_HCOND16 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND17(String s) {
if (!s.trim().isEmpty()) {
E_HCOND17 = Byte.parseByte(s);
} else {
E_HCOND17 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND2(String s) {
if (!s.trim().isEmpty()) {
E_HCOND2 = Byte.parseByte(s);
} else {
E_HCOND2 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND3(String s) {
if (!s.trim().isEmpty()) {
E_HCOND3 = Byte.parseByte(s);
} else {
E_HCOND3 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND4(String s) {
if (!s.trim().isEmpty()) {
E_HCOND4 = Byte.parseByte(s);
} else {
E_HCOND4 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND5(String s) {
if (!s.trim().isEmpty()) {
E_HCOND5 = Byte.parseByte(s);
} else {
E_HCOND5 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND6(String s) {
if (!s.trim().isEmpty()) {
E_HCOND6 = Byte.parseByte(s);
} else {
E_HCOND6 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND7(String s) {
if (!s.trim().isEmpty()) {
E_HCOND7 = Byte.parseByte(s);
} else {
E_HCOND7 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND8(String s) {
if (!s.trim().isEmpty()) {
E_HCOND8 = Byte.parseByte(s);
} else {
E_HCOND8 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND9(String s) {
if (!s.trim().isEmpty()) {
E_HCOND9 = Byte.parseByte(s);
} else {
E_HCOND9 = Byte.MIN_VALUE;
}
}

protected final void initE_HCOND96(String s) {
if (!s.trim().isEmpty()) {
E_HCOND96 = Byte.parseByte(s);
} else {
E_HCOND96 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA01(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA01 = Byte.parseByte(s);
} else {
E_HCONDA01 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA02(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA02 = Byte.parseByte(s);
} else {
E_HCONDA02 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA03(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA03 = Byte.parseByte(s);
} else {
E_HCONDA03 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA04(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA04 = Byte.parseByte(s);
} else {
E_HCONDA04 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA05(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA05 = Byte.parseByte(s);
} else {
E_HCONDA05 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA06(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA06 = Byte.parseByte(s);
} else {
E_HCONDA06 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA07(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA07 = Byte.parseByte(s);
} else {
E_HCONDA07 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA08(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA08 = Byte.parseByte(s);
} else {
E_HCONDA08 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA09(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA09 = Byte.parseByte(s);
} else {
E_HCONDA09 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA10(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA10 = Byte.parseByte(s);
} else {
E_HCONDA10 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA11(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA11 = Byte.parseByte(s);
} else {
E_HCONDA11 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA12(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA12 = Byte.parseByte(s);
} else {
E_HCONDA12 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA13(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA13 = Byte.parseByte(s);
} else {
E_HCONDA13 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA14(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA14 = Byte.parseByte(s);
} else {
E_HCONDA14 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA15(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA15 = Byte.parseByte(s);
} else {
E_HCONDA15 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA16(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA16 = Byte.parseByte(s);
} else {
E_HCONDA16 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDA17(String s) {
if (!s.trim().isEmpty()) {
E_HCONDA17 = Byte.parseByte(s);
} else {
E_HCONDA17 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN1(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN1 = Byte.parseByte(s);
} else {
E_HCONDN1 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN10(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN10 = Byte.parseByte(s);
} else {
E_HCONDN10 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN11(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN11 = Byte.parseByte(s);
} else {
E_HCONDN11 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN12(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN12 = Byte.parseByte(s);
} else {
E_HCONDN12 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN13(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN13 = Byte.parseByte(s);
} else {
E_HCONDN13 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN14(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN14 = Byte.parseByte(s);
} else {
E_HCONDN14 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN15(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN15 = Byte.parseByte(s);
} else {
E_HCONDN15 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN16(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN16 = Byte.parseByte(s);
} else {
E_HCONDN16 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN17(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN17 = Byte.parseByte(s);
} else {
E_HCONDN17 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN2(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN2 = Byte.parseByte(s);
} else {
E_HCONDN2 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN3(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN3 = Byte.parseByte(s);
} else {
E_HCONDN3 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN4(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN4 = Byte.parseByte(s);
} else {
E_HCONDN4 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN5(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN5 = Byte.parseByte(s);
} else {
E_HCONDN5 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN6(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN6 = Byte.parseByte(s);
} else {
E_HCONDN6 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN7(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN7 = Byte.parseByte(s);
} else {
E_HCONDN7 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN8(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN8 = Byte.parseByte(s);
} else {
E_HCONDN8 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN9(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN9 = Byte.parseByte(s);
} else {
E_HCONDN9 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDN96(String s) {
if (!s.trim().isEmpty()) {
E_HCONDN96 = Byte.parseByte(s);
} else {
E_HCONDN96 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNO1(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNO1 = Byte.parseByte(s);
} else {
E_HCONDNO1 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNO2(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNO2 = Byte.parseByte(s);
} else {
E_HCONDNO2 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNO3(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNO3 = Byte.parseByte(s);
} else {
E_HCONDNO3 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNO4(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNO4 = Byte.parseByte(s);
} else {
E_HCONDNO4 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNO5(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNO5 = Byte.parseByte(s);
} else {
E_HCONDNO5 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNO6(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNO6 = Byte.parseByte(s);
} else {
E_HCONDNO6 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNO7(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNO7 = Byte.parseByte(s);
} else {
E_HCONDNO7 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNS1(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNS1 = Byte.parseByte(s);
} else {
E_HCONDNS1 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNS2(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNS2 = Byte.parseByte(s);
} else {
E_HCONDNS2 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNS3(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNS3 = Byte.parseByte(s);
} else {
E_HCONDNS3 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNS4(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNS4 = Byte.parseByte(s);
} else {
E_HCONDNS4 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNS5(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNS5 = Byte.parseByte(s);
} else {
E_HCONDNS5 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNS6(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNS6 = Byte.parseByte(s);
} else {
E_HCONDNS6 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDNS7(String s) {
if (!s.trim().isEmpty()) {
E_HCONDNS7 = Byte.parseByte(s);
} else {
E_HCONDNS7 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS01(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS01 = Byte.parseByte(s);
} else {
E_HCONDS01 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS02(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS02 = Byte.parseByte(s);
} else {
E_HCONDS02 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS03(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS03 = Byte.parseByte(s);
} else {
E_HCONDS03 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS04(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS04 = Byte.parseByte(s);
} else {
E_HCONDS04 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS05(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS05 = Byte.parseByte(s);
} else {
E_HCONDS05 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS08(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS08 = Byte.parseByte(s);
} else {
E_HCONDS08 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS09(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS09 = Byte.parseByte(s);
} else {
E_HCONDS09 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS10(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS10 = Byte.parseByte(s);
} else {
E_HCONDS10 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS11(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS11 = Byte.parseByte(s);
} else {
E_HCONDS11 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS12(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS12 = Byte.parseByte(s);
} else {
E_HCONDS12 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS13(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS13 = Byte.parseByte(s);
} else {
E_HCONDS13 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS14(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS14 = Byte.parseByte(s);
} else {
E_HCONDS14 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS15(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS15 = Byte.parseByte(s);
} else {
E_HCONDS15 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS16(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS16 = Byte.parseByte(s);
} else {
E_HCONDS16 = Byte.MIN_VALUE;
}
}

protected final void initE_HCONDS17(String s) {
if (!s.trim().isEmpty()) {
E_HCONDS17 = Byte.parseByte(s);
} else {
E_HCONDS17 = Byte.MIN_VALUE;
}
}

protected final void initE_HEALTH(String s) {
if (!s.trim().isEmpty()) {
E_HEALTH = Byte.parseByte(s);
} else {
E_HEALTH = Byte.MIN_VALUE;
}
}

protected final void initE_HEALTHKIDSN(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_HEALTHKIDSN = false;
} else {
E_HEALTHKIDSN = true;
}
}
}

protected final void initE_HEALTHSN(String s) {
if (!s.trim().isEmpty()) {
E_HEALTHSN = Byte.parseByte(s);
} else {
E_HEALTHSN = Byte.MIN_VALUE;
}
}

protected final void initE_HEDLIK(String s) {
if (!s.trim().isEmpty()) {
E_HEDLIK = Byte.parseByte(s);
} else {
E_HEDLIK = Byte.MIN_VALUE;
}
}

protected final void initE_HEDNT(String s) {
if (!s.trim().isEmpty()) {
E_HEDNT = Byte.parseByte(s);
} else {
E_HEDNT = Byte.MIN_VALUE;
}
}

protected final void initE_HEDNTO_CODE(String s) {
if (!s.trim().isEmpty()) {
E_HEDNTO_CODE = Byte.parseByte(s);
} else {
E_HEDNTO_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_HERFREQ(String s) {
if (!s.trim().isEmpty()) {
E_HERFREQ = Byte.parseByte(s);
} else {
E_HERFREQ = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE1(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE1 = Byte.parseByte(s);
} else {
E_HERITAGE1 = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE2(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE2 = Byte.parseByte(s);
} else {
E_HERITAGE2 = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE3(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE3 = Byte.parseByte(s);
} else {
E_HERITAGE3 = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE4(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE4 = Byte.parseByte(s);
} else {
E_HERITAGE4 = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE5(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE5 = Byte.parseByte(s);
} else {
E_HERITAGE5 = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE6(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE6 = Byte.parseByte(s);
} else {
E_HERITAGE6 = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE7(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE7 = Byte.parseByte(s);
} else {
E_HERITAGE7 = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE8(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE8 = Byte.parseByte(s);
} else {
E_HERITAGE8 = Byte.MIN_VALUE;
}
}

protected final void initE_HERITAGE96(String s) {
if (!s.trim().isEmpty()) {
E_HERITAGE96 = Byte.parseByte(s);
} else {
E_HERITAGE96 = Byte.MIN_VALUE;
}
}

protected final void initE_HESACONS(String s) {
if (!s.trim().isEmpty()) {
E_HESACONS = Byte.parseByte(s);
} else {
E_HESACONS = Byte.MIN_VALUE;
}
}

protected final void initE_HGADOPTF(String s) {
if (!s.trim().isEmpty()) {
E_HGADOPTF = Byte.parseByte(s);
} else {
E_HGADOPTF = Byte.MIN_VALUE;
}
}

protected final void initE_HGADOPTM(String s) {
if (!s.trim().isEmpty()) {
E_HGADOPTM = Byte.parseByte(s);
} else {
E_HGADOPTM = Byte.MIN_VALUE;
}
}

protected final void initE_HGBIOF(String s) {
if (!s.trim().isEmpty()) {
E_HGBIOF = Byte.parseByte(s);
} else {
E_HGBIOF = Byte.MIN_VALUE;
}
}

protected final void initE_HGBIOM(String s) {
if (!s.trim().isEmpty()) {
E_HGBIOM = Byte.parseByte(s);
} else {
E_HGBIOM = Byte.MIN_VALUE;
}
}

protected final void initE_HGPART(String s) {
if (!s.trim().isEmpty()) {
E_HGPART = Byte.parseByte(s);
} else {
E_HGPART = Byte.MIN_VALUE;
}
}

protected final void initE_HHORIG(String s) {
if (!s.trim().isEmpty()) {
E_HHORIG = Byte.parseByte(s);
} else {
E_HHORIG = Byte.MIN_VALUE;
}
}

protected final void initE_HHRESP_DV(String s) {
if (!s.trim().isEmpty()) {
E_HHRESP_DV = Byte.parseByte(s);
} else {
E_HHRESP_DV = Byte.MIN_VALUE;
}
}

protected final void initE_HHTYPE_DV(String s) {
if (!s.trim().isEmpty()) {
E_HHTYPE_DV = Byte.parseByte(s);
} else {
E_HHTYPE_DV = Byte.MIN_VALUE;
}
}

protected final void initE_HIDP(String s) {
if (!s.trim().isEmpty()) {
E_HIDP = Integer.parseInt(s);
} else {
E_HIDP = Integer.MIN_VALUE;
}
}

protected final void initE_HIQUAL_DV(String s) {
if (!s.trim().isEmpty()) {
E_HIQUAL_DV = Byte.parseByte(s);
} else {
E_HIQUAL_DV = Byte.MIN_VALUE;
}
}

protected final void initE_HITSIB(String s) {
if (!s.trim().isEmpty()) {
E_HITSIB = Byte.parseByte(s);
} else {
E_HITSIB = Byte.MIN_VALUE;
}
}

protected final void initE_HLPHMWK(String s) {
if (!s.trim().isEmpty()) {
E_HLPHMWK = Byte.parseByte(s);
} else {
E_HLPHMWK = Byte.MIN_VALUE;
}
}

protected final void initE_HLTHISGN(String s) {
if (!s.trim().isEmpty()) {
E_HLTHISGN = Byte.parseByte(s);
} else {
E_HLTHISGN = Byte.MIN_VALUE;
}
}

protected final void initE_HLTHKIDLINK(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_HLTHKIDLINK = false;
} else {
E_HLTHKIDLINK = true;
}
}
}

protected final void initE_HLTHLINK(String s) {
if (!s.trim().isEmpty()) {
E_HLTHLINK = Byte.parseByte(s);
} else {
E_HLTHLINK = Byte.MIN_VALUE;
}
}

protected final void initE_HLTHLINKB1(String s) {
if (!s.trim().isEmpty()) {
E_HLTHLINKB1 = Byte.parseByte(s);
} else {
E_HLTHLINKB1 = Byte.MIN_VALUE;
}
}

protected final void initE_HLTHLINKB2(String s) {
if (!s.trim().isEmpty()) {
E_HLTHLINKB2 = Byte.parseByte(s);
} else {
E_HLTHLINKB2 = Byte.MIN_VALUE;
}
}

protected final void initE_HLTHLINKB3(String s) {
if (!s.trim().isEmpty()) {
E_HLTHLINKB3 = Byte.parseByte(s);
} else {
E_HLTHLINKB3 = Byte.MIN_VALUE;
}
}

protected final void initE_HLTHRECD(String s) {
if (!s.trim().isEmpty()) {
E_HLTHRECD = Byte.parseByte(s);
} else {
E_HLTHRECD = Byte.MIN_VALUE;
}
}

protected final void initE_HLTHRSGN(String s) {
if (!s.trim().isEmpty()) {
E_HLTHRSGN = Byte.parseByte(s);
} else {
E_HLTHRSGN = Byte.MIN_VALUE;
}
}

protected final void initE_HMRCLINK(String s) {
if (!s.trim().isEmpty()) {
E_HMRCLINK = Byte.parseByte(s);
} else {
E_HMRCLINK = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPC1(String s) {
if (!s.trim().isEmpty()) {
E_HOSPC1 = Byte.parseByte(s);
} else {
E_HOSPC1 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPC2(String s) {
if (!s.trim().isEmpty()) {
E_HOSPC2 = Byte.parseByte(s);
} else {
E_HOSPC2 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPC3(String s) {
if (!s.trim().isEmpty()) {
E_HOSPC3 = Byte.parseByte(s);
} else {
E_HOSPC3 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPC4(String s) {
if (!s.trim().isEmpty()) {
E_HOSPC4 = Byte.parseByte(s);
} else {
E_HOSPC4 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPC5(String s) {
if (!s.trim().isEmpty()) {
E_HOSPC5 = Byte.parseByte(s);
} else {
E_HOSPC5 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPC6(String s) {
if (!s.trim().isEmpty()) {
E_HOSPC6 = Byte.parseByte(s);
} else {
E_HOSPC6 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPC7(String s) {
if (!s.trim().isEmpty()) {
E_HOSPC7 = Byte.parseByte(s);
} else {
E_HOSPC7 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPDC1(String s) {
if (!s.trim().isEmpty()) {
E_HOSPDC1 = Short.parseShort(s);
} else {
E_HOSPDC1 = Short.MIN_VALUE;
}
}

protected final void initE_HOSPDC2(String s) {
if (!s.trim().isEmpty()) {
E_HOSPDC2 = Short.parseShort(s);
} else {
E_HOSPDC2 = Short.MIN_VALUE;
}
}

protected final void initE_HOSPDC3(String s) {
if (!s.trim().isEmpty()) {
E_HOSPDC3 = Byte.parseByte(s);
} else {
E_HOSPDC3 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPDC4(String s) {
if (!s.trim().isEmpty()) {
E_HOSPDC4 = Byte.parseByte(s);
} else {
E_HOSPDC4 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPDC5(String s) {
if (!s.trim().isEmpty()) {
E_HOSPDC5 = Byte.parseByte(s);
} else {
E_HOSPDC5 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPDC6(String s) {
if (!s.trim().isEmpty()) {
E_HOSPDC6 = Byte.parseByte(s);
} else {
E_HOSPDC6 = Byte.MIN_VALUE;
}
}

protected final void initE_HOSPDC7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_HOSPDC7 = false;
} else {
E_HOSPDC7 = true;
}
}
}

protected final void initE_HOUSING(String s) {
if (!s.trim().isEmpty()) {
E_HOUSING = Byte.parseByte(s);
} else {
E_HOUSING = Byte.MIN_VALUE;
}
}

protected final void initE_HRPID(String s) {
if (!s.trim().isEmpty()) {
E_HRPID = Integer.parseInt(s);
} else {
E_HRPID = Integer.MIN_VALUE;
}
}

protected final void initE_HRPNO(String s) {
if (!s.trim().isEmpty()) {
E_HRPNO = Byte.parseByte(s);
} else {
E_HRPNO = Byte.MIN_VALUE;
}
}

protected final void initE_IENDDATD(String s) {
if (!s.trim().isEmpty()) {
E_IENDDATD = Byte.parseByte(s);
} else {
E_IENDDATD = Byte.MIN_VALUE;
}
}

protected final void initE_IENDDATHH(String s) {
if (!s.trim().isEmpty()) {
E_IENDDATHH = Byte.parseByte(s);
} else {
E_IENDDATHH = Byte.MIN_VALUE;
}
}

protected final void initE_IENDDATM(String s) {
if (!s.trim().isEmpty()) {
E_IENDDATM = Byte.parseByte(s);
} else {
E_IENDDATM = Byte.MIN_VALUE;
}
}

protected final void initE_IENDDATMM(String s) {
if (!s.trim().isEmpty()) {
E_IENDDATMM = Byte.parseByte(s);
} else {
E_IENDDATMM = Byte.MIN_VALUE;
}
}

protected final void initE_IENDDATSS(String s) {
if (!s.trim().isEmpty()) {
E_IENDDATSS = Byte.parseByte(s);
} else {
E_IENDDATSS = Byte.MIN_VALUE;
}
}

protected final void initE_IENDDATY(String s) {
if (!s.trim().isEmpty()) {
E_IENDDATY = Short.parseShort(s);
} else {
E_IENDDATY = Short.MIN_VALUE;
}
}

protected final void initE_IND5MUS_LW(String s) {
if (!s.trim().isEmpty()) {
E_IND5MUS_LW = Double.parseDouble(s);
} else {
E_IND5MUS_LW = Double.NaN;
}
}

protected final void initE_IND5MUS_XW(String s) {
if (!s.trim().isEmpty()) {
E_IND5MUS_XW = Double.parseDouble(s);
} else {
E_IND5MUS_XW = Double.NaN;
}
}

protected final void initE_INDBD91_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDBD91_LW = Double.parseDouble(s);
} else {
E_INDBD91_LW = Double.NaN;
}
}

protected final void initE_INDBDUB_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDBDUB_LW = Double.parseDouble(s);
} else {
E_INDBDUB_LW = Double.NaN;
}
}

protected final void initE_INDIN01_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDIN01_LW = Double.parseDouble(s);
} else {
E_INDIN01_LW = Double.NaN;
}
}

protected final void initE_INDIN91_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDIN91_LW = Double.parseDouble(s);
} else {
E_INDIN91_LW = Double.NaN;
}
}

protected final void initE_INDINUB_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDINUB_LW = Double.parseDouble(s);
} else {
E_INDINUB_LW = Double.NaN;
}
}

protected final void initE_INDINUB_XW(String s) {
if (!s.trim().isEmpty()) {
E_INDINUB_XW = Double.parseDouble(s);
} else {
E_INDINUB_XW = Double.NaN;
}
}

protected final void initE_INDINUS_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDINUS_LW = Double.parseDouble(s);
} else {
E_INDINUS_LW = Double.NaN;
}
}

protected final void initE_INDMODE(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_INDMODE = false;
} else {
E_INDMODE = true;
}
}
}

protected final void initE_INDNS91_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDNS91_LW = Double.parseDouble(s);
} else {
E_INDNS91_LW = Double.NaN;
}
}

protected final void initE_INDNSUB_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDNSUB_LW = Double.parseDouble(s);
} else {
E_INDNSUB_LW = Double.NaN;
}
}

protected final void initE_INDPXUB_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDPXUB_LW = Double.parseDouble(s);
} else {
E_INDPXUB_LW = Double.NaN;
}
}

protected final void initE_INDPXUB_XW(String s) {
if (!s.trim().isEmpty()) {
E_INDPXUB_XW = Double.parseDouble(s);
} else {
E_INDPXUB_XW = Double.NaN;
}
}

protected final void initE_INDPXUS_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDPXUS_LW = Double.parseDouble(s);
} else {
E_INDPXUS_LW = Double.NaN;
}
}

protected final void initE_INDSCUB_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDSCUB_LW = Double.parseDouble(s);
} else {
E_INDSCUB_LW = Double.NaN;
}
}

protected final void initE_INDSCUB_XW(String s) {
if (!s.trim().isEmpty()) {
E_INDSCUB_XW = Double.parseDouble(s);
} else {
E_INDSCUB_XW = Double.NaN;
}
}

protected final void initE_INDSCUS_LW(String s) {
if (!s.trim().isEmpty()) {
E_INDSCUS_LW = Double.parseDouble(s);
} else {
E_INDSCUS_LW = Double.NaN;
}
}

protected final void initE_INSTOK(String s) {
if (!s.trim().isEmpty()) {
E_INSTOK = Byte.parseByte(s);
} else {
E_INSTOK = Byte.MIN_VALUE;
}
}

protected final void initE_INSTOK2(String s) {
if (!s.trim().isEmpty()) {
E_INSTOK2 = Byte.parseByte(s);
} else {
E_INSTOK2 = Byte.MIN_VALUE;
}
}

protected final void initE_INSTOK3(String s) {
if (!s.trim().isEmpty()) {
E_INSTOK3 = Byte.parseByte(s);
} else {
E_INSTOK3 = Byte.MIN_VALUE;
}
}

protected final void initE_INSTOK4(String s) {
if (!s.trim().isEmpty()) {
E_INSTOK4 = Byte.parseByte(s);
} else {
E_INSTOK4 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED1(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED1 = Byte.parseByte(s);
} else {
E_INSULTED1 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED10(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED10 = Byte.parseByte(s);
} else {
E_INSULTED10 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED11(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED11 = Byte.parseByte(s);
} else {
E_INSULTED11 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED2(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED2 = Byte.parseByte(s);
} else {
E_INSULTED2 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED3(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED3 = Byte.parseByte(s);
} else {
E_INSULTED3 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED4(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED4 = Byte.parseByte(s);
} else {
E_INSULTED4 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED5(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED5 = Byte.parseByte(s);
} else {
E_INSULTED5 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED6(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED6 = Byte.parseByte(s);
} else {
E_INSULTED6 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED7(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED7 = Byte.parseByte(s);
} else {
E_INSULTED7 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED8(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED8 = Byte.parseByte(s);
} else {
E_INSULTED8 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED9(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED9 = Byte.parseByte(s);
} else {
E_INSULTED9 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED96(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED96 = Byte.parseByte(s);
} else {
E_INSULTED96 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED97(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED97 = Byte.parseByte(s);
} else {
E_INSULTED97 = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTEDO_CODE(String s) {
if (!s.trim().isEmpty()) {
E_INSULTEDO_CODE = Byte.parseByte(s);
} else {
E_INSULTEDO_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_INSULTED_DV(String s) {
if (!s.trim().isEmpty()) {
E_INSULTED_DV = Byte.parseByte(s);
} else {
E_INSULTED_DV = Byte.MIN_VALUE;
}
}

protected final void initE_INTCONTACT(String s) {
if (!s.trim().isEmpty()) {
E_INTCONTACT = Byte.parseByte(s);
} else {
E_INTCONTACT = Byte.MIN_VALUE;
}
}

protected final void initE_INTDATD_DV(String s) {
if (!s.trim().isEmpty()) {
E_INTDATD_DV = Byte.parseByte(s);
} else {
E_INTDATD_DV = Byte.MIN_VALUE;
}
}

protected final void initE_INTDATM_DV(String s) {
if (!s.trim().isEmpty()) {
E_INTDATM_DV = Byte.parseByte(s);
} else {
E_INTDATM_DV = Byte.MIN_VALUE;
}
}

protected final void initE_INTDATY_DV(String s) {
if (!s.trim().isEmpty()) {
E_INTDATY_DV = Short.parseShort(s);
} else {
E_INTDATY_DV = Short.MIN_VALUE;
}
}

protected final void initE_INTSIGNHEALTH(String s) {
if (!s.trim().isEmpty()) {
E_INTSIGNHEALTH = Byte.parseByte(s);
} else {
E_INTSIGNHEALTH = Byte.MIN_VALUE;
}
}

protected final void initE_INVITRO1(String s) {
if (!s.trim().isEmpty()) {
E_INVITRO1 = Byte.parseByte(s);
} else {
E_INVITRO1 = Byte.MIN_VALUE;
}
}

protected final void initE_INVITRO2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_INVITRO2 = false;
} else {
E_INVITRO2 = true;
}
}
}

protected final void initE_INVITRO3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_INVITRO3 = false;
} else {
E_INVITRO3 = true;
}
}
}

protected final void initE_IOUTCOME(String s) {
if (!s.trim().isEmpty()) {
E_IOUTCOME = Byte.parseByte(s);
} else {
E_IOUTCOME = Byte.MIN_VALUE;
}
}

protected final void initE_ISTRTDATD(String s) {
if (!s.trim().isEmpty()) {
E_ISTRTDATD = Byte.parseByte(s);
} else {
E_ISTRTDATD = Byte.MIN_VALUE;
}
}

protected final void initE_ISTRTDATHH(String s) {
if (!s.trim().isEmpty()) {
E_ISTRTDATHH = Byte.parseByte(s);
} else {
E_ISTRTDATHH = Byte.MIN_VALUE;
}
}

protected final void initE_ISTRTDATM(String s) {
if (!s.trim().isEmpty()) {
E_ISTRTDATM = Byte.parseByte(s);
} else {
E_ISTRTDATM = Byte.MIN_VALUE;
}
}

protected final void initE_ISTRTDATMM(String s) {
if (!s.trim().isEmpty()) {
E_ISTRTDATMM = Byte.parseByte(s);
} else {
E_ISTRTDATMM = Byte.MIN_VALUE;
}
}

protected final void initE_ISTRTDATSS(String s) {
if (!s.trim().isEmpty()) {
E_ISTRTDATSS = Byte.parseByte(s);
} else {
E_ISTRTDATSS = Byte.MIN_VALUE;
}
}

protected final void initE_ISTRTDATY(String s) {
if (!s.trim().isEmpty()) {
E_ISTRTDATY = Short.parseShort(s);
} else {
E_ISTRTDATY = Short.MIN_VALUE;
}
}

protected final void initE_ISYEAR(String s) {
if (!s.trim().isEmpty()) {
E_ISYEAR = Short.parseShort(s);
} else {
E_ISYEAR = Short.MIN_VALUE;
}
}

protected final void initE_IVAFFCT11(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT11 = Byte.parseByte(s);
} else {
E_IVAFFCT11 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT12(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT12 = Byte.parseByte(s);
} else {
E_IVAFFCT12 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT13(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT13 = Byte.parseByte(s);
} else {
E_IVAFFCT13 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT14(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT14 = Byte.parseByte(s);
} else {
E_IVAFFCT14 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT15(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT15 = Byte.parseByte(s);
} else {
E_IVAFFCT15 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT17(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT17 = Byte.parseByte(s);
} else {
E_IVAFFCT17 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT21(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT21 = Byte.parseByte(s);
} else {
E_IVAFFCT21 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT22(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT22 = Byte.parseByte(s);
} else {
E_IVAFFCT22 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT23(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT23 = Byte.parseByte(s);
} else {
E_IVAFFCT23 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT27(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT27 = Byte.parseByte(s);
} else {
E_IVAFFCT27 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT30(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT30 = Byte.parseByte(s);
} else {
E_IVAFFCT30 = Byte.MIN_VALUE;
}
}

protected final void initE_IVAFFCT97(String s) {
if (!s.trim().isEmpty()) {
E_IVAFFCT97 = Byte.parseByte(s);
} else {
E_IVAFFCT97 = Byte.MIN_VALUE;
}
}

protected final void initE_IVCOOP(String s) {
if (!s.trim().isEmpty()) {
E_IVCOOP = Byte.parseByte(s);
} else {
E_IVCOOP = Byte.MIN_VALUE;
}
}

protected final void initE_IVFIO(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_IVFIO = false;
} else {
E_IVFIO = true;
}
}
}

protected final void initE_IVINFNCE(String s) {
if (!s.trim().isEmpty()) {
E_IVINFNCE = Byte.parseByte(s);
} else {
E_IVINFNCE = Byte.MIN_VALUE;
}
}

protected final void initE_IVLIBAL(String s) {
if (!s.trim().isEmpty()) {
E_IVLIBAL = Byte.parseByte(s);
} else {
E_IVLIBAL = Byte.MIN_VALUE;
}
}

protected final void initE_IVLIENG(String s) {
if (!s.trim().isEmpty()) {
E_IVLIENG = Byte.parseByte(s);
} else {
E_IVLIENG = Byte.MIN_VALUE;
}
}

protected final void initE_IVLITRANS(String s) {
if (!s.trim().isEmpty()) {
E_IVLITRANS = Byte.parseByte(s);
} else {
E_IVLITRANS = Byte.MIN_VALUE;
}
}

protected final void initE_IVLIWHO(String s) {
if (!s.trim().isEmpty()) {
E_IVLIWHO = Byte.parseByte(s);
} else {
E_IVLIWHO = Byte.MIN_VALUE;
}
}

protected final void initE_IVPRSNT(String s) {
if (!s.trim().isEmpty()) {
E_IVPRSNT = Byte.parseByte(s);
} else {
E_IVPRSNT = Byte.MIN_VALUE;
}
}

protected final void initE_J1BOSS(String s) {
if (!s.trim().isEmpty()) {
E_J1BOSS = Byte.parseByte(s);
} else {
E_J1BOSS = Byte.MIN_VALUE;
}
}

protected final void initE_J1MNGR(String s) {
if (!s.trim().isEmpty()) {
E_J1MNGR = Byte.parseByte(s);
} else {
E_J1MNGR = Byte.MIN_VALUE;
}
}

protected final void initE_J1NONE(String s) {
if (!s.trim().isEmpty()) {
E_J1NONE = Byte.parseByte(s);
} else {
E_J1NONE = Byte.MIN_VALUE;
}
}

protected final void initE_J1NSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
E_J1NSSEC5_DV = Byte.parseByte(s);
} else {
E_J1NSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initE_J1SEMP(String s) {
if (!s.trim().isEmpty()) {
E_J1SEMP = Byte.parseByte(s);
} else {
E_J1SEMP = Byte.MIN_VALUE;
}
}

protected final void initE_J1SOC00_CC(String s) {
if (!s.trim().isEmpty()) {
E_J1SOC00_CC = Short.parseShort(s);
} else {
E_J1SOC00_CC = Short.MIN_VALUE;
}
}

protected final void initE_J1SOC10_CC(String s) {
if (!s.trim().isEmpty()) {
E_J1SOC10_CC = Short.parseShort(s);
} else {
E_J1SOC10_CC = Short.MIN_VALUE;
}
}

protected final void initE_J1SOC90_CC(String s) {
if (!s.trim().isEmpty()) {
E_J1SOC90_CC = Byte.parseByte(s);
} else {
E_J1SOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initE_J2HAS(String s) {
if (!s.trim().isEmpty()) {
E_J2HAS = Byte.parseByte(s);
} else {
E_J2HAS = Byte.MIN_VALUE;
}
}

protected final void initE_J2HRS(String s) {
if (!s.trim().isEmpty()) {
E_J2HRS = Short.parseShort(s);
} else {
E_J2HRS = Short.MIN_VALUE;
}
}

protected final void initE_J2NSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
E_J2NSSEC5_DV = Byte.parseByte(s);
} else {
E_J2NSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initE_J2PAY(String s) {
if (!s.trim().isEmpty()) {
E_J2PAY = Integer.parseInt(s);
} else {
E_J2PAY = Integer.MIN_VALUE;
}
}

protected final void initE_J2PAYNET_DV(String s) {
if (!s.trim().isEmpty()) {
E_J2PAYNET_DV = Double.parseDouble(s);
} else {
E_J2PAYNET_DV = Double.NaN;
}
}

protected final void initE_J2PAY_DV(String s) {
if (!s.trim().isEmpty()) {
E_J2PAY_DV = Double.parseDouble(s);
} else {
E_J2PAY_DV = Double.NaN;
}
}

protected final void initE_J2PAY_IF(String s) {
if (!s.trim().isEmpty()) {
E_J2PAY_IF = Byte.parseByte(s);
} else {
E_J2PAY_IF = Byte.MIN_VALUE;
}
}

protected final void initE_J2SEMP(String s) {
if (!s.trim().isEmpty()) {
E_J2SEMP = Byte.parseByte(s);
} else {
E_J2SEMP = Byte.MIN_VALUE;
}
}

protected final void initE_J2SOC00_CC(String s) {
if (!s.trim().isEmpty()) {
E_J2SOC00_CC = Short.parseShort(s);
} else {
E_J2SOC00_CC = Short.MIN_VALUE;
}
}

protected final void initE_J2SOC10_CC(String s) {
if (!s.trim().isEmpty()) {
E_J2SOC10_CC = Short.parseShort(s);
} else {
E_J2SOC10_CC = Short.MIN_VALUE;
}
}

protected final void initE_J2SOC90_CC(String s) {
if (!s.trim().isEmpty()) {
E_J2SOC90_CC = Byte.parseByte(s);
} else {
E_J2SOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initE_JBATT1(String s) {
if (!s.trim().isEmpty()) {
E_JBATT1 = Byte.parseByte(s);
} else {
E_JBATT1 = Byte.MIN_VALUE;
}
}

protected final void initE_JBATT2(String s) {
if (!s.trim().isEmpty()) {
E_JBATT2 = Byte.parseByte(s);
} else {
E_JBATT2 = Byte.MIN_VALUE;
}
}

protected final void initE_JBATT3(String s) {
if (!s.trim().isEmpty()) {
E_JBATT3 = Byte.parseByte(s);
} else {
E_JBATT3 = Byte.MIN_VALUE;
}
}

protected final void initE_JBATT4(String s) {
if (!s.trim().isEmpty()) {
E_JBATT4 = Byte.parseByte(s);
} else {
E_JBATT4 = Byte.MIN_VALUE;
}
}

protected final void initE_JBATT5(String s) {
if (!s.trim().isEmpty()) {
E_JBATT5 = Byte.parseByte(s);
} else {
E_JBATT5 = Byte.MIN_VALUE;
}
}

protected final void initE_JBATT6(String s) {
if (!s.trim().isEmpty()) {
E_JBATT6 = Byte.parseByte(s);
} else {
E_JBATT6 = Byte.MIN_VALUE;
}
}

protected final void initE_JBBGD(String s) {
if (!s.trim().isEmpty()) {
E_JBBGD = Byte.parseByte(s);
} else {
E_JBBGD = Byte.MIN_VALUE;
}
}

protected final void initE_JBBGDATD(String s) {
if (!s.trim().isEmpty()) {
E_JBBGDATD = Byte.parseByte(s);
} else {
E_JBBGDATD = Byte.MIN_VALUE;
}
}

protected final void initE_JBBGDATM(String s) {
if (!s.trim().isEmpty()) {
E_JBBGDATM = Byte.parseByte(s);
} else {
E_JBBGDATM = Byte.MIN_VALUE;
}
}

protected final void initE_JBBGDATY(String s) {
if (!s.trim().isEmpty()) {
E_JBBGDATY = Short.parseShort(s);
} else {
E_JBBGDATY = Short.MIN_VALUE;
}
}

protected final void initE_JBBGM(String s) {
if (!s.trim().isEmpty()) {
E_JBBGM = Byte.parseByte(s);
} else {
E_JBBGM = Byte.MIN_VALUE;
}
}

protected final void initE_JBBGY(String s) {
if (!s.trim().isEmpty()) {
E_JBBGY = Short.parseShort(s);
} else {
E_JBBGY = Short.MIN_VALUE;
}
}

protected final void initE_JBENDD(String s) {
if (!s.trim().isEmpty()) {
E_JBENDD = Byte.parseByte(s);
} else {
E_JBENDD = Byte.MIN_VALUE;
}
}

protected final void initE_JBENDM(String s) {
if (!s.trim().isEmpty()) {
E_JBENDM = Byte.parseByte(s);
} else {
E_JBENDM = Byte.MIN_VALUE;
}
}

protected final void initE_JBENDREAS(String s) {
if (!s.trim().isEmpty()) {
E_JBENDREAS = Byte.parseByte(s);
} else {
E_JBENDREAS = Byte.MIN_VALUE;
}
}

protected final void initE_JBENDY4(String s) {
if (!s.trim().isEmpty()) {
E_JBENDY4 = Short.parseShort(s);
} else {
E_JBENDY4 = Short.MIN_VALUE;
}
}

protected final void initE_JBES2000(String s) {
if (!s.trim().isEmpty()) {
E_JBES2000 = Byte.parseByte(s);
} else {
E_JBES2000 = Byte.MIN_VALUE;
}
}

protected final void initE_JBFT_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBFT_DV = Byte.parseByte(s);
} else {
E_JBFT_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBHAD(String s) {
if (!s.trim().isEmpty()) {
E_JBHAD = Byte.parseByte(s);
} else {
E_JBHAD = Byte.MIN_VALUE;
}
}

protected final void initE_JBHAS(String s) {
if (!s.trim().isEmpty()) {
E_JBHAS = Byte.parseByte(s);
} else {
E_JBHAS = Byte.MIN_VALUE;
}
}

protected final void initE_JBHRS(String s) {
if (!s.trim().isEmpty()) {
E_JBHRS = Double.parseDouble(s);
} else {
E_JBHRS = Double.NaN;
}
}

protected final void initE_JBIINDB_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBIINDB_DV = Byte.parseByte(s);
} else {
E_JBIINDB_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBISCO88_CC(String s) {
if (!s.trim().isEmpty()) {
E_JBISCO88_CC = Short.parseShort(s);
} else {
E_JBISCO88_CC = Short.MIN_VALUE;
}
}

protected final void initE_JBMNGR(String s) {
if (!s.trim().isEmpty()) {
E_JBMNGR = Byte.parseByte(s);
} else {
E_JBMNGR = Byte.MIN_VALUE;
}
}

protected final void initE_JBMNGRCHK(String s) {
if (!s.trim().isEmpty()) {
E_JBMNGRCHK = Byte.parseByte(s);
} else {
E_JBMNGRCHK = Byte.MIN_VALUE;
}
}

protected final void initE_JBNSSEC3_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBNSSEC3_DV = Byte.parseByte(s);
} else {
E_JBNSSEC3_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBNSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBNSSEC5_DV = Byte.parseByte(s);
} else {
E_JBNSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBNSSEC8_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBNSSEC8_DV = Byte.parseByte(s);
} else {
E_JBNSSEC8_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBNSSEC_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBNSSEC_DV = Byte.parseByte(s);
} else {
E_JBNSSEC_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBOFF(String s) {
if (!s.trim().isEmpty()) {
E_JBOFF = Byte.parseByte(s);
} else {
E_JBOFF = Byte.MIN_VALUE;
}
}

protected final void initE_JBOFFY(String s) {
if (!s.trim().isEmpty()) {
E_JBOFFY = Byte.parseByte(s);
} else {
E_JBOFFY = Byte.MIN_VALUE;
}
}

protected final void initE_JBOT(String s) {
if (!s.trim().isEmpty()) {
E_JBOT = Byte.parseByte(s);
} else {
E_JBOT = Byte.MIN_VALUE;
}
}

protected final void initE_JBOTPD(String s) {
if (!s.trim().isEmpty()) {
E_JBOTPD = Byte.parseByte(s);
} else {
E_JBOTPD = Byte.MIN_VALUE;
}
}

protected final void initE_JBPL(String s) {
if (!s.trim().isEmpty()) {
E_JBPL = Byte.parseByte(s);
} else {
E_JBPL = Byte.MIN_VALUE;
}
}

protected final void initE_JBRGSC_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBRGSC_DV = Byte.parseByte(s);
} else {
E_JBRGSC_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBSAMR(String s) {
if (!s.trim().isEmpty()) {
E_JBSAMR = Byte.parseByte(s);
} else {
E_JBSAMR = Byte.MIN_VALUE;
}
}

protected final void initE_JBSAT(String s) {
if (!s.trim().isEmpty()) {
E_JBSAT = Byte.parseByte(s);
} else {
E_JBSAT = Byte.MIN_VALUE;
}
}

protected final void initE_JBSECT(String s) {
if (!s.trim().isEmpty()) {
E_JBSECT = Byte.parseByte(s);
} else {
E_JBSECT = Byte.MIN_VALUE;
}
}

protected final void initE_JBSECTPUB(String s) {
if (!s.trim().isEmpty()) {
E_JBSECTPUB = Byte.parseByte(s);
} else {
E_JBSECTPUB = Byte.MIN_VALUE;
}
}

protected final void initE_JBSEG_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBSEG_DV = Byte.parseByte(s);
} else {
E_JBSEG_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBSEMP(String s) {
if (!s.trim().isEmpty()) {
E_JBSEMP = Byte.parseByte(s);
} else {
E_JBSEMP = Byte.MIN_VALUE;
}
}

protected final void initE_JBSEMPCHK(String s) {
if (!s.trim().isEmpty()) {
E_JBSEMPCHK = Byte.parseByte(s);
} else {
E_JBSEMPCHK = Byte.MIN_VALUE;
}
}

protected final void initE_JBSIC07CHK(String s) {
if (!s.trim().isEmpty()) {
E_JBSIC07CHK = Byte.parseByte(s);
} else {
E_JBSIC07CHK = Byte.MIN_VALUE;
}
}

protected final void initE_JBSIC07_CC(String s) {
if (!s.trim().isEmpty()) {
E_JBSIC07_CC = Byte.parseByte(s);
} else {
E_JBSIC07_CC = Byte.MIN_VALUE;
}
}

protected final void initE_JBSIZE(String s) {
if (!s.trim().isEmpty()) {
E_JBSIZE = Byte.parseByte(s);
} else {
E_JBSIZE = Byte.MIN_VALUE;
}
}

protected final void initE_JBSIZECHK(String s) {
if (!s.trim().isEmpty()) {
E_JBSIZECHK = Byte.parseByte(s);
} else {
E_JBSIZECHK = Byte.MIN_VALUE;
}
}

protected final void initE_JBSOC00CHK(String s) {
if (!s.trim().isEmpty()) {
E_JBSOC00CHK = Byte.parseByte(s);
} else {
E_JBSOC00CHK = Byte.MIN_VALUE;
}
}

protected final void initE_JBSOC00_CC(String s) {
if (!s.trim().isEmpty()) {
E_JBSOC00_CC = Short.parseShort(s);
} else {
E_JBSOC00_CC = Short.MIN_VALUE;
}
}

protected final void initE_JBSOC10_CC(String s) {
if (!s.trim().isEmpty()) {
E_JBSOC10_CC = Short.parseShort(s);
} else {
E_JBSOC10_CC = Short.MIN_VALUE;
}
}

protected final void initE_JBSOCGR_DV(String s) {
if (!s.trim().isEmpty()) {
E_JBSOCGR_DV = Byte.parseByte(s);
} else {
E_JBSOCGR_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JBSTAT(String s) {
if (!s.trim().isEmpty()) {
E_JBSTAT = Byte.parseByte(s);
} else {
E_JBSTAT = Byte.MIN_VALUE;
}
}

protected final void initE_JBTERM1(String s) {
if (!s.trim().isEmpty()) {
E_JBTERM1 = Byte.parseByte(s);
} else {
E_JBTERM1 = Byte.MIN_VALUE;
}
}

protected final void initE_JBTERM2(String s) {
if (!s.trim().isEmpty()) {
E_JBTERM2 = Byte.parseByte(s);
} else {
E_JBTERM2 = Byte.MIN_VALUE;
}
}

protected final void initE_JBTTWT(String s) {
if (!s.trim().isEmpty()) {
E_JBTTWT = Short.parseShort(s);
} else {
E_JBTTWT = Short.MIN_VALUE;
}
}

protected final void initE_JLBOSS(String s) {
if (!s.trim().isEmpty()) {
E_JLBOSS = Byte.parseByte(s);
} else {
E_JLBOSS = Byte.MIN_VALUE;
}
}

protected final void initE_JLENDM(String s) {
if (!s.trim().isEmpty()) {
E_JLENDM = Byte.parseByte(s);
} else {
E_JLENDM = Byte.MIN_VALUE;
}
}

protected final void initE_JLENDY(String s) {
if (!s.trim().isEmpty()) {
E_JLENDY = Short.parseShort(s);
} else {
E_JLENDY = Short.MIN_VALUE;
}
}

protected final void initE_JLES2000(String s) {
if (!s.trim().isEmpty()) {
E_JLES2000 = Byte.parseByte(s);
} else {
E_JLES2000 = Byte.MIN_VALUE;
}
}

protected final void initE_JLIINDB_DV(String s) {
if (!s.trim().isEmpty()) {
E_JLIINDB_DV = Byte.parseByte(s);
} else {
E_JLIINDB_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JLISCO88_CC(String s) {
if (!s.trim().isEmpty()) {
E_JLISCO88_CC = Short.parseShort(s);
} else {
E_JLISCO88_CC = Short.MIN_VALUE;
}
}

protected final void initE_JLMNGR(String s) {
if (!s.trim().isEmpty()) {
E_JLMNGR = Byte.parseByte(s);
} else {
E_JLMNGR = Byte.MIN_VALUE;
}
}

protected final void initE_JLNSSEC3_DV(String s) {
if (!s.trim().isEmpty()) {
E_JLNSSEC3_DV = Byte.parseByte(s);
} else {
E_JLNSSEC3_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JLNSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
E_JLNSSEC5_DV = Byte.parseByte(s);
} else {
E_JLNSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JLNSSEC8_DV(String s) {
if (!s.trim().isEmpty()) {
E_JLNSSEC8_DV = Byte.parseByte(s);
} else {
E_JLNSSEC8_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JLNSSEC_DV(String s) {
if (!s.trim().isEmpty()) {
E_JLNSSEC_DV = Byte.parseByte(s);
} else {
E_JLNSSEC_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JLRGSC_DV(String s) {
if (!s.trim().isEmpty()) {
E_JLRGSC_DV = Byte.parseByte(s);
} else {
E_JLRGSC_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JLSEG_DV(String s) {
if (!s.trim().isEmpty()) {
E_JLSEG_DV = Byte.parseByte(s);
} else {
E_JLSEG_DV = Byte.MIN_VALUE;
}
}

protected final void initE_JLSEMP(String s) {
if (!s.trim().isEmpty()) {
E_JLSEMP = Byte.parseByte(s);
} else {
E_JLSEMP = Byte.MIN_VALUE;
}
}

protected final void initE_JLSIC07_CC(String s) {
if (!s.trim().isEmpty()) {
E_JLSIC07_CC = Byte.parseByte(s);
} else {
E_JLSIC07_CC = Byte.MIN_VALUE;
}
}

protected final void initE_JLSIZE(String s) {
if (!s.trim().isEmpty()) {
E_JLSIZE = Byte.parseByte(s);
} else {
E_JLSIZE = Byte.MIN_VALUE;
}
}

protected final void initE_JLSOC00_CC(String s) {
if (!s.trim().isEmpty()) {
E_JLSOC00_CC = Short.parseShort(s);
} else {
E_JLSOC00_CC = Short.MIN_VALUE;
}
}

protected final void initE_JLSOC10_CC(String s) {
if (!s.trim().isEmpty()) {
E_JLSOC10_CC = Short.parseShort(s);
} else {
E_JLSOC10_CC = Short.MIN_VALUE;
}
}

protected final void initE_JOBDENY(String s) {
if (!s.trim().isEmpty()) {
E_JOBDENY = Byte.parseByte(s);
} else {
E_JOBDENY = Byte.MIN_VALUE;
}
}

protected final void initE_JOBHOURS1(String s) {
if (!s.trim().isEmpty()) {
E_JOBHOURS1 = Byte.parseByte(s);
} else {
E_JOBHOURS1 = Byte.MIN_VALUE;
}
}

protected final void initE_JOBHOURS2(String s) {
if (!s.trim().isEmpty()) {
E_JOBHOURS2 = Byte.parseByte(s);
} else {
E_JOBHOURS2 = Byte.MIN_VALUE;
}
}

protected final void initE_JOBHOURS3(String s) {
if (!s.trim().isEmpty()) {
E_JOBHOURS3 = Byte.parseByte(s);
} else {
E_JOBHOURS3 = Byte.MIN_VALUE;
}
}

protected final void initE_JOBHOURS4(String s) {
if (!s.trim().isEmpty()) {
E_JOBHOURS4 = Byte.parseByte(s);
} else {
E_JOBHOURS4 = Byte.MIN_VALUE;
}
}

protected final void initE_JOBHOURS5(String s) {
if (!s.trim().isEmpty()) {
E_JOBHOURS5 = Byte.parseByte(s);
} else {
E_JOBHOURS5 = Byte.MIN_VALUE;
}
}

protected final void initE_JOBHOURS6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_JOBHOURS6 = false;
} else {
E_JOBHOURS6 = true;
}
}
}

protected final void initE_JOBLOOK(String s) {
if (!s.trim().isEmpty()) {
E_JOBLOOK = Byte.parseByte(s);
} else {
E_JOBLOOK = Byte.MIN_VALUE;
}
}

protected final void initE_JSACCS(String s) {
if (!s.trim().isEmpty()) {
E_JSACCS = Byte.parseByte(s);
} else {
E_JSACCS = Byte.MIN_VALUE;
}
}

protected final void initE_JSBOSS(String s) {
if (!s.trim().isEmpty()) {
E_JSBOSS = Byte.parseByte(s);
} else {
E_JSBOSS = Byte.MIN_VALUE;
}
}

protected final void initE_JSHRS(String s) {
if (!s.trim().isEmpty()) {
E_JSHRS = Byte.parseByte(s);
} else {
E_JSHRS = Byte.MIN_VALUE;
}
}

protected final void initE_JSPART(String s) {
if (!s.trim().isEmpty()) {
E_JSPART = Byte.parseByte(s);
} else {
E_JSPART = Byte.MIN_VALUE;
}
}

protected final void initE_JSPAYU(String s) {
if (!s.trim().isEmpty()) {
E_JSPAYU = Integer.parseInt(s);
} else {
E_JSPAYU = Integer.MIN_VALUE;
}
}

protected final void initE_JSPAYW(String s) {
if (!s.trim().isEmpty()) {
E_JSPAYW = Byte.parseByte(s);
} else {
E_JSPAYW = Byte.MIN_VALUE;
}
}

protected final void initE_JSPL(String s) {
if (!s.trim().isEmpty()) {
E_JSPL = Byte.parseByte(s);
} else {
E_JSPL = Byte.MIN_VALUE;
}
}

protected final void initE_JSPRBM(String s) {
if (!s.trim().isEmpty()) {
E_JSPRBM = Byte.parseByte(s);
} else {
E_JSPRBM = Byte.MIN_VALUE;
}
}

protected final void initE_JSPRBY4(String s) {
if (!s.trim().isEmpty()) {
E_JSPRBY4 = Short.parseShort(s);
} else {
E_JSPRBY4 = Short.MIN_VALUE;
}
}

protected final void initE_JSPREM(String s) {
if (!s.trim().isEmpty()) {
E_JSPREM = Byte.parseByte(s);
} else {
E_JSPREM = Byte.MIN_VALUE;
}
}

protected final void initE_JSPREY4(String s) {
if (!s.trim().isEmpty()) {
E_JSPREY4 = Short.parseShort(s);
} else {
E_JSPREY4 = Short.MIN_VALUE;
}
}

protected final void initE_JSPRF(String s) {
if (!s.trim().isEmpty()) {
E_JSPRF = Integer.parseInt(s);
} else {
E_JSPRF = Integer.MIN_VALUE;
}
}

protected final void initE_JSPRLS(String s) {
if (!s.trim().isEmpty()) {
E_JSPRLS = Byte.parseByte(s);
} else {
E_JSPRLS = Byte.MIN_VALUE;
}
}

protected final void initE_JSPRNI(String s) {
if (!s.trim().isEmpty()) {
E_JSPRNI = Byte.parseByte(s);
} else {
E_JSPRNI = Byte.MIN_VALUE;
}
}

protected final void initE_JSPRTX(String s) {
if (!s.trim().isEmpty()) {
E_JSPRTX = Byte.parseByte(s);
} else {
E_JSPRTX = Byte.MIN_VALUE;
}
}

protected final void initE_JSPYNI(String s) {
if (!s.trim().isEmpty()) {
E_JSPYNI = Byte.parseByte(s);
} else {
E_JSPYNI = Byte.MIN_VALUE;
}
}

protected final void initE_JSPYTX(String s) {
if (!s.trim().isEmpty()) {
E_JSPYTX = Byte.parseByte(s);
} else {
E_JSPYTX = Byte.MIN_VALUE;
}
}

protected final void initE_JSSIZE(String s) {
if (!s.trim().isEmpty()) {
E_JSSIZE = Byte.parseByte(s);
} else {
E_JSSIZE = Byte.MIN_VALUE;
}
}

protected final void initE_JSTTWT(String s) {
if (!s.trim().isEmpty()) {
E_JSTTWT = Byte.parseByte(s);
} else {
E_JSTTWT = Byte.MIN_VALUE;
}
}

protected final void initE_JSTTWTB(String s) {
if (!s.trim().isEmpty()) {
E_JSTTWTB = Short.parseShort(s);
} else {
E_JSTTWTB = Short.MIN_VALUE;
}
}

protected final void initE_JSTYPEB(String s) {
if (!s.trim().isEmpty()) {
E_JSTYPEB = Byte.parseByte(s);
} else {
E_JSTYPEB = Byte.MIN_VALUE;
}
}

protected final void initE_JSWORKTRAV(String s) {
if (!s.trim().isEmpty()) {
E_JSWORKTRAV = Byte.parseByte(s);
} else {
E_JSWORKTRAV = Byte.MIN_VALUE;
}
}

protected final void initE_JUBGN(String s) {
if (!s.trim().isEmpty()) {
E_JUBGN = Byte.parseByte(s);
} else {
E_JUBGN = Byte.MIN_VALUE;
}
}

protected final void initE_JULK4WK(String s) {
if (!s.trim().isEmpty()) {
E_JULK4WK = Byte.parseByte(s);
} else {
E_JULK4WK = Byte.MIN_VALUE;
}
}

protected final void initE_JULK4X1(String s) {
if (!s.trim().isEmpty()) {
E_JULK4X1 = Byte.parseByte(s);
} else {
E_JULK4X1 = Byte.MIN_VALUE;
}
}

protected final void initE_JULK4X2(String s) {
if (!s.trim().isEmpty()) {
E_JULK4X2 = Byte.parseByte(s);
} else {
E_JULK4X2 = Byte.MIN_VALUE;
}
}

protected final void initE_JULK4X3(String s) {
if (!s.trim().isEmpty()) {
E_JULK4X3 = Byte.parseByte(s);
} else {
E_JULK4X3 = Byte.MIN_VALUE;
}
}

protected final void initE_JULK4X4(String s) {
if (!s.trim().isEmpty()) {
E_JULK4X4 = Byte.parseByte(s);
} else {
E_JULK4X4 = Byte.MIN_VALUE;
}
}

protected final void initE_JULK4X5(String s) {
if (!s.trim().isEmpty()) {
E_JULK4X5 = Byte.parseByte(s);
} else {
E_JULK4X5 = Byte.MIN_VALUE;
}
}

protected final void initE_JULK4X6(String s) {
if (!s.trim().isEmpty()) {
E_JULK4X6 = Byte.parseByte(s);
} else {
E_JULK4X6 = Byte.MIN_VALUE;
}
}

protected final void initE_JULK4X96(String s) {
if (!s.trim().isEmpty()) {
E_JULK4X96 = Byte.parseByte(s);
} else {
E_JULK4X96 = Byte.MIN_VALUE;
}
}

protected final void initE_JULKJB(String s) {
if (!s.trim().isEmpty()) {
E_JULKJB = Byte.parseByte(s);
} else {
E_JULKJB = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI01(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI01 = Byte.parseByte(s);
} else {
E_KID2UNI01 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI02(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI02 = Byte.parseByte(s);
} else {
E_KID2UNI02 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI03(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI03 = Byte.parseByte(s);
} else {
E_KID2UNI03 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI04(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI04 = Byte.parseByte(s);
} else {
E_KID2UNI04 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI05(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI05 = Byte.parseByte(s);
} else {
E_KID2UNI05 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI06(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI06 = Byte.parseByte(s);
} else {
E_KID2UNI06 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI07(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI07 = Byte.parseByte(s);
} else {
E_KID2UNI07 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI08(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI08 = Byte.parseByte(s);
} else {
E_KID2UNI08 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI09(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI09 = Byte.parseByte(s);
} else {
E_KID2UNI09 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI10(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI10 = Byte.parseByte(s);
} else {
E_KID2UNI10 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI11(String s) {
if (!s.trim().isEmpty()) {
E_KID2UNI11 = Byte.parseByte(s);
} else {
E_KID2UNI11 = Byte.MIN_VALUE;
}
}

protected final void initE_KID2UNI12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_KID2UNI12 = false;
} else {
E_KID2UNI12 = true;
}
}
}

protected final void initE_KID2UNI13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_KID2UNI13 = false;
} else {
E_KID2UNI13 = true;
}
}
}

protected final void initE_KID2UNI14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_KID2UNI14 = false;
} else {
E_KID2UNI14 = true;
}
}
}

protected final void initE_KID2UNI15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_KID2UNI15 = false;
} else {
E_KID2UNI15 = true;
}
}
}

protected final void initE_KID2UNI16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_KID2UNI16 = false;
} else {
E_KID2UNI16 = true;
}
}
}

protected final void initE_KIDSPT(String s) {
if (!s.trim().isEmpty()) {
E_KIDSPT = Byte.parseByte(s);
} else {
E_KIDSPT = Byte.MIN_VALUE;
}
}

protected final void initE_LADOPT(String s) {
if (!s.trim().isEmpty()) {
E_LADOPT = Byte.parseByte(s);
} else {
E_LADOPT = Byte.MIN_VALUE;
}
}

protected final void initE_LATE(String s) {
if (!s.trim().isEmpty()) {
E_LATE = Byte.parseByte(s);
} else {
E_LATE = Byte.MIN_VALUE;
}
}

protected final void initE_LCHMOR(String s) {
if (!s.trim().isEmpty()) {
E_LCHMOR = Byte.parseByte(s);
} else {
E_LCHMOR = Byte.MIN_VALUE;
}
}

protected final void initE_LCHMORN(String s) {
if (!s.trim().isEmpty()) {
E_LCHMORN = Byte.parseByte(s);
} else {
E_LCHMORN = Byte.MIN_VALUE;
}
}

protected final void initE_LCHMULTI1(String s) {
if (!s.trim().isEmpty()) {
E_LCHMULTI1 = Byte.parseByte(s);
} else {
E_LCHMULTI1 = Byte.MIN_VALUE;
}
}

protected final void initE_LCHMULTI2(String s) {
if (!s.trim().isEmpty()) {
E_LCHMULTI2 = Byte.parseByte(s);
} else {
E_LCHMULTI2 = Byte.MIN_VALUE;
}
}

protected final void initE_LCHMULTI3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_LCHMULTI3 = false;
} else {
E_LCHMULTI3 = true;
}
}
}

protected final void initE_LCOHNPI(String s) {
if (!s.trim().isEmpty()) {
E_LCOHNPI = Byte.parseByte(s);
} else {
E_LCOHNPI = Byte.MIN_VALUE;
}
}

protected final void initE_LENINDINTV(String s) {
if (!s.trim().isEmpty()) {
E_LENINDINTV = Double.parseDouble(s);
} else {
E_LENINDINTV = Double.NaN;
}
}

protected final void initE_LEVELIMP(String s) {
if (!s.trim().isEmpty()) {
E_LEVELIMP = Byte.parseByte(s);
} else {
E_LEVELIMP = Byte.MIN_VALUE;
}
}

protected final void initE_LGAPED(String s) {
if (!s.trim().isEmpty()) {
E_LGAPED = Byte.parseByte(s);
} else {
E_LGAPED = Byte.MIN_VALUE;
}
}

protected final void initE_LIBFREQ(String s) {
if (!s.trim().isEmpty()) {
E_LIBFREQ = Byte.parseByte(s);
} else {
E_LIBFREQ = Byte.MIN_VALUE;
}
}

protected final void initE_LIENG(String s) {
if (!s.trim().isEmpty()) {
E_LIENG = Byte.parseByte(s);
} else {
E_LIENG = Byte.MIN_VALUE;
}
}

protected final void initE_LIHOW(String s) {
if (!s.trim().isEmpty()) {
E_LIHOW = Byte.parseByte(s);
} else {
E_LIHOW = Byte.MIN_VALUE;
}
}

protected final void initE_LINGUA(String s) {
if (!s.trim().isEmpty()) {
E_LINGUA = Byte.parseByte(s);
} else {
E_LINGUA = Byte.MIN_VALUE;
}
}

protected final void initE_LITRANS(String s) {
if (!s.trim().isEmpty()) {
E_LITRANS = Byte.parseByte(s);
} else {
E_LITRANS = Byte.MIN_VALUE;
}
}

protected final void initE_LIVESP(String s) {
if (!s.trim().isEmpty()) {
E_LIVESP = Byte.parseByte(s);
} else {
E_LIVESP = Byte.MIN_VALUE;
}
}

protected final void initE_LIVESP_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_LIVESP_DV = false;
} else {
E_LIVESP_DV = true;
}
}
}

protected final void initE_LIVEWITH(String s) {
if (!s.trim().isEmpty()) {
E_LIVEWITH = Byte.parseByte(s);
} else {
E_LIVEWITH = Byte.MIN_VALUE;
}
}

protected final void initE_LIWHO(String s) {
if (!s.trim().isEmpty()) {
E_LIWHO = Byte.parseByte(s);
} else {
E_LIWHO = Byte.MIN_VALUE;
}
}

protected final void initE_LKMOVE(String s) {
if (!s.trim().isEmpty()) {
E_LKMOVE = Byte.parseByte(s);
} else {
E_LKMOVE = Byte.MIN_VALUE;
}
}

protected final void initE_LMAR1M(String s) {
if (!s.trim().isEmpty()) {
E_LMAR1M = Byte.parseByte(s);
} else {
E_LMAR1M = Byte.MIN_VALUE;
}
}

protected final void initE_LMAR1Y(String s) {
if (!s.trim().isEmpty()) {
E_LMAR1Y = Short.parseShort(s);
} else {
E_LMAR1Y = Short.MIN_VALUE;
}
}

protected final void initE_LMCBM1(String s) {
if (!s.trim().isEmpty()) {
E_LMCBM1 = Byte.parseByte(s);
} else {
E_LMCBM1 = Byte.MIN_VALUE;
}
}

protected final void initE_LMCBM2(String s) {
if (!s.trim().isEmpty()) {
E_LMCBM2 = Byte.parseByte(s);
} else {
E_LMCBM2 = Byte.MIN_VALUE;
}
}

protected final void initE_LMCBM3(String s) {
if (!s.trim().isEmpty()) {
E_LMCBM3 = Byte.parseByte(s);
} else {
E_LMCBM3 = Byte.MIN_VALUE;
}
}

protected final void initE_LMCBM4(String s) {
if (!s.trim().isEmpty()) {
E_LMCBM4 = Byte.parseByte(s);
} else {
E_LMCBM4 = Byte.MIN_VALUE;
}
}

protected final void initE_LMCBY41(String s) {
if (!s.trim().isEmpty()) {
E_LMCBY41 = Short.parseShort(s);
} else {
E_LMCBY41 = Short.MIN_VALUE;
}
}

protected final void initE_LMCBY42(String s) {
if (!s.trim().isEmpty()) {
E_LMCBY42 = Short.parseShort(s);
} else {
E_LMCBY42 = Short.MIN_VALUE;
}
}

protected final void initE_LMCBY43(String s) {
if (!s.trim().isEmpty()) {
E_LMCBY43 = Short.parseShort(s);
} else {
E_LMCBY43 = Short.MIN_VALUE;
}
}

protected final void initE_LMCBY44(String s) {
if (!s.trim().isEmpty()) {
E_LMCBY44 = Short.parseShort(s);
} else {
E_LMCBY44 = Short.MIN_VALUE;
}
}

protected final void initE_LMSPM1(String s) {
if (!s.trim().isEmpty()) {
E_LMSPM1 = Byte.parseByte(s);
} else {
E_LMSPM1 = Byte.MIN_VALUE;
}
}

protected final void initE_LMSPM2(String s) {
if (!s.trim().isEmpty()) {
E_LMSPM2 = Byte.parseByte(s);
} else {
E_LMSPM2 = Byte.MIN_VALUE;
}
}

protected final void initE_LMSPM3(String s) {
if (!s.trim().isEmpty()) {
E_LMSPM3 = Byte.parseByte(s);
} else {
E_LMSPM3 = Byte.MIN_VALUE;
}
}

protected final void initE_LMSPM4(String s) {
if (!s.trim().isEmpty()) {
E_LMSPM4 = Byte.parseByte(s);
} else {
E_LMSPM4 = Byte.MIN_VALUE;
}
}

protected final void initE_LMSPY41(String s) {
if (!s.trim().isEmpty()) {
E_LMSPY41 = Short.parseShort(s);
} else {
E_LMSPY41 = Short.MIN_VALUE;
}
}

protected final void initE_LMSPY42(String s) {
if (!s.trim().isEmpty()) {
E_LMSPY42 = Short.parseShort(s);
} else {
E_LMSPY42 = Short.MIN_VALUE;
}
}

protected final void initE_LMSPY43(String s) {
if (!s.trim().isEmpty()) {
E_LMSPY43 = Short.parseShort(s);
} else {
E_LMSPY43 = Short.MIN_VALUE;
}
}

protected final void initE_LMSPY44(String s) {
if (!s.trim().isEmpty()) {
E_LMSPY44 = Short.parseShort(s);
} else {
E_LMSPY44 = Short.MIN_VALUE;
}
}

protected final void initE_LNADOPT(String s) {
if (!s.trim().isEmpty()) {
E_LNADOPT = Byte.parseByte(s);
} else {
E_LNADOPT = Byte.MIN_VALUE;
}
}

protected final void initE_LNPRNT(String s) {
if (!s.trim().isEmpty()) {
E_LNPRNT = Byte.parseByte(s);
} else {
E_LNPRNT = Byte.MIN_VALUE;
}
}

protected final void initE_LPRNT(String s) {
if (!s.trim().isEmpty()) {
E_LPRNT = Byte.parseByte(s);
} else {
E_LPRNT = Byte.MIN_VALUE;
}
}

protected final void initE_LVHM(String s) {
if (!s.trim().isEmpty()) {
E_LVHM = Byte.parseByte(s);
} else {
E_LVHM = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL1(String s) {
if (!s.trim().isEmpty()) {
E_LVREL1 = Byte.parseByte(s);
} else {
E_LVREL1 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL10(String s) {
if (!s.trim().isEmpty()) {
E_LVREL10 = Byte.parseByte(s);
} else {
E_LVREL10 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL2(String s) {
if (!s.trim().isEmpty()) {
E_LVREL2 = Byte.parseByte(s);
} else {
E_LVREL2 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL3(String s) {
if (!s.trim().isEmpty()) {
E_LVREL3 = Byte.parseByte(s);
} else {
E_LVREL3 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL4(String s) {
if (!s.trim().isEmpty()) {
E_LVREL4 = Byte.parseByte(s);
} else {
E_LVREL4 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL5(String s) {
if (!s.trim().isEmpty()) {
E_LVREL5 = Byte.parseByte(s);
} else {
E_LVREL5 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL6(String s) {
if (!s.trim().isEmpty()) {
E_LVREL6 = Byte.parseByte(s);
} else {
E_LVREL6 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL7(String s) {
if (!s.trim().isEmpty()) {
E_LVREL7 = Byte.parseByte(s);
} else {
E_LVREL7 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL8(String s) {
if (!s.trim().isEmpty()) {
E_LVREL8 = Byte.parseByte(s);
} else {
E_LVREL8 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL9(String s) {
if (!s.trim().isEmpty()) {
E_LVREL9 = Byte.parseByte(s);
} else {
E_LVREL9 = Byte.MIN_VALUE;
}
}

protected final void initE_LVREL96(String s) {
if (!s.trim().isEmpty()) {
E_LVREL96 = Byte.parseByte(s);
} else {
E_LVREL96 = Byte.MIN_VALUE;
}
}

protected final void initE_LVSCHDO(String s) {
if (!s.trim().isEmpty()) {
E_LVSCHDO = Byte.parseByte(s);
} else {
E_LVSCHDO = Byte.MIN_VALUE;
}
}

protected final void initE_LWWRONG(String s) {
if (!s.trim().isEmpty()) {
E_LWWRONG = Byte.parseByte(s);
} else {
E_LWWRONG = Byte.MIN_VALUE;
}
}

protected final void initE_MAAGE(String s) {
if (!s.trim().isEmpty()) {
E_MAAGE = Byte.parseByte(s);
} else {
E_MAAGE = Byte.MIN_VALUE;
}
}

protected final void initE_MACOB(String s) {
if (!s.trim().isEmpty()) {
E_MACOB = Byte.parseByte(s);
} else {
E_MACOB = Byte.MIN_VALUE;
}
}

protected final void initE_MACON(String s) {
if (!s.trim().isEmpty()) {
E_MACON = Byte.parseByte(s);
} else {
E_MACON = Byte.MIN_VALUE;
}
}

protected final void initE_MAFAR(String s) {
if (!s.trim().isEmpty()) {
E_MAFAR = Byte.parseByte(s);
} else {
E_MAFAR = Byte.MIN_VALUE;
}
}

protected final void initE_MAJU(String s) {
if (!s.trim().isEmpty()) {
E_MAJU = Byte.parseByte(s);
} else {
E_MAJU = Byte.MIN_VALUE;
}
}

protected final void initE_MALONE(String s) {
if (!s.trim().isEmpty()) {
E_MALONE = Byte.parseByte(s);
} else {
E_MALONE = Byte.MIN_VALUE;
}
}

protected final void initE_MAMOSTCON(String s) {
if (!s.trim().isEmpty()) {
E_MAMOSTCON = Byte.parseByte(s);
} else {
E_MAMOSTCON = Byte.MIN_VALUE;
}
}

protected final void initE_MANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
E_MANSSEC5_DV = Byte.parseByte(s);
} else {
E_MANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initE_MARSTAT(String s) {
if (!s.trim().isEmpty()) {
E_MARSTAT = Byte.parseByte(s);
} else {
E_MARSTAT = Byte.MIN_VALUE;
}
}

protected final void initE_MASEE(String s) {
if (!s.trim().isEmpty()) {
E_MASEE = Byte.parseByte(s);
} else {
E_MASEE = Byte.MIN_VALUE;
}
}

protected final void initE_MASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
E_MASOC00_CC = Short.parseShort(s);
} else {
E_MASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initE_MASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
E_MASOC10_CC = Short.parseShort(s);
} else {
E_MASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initE_MASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
E_MASOC90_CC = Byte.parseByte(s);
} else {
E_MASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initE_MASTAT_DV(String s) {
if (!s.trim().isEmpty()) {
E_MASTAT_DV = Byte.parseByte(s);
} else {
E_MASTAT_DV = Byte.MIN_VALUE;
}
}

protected final void initE_MATLEAVE(String s) {
if (!s.trim().isEmpty()) {
E_MATLEAVE = Byte.parseByte(s);
} else {
E_MATLEAVE = Byte.MIN_VALUE;
}
}

protected final void initE_MATLV(String s) {
if (!s.trim().isEmpty()) {
E_MATLV = Byte.parseByte(s);
} else {
E_MATLV = Byte.MIN_VALUE;
}
}

protected final void initE_MATLVENDD(String s) {
if (!s.trim().isEmpty()) {
E_MATLVENDD = Byte.parseByte(s);
} else {
E_MATLVENDD = Byte.MIN_VALUE;
}
}

protected final void initE_MATLVENDM(String s) {
if (!s.trim().isEmpty()) {
E_MATLVENDM = Byte.parseByte(s);
} else {
E_MATLVENDM = Byte.MIN_VALUE;
}
}

protected final void initE_MATLVENDY4(String s) {
if (!s.trim().isEmpty()) {
E_MATLVENDY4 = Short.parseShort(s);
} else {
E_MATLVENDY4 = Short.MIN_VALUE;
}
}

protected final void initE_MATLVSTD(String s) {
if (!s.trim().isEmpty()) {
E_MATLVSTD = Byte.parseByte(s);
} else {
E_MATLVSTD = Byte.MIN_VALUE;
}
}

protected final void initE_MATLVSTM(String s) {
if (!s.trim().isEmpty()) {
E_MATLVSTM = Byte.parseByte(s);
} else {
E_MATLVSTM = Byte.MIN_VALUE;
}
}

protected final void initE_MATLVSTY4(String s) {
if (!s.trim().isEmpty()) {
E_MATLVSTY4 = Short.parseShort(s);
} else {
E_MATLVSTY4 = Short.MIN_VALUE;
}
}

protected final void initE_MAYRUK(String s) {
if (!s.trim().isEmpty()) {
E_MAYRUK = Byte.parseByte(s);
} else {
E_MAYRUK = Byte.MIN_VALUE;
}
}

protected final void initE_MEMORIG(String s) {
if (!s.trim().isEmpty()) {
E_MEMORIG = Byte.parseByte(s);
} else {
E_MEMORIG = Byte.MIN_VALUE;
}
}

protected final void initE_MEMPLOY(String s) {
if (!s.trim().isEmpty()) {
E_MEMPLOY = Byte.parseByte(s);
} else {
E_MEMPLOY = Byte.MIN_VALUE;
}
}

protected final void initE_MLA1(String s) {
if (!s.trim().isEmpty()) {
E_MLA1 = Byte.parseByte(s);
} else {
E_MLA1 = Byte.MIN_VALUE;
}
}

protected final void initE_MLA2(String s) {
if (!s.trim().isEmpty()) {
E_MLA2 = Byte.parseByte(s);
} else {
E_MLA2 = Byte.MIN_VALUE;
}
}

protected final void initE_MLA3(String s) {
if (!s.trim().isEmpty()) {
E_MLA3 = Byte.parseByte(s);
} else {
E_MLA3 = Byte.MIN_VALUE;
}
}

protected final void initE_MLA96(String s) {
if (!s.trim().isEmpty()) {
E_MLA96 = Byte.parseByte(s);
} else {
E_MLA96 = Byte.MIN_VALUE;
}
}

protected final void initE_MLAGST(String s) {
if (!s.trim().isEmpty()) {
E_MLAGST = Byte.parseByte(s);
} else {
E_MLAGST = Byte.MIN_VALUE;
}
}

protected final void initE_MLAGSTU(String s) {
if (!s.trim().isEmpty()) {
E_MLAGSTU = Byte.parseByte(s);
} else {
E_MLAGSTU = Byte.MIN_VALUE;
}
}

protected final void initE_MLFUTR(String s) {
if (!s.trim().isEmpty()) {
E_MLFUTR = Byte.parseByte(s);
} else {
E_MLFUTR = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT1(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT1 = Byte.parseByte(s);
} else {
E_MLRNOT1 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT10(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT10 = Byte.parseByte(s);
} else {
E_MLRNOT10 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT11(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT11 = Byte.parseByte(s);
} else {
E_MLRNOT11 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT12(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT12 = Byte.parseByte(s);
} else {
E_MLRNOT12 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT13(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT13 = Byte.parseByte(s);
} else {
E_MLRNOT13 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT2(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT2 = Byte.parseByte(s);
} else {
E_MLRNOT2 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT3(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT3 = Byte.parseByte(s);
} else {
E_MLRNOT3 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT4(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT4 = Byte.parseByte(s);
} else {
E_MLRNOT4 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT5(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT5 = Byte.parseByte(s);
} else {
E_MLRNOT5 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT6(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT6 = Byte.parseByte(s);
} else {
E_MLRNOT6 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT7(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT7 = Byte.parseByte(s);
} else {
E_MLRNOT7 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT8(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT8 = Byte.parseByte(s);
} else {
E_MLRNOT8 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT9(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT9 = Byte.parseByte(s);
} else {
E_MLRNOT9 = Byte.MIN_VALUE;
}
}

protected final void initE_MLRNOT97(String s) {
if (!s.trim().isEmpty()) {
E_MLRNOT97 = Byte.parseByte(s);
} else {
E_MLRNOT97 = Byte.MIN_VALUE;
}
}

protected final void initE_MLSTAT(String s) {
if (!s.trim().isEmpty()) {
E_MLSTAT = Byte.parseByte(s);
} else {
E_MLSTAT = Byte.MIN_VALUE;
}
}

protected final void initE_MLSTATCHK(String s) {
if (!s.trim().isEmpty()) {
E_MLSTATCHK = Byte.parseByte(s);
} else {
E_MLSTATCHK = Byte.MIN_VALUE;
}
}

protected final void initE_MLWKFPT(String s) {
if (!s.trim().isEmpty()) {
E_MLWKFPT = Byte.parseByte(s);
} else {
E_MLWKFPT = Byte.MIN_VALUE;
}
}

protected final void initE_MNPID(String s) {
if (!s.trim().isEmpty()) {
E_MNPID = Integer.parseInt(s);
} else {
E_MNPID = Integer.MIN_VALUE;
}
}

protected final void initE_MNPNO(String s) {
if (!s.trim().isEmpty()) {
E_MNPNO = Byte.parseByte(s);
} else {
E_MNPNO = Byte.MIN_VALUE;
}
}

protected final void initE_MNSPID(String s) {
if (!s.trim().isEmpty()) {
E_MNSPID = Integer.parseInt(s);
} else {
E_MNSPID = Integer.MIN_VALUE;
}
}

protected final void initE_MNSPNO(String s) {
if (!s.trim().isEmpty()) {
E_MNSPNO = Byte.parseByte(s);
} else {
E_MNSPNO = Byte.MIN_VALUE;
}
}

protected final void initE_MOBCOMP(String s) {
if (!s.trim().isEmpty()) {
E_MOBCOMP = Byte.parseByte(s);
} else {
E_MOBCOMP = Byte.MIN_VALUE;
}
}

protected final void initE_MOBUSE(String s) {
if (!s.trim().isEmpty()) {
E_MOBUSE = Byte.parseByte(s);
} else {
E_MOBUSE = Byte.MIN_VALUE;
}
}

protected final void initE_MONTH(String s) {
if (!s.trim().isEmpty()) {
E_MONTH = Byte.parseByte(s);
} else {
E_MONTH = Byte.MIN_VALUE;
}
}

protected final void initE_MOVDIR(String s) {
if (!s.trim().isEmpty()) {
E_MOVDIR = Byte.parseByte(s);
} else {
E_MOVDIR = Byte.MIN_VALUE;
}
}

protected final void initE_MOVEOTH_CODE(String s) {
if (!s.trim().isEmpty()) {
E_MOVEOTH_CODE = Byte.parseByte(s);
} else {
E_MOVEOTH_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_MOVY11(String s) {
if (!s.trim().isEmpty()) {
E_MOVY11 = Byte.parseByte(s);
} else {
E_MOVY11 = Byte.MIN_VALUE;
}
}

protected final void initE_MOVY12(String s) {
if (!s.trim().isEmpty()) {
E_MOVY12 = Byte.parseByte(s);
} else {
E_MOVY12 = Byte.MIN_VALUE;
}
}

protected final void initE_MOVY13(String s) {
if (!s.trim().isEmpty()) {
E_MOVY13 = Byte.parseByte(s);
} else {
E_MOVY13 = Byte.MIN_VALUE;
}
}

protected final void initE_MOVY14(String s) {
if (!s.trim().isEmpty()) {
E_MOVY14 = Byte.parseByte(s);
} else {
E_MOVY14 = Byte.MIN_VALUE;
}
}

protected final void initE_MOVY15(String s) {
if (!s.trim().isEmpty()) {
E_MOVY15 = Byte.parseByte(s);
} else {
E_MOVY15 = Byte.MIN_VALUE;
}
}

protected final void initE_MOVY16(String s) {
if (!s.trim().isEmpty()) {
E_MOVY16 = Byte.parseByte(s);
} else {
E_MOVY16 = Byte.MIN_VALUE;
}
}

protected final void initE_MPWEB(String s) {
if (!s.trim().isEmpty()) {
E_MPWEB = Byte.parseByte(s);
} else {
E_MPWEB = Byte.MIN_VALUE;
}
}

protected final void initE_MSTATCH1(String s) {
if (!s.trim().isEmpty()) {
E_MSTATCH1 = Byte.parseByte(s);
} else {
E_MSTATCH1 = Byte.MIN_VALUE;
}
}

protected final void initE_MSTATCH2(String s) {
if (!s.trim().isEmpty()) {
E_MSTATCH2 = Byte.parseByte(s);
} else {
E_MSTATCH2 = Byte.MIN_VALUE;
}
}

protected final void initE_MSTATSAM(String s) {
if (!s.trim().isEmpty()) {
E_MSTATSAM = Byte.parseByte(s);
} else {
E_MSTATSAM = Byte.MIN_VALUE;
}
}

protected final void initE_MSTATSAMN(String s) {
if (!s.trim().isEmpty()) {
E_MSTATSAMN = Byte.parseByte(s);
} else {
E_MSTATSAMN = Byte.MIN_VALUE;
}
}

protected final void initE_MUSFREQ(String s) {
if (!s.trim().isEmpty()) {
E_MUSFREQ = Byte.parseByte(s);
} else {
E_MUSFREQ = Byte.MIN_VALUE;
}
}

protected final void initE_MVEVER(String s) {
if (!s.trim().isEmpty()) {
E_MVEVER = Byte.parseByte(s);
} else {
E_MVEVER = Byte.MIN_VALUE;
}
}

protected final void initE_MVMNTH(String s) {
if (!s.trim().isEmpty()) {
E_MVMNTH = Byte.parseByte(s);
} else {
E_MVMNTH = Byte.MIN_VALUE;
}
}

protected final void initE_MVYR(String s) {
if (!s.trim().isEmpty()) {
E_MVYR = Short.parseShort(s);
} else {
E_MVYR = Short.MIN_VALUE;
}
}

protected final void initE_N1619ABS(String s) {
if (!s.trim().isEmpty()) {
E_N1619ABS = Byte.parseByte(s);
} else {
E_N1619ABS = Byte.MIN_VALUE;
}
}

protected final void initE_NADOPTCH(String s) {
if (!s.trim().isEmpty()) {
E_NADOPTCH = Byte.parseByte(s);
} else {
E_NADOPTCH = Byte.MIN_VALUE;
}
}

protected final void initE_NAIDXHH(String s) {
if (!s.trim().isEmpty()) {
E_NAIDXHH = Byte.parseByte(s);
} else {
E_NAIDXHH = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH01(String s) {
if (!s.trim().isEmpty()) {
E_NATCH01 = Byte.parseByte(s);
} else {
E_NATCH01 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH02(String s) {
if (!s.trim().isEmpty()) {
E_NATCH02 = Byte.parseByte(s);
} else {
E_NATCH02 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH03(String s) {
if (!s.trim().isEmpty()) {
E_NATCH03 = Byte.parseByte(s);
} else {
E_NATCH03 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH04(String s) {
if (!s.trim().isEmpty()) {
E_NATCH04 = Byte.parseByte(s);
} else {
E_NATCH04 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH05(String s) {
if (!s.trim().isEmpty()) {
E_NATCH05 = Byte.parseByte(s);
} else {
E_NATCH05 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH06(String s) {
if (!s.trim().isEmpty()) {
E_NATCH06 = Byte.parseByte(s);
} else {
E_NATCH06 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH07(String s) {
if (!s.trim().isEmpty()) {
E_NATCH07 = Byte.parseByte(s);
} else {
E_NATCH07 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH08(String s) {
if (!s.trim().isEmpty()) {
E_NATCH08 = Byte.parseByte(s);
} else {
E_NATCH08 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH09(String s) {
if (!s.trim().isEmpty()) {
E_NATCH09 = Byte.parseByte(s);
} else {
E_NATCH09 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH10(String s) {
if (!s.trim().isEmpty()) {
E_NATCH10 = Byte.parseByte(s);
} else {
E_NATCH10 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH11(String s) {
if (!s.trim().isEmpty()) {
E_NATCH11 = Byte.parseByte(s);
} else {
E_NATCH11 = Byte.MIN_VALUE;
}
}

protected final void initE_NATCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_NATCH12 = false;
} else {
E_NATCH12 = true;
}
}
}

protected final void initE_NATCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_NATCH13 = false;
} else {
E_NATCH13 = true;
}
}
}

protected final void initE_NATCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_NATCH14 = false;
} else {
E_NATCH14 = true;
}
}
}

protected final void initE_NATCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_NATCH15 = false;
} else {
E_NATCH15 = true;
}
}
}

protected final void initE_NATCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
E_NATCH16 = false;
} else {
E_NATCH16 = true;
}
}
}

protected final void initE_NATID1(String s) {
if (!s.trim().isEmpty()) {
E_NATID1 = Byte.parseByte(s);
} else {
E_NATID1 = Byte.MIN_VALUE;
}
}

protected final void initE_NATID2(String s) {
if (!s.trim().isEmpty()) {
E_NATID2 = Byte.parseByte(s);
} else {
E_NATID2 = Byte.MIN_VALUE;
}
}

protected final void initE_NATID3(String s) {
if (!s.trim().isEmpty()) {
E_NATID3 = Byte.parseByte(s);
} else {
E_NATID3 = Byte.MIN_VALUE;
}
}

protected final void initE_NATID4(String s) {
if (!s.trim().isEmpty()) {
E_NATID4 = Byte.parseByte(s);
} else {
E_NATID4 = Byte.MIN_VALUE;
}
}

protected final void initE_NATID5(String s) {
if (!s.trim().isEmpty()) {
E_NATID5 = Byte.parseByte(s);
} else {
E_NATID5 = Byte.MIN_VALUE;
}
}

protected final void initE_NATID6(String s) {
if (!s.trim().isEmpty()) {
E_NATID6 = Byte.parseByte(s);
} else {
E_NATID6 = Byte.MIN_VALUE;
}
}

protected final void initE_NATID97(String s) {
if (!s.trim().isEmpty()) {
E_NATID97 = Byte.parseByte(s);
} else {
E_NATID97 = Byte.MIN_VALUE;
}
}

protected final void initE_NCARS(String s) {
if (!s.trim().isEmpty()) {
E_NCARS = Byte.parseByte(s);
} else {
E_NCARS = Byte.MIN_VALUE;
}
}

protected final void initE_NCH10(String s) {
if (!s.trim().isEmpty()) {
E_NCH10 = Byte.parseByte(s);
} else {
E_NCH10 = Byte.MIN_VALUE;
}
}

protected final void initE_NCH10TO15(String s) {
if (!s.trim().isEmpty()) {
E_NCH10TO15 = Byte.parseByte(s);
} else {
E_NCH10TO15 = Byte.MIN_VALUE;
}
}

protected final void initE_NCH14RESP(String s) {
if (!s.trim().isEmpty()) {
E_NCH14RESP = Byte.parseByte(s);
} else {
E_NCH14RESP = Byte.MIN_VALUE;
}
}

protected final void initE_NCH3RESP(String s) {
if (!s.trim().isEmpty()) {
E_NCH3RESP = Byte.parseByte(s);
} else {
E_NCH3RESP = Byte.MIN_VALUE;
}
}

protected final void initE_NCH415RESP(String s) {
if (!s.trim().isEmpty()) {
E_NCH415RESP = Byte.parseByte(s);
} else {
E_NCH415RESP = Byte.MIN_VALUE;
}
}

protected final void initE_NCH5RESP(String s) {
if (!s.trim().isEmpty()) {
E_NCH5RESP = Byte.parseByte(s);
} else {
E_NCH5RESP = Byte.MIN_VALUE;
}
}

protected final void initE_NCH5TO15(String s) {
if (!s.trim().isEmpty()) {
E_NCH5TO15 = Byte.parseByte(s);
} else {
E_NCH5TO15 = Byte.MIN_VALUE;
}
}

protected final void initE_NCH8RESP(String s) {
if (!s.trim().isEmpty()) {
E_NCH8RESP = Byte.parseByte(s);
} else {
E_NCH8RESP = Byte.MIN_VALUE;
}
}

protected final void initE_NCHILD(String s) {
if (!s.trim().isEmpty()) {
E_NCHILD = Byte.parseByte(s);
} else {
E_NCHILD = Byte.MIN_VALUE;
}
}

protected final void initE_NCHILD_DV(String s) {
if (!s.trim().isEmpty()) {
E_NCHILD_DV = Byte.parseByte(s);
} else {
E_NCHILD_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NCHRESP(String s) {
if (!s.trim().isEmpty()) {
E_NCHRESP = Byte.parseByte(s);
} else {
E_NCHRESP = Byte.MIN_VALUE;
}
}

protected final void initE_NCHUND18RESP(String s) {
if (!s.trim().isEmpty()) {
E_NCHUND18RESP = Byte.parseByte(s);
} else {
E_NCHUND18RESP = Byte.MIN_VALUE;
}
}

protected final void initE_NCHUNDER16(String s) {
if (!s.trim().isEmpty()) {
E_NCHUNDER16 = Byte.parseByte(s);
} else {
E_NCHUNDER16 = Byte.MIN_VALUE;
}
}

protected final void initE_NCIGS(String s) {
if (!s.trim().isEmpty()) {
E_NCIGS = Byte.parseByte(s);
} else {
E_NCIGS = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR1(String s) {
if (!s.trim().isEmpty()) {
E_NCRR1 = Byte.parseByte(s);
} else {
E_NCRR1 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR11(String s) {
if (!s.trim().isEmpty()) {
E_NCRR11 = Byte.parseByte(s);
} else {
E_NCRR11 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR12(String s) {
if (!s.trim().isEmpty()) {
E_NCRR12 = Byte.parseByte(s);
} else {
E_NCRR12 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR3(String s) {
if (!s.trim().isEmpty()) {
E_NCRR3 = Byte.parseByte(s);
} else {
E_NCRR3 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR4(String s) {
if (!s.trim().isEmpty()) {
E_NCRR4 = Byte.parseByte(s);
} else {
E_NCRR4 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR5(String s) {
if (!s.trim().isEmpty()) {
E_NCRR5 = Byte.parseByte(s);
} else {
E_NCRR5 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR6(String s) {
if (!s.trim().isEmpty()) {
E_NCRR6 = Byte.parseByte(s);
} else {
E_NCRR6 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR8(String s) {
if (!s.trim().isEmpty()) {
E_NCRR8 = Byte.parseByte(s);
} else {
E_NCRR8 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRR9(String s) {
if (!s.trim().isEmpty()) {
E_NCRR9 = Byte.parseByte(s);
} else {
E_NCRR9 = Byte.MIN_VALUE;
}
}

protected final void initE_NCRRM(String s) {
if (!s.trim().isEmpty()) {
E_NCRRM = Byte.parseByte(s);
} else {
E_NCRRM = Byte.MIN_VALUE;
}
}

protected final void initE_NCRRY4(String s) {
if (!s.trim().isEmpty()) {
E_NCRRY4 = Short.parseShort(s);
} else {
E_NCRRY4 = Short.MIN_VALUE;
}
}

protected final void initE_NDEPCHL_DV(String s) {
if (!s.trim().isEmpty()) {
E_NDEPCHL_DV = Byte.parseByte(s);
} else {
E_NDEPCHL_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NETPUSE(String s) {
if (!s.trim().isEmpty()) {
E_NETPUSE = Byte.parseByte(s);
} else {
E_NETPUSE = Byte.MIN_VALUE;
}
}

protected final void initE_NETUSE(String s) {
if (!s.trim().isEmpty()) {
E_NETUSE = Byte.parseByte(s);
} else {
E_NETUSE = Byte.MIN_VALUE;
}
}

protected final void initE_NEXT(String s) {
if (!s.trim().isEmpty()) {
E_NEXT = Byte.parseByte(s);
} else {
E_NEXT = Byte.MIN_VALUE;
}
}

protected final void initE_NEXT1(String s) {
if (!s.trim().isEmpty()) {
E_NEXT1 = Byte.parseByte(s);
} else {
E_NEXT1 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXT2(String s) {
if (!s.trim().isEmpty()) {
E_NEXT2 = Byte.parseByte(s);
} else {
E_NEXT2 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXT3(String s) {
if (!s.trim().isEmpty()) {
E_NEXT3 = Byte.parseByte(s);
} else {
E_NEXT3 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXT4(String s) {
if (!s.trim().isEmpty()) {
E_NEXT4 = Byte.parseByte(s);
} else {
E_NEXT4 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXT5(String s) {
if (!s.trim().isEmpty()) {
E_NEXT5 = Byte.parseByte(s);
} else {
E_NEXT5 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXT6(String s) {
if (!s.trim().isEmpty()) {
E_NEXT6 = Byte.parseByte(s);
} else {
E_NEXT6 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTELSE1(String s) {
if (!s.trim().isEmpty()) {
E_NEXTELSE1 = Byte.parseByte(s);
} else {
E_NEXTELSE1 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTELSE2(String s) {
if (!s.trim().isEmpty()) {
E_NEXTELSE2 = Byte.parseByte(s);
} else {
E_NEXTELSE2 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTELSE3(String s) {
if (!s.trim().isEmpty()) {
E_NEXTELSE3 = Byte.parseByte(s);
} else {
E_NEXTELSE3 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTELSE4(String s) {
if (!s.trim().isEmpty()) {
E_NEXTELSE4 = Byte.parseByte(s);
} else {
E_NEXTELSE4 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTELSE5(String s) {
if (!s.trim().isEmpty()) {
E_NEXTELSE5 = Byte.parseByte(s);
} else {
E_NEXTELSE5 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTELSE6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_NEXTELSE6 = false;
} else {
E_NEXTELSE6 = true;
}
}
}

protected final void initE_NEXTJOB1(String s) {
if (!s.trim().isEmpty()) {
E_NEXTJOB1 = Byte.parseByte(s);
} else {
E_NEXTJOB1 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTJOB2(String s) {
if (!s.trim().isEmpty()) {
E_NEXTJOB2 = Byte.parseByte(s);
} else {
E_NEXTJOB2 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTJOB3(String s) {
if (!s.trim().isEmpty()) {
E_NEXTJOB3 = Byte.parseByte(s);
} else {
E_NEXTJOB3 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTJOB4(String s) {
if (!s.trim().isEmpty()) {
E_NEXTJOB4 = Byte.parseByte(s);
} else {
E_NEXTJOB4 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTJOB5(String s) {
if (!s.trim().isEmpty()) {
E_NEXTJOB5 = Byte.parseByte(s);
} else {
E_NEXTJOB5 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTJOB6(String s) {
if (!s.trim().isEmpty()) {
E_NEXTJOB6 = Byte.parseByte(s);
} else {
E_NEXTJOB6 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTSTAT1(String s) {
if (!s.trim().isEmpty()) {
E_NEXTSTAT1 = Byte.parseByte(s);
} else {
E_NEXTSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTSTAT2(String s) {
if (!s.trim().isEmpty()) {
E_NEXTSTAT2 = Byte.parseByte(s);
} else {
E_NEXTSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTSTAT3(String s) {
if (!s.trim().isEmpty()) {
E_NEXTSTAT3 = Byte.parseByte(s);
} else {
E_NEXTSTAT3 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTSTAT4(String s) {
if (!s.trim().isEmpty()) {
E_NEXTSTAT4 = Byte.parseByte(s);
} else {
E_NEXTSTAT4 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTSTAT5(String s) {
if (!s.trim().isEmpty()) {
E_NEXTSTAT5 = Byte.parseByte(s);
} else {
E_NEXTSTAT5 = Byte.MIN_VALUE;
}
}

protected final void initE_NEXTSTAT6(String s) {
if (!s.trim().isEmpty()) {
E_NEXTSTAT6 = Byte.parseByte(s);
} else {
E_NEXTSTAT6 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH01(String s) {
if (!s.trim().isEmpty()) {
E_NFH01 = Byte.parseByte(s);
} else {
E_NFH01 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH02(String s) {
if (!s.trim().isEmpty()) {
E_NFH02 = Byte.parseByte(s);
} else {
E_NFH02 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH03(String s) {
if (!s.trim().isEmpty()) {
E_NFH03 = Byte.parseByte(s);
} else {
E_NFH03 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH04(String s) {
if (!s.trim().isEmpty()) {
E_NFH04 = Byte.parseByte(s);
} else {
E_NFH04 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH05(String s) {
if (!s.trim().isEmpty()) {
E_NFH05 = Byte.parseByte(s);
} else {
E_NFH05 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH06(String s) {
if (!s.trim().isEmpty()) {
E_NFH06 = Byte.parseByte(s);
} else {
E_NFH06 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH07(String s) {
if (!s.trim().isEmpty()) {
E_NFH07 = Byte.parseByte(s);
} else {
E_NFH07 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH08(String s) {
if (!s.trim().isEmpty()) {
E_NFH08 = Byte.parseByte(s);
} else {
E_NFH08 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH09(String s) {
if (!s.trim().isEmpty()) {
E_NFH09 = Byte.parseByte(s);
} else {
E_NFH09 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH10(String s) {
if (!s.trim().isEmpty()) {
E_NFH10 = Byte.parseByte(s);
} else {
E_NFH10 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH11(String s) {
if (!s.trim().isEmpty()) {
E_NFH11 = Byte.parseByte(s);
} else {
E_NFH11 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH12(String s) {
if (!s.trim().isEmpty()) {
E_NFH12 = Byte.parseByte(s);
} else {
E_NFH12 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH13(String s) {
if (!s.trim().isEmpty()) {
E_NFH13 = Byte.parseByte(s);
} else {
E_NFH13 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH14(String s) {
if (!s.trim().isEmpty()) {
E_NFH14 = Byte.parseByte(s);
} else {
E_NFH14 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH15(String s) {
if (!s.trim().isEmpty()) {
E_NFH15 = Byte.parseByte(s);
} else {
E_NFH15 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH16(String s) {
if (!s.trim().isEmpty()) {
E_NFH16 = Byte.parseByte(s);
} else {
E_NFH16 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH17(String s) {
if (!s.trim().isEmpty()) {
E_NFH17 = Byte.parseByte(s);
} else {
E_NFH17 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH18(String s) {
if (!s.trim().isEmpty()) {
E_NFH18 = Byte.parseByte(s);
} else {
E_NFH18 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH19(String s) {
if (!s.trim().isEmpty()) {
E_NFH19 = Byte.parseByte(s);
} else {
E_NFH19 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH20(String s) {
if (!s.trim().isEmpty()) {
E_NFH20 = Byte.parseByte(s);
} else {
E_NFH20 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH21(String s) {
if (!s.trim().isEmpty()) {
E_NFH21 = Byte.parseByte(s);
} else {
E_NFH21 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH22(String s) {
if (!s.trim().isEmpty()) {
E_NFH22 = Byte.parseByte(s);
} else {
E_NFH22 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH23(String s) {
if (!s.trim().isEmpty()) {
E_NFH23 = Byte.parseByte(s);
} else {
E_NFH23 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH24(String s) {
if (!s.trim().isEmpty()) {
E_NFH24 = Byte.parseByte(s);
} else {
E_NFH24 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH25(String s) {
if (!s.trim().isEmpty()) {
E_NFH25 = Byte.parseByte(s);
} else {
E_NFH25 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH26(String s) {
if (!s.trim().isEmpty()) {
E_NFH26 = Byte.parseByte(s);
} else {
E_NFH26 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH27(String s) {
if (!s.trim().isEmpty()) {
E_NFH27 = Byte.parseByte(s);
} else {
E_NFH27 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH28(String s) {
if (!s.trim().isEmpty()) {
E_NFH28 = Byte.parseByte(s);
} else {
E_NFH28 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH29(String s) {
if (!s.trim().isEmpty()) {
E_NFH29 = Byte.parseByte(s);
} else {
E_NFH29 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH30(String s) {
if (!s.trim().isEmpty()) {
E_NFH30 = Byte.parseByte(s);
} else {
E_NFH30 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH31(String s) {
if (!s.trim().isEmpty()) {
E_NFH31 = Byte.parseByte(s);
} else {
E_NFH31 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH32(String s) {
if (!s.trim().isEmpty()) {
E_NFH32 = Byte.parseByte(s);
} else {
E_NFH32 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH33(String s) {
if (!s.trim().isEmpty()) {
E_NFH33 = Byte.parseByte(s);
} else {
E_NFH33 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH34(String s) {
if (!s.trim().isEmpty()) {
E_NFH34 = Byte.parseByte(s);
} else {
E_NFH34 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH35(String s) {
if (!s.trim().isEmpty()) {
E_NFH35 = Byte.parseByte(s);
} else {
E_NFH35 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH36(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_NFH36 = false;
} else {
E_NFH36 = true;
}
}
}

protected final void initE_NFH37(String s) {
if (!s.trim().isEmpty()) {
E_NFH37 = Byte.parseByte(s);
} else {
E_NFH37 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH38(String s) {
if (!s.trim().isEmpty()) {
E_NFH38 = Byte.parseByte(s);
} else {
E_NFH38 = Byte.MIN_VALUE;
}
}

protected final void initE_NFH39(String s) {
if (!s.trim().isEmpty()) {
E_NFH39 = Byte.parseByte(s);
} else {
E_NFH39 = Byte.MIN_VALUE;
}
}

protected final void initE_NGRP_DV(String s) {
if (!s.trim().isEmpty()) {
E_NGRP_DV = Byte.parseByte(s);
} else {
E_NGRP_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NHIQUAL_DV(String s) {
if (!s.trim().isEmpty()) {
E_NHIQUAL_DV = Byte.parseByte(s);
} else {
E_NHIQUAL_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NIACT(String s) {
if (!s.trim().isEmpty()) {
E_NIACT = Byte.parseByte(s);
} else {
E_NIACT = Byte.MIN_VALUE;
}
}

protected final void initE_NIREL(String s) {
if (!s.trim().isEmpty()) {
E_NIREL = Byte.parseByte(s);
} else {
E_NIREL = Byte.MIN_VALUE;
}
}

protected final void initE_NISERPS(String s) {
if (!s.trim().isEmpty()) {
E_NISERPS = Byte.parseByte(s);
} else {
E_NISERPS = Byte.MIN_VALUE;
}
}

protected final void initE_NJOBHIST(String s) {
if (!s.trim().isEmpty()) {
E_NJOBHIST = Byte.parseByte(s);
} else {
E_NJOBHIST = Byte.MIN_VALUE;
}
}

protected final void initE_NMAR(String s) {
if (!s.trim().isEmpty()) {
E_NMAR = Byte.parseByte(s);
} else {
E_NMAR = Byte.MIN_VALUE;
}
}

protected final void initE_NMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
E_NMPSP_DV = Byte.parseByte(s);
} else {
E_NMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NNATCH(String s) {
if (!s.trim().isEmpty()) {
E_NNATCH = Byte.parseByte(s);
} else {
E_NNATCH = Byte.MIN_VALUE;
}
}

protected final void initE_NNEWBORN(String s) {
if (!s.trim().isEmpty()) {
E_NNEWBORN = Byte.parseByte(s);
} else {
E_NNEWBORN = Byte.MIN_VALUE;
}
}

protected final void initE_NNMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
E_NNMPSP_DV = Byte.parseByte(s);
} else {
E_NNMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NNSIB_DV(String s) {
if (!s.trim().isEmpty()) {
E_NNSIB_DV = Byte.parseByte(s);
} else {
E_NNSIB_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NNSSIB_DV(String s) {
if (!s.trim().isEmpty()) {
E_NNSSIB_DV = Byte.parseByte(s);
} else {
E_NNSSIB_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NOTEMPCHK(String s) {
if (!s.trim().isEmpty()) {
E_NOTEMPCHK = Byte.parseByte(s);
} else {
E_NOTEMPCHK = Byte.MIN_VALUE;
}
}

protected final void initE_NPENSIONER_DV(String s) {
if (!s.trim().isEmpty()) {
E_NPENSIONER_DV = Byte.parseByte(s);
} else {
E_NPENSIONER_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NPNS_DV(String s) {
if (!s.trim().isEmpty()) {
E_NPNS_DV = Byte.parseByte(s);
} else {
E_NPNS_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NPN_DV(String s) {
if (!s.trim().isEmpty()) {
E_NPN_DV = Byte.parseByte(s);
} else {
E_NPN_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NQFHIGH_DV(String s) {
if (!s.trim().isEmpty()) {
E_NQFHIGH_DV = Byte.parseByte(s);
} else {
E_NQFHIGH_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NRELS1(String s) {
if (!s.trim().isEmpty()) {
E_NRELS1 = Byte.parseByte(s);
} else {
E_NRELS1 = Byte.MIN_VALUE;
}
}

protected final void initE_NRELS2(String s) {
if (!s.trim().isEmpty()) {
E_NRELS2 = Byte.parseByte(s);
} else {
E_NRELS2 = Byte.MIN_VALUE;
}
}

protected final void initE_NRELS3(String s) {
if (!s.trim().isEmpty()) {
E_NRELS3 = Byte.parseByte(s);
} else {
E_NRELS3 = Byte.MIN_VALUE;
}
}

protected final void initE_NRELS4(String s) {
if (!s.trim().isEmpty()) {
E_NRELS4 = Byte.parseByte(s);
} else {
E_NRELS4 = Byte.MIN_VALUE;
}
}

protected final void initE_NRELS5(String s) {
if (!s.trim().isEmpty()) {
E_NRELS5 = Byte.parseByte(s);
} else {
E_NRELS5 = Byte.MIN_VALUE;
}
}

protected final void initE_NRELS6(String s) {
if (!s.trim().isEmpty()) {
E_NRELS6 = Byte.parseByte(s);
} else {
E_NRELS6 = Byte.MIN_VALUE;
}
}

protected final void initE_NUNDER16(String s) {
if (!s.trim().isEmpty()) {
E_NUNDER16 = Byte.parseByte(s);
} else {
E_NUNDER16 = Byte.MIN_VALUE;
}
}

protected final void initE_NUNDER16ABS(String s) {
if (!s.trim().isEmpty()) {
E_NUNDER16ABS = Byte.parseByte(s);
} else {
E_NUNDER16ABS = Byte.MIN_VALUE;
}
}

protected final void initE_NUNDER20ABS(String s) {
if (!s.trim().isEmpty()) {
E_NUNDER20ABS = Byte.parseByte(s);
} else {
E_NUNDER20ABS = Byte.MIN_VALUE;
}
}

protected final void initE_NUNMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
E_NUNMPSP_DV = Byte.parseByte(s);
} else {
E_NUNMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initE_NXTENDREAS(String s) {
if (!s.trim().isEmpty()) {
E_NXTENDREAS = Byte.parseByte(s);
} else {
E_NXTENDREAS = Byte.MIN_VALUE;
}
}

protected final void initE_NXTJBENDD(String s) {
if (!s.trim().isEmpty()) {
E_NXTJBENDD = Byte.parseByte(s);
} else {
E_NXTJBENDD = Byte.MIN_VALUE;
}
}

protected final void initE_NXTJBENDM(String s) {
if (!s.trim().isEmpty()) {
E_NXTJBENDM = Byte.parseByte(s);
} else {
E_NXTJBENDM = Byte.MIN_VALUE;
}
}

protected final void initE_NXTJBENDY4(String s) {
if (!s.trim().isEmpty()) {
E_NXTJBENDY4 = Short.parseShort(s);
} else {
E_NXTJBENDY4 = Short.MIN_VALUE;
}
}

protected final void initE_NXTJBES(String s) {
if (!s.trim().isEmpty()) {
E_NXTJBES = Byte.parseByte(s);
} else {
E_NXTJBES = Byte.MIN_VALUE;
}
}

protected final void initE_NXTJBHRS(String s) {
if (!s.trim().isEmpty()) {
E_NXTJBHRS = Byte.parseByte(s);
} else {
E_NXTJBHRS = Byte.MIN_VALUE;
}
}

protected final void initE_NXTST(String s) {
if (!s.trim().isEmpty()) {
E_NXTST = Byte.parseByte(s);
} else {
E_NXTST = Byte.MIN_VALUE;
}
}

protected final void initE_NXTSTELSE(String s) {
if (!s.trim().isEmpty()) {
E_NXTSTELSE = Byte.parseByte(s);
} else {
E_NXTSTELSE = Byte.MIN_VALUE;
}
}

protected final void initE_NXTSTENDD(String s) {
if (!s.trim().isEmpty()) {
E_NXTSTENDD = Byte.parseByte(s);
} else {
E_NXTSTENDD = Byte.MIN_VALUE;
}
}

protected final void initE_NXTSTENDM(String s) {
if (!s.trim().isEmpty()) {
E_NXTSTENDM = Byte.parseByte(s);
} else {
E_NXTSTENDM = Byte.MIN_VALUE;
}
}

protected final void initE_NXTSTENDY4(String s) {
if (!s.trim().isEmpty()) {
E_NXTSTENDY4 = Short.parseShort(s);
} else {
E_NXTSTENDY4 = Short.MIN_VALUE;
}
}

protected final void initE_OCIMPA(String s) {
if (!s.trim().isEmpty()) {
E_OCIMPA = Byte.parseByte(s);
} else {
E_OCIMPA = Byte.MIN_VALUE;
}
}

protected final void initE_OCIMPB(String s) {
if (!s.trim().isEmpty()) {
E_OCIMPB = Byte.parseByte(s);
} else {
E_OCIMPB = Byte.MIN_VALUE;
}
}

protected final void initE_OCIMPE(String s) {
if (!s.trim().isEmpty()) {
E_OCIMPE = Byte.parseByte(s);
} else {
E_OCIMPE = Byte.MIN_VALUE;
}
}

protected final void initE_OCIMPF(String s) {
if (!s.trim().isEmpty()) {
E_OCIMPF = Byte.parseByte(s);
} else {
E_OCIMPF = Byte.MIN_VALUE;
}
}

protected final void initE_OCIMPI(String s) {
if (!s.trim().isEmpty()) {
E_OCIMPI = Byte.parseByte(s);
} else {
E_OCIMPI = Byte.MIN_VALUE;
}
}

protected final void initE_OCIMPK(String s) {
if (!s.trim().isEmpty()) {
E_OCIMPK = Byte.parseByte(s);
} else {
E_OCIMPK = Byte.MIN_VALUE;
}
}

protected final void initE_OCIMPL(String s) {
if (!s.trim().isEmpty()) {
E_OCIMPL = Byte.parseByte(s);
} else {
E_OCIMPL = Byte.MIN_VALUE;
}
}

protected final void initE_OHCH16(String s) {
if (!s.trim().isEmpty()) {
E_OHCH16 = Byte.parseByte(s);
} else {
E_OHCH16 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT31(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT31 = Byte.parseByte(s);
} else {
E_OLYMACT31 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT32(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT32 = Byte.parseByte(s);
} else {
E_OLYMACT32 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT33(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT33 = Byte.parseByte(s);
} else {
E_OLYMACT33 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT34(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT34 = Byte.parseByte(s);
} else {
E_OLYMACT34 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT35(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT35 = Byte.parseByte(s);
} else {
E_OLYMACT35 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT36(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT36 = Byte.parseByte(s);
} else {
E_OLYMACT36 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT37(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT37 = Byte.parseByte(s);
} else {
E_OLYMACT37 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT38(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT38 = Byte.parseByte(s);
} else {
E_OLYMACT38 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT396(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT396 = Byte.parseByte(s);
} else {
E_OLYMACT396 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMACT398(String s) {
if (!s.trim().isEmpty()) {
E_OLYMACT398 = Byte.parseByte(s);
} else {
E_OLYMACT398 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMPAS31(String s) {
if (!s.trim().isEmpty()) {
E_OLYMPAS31 = Byte.parseByte(s);
} else {
E_OLYMPAS31 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMPAS32(String s) {
if (!s.trim().isEmpty()) {
E_OLYMPAS32 = Byte.parseByte(s);
} else {
E_OLYMPAS32 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMPAS33(String s) {
if (!s.trim().isEmpty()) {
E_OLYMPAS33 = Byte.parseByte(s);
} else {
E_OLYMPAS33 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMPAS34(String s) {
if (!s.trim().isEmpty()) {
E_OLYMPAS34 = Byte.parseByte(s);
} else {
E_OLYMPAS34 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMPAS35(String s) {
if (!s.trim().isEmpty()) {
E_OLYMPAS35 = Byte.parseByte(s);
} else {
E_OLYMPAS35 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMPAS396(String s) {
if (!s.trim().isEmpty()) {
E_OLYMPAS396 = Byte.parseByte(s);
} else {
E_OLYMPAS396 = Byte.MIN_VALUE;
}
}

protected final void initE_OLYMPAS398(String s) {
if (!s.trim().isEmpty()) {
E_OLYMPAS398 = Byte.parseByte(s);
} else {
E_OLYMPAS398 = Byte.MIN_VALUE;
}
}

protected final void initE_OPRLG(String s) {
if (!s.trim().isEmpty()) {
E_OPRLG = Byte.parseByte(s);
} else {
E_OPRLG = Byte.MIN_VALUE;
}
}

protected final void initE_OPRLG0(String s) {
if (!s.trim().isEmpty()) {
E_OPRLG0 = Byte.parseByte(s);
} else {
E_OPRLG0 = Byte.MIN_VALUE;
}
}

protected final void initE_OPRLG0NI(String s) {
if (!s.trim().isEmpty()) {
E_OPRLG0NI = Byte.parseByte(s);
} else {
E_OPRLG0NI = Byte.MIN_VALUE;
}
}

protected final void initE_OPRLG1(String s) {
if (!s.trim().isEmpty()) {
E_OPRLG1 = Byte.parseByte(s);
} else {
E_OPRLG1 = Byte.MIN_VALUE;
}
}

protected final void initE_ORIGADD(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_ORIGADD = false;
} else {
E_ORIGADD = true;
}
}
}

protected final void initE_OTHCONT(String s) {
if (!s.trim().isEmpty()) {
E_OTHCONT = Byte.parseByte(s);
} else {
E_OTHCONT = Byte.MIN_VALUE;
}
}

protected final void initE_OVTNSA(String s) {
if (!s.trim().isEmpty()) {
E_OVTNSA = Byte.parseByte(s);
} else {
E_OVTNSA = Byte.MIN_VALUE;
}
}

protected final void initE_OVTPAY(String s) {
if (!s.trim().isEmpty()) {
E_OVTPAY = Byte.parseByte(s);
} else {
E_OVTPAY = Byte.MIN_VALUE;
}
}

protected final void initE_OVTRATE(String s) {
if (!s.trim().isEmpty()) {
E_OVTRATE = Double.parseDouble(s);
} else {
E_OVTRATE = Double.NaN;
}
}

protected final void initE_OVTREST(String s) {
if (!s.trim().isEmpty()) {
E_OVTREST = Byte.parseByte(s);
} else {
E_OVTREST = Byte.MIN_VALUE;
}
}

protected final void initE_PAAGE(String s) {
if (!s.trim().isEmpty()) {
E_PAAGE = Byte.parseByte(s);
} else {
E_PAAGE = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID1(String s) {
if (!s.trim().isEmpty()) {
E_PAAID1 = Byte.parseByte(s);
} else {
E_PAAID1 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID2(String s) {
if (!s.trim().isEmpty()) {
E_PAAID2 = Byte.parseByte(s);
} else {
E_PAAID2 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID3(String s) {
if (!s.trim().isEmpty()) {
E_PAAID3 = Byte.parseByte(s);
} else {
E_PAAID3 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID4(String s) {
if (!s.trim().isEmpty()) {
E_PAAID4 = Byte.parseByte(s);
} else {
E_PAAID4 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID5(String s) {
if (!s.trim().isEmpty()) {
E_PAAID5 = Byte.parseByte(s);
} else {
E_PAAID5 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID6(String s) {
if (!s.trim().isEmpty()) {
E_PAAID6 = Byte.parseByte(s);
} else {
E_PAAID6 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID7(String s) {
if (!s.trim().isEmpty()) {
E_PAAID7 = Byte.parseByte(s);
} else {
E_PAAID7 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID8(String s) {
if (!s.trim().isEmpty()) {
E_PAAID8 = Byte.parseByte(s);
} else {
E_PAAID8 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID96(String s) {
if (!s.trim().isEmpty()) {
E_PAAID96 = Byte.parseByte(s);
} else {
E_PAAID96 = Byte.MIN_VALUE;
}
}

protected final void initE_PAAID97(String s) {
if (!s.trim().isEmpty()) {
E_PAAID97 = Byte.parseByte(s);
} else {
E_PAAID97 = Byte.MIN_VALUE;
}
}

protected final void initE_PACOB(String s) {
if (!s.trim().isEmpty()) {
E_PACOB = Byte.parseByte(s);
} else {
E_PACOB = Byte.MIN_VALUE;
}
}

protected final void initE_PACON(String s) {
if (!s.trim().isEmpty()) {
E_PACON = Byte.parseByte(s);
} else {
E_PACON = Byte.MIN_VALUE;
}
}

protected final void initE_PAFAR(String s) {
if (!s.trim().isEmpty()) {
E_PAFAR = Byte.parseByte(s);
} else {
E_PAFAR = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU1(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU1 = Byte.parseByte(s);
} else {
E_PAIDU1 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU2(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU2 = Byte.parseByte(s);
} else {
E_PAIDU2 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU3(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU3 = Byte.parseByte(s);
} else {
E_PAIDU3 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU4(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU4 = Byte.parseByte(s);
} else {
E_PAIDU4 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU5(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU5 = Byte.parseByte(s);
} else {
E_PAIDU5 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU6(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU6 = Byte.parseByte(s);
} else {
E_PAIDU6 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU7(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU7 = Byte.parseByte(s);
} else {
E_PAIDU7 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU8(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU8 = Byte.parseByte(s);
} else {
E_PAIDU8 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU96(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU96 = Byte.parseByte(s);
} else {
E_PAIDU96 = Byte.MIN_VALUE;
}
}

protected final void initE_PAIDU97(String s) {
if (!s.trim().isEmpty()) {
E_PAIDU97 = Byte.parseByte(s);
} else {
E_PAIDU97 = Byte.MIN_VALUE;
}
}

protected final void initE_PAJU(String s) {
if (!s.trim().isEmpty()) {
E_PAJU = Byte.parseByte(s);
} else {
E_PAJU = Byte.MIN_VALUE;
}
}

protected final void initE_PALONE(String s) {
if (!s.trim().isEmpty()) {
E_PALONE = Byte.parseByte(s);
} else {
E_PALONE = Byte.MIN_VALUE;
}
}

protected final void initE_PAMOSTCON(String s) {
if (!s.trim().isEmpty()) {
E_PAMOSTCON = Byte.parseByte(s);
} else {
E_PAMOSTCON = Byte.MIN_VALUE;
}
}

protected final void initE_PANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
E_PANSSEC5_DV = Byte.parseByte(s);
} else {
E_PANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initE_PARCHILD(String s) {
if (!s.trim().isEmpty()) {
E_PARCHILD = Byte.parseByte(s);
} else {
E_PARCHILD = Byte.MIN_VALUE;
}
}

protected final void initE_PAREVE(String s) {
if (!s.trim().isEmpty()) {
E_PAREVE = Byte.parseByte(s);
} else {
E_PAREVE = Byte.MIN_VALUE;
}
}

protected final void initE_PARMAR(String s) {
if (!s.trim().isEmpty()) {
E_PARMAR = Byte.parseByte(s);
} else {
E_PARMAR = Byte.MIN_VALUE;
}
}

protected final void initE_PARSCH(String s) {
if (!s.trim().isEmpty()) {
E_PARSCH = Byte.parseByte(s);
} else {
E_PARSCH = Byte.MIN_VALUE;
}
}

protected final void initE_PASEE(String s) {
if (!s.trim().isEmpty()) {
E_PASEE = Byte.parseByte(s);
} else {
E_PASEE = Byte.MIN_VALUE;
}
}

protected final void initE_PASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
E_PASOC00_CC = Short.parseShort(s);
} else {
E_PASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initE_PASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
E_PASOC10_CC = Short.parseShort(s);
} else {
E_PASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initE_PASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
E_PASOC90_CC = Byte.parseByte(s);
} else {
E_PASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initE_PAYGL(String s) {
if (!s.trim().isEmpty()) {
E_PAYGL = Integer.parseInt(s);
} else {
E_PAYGL = Integer.MIN_VALUE;
}
}

protected final void initE_PAYGU_DV(String s) {
if (!s.trim().isEmpty()) {
E_PAYGU_DV = Double.parseDouble(s);
} else {
E_PAYGU_DV = Double.NaN;
}
}

protected final void initE_PAYGU_IF(String s) {
if (!s.trim().isEmpty()) {
E_PAYGU_IF = Byte.parseByte(s);
} else {
E_PAYGU_IF = Byte.MIN_VALUE;
}
}

protected final void initE_PAYGWC(String s) {
if (!s.trim().isEmpty()) {
E_PAYGWC = Byte.parseByte(s);
} else {
E_PAYGWC = Byte.MIN_VALUE;
}
}

protected final void initE_PAYG_DV(String s) {
if (!s.trim().isEmpty()) {
E_PAYG_DV = Double.parseDouble(s);
} else {
E_PAYG_DV = Double.NaN;
}
}

protected final void initE_PAYNL(String s) {
if (!s.trim().isEmpty()) {
E_PAYNL = Integer.parseInt(s);
} else {
E_PAYNL = Integer.MIN_VALUE;
}
}

protected final void initE_PAYNU_DV(String s) {
if (!s.trim().isEmpty()) {
E_PAYNU_DV = Double.parseDouble(s);
} else {
E_PAYNU_DV = Double.NaN;
}
}

protected final void initE_PAYNU_IF(String s) {
if (!s.trim().isEmpty()) {
E_PAYNU_IF = Byte.parseByte(s);
} else {
E_PAYNU_IF = Byte.MIN_VALUE;
}
}

protected final void initE_PAYNWC(String s) {
if (!s.trim().isEmpty()) {
E_PAYNWC = Byte.parseByte(s);
} else {
E_PAYNWC = Byte.MIN_VALUE;
}
}

protected final void initE_PAYN_DV(String s) {
if (!s.trim().isEmpty()) {
E_PAYN_DV = Double.parseDouble(s);
} else {
E_PAYN_DV = Double.NaN;
}
}

protected final void initE_PAYRUK(String s) {
if (!s.trim().isEmpty()) {
E_PAYRUK = Byte.parseByte(s);
} else {
E_PAYRUK = Byte.MIN_VALUE;
}
}

protected final void initE_PAYTYP(String s) {
if (!s.trim().isEmpty()) {
E_PAYTYP = Byte.parseByte(s);
} else {
E_PAYTYP = Byte.MIN_VALUE;
}
}

protected final void initE_PAYU(String s) {
if (!s.trim().isEmpty()) {
E_PAYU = Integer.parseInt(s);
} else {
E_PAYU = Integer.MIN_VALUE;
}
}

protected final void initE_PAYUG(String s) {
if (!s.trim().isEmpty()) {
E_PAYUG = Byte.parseByte(s);
} else {
E_PAYUG = Byte.MIN_VALUE;
}
}

protected final void initE_PAYUSL(String s) {
if (!s.trim().isEmpty()) {
E_PAYUSL = Byte.parseByte(s);
} else {
E_PAYUSL = Byte.MIN_VALUE;
}
}

protected final void initE_PAYUWC(String s) {
if (!s.trim().isEmpty()) {
E_PAYUWC = Byte.parseByte(s);
} else {
E_PAYUWC = Byte.MIN_VALUE;
}
}

protected final void initE_PAYU_DV(String s) {
if (!s.trim().isEmpty()) {
E_PAYU_DV = Double.parseDouble(s);
} else {
E_PAYU_DV = Double.NaN;
}
}

protected final void initE_PBNFT1(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT1 = Byte.parseByte(s);
} else {
E_PBNFT1 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT10(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT10 = Byte.parseByte(s);
} else {
E_PBNFT10 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT11(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT11 = Byte.parseByte(s);
} else {
E_PBNFT11 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT12(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT12 = Byte.parseByte(s);
} else {
E_PBNFT12 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT13(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT13 = Byte.parseByte(s);
} else {
E_PBNFT13 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT2(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT2 = Byte.parseByte(s);
} else {
E_PBNFT2 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT3(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT3 = Byte.parseByte(s);
} else {
E_PBNFT3 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT4(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT4 = Byte.parseByte(s);
} else {
E_PBNFT4 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT5(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT5 = Byte.parseByte(s);
} else {
E_PBNFT5 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT6(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT6 = Byte.parseByte(s);
} else {
E_PBNFT6 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT7(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT7 = Byte.parseByte(s);
} else {
E_PBNFT7 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT8(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT8 = Byte.parseByte(s);
} else {
E_PBNFT8 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT9(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT9 = Byte.parseByte(s);
} else {
E_PBNFT9 = Byte.MIN_VALUE;
}
}

protected final void initE_PBNFT96(String s) {
if (!s.trim().isEmpty()) {
E_PBNFT96 = Byte.parseByte(s);
} else {
E_PBNFT96 = Byte.MIN_VALUE;
}
}

protected final void initE_PENMEX(String s) {
if (!s.trim().isEmpty()) {
E_PENMEX = Byte.parseByte(s);
} else {
E_PENMEX = Byte.MIN_VALUE;
}
}

protected final void initE_PENSIONER_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_PENSIONER_DV = false;
} else {
E_PENSIONER_DV = true;
}
}
}

protected final void initE_PJBPTFT(String s) {
if (!s.trim().isEmpty()) {
E_PJBPTFT = Byte.parseByte(s);
} else {
E_PJBPTFT = Byte.MIN_VALUE;
}
}

protected final void initE_PJSPTFT(String s) {
if (!s.trim().isEmpty()) {
E_PJSPTFT = Byte.parseByte(s);
} else {
E_PJSPTFT = Byte.MIN_VALUE;
}
}

protected final void initE_PJULK4WK(String s) {
if (!s.trim().isEmpty()) {
E_PJULK4WK = Byte.parseByte(s);
} else {
E_PJULK4WK = Byte.MIN_VALUE;
}
}

protected final void initE_PLBORNC(String s) {
if (!s.trim().isEmpty()) {
E_PLBORNC = Byte.parseByte(s);
} else {
E_PLBORNC = Byte.MIN_VALUE;
}
}

protected final void initE_PLIVPAR(String s) {
if (!s.trim().isEmpty()) {
E_PLIVPAR = Byte.parseByte(s);
} else {
E_PLIVPAR = Byte.MIN_VALUE;
}
}

protected final void initE_PLNOWM(String s) {
if (!s.trim().isEmpty()) {
E_PLNOWM = Byte.parseByte(s);
} else {
E_PLNOWM = Byte.MIN_VALUE;
}
}

protected final void initE_PLNOWY4(String s) {
if (!s.trim().isEmpty()) {
E_PLNOWY4 = Short.parseShort(s);
} else {
E_PLNOWY4 = Short.MIN_VALUE;
}
}

protected final void initE_PN1PID(String s) {
if (!s.trim().isEmpty()) {
E_PN1PID = Integer.parseInt(s);
} else {
E_PN1PID = Integer.MIN_VALUE;
}
}

protected final void initE_PN1PNO(String s) {
if (!s.trim().isEmpty()) {
E_PN1PNO = Byte.parseByte(s);
} else {
E_PN1PNO = Byte.MIN_VALUE;
}
}

protected final void initE_PN1SEX(String s) {
if (!s.trim().isEmpty()) {
E_PN1SEX = Byte.parseByte(s);
} else {
E_PN1SEX = Byte.MIN_VALUE;
}
}

protected final void initE_PN2PID(String s) {
if (!s.trim().isEmpty()) {
E_PN2PID = Integer.parseInt(s);
} else {
E_PN2PID = Integer.MIN_VALUE;
}
}

protected final void initE_PN2PNO(String s) {
if (!s.trim().isEmpty()) {
E_PN2PNO = Byte.parseByte(s);
} else {
E_PN2PNO = Byte.MIN_VALUE;
}
}

protected final void initE_PN2SEX(String s) {
if (!s.trim().isEmpty()) {
E_PN2SEX = Byte.parseByte(s);
} else {
E_PN2SEX = Byte.MIN_VALUE;
}
}

protected final void initE_PNO(String s) {
if (!s.trim().isEmpty()) {
E_PNO = Byte.parseByte(s);
} else {
E_PNO = Byte.MIN_VALUE;
}
}

protected final void initE_PNS1PID(String s) {
if (!s.trim().isEmpty()) {
E_PNS1PID = Integer.parseInt(s);
} else {
E_PNS1PID = Integer.MIN_VALUE;
}
}

protected final void initE_PNS1PNO(String s) {
if (!s.trim().isEmpty()) {
E_PNS1PNO = Byte.parseByte(s);
} else {
E_PNS1PNO = Byte.MIN_VALUE;
}
}

protected final void initE_PNS1SEX(String s) {
if (!s.trim().isEmpty()) {
E_PNS1SEX = Byte.parseByte(s);
} else {
E_PNS1SEX = Byte.MIN_VALUE;
}
}

protected final void initE_PNS2PID(String s) {
if (!s.trim().isEmpty()) {
E_PNS2PID = Integer.parseInt(s);
} else {
E_PNS2PID = Integer.MIN_VALUE;
}
}

protected final void initE_PNS2PNO(String s) {
if (!s.trim().isEmpty()) {
E_PNS2PNO = Byte.parseByte(s);
} else {
E_PNS2PNO = Byte.MIN_VALUE;
}
}

protected final void initE_PNS2SEX(String s) {
if (!s.trim().isEmpty()) {
E_PNS2SEX = Byte.parseByte(s);
} else {
E_PNS2SEX = Byte.MIN_VALUE;
}
}

protected final void initE_PPENSIONER(String s) {
if (!s.trim().isEmpty()) {
E_PPENSIONER = Byte.parseByte(s);
} else {
E_PPENSIONER = Byte.MIN_VALUE;
}
}

protected final void initE_PPID(String s) {
if (!s.trim().isEmpty()) {
E_PPID = Integer.parseInt(s);
} else {
E_PPID = Integer.MIN_VALUE;
}
}

protected final void initE_PPNO(String s) {
if (!s.trim().isEmpty()) {
E_PPNO = Byte.parseByte(s);
} else {
E_PPNO = Byte.MIN_VALUE;
}
}

protected final void initE_PPPEX(String s) {
if (!s.trim().isEmpty()) {
E_PPPEX = Byte.parseByte(s);
} else {
E_PPPEX = Byte.MIN_VALUE;
}
}

protected final void initE_PPPEXM(String s) {
if (!s.trim().isEmpty()) {
E_PPPEXM = Byte.parseByte(s);
} else {
E_PPPEXM = Byte.MIN_VALUE;
}
}

protected final void initE_PPSEX(String s) {
if (!s.trim().isEmpty()) {
E_PPSEX = Byte.parseByte(s);
} else {
E_PPSEX = Byte.MIN_VALUE;
}
}

protected final void initE_PRAISEKID(String s) {
if (!s.trim().isEmpty()) {
E_PRAISEKID = Byte.parseByte(s);
} else {
E_PRAISEKID = Byte.MIN_VALUE;
}
}

protected final void initE_PREARN(String s) {
if (!s.trim().isEmpty()) {
E_PREARN = Byte.parseByte(s);
} else {
E_PREARN = Byte.MIN_VALUE;
}
}

protected final void initE_PREARNA(String s) {
if (!s.trim().isEmpty()) {
E_PREARNA = Byte.parseByte(s);
} else {
E_PREARNA = Byte.MIN_VALUE;
}
}

protected final void initE_PREARNW(String s) {
if (!s.trim().isEmpty()) {
E_PREARNW = Byte.parseByte(s);
} else {
E_PREARNW = Byte.MIN_VALUE;
}
}

protected final void initE_PREASON(String s) {
if (!s.trim().isEmpty()) {
E_PREASON = Byte.parseByte(s);
} else {
E_PREASON = Byte.MIN_VALUE;
}
}

protected final void initE_PREG(String s) {
if (!s.trim().isEmpty()) {
E_PREG = Byte.parseByte(s);
} else {
E_PREG = Byte.MIN_VALUE;
}
}

protected final void initE_PREGEND1(String s) {
if (!s.trim().isEmpty()) {
E_PREGEND1 = Byte.parseByte(s);
} else {
E_PREGEND1 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGEND2(String s) {
if (!s.trim().isEmpty()) {
E_PREGEND2 = Byte.parseByte(s);
} else {
E_PREGEND2 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGEND3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_PREGEND3 = false;
} else {
E_PREGEND3 = true;
}
}
}

protected final void initE_PREGFERT1(String s) {
if (!s.trim().isEmpty()) {
E_PREGFERT1 = Byte.parseByte(s);
} else {
E_PREGFERT1 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGFERT2(String s) {
if (!s.trim().isEmpty()) {
E_PREGFERT2 = Byte.parseByte(s);
} else {
E_PREGFERT2 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGFERT3(String s) {
if (!s.trim().isEmpty()) {
E_PREGFERT3 = Byte.parseByte(s);
} else {
E_PREGFERT3 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGM1(String s) {
if (!s.trim().isEmpty()) {
E_PREGM1 = Byte.parseByte(s);
} else {
E_PREGM1 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGM2(String s) {
if (!s.trim().isEmpty()) {
E_PREGM2 = Byte.parseByte(s);
} else {
E_PREGM2 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGM3(String s) {
if (!s.trim().isEmpty()) {
E_PREGM3 = Byte.parseByte(s);
} else {
E_PREGM3 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGOUT1(String s) {
if (!s.trim().isEmpty()) {
E_PREGOUT1 = Byte.parseByte(s);
} else {
E_PREGOUT1 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGOUT2(String s) {
if (!s.trim().isEmpty()) {
E_PREGOUT2 = Byte.parseByte(s);
} else {
E_PREGOUT2 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGOUT3(String s) {
if (!s.trim().isEmpty()) {
E_PREGOUT3 = Byte.parseByte(s);
} else {
E_PREGOUT3 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMK11(String s) {
if (!s.trim().isEmpty()) {
E_PREGSMK11 = Byte.parseByte(s);
} else {
E_PREGSMK11 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMK12(String s) {
if (!s.trim().isEmpty()) {
E_PREGSMK12 = Byte.parseByte(s);
} else {
E_PREGSMK12 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMK13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_PREGSMK13 = false;
} else {
E_PREGSMK13 = true;
}
}
}

protected final void initE_PREGSMK21(String s) {
if (!s.trim().isEmpty()) {
E_PREGSMK21 = Byte.parseByte(s);
} else {
E_PREGSMK21 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMK22(String s) {
if (!s.trim().isEmpty()) {
E_PREGSMK22 = Byte.parseByte(s);
} else {
E_PREGSMK22 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMK23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_PREGSMK23 = false;
} else {
E_PREGSMK23 = true;
}
}
}

protected final void initE_PREGSMK31(String s) {
if (!s.trim().isEmpty()) {
E_PREGSMK31 = Byte.parseByte(s);
} else {
E_PREGSMK31 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMK32(String s) {
if (!s.trim().isEmpty()) {
E_PREGSMK32 = Byte.parseByte(s);
} else {
E_PREGSMK32 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMK33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_PREGSMK33 = false;
} else {
E_PREGSMK33 = true;
}
}
}

protected final void initE_PREGSMOKE1(String s) {
if (!s.trim().isEmpty()) {
E_PREGSMOKE1 = Byte.parseByte(s);
} else {
E_PREGSMOKE1 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMOKE2(String s) {
if (!s.trim().isEmpty()) {
E_PREGSMOKE2 = Byte.parseByte(s);
} else {
E_PREGSMOKE2 = Byte.MIN_VALUE;
}
}

protected final void initE_PREGSMOKE3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_PREGSMOKE3 = false;
} else {
E_PREGSMOKE3 = true;
}
}
}

protected final void initE_PREGY41(String s) {
if (!s.trim().isEmpty()) {
E_PREGY41 = Short.parseShort(s);
} else {
E_PREGY41 = Short.MIN_VALUE;
}
}

protected final void initE_PREGY42(String s) {
if (!s.trim().isEmpty()) {
E_PREGY42 = Short.parseShort(s);
} else {
E_PREGY42 = Short.MIN_VALUE;
}
}

protected final void initE_PREGY43(String s) {
if (!s.trim().isEmpty()) {
E_PREGY43 = Short.parseShort(s);
} else {
E_PREGY43 = Short.MIN_VALUE;
}
}

protected final void initE_PREL(String s) {
if (!s.trim().isEmpty()) {
E_PREL = Byte.parseByte(s);
} else {
E_PREL = Byte.MIN_VALUE;
}
}

protected final void initE_PRFITB(String s) {
if (!s.trim().isEmpty()) {
E_PRFITB = Byte.parseByte(s);
} else {
E_PRFITB = Byte.MIN_VALUE;
}
}

protected final void initE_PRFITBA(String s) {
if (!s.trim().isEmpty()) {
E_PRFITBA = Byte.parseByte(s);
} else {
E_PRFITBA = Byte.MIN_VALUE;
}
}

protected final void initE_PRFITBW(String s) {
if (!s.trim().isEmpty()) {
E_PRFITBW = Byte.parseByte(s);
} else {
E_PRFITBW = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE10(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE10 = Byte.parseByte(s);
} else {
E_PRIDE10 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE11(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE11 = Byte.parseByte(s);
} else {
E_PRIDE11 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE12(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE12 = Byte.parseByte(s);
} else {
E_PRIDE12 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE13(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE13 = Byte.parseByte(s);
} else {
E_PRIDE13 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE14(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE14 = Byte.parseByte(s);
} else {
E_PRIDE14 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE2(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE2 = Byte.parseByte(s);
} else {
E_PRIDE2 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE4A(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE4A = Byte.parseByte(s);
} else {
E_PRIDE4A = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE4B(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE4B = Byte.parseByte(s);
} else {
E_PRIDE4B = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE5(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE5 = Byte.parseByte(s);
} else {
E_PRIDE5 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE6(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE6 = Byte.parseByte(s);
} else {
E_PRIDE6 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE7(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE7 = Byte.parseByte(s);
} else {
E_PRIDE7 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE8(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE8 = Byte.parseByte(s);
} else {
E_PRIDE8 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIDE9(String s) {
if (!s.trim().isEmpty()) {
E_PRIDE9 = Byte.parseByte(s);
} else {
E_PRIDE9 = Byte.MIN_VALUE;
}
}

protected final void initE_PRIPN(String s) {
if (!s.trim().isEmpty()) {
E_PRIPN = Byte.parseByte(s);
} else {
E_PRIPN = Byte.MIN_VALUE;
}
}

protected final void initE_PS1(String s) {
if (!s.trim().isEmpty()) {
E_PS1 = Byte.parseByte(s);
} else {
E_PS1 = Byte.MIN_VALUE;
}
}

protected final void initE_PS10(String s) {
if (!s.trim().isEmpty()) {
E_PS10 = Byte.parseByte(s);
} else {
E_PS10 = Byte.MIN_VALUE;
}
}

protected final void initE_PS11(String s) {
if (!s.trim().isEmpty()) {
E_PS11 = Byte.parseByte(s);
} else {
E_PS11 = Byte.MIN_VALUE;
}
}

protected final void initE_PS12(String s) {
if (!s.trim().isEmpty()) {
E_PS12 = Byte.parseByte(s);
} else {
E_PS12 = Byte.MIN_VALUE;
}
}

protected final void initE_PS13(String s) {
if (!s.trim().isEmpty()) {
E_PS13 = Byte.parseByte(s);
} else {
E_PS13 = Byte.MIN_VALUE;
}
}

protected final void initE_PS14(String s) {
if (!s.trim().isEmpty()) {
E_PS14 = Byte.parseByte(s);
} else {
E_PS14 = Byte.MIN_VALUE;
}
}

protected final void initE_PS15(String s) {
if (!s.trim().isEmpty()) {
E_PS15 = Byte.parseByte(s);
} else {
E_PS15 = Byte.MIN_VALUE;
}
}

protected final void initE_PS16(String s) {
if (!s.trim().isEmpty()) {
E_PS16 = Byte.parseByte(s);
} else {
E_PS16 = Byte.MIN_VALUE;
}
}

protected final void initE_PS17(String s) {
if (!s.trim().isEmpty()) {
E_PS17 = Byte.parseByte(s);
} else {
E_PS17 = Byte.MIN_VALUE;
}
}

protected final void initE_PS18(String s) {
if (!s.trim().isEmpty()) {
E_PS18 = Byte.parseByte(s);
} else {
E_PS18 = Byte.MIN_VALUE;
}
}

protected final void initE_PS19(String s) {
if (!s.trim().isEmpty()) {
E_PS19 = Byte.parseByte(s);
} else {
E_PS19 = Byte.MIN_VALUE;
}
}

protected final void initE_PS2(String s) {
if (!s.trim().isEmpty()) {
E_PS2 = Byte.parseByte(s);
} else {
E_PS2 = Byte.MIN_VALUE;
}
}

protected final void initE_PS20(String s) {
if (!s.trim().isEmpty()) {
E_PS20 = Byte.parseByte(s);
} else {
E_PS20 = Byte.MIN_VALUE;
}
}

protected final void initE_PS21(String s) {
if (!s.trim().isEmpty()) {
E_PS21 = Byte.parseByte(s);
} else {
E_PS21 = Byte.MIN_VALUE;
}
}

protected final void initE_PS22(String s) {
if (!s.trim().isEmpty()) {
E_PS22 = Byte.parseByte(s);
} else {
E_PS22 = Byte.MIN_VALUE;
}
}

protected final void initE_PS23(String s) {
if (!s.trim().isEmpty()) {
E_PS23 = Byte.parseByte(s);
} else {
E_PS23 = Byte.MIN_VALUE;
}
}

protected final void initE_PS24(String s) {
if (!s.trim().isEmpty()) {
E_PS24 = Byte.parseByte(s);
} else {
E_PS24 = Byte.MIN_VALUE;
}
}

protected final void initE_PS25(String s) {
if (!s.trim().isEmpty()) {
E_PS25 = Byte.parseByte(s);
} else {
E_PS25 = Byte.MIN_VALUE;
}
}

protected final void initE_PS26(String s) {
if (!s.trim().isEmpty()) {
E_PS26 = Byte.parseByte(s);
} else {
E_PS26 = Byte.MIN_VALUE;
}
}

protected final void initE_PS27(String s) {
if (!s.trim().isEmpty()) {
E_PS27 = Byte.parseByte(s);
} else {
E_PS27 = Byte.MIN_VALUE;
}
}

protected final void initE_PS28(String s) {
if (!s.trim().isEmpty()) {
E_PS28 = Byte.parseByte(s);
} else {
E_PS28 = Byte.MIN_VALUE;
}
}

protected final void initE_PS29(String s) {
if (!s.trim().isEmpty()) {
E_PS29 = Byte.parseByte(s);
} else {
E_PS29 = Byte.MIN_VALUE;
}
}

protected final void initE_PS3(String s) {
if (!s.trim().isEmpty()) {
E_PS3 = Byte.parseByte(s);
} else {
E_PS3 = Byte.MIN_VALUE;
}
}

protected final void initE_PS30(String s) {
if (!s.trim().isEmpty()) {
E_PS30 = Byte.parseByte(s);
} else {
E_PS30 = Byte.MIN_VALUE;
}
}

protected final void initE_PS31(String s) {
if (!s.trim().isEmpty()) {
E_PS31 = Byte.parseByte(s);
} else {
E_PS31 = Byte.MIN_VALUE;
}
}

protected final void initE_PS32(String s) {
if (!s.trim().isEmpty()) {
E_PS32 = Byte.parseByte(s);
} else {
E_PS32 = Byte.MIN_VALUE;
}
}

protected final void initE_PS4(String s) {
if (!s.trim().isEmpty()) {
E_PS4 = Byte.parseByte(s);
} else {
E_PS4 = Byte.MIN_VALUE;
}
}

protected final void initE_PS5(String s) {
if (!s.trim().isEmpty()) {
E_PS5 = Byte.parseByte(s);
} else {
E_PS5 = Byte.MIN_VALUE;
}
}

protected final void initE_PS6(String s) {
if (!s.trim().isEmpty()) {
E_PS6 = Byte.parseByte(s);
} else {
E_PS6 = Byte.MIN_VALUE;
}
}

protected final void initE_PS7(String s) {
if (!s.trim().isEmpty()) {
E_PS7 = Byte.parseByte(s);
} else {
E_PS7 = Byte.MIN_VALUE;
}
}

protected final void initE_PS8(String s) {
if (!s.trim().isEmpty()) {
E_PS8 = Byte.parseByte(s);
} else {
E_PS8 = Byte.MIN_VALUE;
}
}

protected final void initE_PS9(String s) {
if (!s.trim().isEmpty()) {
E_PS9 = Byte.parseByte(s);
} else {
E_PS9 = Byte.MIN_VALUE;
}
}

protected final void initE_PSDQA_DV(String s) {
if (!s.trim().isEmpty()) {
E_PSDQA_DV = Byte.parseByte(s);
} else {
E_PSDQA_DV = Byte.MIN_VALUE;
}
}

protected final void initE_PSDQB_DV(String s) {
if (!s.trim().isEmpty()) {
E_PSDQB_DV = Byte.parseByte(s);
} else {
E_PSDQB_DV = Byte.MIN_VALUE;
}
}

protected final void initE_PSDQC_DV(String s) {
if (!s.trim().isEmpty()) {
E_PSDQC_DV = Byte.parseByte(s);
} else {
E_PSDQC_DV = Byte.MIN_VALUE;
}
}

protected final void initE_PSNUMCH(String s) {
if (!s.trim().isEmpty()) {
E_PSNUMCH = Byte.parseByte(s);
} else {
E_PSNUMCH = Byte.MIN_VALUE;
}
}

protected final void initE_PSU(String s) {
if (!s.trim().isEmpty()) {
E_PSU = Integer.parseInt(s);
} else {
E_PSU = Integer.MIN_VALUE;
}
}

protected final void initE_PYENRL(String s) {
if (!s.trim().isEmpty()) {
E_PYENRL = Byte.parseByte(s);
} else {
E_PYENRL = Byte.MIN_VALUE;
}
}

protected final void initE_QFHIGH(String s) {
if (!s.trim().isEmpty()) {
E_QFHIGH = Byte.parseByte(s);
} else {
E_QFHIGH = Byte.MIN_VALUE;
}
}

protected final void initE_QFHIGHFL_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_QFHIGHFL_DV = false;
} else {
E_QFHIGHFL_DV = true;
}
}
}

protected final void initE_QFHIGH_DV(String s) {
if (!s.trim().isEmpty()) {
E_QFHIGH_DV = Byte.parseByte(s);
} else {
E_QFHIGH_DV = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC1(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC1 = Byte.parseByte(s);
} else {
E_QFVOC1 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC10(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC10 = Byte.parseByte(s);
} else {
E_QFVOC10 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC11(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC11 = Byte.parseByte(s);
} else {
E_QFVOC11 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC12(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC12 = Byte.parseByte(s);
} else {
E_QFVOC12 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC13(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC13 = Byte.parseByte(s);
} else {
E_QFVOC13 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC14(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC14 = Byte.parseByte(s);
} else {
E_QFVOC14 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC15(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC15 = Byte.parseByte(s);
} else {
E_QFVOC15 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC2(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC2 = Byte.parseByte(s);
} else {
E_QFVOC2 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC3(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC3 = Byte.parseByte(s);
} else {
E_QFVOC3 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC4(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC4 = Byte.parseByte(s);
} else {
E_QFVOC4 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC5(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC5 = Byte.parseByte(s);
} else {
E_QFVOC5 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC6(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC6 = Byte.parseByte(s);
} else {
E_QFVOC6 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC7(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC7 = Byte.parseByte(s);
} else {
E_QFVOC7 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC8(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC8 = Byte.parseByte(s);
} else {
E_QFVOC8 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC9(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC9 = Byte.parseByte(s);
} else {
E_QFVOC9 = Byte.MIN_VALUE;
}
}

protected final void initE_QFVOC96(String s) {
if (!s.trim().isEmpty()) {
E_QFVOC96 = Byte.parseByte(s);
} else {
E_QFVOC96 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNE(String s) {
if (!s.trim().isEmpty()) {
E_QUALNE = Byte.parseByte(s);
} else {
E_QUALNE = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW1(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW1 = Byte.parseByte(s);
} else {
E_QUALNEW1 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW10(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW10 = Byte.parseByte(s);
} else {
E_QUALNEW10 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW11(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW11 = Byte.parseByte(s);
} else {
E_QUALNEW11 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW13(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW13 = Byte.parseByte(s);
} else {
E_QUALNEW13 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW15(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW15 = Byte.parseByte(s);
} else {
E_QUALNEW15 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW16(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW16 = Byte.parseByte(s);
} else {
E_QUALNEW16 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW17(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW17 = Byte.parseByte(s);
} else {
E_QUALNEW17 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW18(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW18 = Byte.parseByte(s);
} else {
E_QUALNEW18 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW19(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW19 = Byte.parseByte(s);
} else {
E_QUALNEW19 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW2(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW2 = Byte.parseByte(s);
} else {
E_QUALNEW2 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW20(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW20 = Byte.parseByte(s);
} else {
E_QUALNEW20 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW21(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW21 = Byte.parseByte(s);
} else {
E_QUALNEW21 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW22(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW22 = Byte.parseByte(s);
} else {
E_QUALNEW22 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW23(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW23 = Byte.parseByte(s);
} else {
E_QUALNEW23 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW24(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW24 = Byte.parseByte(s);
} else {
E_QUALNEW24 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW25(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW25 = Byte.parseByte(s);
} else {
E_QUALNEW25 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW26(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW26 = Byte.parseByte(s);
} else {
E_QUALNEW26 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW27(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW27 = Byte.parseByte(s);
} else {
E_QUALNEW27 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW28(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW28 = Byte.parseByte(s);
} else {
E_QUALNEW28 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW29(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW29 = Byte.parseByte(s);
} else {
E_QUALNEW29 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW3(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW3 = Byte.parseByte(s);
} else {
E_QUALNEW3 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW30(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW30 = Byte.parseByte(s);
} else {
E_QUALNEW30 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW31(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW31 = Byte.parseByte(s);
} else {
E_QUALNEW31 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW4(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW4 = Byte.parseByte(s);
} else {
E_QUALNEW4 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW6(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW6 = Byte.parseByte(s);
} else {
E_QUALNEW6 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW7(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW7 = Byte.parseByte(s);
} else {
E_QUALNEW7 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW8(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW8 = Byte.parseByte(s);
} else {
E_QUALNEW8 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALNEW9(String s) {
if (!s.trim().isEmpty()) {
E_QUALNEW9 = Byte.parseByte(s);
} else {
E_QUALNEW9 = Byte.MIN_VALUE;
}
}

protected final void initE_QUALOC(String s) {
if (!s.trim().isEmpty()) {
E_QUALOC = Byte.parseByte(s);
} else {
E_QUALOC = Byte.MIN_VALUE;
}
}

protected final void initE_QUARREL(String s) {
if (!s.trim().isEmpty()) {
E_QUARREL = Byte.parseByte(s);
} else {
E_QUARREL = Byte.MIN_VALUE;
}
}

protected final void initE_RACEL(String s) {
if (!s.trim().isEmpty()) {
E_RACEL = Byte.parseByte(s);
} else {
E_RACEL = Byte.MIN_VALUE;
}
}

protected final void initE_RACELAT(String s) {
if (!s.trim().isEmpty()) {
E_RACELAT = Byte.parseByte(s);
} else {
E_RACELAT = Byte.MIN_VALUE;
}
}

protected final void initE_RACELBT(String s) {
if (!s.trim().isEmpty()) {
E_RACELBT = Byte.parseByte(s);
} else {
E_RACELBT = Byte.MIN_VALUE;
}
}

protected final void initE_RACELMT(String s) {
if (!s.trim().isEmpty()) {
E_RACELMT = Byte.parseByte(s);
} else {
E_RACELMT = Byte.MIN_VALUE;
}
}

protected final void initE_RACELOT_CODE(String s) {
if (!s.trim().isEmpty()) {
E_RACELOT_CODE = Byte.parseByte(s);
} else {
E_RACELOT_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_RACELO_CODE(String s) {
if (!s.trim().isEmpty()) {
E_RACELO_CODE = Byte.parseByte(s);
} else {
E_RACELO_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_RACELT(String s) {
if (!s.trim().isEmpty()) {
E_RACELT = Byte.parseByte(s);
} else {
E_RACELT = Byte.MIN_VALUE;
}
}

protected final void initE_RACELWT(String s) {
if (!s.trim().isEmpty()) {
E_RACELWT = Byte.parseByte(s);
} else {
E_RACELWT = Byte.MIN_VALUE;
}
}

protected final void initE_RACEL_DV(String s) {
if (!s.trim().isEmpty()) {
E_RACEL_DV = Byte.parseByte(s);
} else {
E_RACEL_DV = Byte.MIN_VALUE;
}
}

protected final void initE_RACH16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_RACH16_DV = false;
} else {
E_RACH16_DV = true;
}
}
}

protected final void initE_READDIF(String s) {
if (!s.trim().isEmpty()) {
E_READDIF = Byte.parseByte(s);
} else {
E_READDIF = Byte.MIN_VALUE;
}
}

protected final void initE_REASEND1(String s) {
if (!s.trim().isEmpty()) {
E_REASEND1 = Byte.parseByte(s);
} else {
E_REASEND1 = Byte.MIN_VALUE;
}
}

protected final void initE_REASEND2(String s) {
if (!s.trim().isEmpty()) {
E_REASEND2 = Byte.parseByte(s);
} else {
E_REASEND2 = Byte.MIN_VALUE;
}
}

protected final void initE_REASEND3(String s) {
if (!s.trim().isEmpty()) {
E_REASEND3 = Byte.parseByte(s);
} else {
E_REASEND3 = Byte.MIN_VALUE;
}
}

protected final void initE_REASEND4(String s) {
if (!s.trim().isEmpty()) {
E_REASEND4 = Byte.parseByte(s);
} else {
E_REASEND4 = Byte.MIN_VALUE;
}
}

protected final void initE_REASEND5(String s) {
if (!s.trim().isEmpty()) {
E_REASEND5 = Byte.parseByte(s);
} else {
E_REASEND5 = Byte.MIN_VALUE;
}
}

protected final void initE_REASEND6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_REASEND6 = false;
} else {
E_REASEND6 = true;
}
}
}

protected final void initE_RELKID(String s) {
if (!s.trim().isEmpty()) {
E_RELKID = Byte.parseByte(s);
} else {
E_RELKID = Byte.MIN_VALUE;
}
}

protected final void initE_RELUP(String s) {
if (!s.trim().isEmpty()) {
E_RELUP = Byte.parseByte(s);
} else {
E_RELUP = Byte.MIN_VALUE;
}
}

protected final void initE_REMAIL_CODE(String s) {
if (!s.trim().isEmpty()) {
E_REMAIL_CODE = Byte.parseByte(s);
} else {
E_REMAIL_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_1 = Byte.parseByte(s);
} else {
E_RESATTACKED1_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_10 = Byte.parseByte(s);
} else {
E_RESATTACKED1_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_11 = Byte.parseByte(s);
} else {
E_RESATTACKED1_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_12 = Byte.parseByte(s);
} else {
E_RESATTACKED1_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_2 = Byte.parseByte(s);
} else {
E_RESATTACKED1_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_3 = Byte.parseByte(s);
} else {
E_RESATTACKED1_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_4 = Byte.parseByte(s);
} else {
E_RESATTACKED1_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_5 = Byte.parseByte(s);
} else {
E_RESATTACKED1_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_6 = Byte.parseByte(s);
} else {
E_RESATTACKED1_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED1_7 = false;
} else {
E_RESATTACKED1_7 = true;
}
}
}

protected final void initE_RESATTACKED1_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_8 = Byte.parseByte(s);
} else {
E_RESATTACKED1_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED1_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED1_9 = Byte.parseByte(s);
} else {
E_RESATTACKED1_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_1 = Byte.parseByte(s);
} else {
E_RESATTACKED2_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_10 = Byte.parseByte(s);
} else {
E_RESATTACKED2_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_11 = Byte.parseByte(s);
} else {
E_RESATTACKED2_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_12 = Byte.parseByte(s);
} else {
E_RESATTACKED2_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_2 = Byte.parseByte(s);
} else {
E_RESATTACKED2_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_3 = Byte.parseByte(s);
} else {
E_RESATTACKED2_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_4 = Byte.parseByte(s);
} else {
E_RESATTACKED2_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_5 = Byte.parseByte(s);
} else {
E_RESATTACKED2_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_6 = Byte.parseByte(s);
} else {
E_RESATTACKED2_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED2_7 = false;
} else {
E_RESATTACKED2_7 = true;
}
}
}

protected final void initE_RESATTACKED2_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_8 = Byte.parseByte(s);
} else {
E_RESATTACKED2_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED2_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED2_9 = Byte.parseByte(s);
} else {
E_RESATTACKED2_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_1 = Byte.parseByte(s);
} else {
E_RESATTACKED3_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_10 = Byte.parseByte(s);
} else {
E_RESATTACKED3_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_11 = Byte.parseByte(s);
} else {
E_RESATTACKED3_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_12 = Byte.parseByte(s);
} else {
E_RESATTACKED3_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_2 = Byte.parseByte(s);
} else {
E_RESATTACKED3_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_3 = Byte.parseByte(s);
} else {
E_RESATTACKED3_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_4 = Byte.parseByte(s);
} else {
E_RESATTACKED3_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_5 = Byte.parseByte(s);
} else {
E_RESATTACKED3_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_6 = Byte.parseByte(s);
} else {
E_RESATTACKED3_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED3_7 = false;
} else {
E_RESATTACKED3_7 = true;
}
}
}

protected final void initE_RESATTACKED3_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_8 = Byte.parseByte(s);
} else {
E_RESATTACKED3_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED3_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED3_9 = Byte.parseByte(s);
} else {
E_RESATTACKED3_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_1 = Byte.parseByte(s);
} else {
E_RESATTACKED4_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_10 = Byte.parseByte(s);
} else {
E_RESATTACKED4_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_11 = Byte.parseByte(s);
} else {
E_RESATTACKED4_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_12 = Byte.parseByte(s);
} else {
E_RESATTACKED4_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_2 = Byte.parseByte(s);
} else {
E_RESATTACKED4_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_3 = Byte.parseByte(s);
} else {
E_RESATTACKED4_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_4 = Byte.parseByte(s);
} else {
E_RESATTACKED4_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_5 = Byte.parseByte(s);
} else {
E_RESATTACKED4_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_6 = Byte.parseByte(s);
} else {
E_RESATTACKED4_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED4_7 = false;
} else {
E_RESATTACKED4_7 = true;
}
}
}

protected final void initE_RESATTACKED4_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_8 = Byte.parseByte(s);
} else {
E_RESATTACKED4_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED4_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED4_9 = Byte.parseByte(s);
} else {
E_RESATTACKED4_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_1 = Byte.parseByte(s);
} else {
E_RESATTACKED5_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_10 = Byte.parseByte(s);
} else {
E_RESATTACKED5_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_11 = Byte.parseByte(s);
} else {
E_RESATTACKED5_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_12 = Byte.parseByte(s);
} else {
E_RESATTACKED5_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_2 = Byte.parseByte(s);
} else {
E_RESATTACKED5_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_3 = Byte.parseByte(s);
} else {
E_RESATTACKED5_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_4 = Byte.parseByte(s);
} else {
E_RESATTACKED5_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_5 = Byte.parseByte(s);
} else {
E_RESATTACKED5_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_6 = Byte.parseByte(s);
} else {
E_RESATTACKED5_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED5_7 = false;
} else {
E_RESATTACKED5_7 = true;
}
}
}

protected final void initE_RESATTACKED5_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_8 = Byte.parseByte(s);
} else {
E_RESATTACKED5_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED5_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED5_9 = Byte.parseByte(s);
} else {
E_RESATTACKED5_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_1 = Byte.parseByte(s);
} else {
E_RESATTACKED6_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_10 = Byte.parseByte(s);
} else {
E_RESATTACKED6_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_11 = Byte.parseByte(s);
} else {
E_RESATTACKED6_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_12 = Byte.parseByte(s);
} else {
E_RESATTACKED6_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_2 = Byte.parseByte(s);
} else {
E_RESATTACKED6_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_3 = Byte.parseByte(s);
} else {
E_RESATTACKED6_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_4 = Byte.parseByte(s);
} else {
E_RESATTACKED6_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_5 = Byte.parseByte(s);
} else {
E_RESATTACKED6_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_6 = Byte.parseByte(s);
} else {
E_RESATTACKED6_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED6_7 = false;
} else {
E_RESATTACKED6_7 = true;
}
}
}

protected final void initE_RESATTACKED6_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_8 = Byte.parseByte(s);
} else {
E_RESATTACKED6_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED6_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED6_9 = Byte.parseByte(s);
} else {
E_RESATTACKED6_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_1 = Byte.parseByte(s);
} else {
E_RESATTACKED7_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_10 = Byte.parseByte(s);
} else {
E_RESATTACKED7_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_11 = Byte.parseByte(s);
} else {
E_RESATTACKED7_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_12 = Byte.parseByte(s);
} else {
E_RESATTACKED7_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_2 = Byte.parseByte(s);
} else {
E_RESATTACKED7_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_3 = Byte.parseByte(s);
} else {
E_RESATTACKED7_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_4 = Byte.parseByte(s);
} else {
E_RESATTACKED7_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_5 = Byte.parseByte(s);
} else {
E_RESATTACKED7_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_6 = Byte.parseByte(s);
} else {
E_RESATTACKED7_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED7_7 = false;
} else {
E_RESATTACKED7_7 = true;
}
}
}

protected final void initE_RESATTACKED7_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_8 = Byte.parseByte(s);
} else {
E_RESATTACKED7_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED7_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED7_9 = Byte.parseByte(s);
} else {
E_RESATTACKED7_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_1 = Byte.parseByte(s);
} else {
E_RESATTACKED8_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_10 = Byte.parseByte(s);
} else {
E_RESATTACKED8_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_11 = Byte.parseByte(s);
} else {
E_RESATTACKED8_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_12 = Byte.parseByte(s);
} else {
E_RESATTACKED8_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_2 = Byte.parseByte(s);
} else {
E_RESATTACKED8_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_3 = Byte.parseByte(s);
} else {
E_RESATTACKED8_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_4 = Byte.parseByte(s);
} else {
E_RESATTACKED8_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_5 = Byte.parseByte(s);
} else {
E_RESATTACKED8_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_6 = Byte.parseByte(s);
} else {
E_RESATTACKED8_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED8_7 = false;
} else {
E_RESATTACKED8_7 = true;
}
}
}

protected final void initE_RESATTACKED8_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_8 = Byte.parseByte(s);
} else {
E_RESATTACKED8_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED8_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED8_9 = Byte.parseByte(s);
} else {
E_RESATTACKED8_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_1 = Byte.parseByte(s);
} else {
E_RESATTACKED96_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_10 = Byte.parseByte(s);
} else {
E_RESATTACKED96_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_11 = Byte.parseByte(s);
} else {
E_RESATTACKED96_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_12 = Byte.parseByte(s);
} else {
E_RESATTACKED96_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_2 = Byte.parseByte(s);
} else {
E_RESATTACKED96_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_3 = Byte.parseByte(s);
} else {
E_RESATTACKED96_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_4 = Byte.parseByte(s);
} else {
E_RESATTACKED96_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_5 = Byte.parseByte(s);
} else {
E_RESATTACKED96_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_6 = Byte.parseByte(s);
} else {
E_RESATTACKED96_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED96_7 = false;
} else {
E_RESATTACKED96_7 = true;
}
}
}

protected final void initE_RESATTACKED96_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_8 = Byte.parseByte(s);
} else {
E_RESATTACKED96_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED96_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED96_9 = Byte.parseByte(s);
} else {
E_RESATTACKED96_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_1 = Byte.parseByte(s);
} else {
E_RESATTACKED97_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_10 = Byte.parseByte(s);
} else {
E_RESATTACKED97_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_11 = Byte.parseByte(s);
} else {
E_RESATTACKED97_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_12 = Byte.parseByte(s);
} else {
E_RESATTACKED97_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_2 = Byte.parseByte(s);
} else {
E_RESATTACKED97_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_3 = Byte.parseByte(s);
} else {
E_RESATTACKED97_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_4 = Byte.parseByte(s);
} else {
E_RESATTACKED97_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_5 = Byte.parseByte(s);
} else {
E_RESATTACKED97_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_6 = Byte.parseByte(s);
} else {
E_RESATTACKED97_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED97_7 = false;
} else {
E_RESATTACKED97_7 = true;
}
}
}

protected final void initE_RESATTACKED97_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_8 = Byte.parseByte(s);
} else {
E_RESATTACKED97_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED97_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED97_9 = Byte.parseByte(s);
} else {
E_RESATTACKED97_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_1(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_1 = Byte.parseByte(s);
} else {
E_RESATTACKED9_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_10(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_10 = Byte.parseByte(s);
} else {
E_RESATTACKED9_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_11(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_11 = Byte.parseByte(s);
} else {
E_RESATTACKED9_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_12(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_12 = Byte.parseByte(s);
} else {
E_RESATTACKED9_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_2(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_2 = Byte.parseByte(s);
} else {
E_RESATTACKED9_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_3(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_3 = Byte.parseByte(s);
} else {
E_RESATTACKED9_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_4(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_4 = Byte.parseByte(s);
} else {
E_RESATTACKED9_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_5(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_5 = Byte.parseByte(s);
} else {
E_RESATTACKED9_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_6(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_6 = Byte.parseByte(s);
} else {
E_RESATTACKED9_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_RESATTACKED9_7 = false;
} else {
E_RESATTACKED9_7 = true;
}
}
}

protected final void initE_RESATTACKED9_8(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_8 = Byte.parseByte(s);
} else {
E_RESATTACKED9_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESATTACKED9_9(String s) {
if (!s.trim().isEmpty()) {
E_RESATTACKED9_9 = Byte.parseByte(s);
} else {
E_RESATTACKED9_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_1 = Byte.parseByte(s);
} else {
E_RESAVOID1_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_10 = Byte.parseByte(s);
} else {
E_RESAVOID1_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_11 = Byte.parseByte(s);
} else {
E_RESAVOID1_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_12 = Byte.parseByte(s);
} else {
E_RESAVOID1_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_2 = Byte.parseByte(s);
} else {
E_RESAVOID1_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_3 = Byte.parseByte(s);
} else {
E_RESAVOID1_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_4 = Byte.parseByte(s);
} else {
E_RESAVOID1_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_5 = Byte.parseByte(s);
} else {
E_RESAVOID1_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_6 = Byte.parseByte(s);
} else {
E_RESAVOID1_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_7 = Byte.parseByte(s);
} else {
E_RESAVOID1_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_8 = Byte.parseByte(s);
} else {
E_RESAVOID1_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID1_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID1_9 = Byte.parseByte(s);
} else {
E_RESAVOID1_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_1 = Byte.parseByte(s);
} else {
E_RESAVOID2_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_10 = Byte.parseByte(s);
} else {
E_RESAVOID2_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_11 = Byte.parseByte(s);
} else {
E_RESAVOID2_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_12 = Byte.parseByte(s);
} else {
E_RESAVOID2_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_2 = Byte.parseByte(s);
} else {
E_RESAVOID2_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_3 = Byte.parseByte(s);
} else {
E_RESAVOID2_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_4 = Byte.parseByte(s);
} else {
E_RESAVOID2_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_5 = Byte.parseByte(s);
} else {
E_RESAVOID2_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_6 = Byte.parseByte(s);
} else {
E_RESAVOID2_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_7 = Byte.parseByte(s);
} else {
E_RESAVOID2_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_8 = Byte.parseByte(s);
} else {
E_RESAVOID2_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID2_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID2_9 = Byte.parseByte(s);
} else {
E_RESAVOID2_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_1 = Byte.parseByte(s);
} else {
E_RESAVOID3_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_10 = Byte.parseByte(s);
} else {
E_RESAVOID3_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_11 = Byte.parseByte(s);
} else {
E_RESAVOID3_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_12 = Byte.parseByte(s);
} else {
E_RESAVOID3_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_2 = Byte.parseByte(s);
} else {
E_RESAVOID3_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_3 = Byte.parseByte(s);
} else {
E_RESAVOID3_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_4 = Byte.parseByte(s);
} else {
E_RESAVOID3_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_5 = Byte.parseByte(s);
} else {
E_RESAVOID3_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_6 = Byte.parseByte(s);
} else {
E_RESAVOID3_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_7 = Byte.parseByte(s);
} else {
E_RESAVOID3_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_8 = Byte.parseByte(s);
} else {
E_RESAVOID3_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID3_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID3_9 = Byte.parseByte(s);
} else {
E_RESAVOID3_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_1 = Byte.parseByte(s);
} else {
E_RESAVOID4_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_10 = Byte.parseByte(s);
} else {
E_RESAVOID4_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_11 = Byte.parseByte(s);
} else {
E_RESAVOID4_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_12 = Byte.parseByte(s);
} else {
E_RESAVOID4_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_2 = Byte.parseByte(s);
} else {
E_RESAVOID4_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_3 = Byte.parseByte(s);
} else {
E_RESAVOID4_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_4 = Byte.parseByte(s);
} else {
E_RESAVOID4_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_5 = Byte.parseByte(s);
} else {
E_RESAVOID4_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_6 = Byte.parseByte(s);
} else {
E_RESAVOID4_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_7 = Byte.parseByte(s);
} else {
E_RESAVOID4_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_8 = Byte.parseByte(s);
} else {
E_RESAVOID4_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID4_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID4_9 = Byte.parseByte(s);
} else {
E_RESAVOID4_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_1 = Byte.parseByte(s);
} else {
E_RESAVOID5_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_10 = Byte.parseByte(s);
} else {
E_RESAVOID5_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_11 = Byte.parseByte(s);
} else {
E_RESAVOID5_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_12 = Byte.parseByte(s);
} else {
E_RESAVOID5_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_2 = Byte.parseByte(s);
} else {
E_RESAVOID5_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_3 = Byte.parseByte(s);
} else {
E_RESAVOID5_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_4 = Byte.parseByte(s);
} else {
E_RESAVOID5_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_5 = Byte.parseByte(s);
} else {
E_RESAVOID5_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_6 = Byte.parseByte(s);
} else {
E_RESAVOID5_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_7 = Byte.parseByte(s);
} else {
E_RESAVOID5_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_8 = Byte.parseByte(s);
} else {
E_RESAVOID5_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID5_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID5_9 = Byte.parseByte(s);
} else {
E_RESAVOID5_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_1 = Byte.parseByte(s);
} else {
E_RESAVOID6_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_10 = Byte.parseByte(s);
} else {
E_RESAVOID6_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_11 = Byte.parseByte(s);
} else {
E_RESAVOID6_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_12 = Byte.parseByte(s);
} else {
E_RESAVOID6_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_2 = Byte.parseByte(s);
} else {
E_RESAVOID6_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_3 = Byte.parseByte(s);
} else {
E_RESAVOID6_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_4 = Byte.parseByte(s);
} else {
E_RESAVOID6_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_5 = Byte.parseByte(s);
} else {
E_RESAVOID6_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_6 = Byte.parseByte(s);
} else {
E_RESAVOID6_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_7 = Byte.parseByte(s);
} else {
E_RESAVOID6_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_8 = Byte.parseByte(s);
} else {
E_RESAVOID6_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID6_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID6_9 = Byte.parseByte(s);
} else {
E_RESAVOID6_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_1 = Byte.parseByte(s);
} else {
E_RESAVOID7_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_10 = Byte.parseByte(s);
} else {
E_RESAVOID7_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_11 = Byte.parseByte(s);
} else {
E_RESAVOID7_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_12 = Byte.parseByte(s);
} else {
E_RESAVOID7_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_2 = Byte.parseByte(s);
} else {
E_RESAVOID7_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_3 = Byte.parseByte(s);
} else {
E_RESAVOID7_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_4 = Byte.parseByte(s);
} else {
E_RESAVOID7_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_5 = Byte.parseByte(s);
} else {
E_RESAVOID7_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_6 = Byte.parseByte(s);
} else {
E_RESAVOID7_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_7 = Byte.parseByte(s);
} else {
E_RESAVOID7_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_8 = Byte.parseByte(s);
} else {
E_RESAVOID7_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID7_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID7_9 = Byte.parseByte(s);
} else {
E_RESAVOID7_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_1 = Byte.parseByte(s);
} else {
E_RESAVOID8_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_10 = Byte.parseByte(s);
} else {
E_RESAVOID8_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_11 = Byte.parseByte(s);
} else {
E_RESAVOID8_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_12 = Byte.parseByte(s);
} else {
E_RESAVOID8_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_2 = Byte.parseByte(s);
} else {
E_RESAVOID8_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_3 = Byte.parseByte(s);
} else {
E_RESAVOID8_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_4 = Byte.parseByte(s);
} else {
E_RESAVOID8_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_5 = Byte.parseByte(s);
} else {
E_RESAVOID8_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_6 = Byte.parseByte(s);
} else {
E_RESAVOID8_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_7 = Byte.parseByte(s);
} else {
E_RESAVOID8_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_8 = Byte.parseByte(s);
} else {
E_RESAVOID8_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID8_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID8_9 = Byte.parseByte(s);
} else {
E_RESAVOID8_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_1 = Byte.parseByte(s);
} else {
E_RESAVOID96_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_10 = Byte.parseByte(s);
} else {
E_RESAVOID96_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_11 = Byte.parseByte(s);
} else {
E_RESAVOID96_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_12 = Byte.parseByte(s);
} else {
E_RESAVOID96_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_2 = Byte.parseByte(s);
} else {
E_RESAVOID96_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_3 = Byte.parseByte(s);
} else {
E_RESAVOID96_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_4 = Byte.parseByte(s);
} else {
E_RESAVOID96_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_5 = Byte.parseByte(s);
} else {
E_RESAVOID96_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_6 = Byte.parseByte(s);
} else {
E_RESAVOID96_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_7 = Byte.parseByte(s);
} else {
E_RESAVOID96_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_8 = Byte.parseByte(s);
} else {
E_RESAVOID96_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID96_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID96_9 = Byte.parseByte(s);
} else {
E_RESAVOID96_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_1 = Byte.parseByte(s);
} else {
E_RESAVOID97_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_10 = Byte.parseByte(s);
} else {
E_RESAVOID97_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_11 = Byte.parseByte(s);
} else {
E_RESAVOID97_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_12 = Byte.parseByte(s);
} else {
E_RESAVOID97_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_2 = Byte.parseByte(s);
} else {
E_RESAVOID97_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_3 = Byte.parseByte(s);
} else {
E_RESAVOID97_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_4 = Byte.parseByte(s);
} else {
E_RESAVOID97_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_5 = Byte.parseByte(s);
} else {
E_RESAVOID97_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_6 = Byte.parseByte(s);
} else {
E_RESAVOID97_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_7 = Byte.parseByte(s);
} else {
E_RESAVOID97_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_8 = Byte.parseByte(s);
} else {
E_RESAVOID97_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID97_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID97_9 = Byte.parseByte(s);
} else {
E_RESAVOID97_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_1(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_1 = Byte.parseByte(s);
} else {
E_RESAVOID9_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_10(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_10 = Byte.parseByte(s);
} else {
E_RESAVOID9_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_11(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_11 = Byte.parseByte(s);
} else {
E_RESAVOID9_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_12(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_12 = Byte.parseByte(s);
} else {
E_RESAVOID9_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_2(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_2 = Byte.parseByte(s);
} else {
E_RESAVOID9_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_3(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_3 = Byte.parseByte(s);
} else {
E_RESAVOID9_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_4(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_4 = Byte.parseByte(s);
} else {
E_RESAVOID9_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_5(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_5 = Byte.parseByte(s);
} else {
E_RESAVOID9_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_6(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_6 = Byte.parseByte(s);
} else {
E_RESAVOID9_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_7(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_7 = Byte.parseByte(s);
} else {
E_RESAVOID9_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_8(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_8 = Byte.parseByte(s);
} else {
E_RESAVOID9_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESAVOID9_9(String s) {
if (!s.trim().isEmpty()) {
E_RESAVOID9_9 = Byte.parseByte(s);
} else {
E_RESAVOID9_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_1 = Byte.parseByte(s);
} else {
E_RESINSULTED1_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_10 = Byte.parseByte(s);
} else {
E_RESINSULTED1_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_11 = Byte.parseByte(s);
} else {
E_RESINSULTED1_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_12 = Byte.parseByte(s);
} else {
E_RESINSULTED1_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_2 = Byte.parseByte(s);
} else {
E_RESINSULTED1_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_3 = Byte.parseByte(s);
} else {
E_RESINSULTED1_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_4 = Byte.parseByte(s);
} else {
E_RESINSULTED1_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_5 = Byte.parseByte(s);
} else {
E_RESINSULTED1_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_6 = Byte.parseByte(s);
} else {
E_RESINSULTED1_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_7 = Byte.parseByte(s);
} else {
E_RESINSULTED1_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_8 = Byte.parseByte(s);
} else {
E_RESINSULTED1_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED1_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED1_9 = Byte.parseByte(s);
} else {
E_RESINSULTED1_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_1 = Byte.parseByte(s);
} else {
E_RESINSULTED2_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_10 = Byte.parseByte(s);
} else {
E_RESINSULTED2_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_11 = Byte.parseByte(s);
} else {
E_RESINSULTED2_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_12 = Byte.parseByte(s);
} else {
E_RESINSULTED2_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_2 = Byte.parseByte(s);
} else {
E_RESINSULTED2_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_3 = Byte.parseByte(s);
} else {
E_RESINSULTED2_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_4 = Byte.parseByte(s);
} else {
E_RESINSULTED2_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_5 = Byte.parseByte(s);
} else {
E_RESINSULTED2_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_6 = Byte.parseByte(s);
} else {
E_RESINSULTED2_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_7 = Byte.parseByte(s);
} else {
E_RESINSULTED2_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_8 = Byte.parseByte(s);
} else {
E_RESINSULTED2_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED2_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED2_9 = Byte.parseByte(s);
} else {
E_RESINSULTED2_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_1 = Byte.parseByte(s);
} else {
E_RESINSULTED3_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_10 = Byte.parseByte(s);
} else {
E_RESINSULTED3_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_11 = Byte.parseByte(s);
} else {
E_RESINSULTED3_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_12 = Byte.parseByte(s);
} else {
E_RESINSULTED3_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_2 = Byte.parseByte(s);
} else {
E_RESINSULTED3_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_3 = Byte.parseByte(s);
} else {
E_RESINSULTED3_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_4 = Byte.parseByte(s);
} else {
E_RESINSULTED3_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_5 = Byte.parseByte(s);
} else {
E_RESINSULTED3_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_6 = Byte.parseByte(s);
} else {
E_RESINSULTED3_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_7 = Byte.parseByte(s);
} else {
E_RESINSULTED3_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_8 = Byte.parseByte(s);
} else {
E_RESINSULTED3_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED3_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED3_9 = Byte.parseByte(s);
} else {
E_RESINSULTED3_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_1 = Byte.parseByte(s);
} else {
E_RESINSULTED4_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_10 = Byte.parseByte(s);
} else {
E_RESINSULTED4_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_11 = Byte.parseByte(s);
} else {
E_RESINSULTED4_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_12 = Byte.parseByte(s);
} else {
E_RESINSULTED4_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_2 = Byte.parseByte(s);
} else {
E_RESINSULTED4_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_3 = Byte.parseByte(s);
} else {
E_RESINSULTED4_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_4 = Byte.parseByte(s);
} else {
E_RESINSULTED4_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_5 = Byte.parseByte(s);
} else {
E_RESINSULTED4_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_6 = Byte.parseByte(s);
} else {
E_RESINSULTED4_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_7 = Byte.parseByte(s);
} else {
E_RESINSULTED4_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_8 = Byte.parseByte(s);
} else {
E_RESINSULTED4_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED4_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED4_9 = Byte.parseByte(s);
} else {
E_RESINSULTED4_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_1 = Byte.parseByte(s);
} else {
E_RESINSULTED5_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_10 = Byte.parseByte(s);
} else {
E_RESINSULTED5_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_11 = Byte.parseByte(s);
} else {
E_RESINSULTED5_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_12 = Byte.parseByte(s);
} else {
E_RESINSULTED5_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_2 = Byte.parseByte(s);
} else {
E_RESINSULTED5_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_3 = Byte.parseByte(s);
} else {
E_RESINSULTED5_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_4 = Byte.parseByte(s);
} else {
E_RESINSULTED5_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_5 = Byte.parseByte(s);
} else {
E_RESINSULTED5_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_6 = Byte.parseByte(s);
} else {
E_RESINSULTED5_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_7 = Byte.parseByte(s);
} else {
E_RESINSULTED5_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_8 = Byte.parseByte(s);
} else {
E_RESINSULTED5_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED5_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED5_9 = Byte.parseByte(s);
} else {
E_RESINSULTED5_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_1 = Byte.parseByte(s);
} else {
E_RESINSULTED6_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_10 = Byte.parseByte(s);
} else {
E_RESINSULTED6_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_11 = Byte.parseByte(s);
} else {
E_RESINSULTED6_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_12 = Byte.parseByte(s);
} else {
E_RESINSULTED6_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_2 = Byte.parseByte(s);
} else {
E_RESINSULTED6_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_3 = Byte.parseByte(s);
} else {
E_RESINSULTED6_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_4 = Byte.parseByte(s);
} else {
E_RESINSULTED6_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_5 = Byte.parseByte(s);
} else {
E_RESINSULTED6_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_6 = Byte.parseByte(s);
} else {
E_RESINSULTED6_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_7 = Byte.parseByte(s);
} else {
E_RESINSULTED6_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_8 = Byte.parseByte(s);
} else {
E_RESINSULTED6_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED6_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED6_9 = Byte.parseByte(s);
} else {
E_RESINSULTED6_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_1 = Byte.parseByte(s);
} else {
E_RESINSULTED7_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_10 = Byte.parseByte(s);
} else {
E_RESINSULTED7_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_11 = Byte.parseByte(s);
} else {
E_RESINSULTED7_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_12 = Byte.parseByte(s);
} else {
E_RESINSULTED7_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_2 = Byte.parseByte(s);
} else {
E_RESINSULTED7_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_3 = Byte.parseByte(s);
} else {
E_RESINSULTED7_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_4 = Byte.parseByte(s);
} else {
E_RESINSULTED7_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_5 = Byte.parseByte(s);
} else {
E_RESINSULTED7_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_6 = Byte.parseByte(s);
} else {
E_RESINSULTED7_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_7 = Byte.parseByte(s);
} else {
E_RESINSULTED7_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_8 = Byte.parseByte(s);
} else {
E_RESINSULTED7_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED7_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED7_9 = Byte.parseByte(s);
} else {
E_RESINSULTED7_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_1 = Byte.parseByte(s);
} else {
E_RESINSULTED8_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_10 = Byte.parseByte(s);
} else {
E_RESINSULTED8_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_11 = Byte.parseByte(s);
} else {
E_RESINSULTED8_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_12 = Byte.parseByte(s);
} else {
E_RESINSULTED8_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_2 = Byte.parseByte(s);
} else {
E_RESINSULTED8_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_3 = Byte.parseByte(s);
} else {
E_RESINSULTED8_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_4 = Byte.parseByte(s);
} else {
E_RESINSULTED8_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_5 = Byte.parseByte(s);
} else {
E_RESINSULTED8_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_6 = Byte.parseByte(s);
} else {
E_RESINSULTED8_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_7 = Byte.parseByte(s);
} else {
E_RESINSULTED8_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_8 = Byte.parseByte(s);
} else {
E_RESINSULTED8_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED8_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED8_9 = Byte.parseByte(s);
} else {
E_RESINSULTED8_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_1 = Byte.parseByte(s);
} else {
E_RESINSULTED96_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_10 = Byte.parseByte(s);
} else {
E_RESINSULTED96_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_11 = Byte.parseByte(s);
} else {
E_RESINSULTED96_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_12 = Byte.parseByte(s);
} else {
E_RESINSULTED96_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_2 = Byte.parseByte(s);
} else {
E_RESINSULTED96_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_3 = Byte.parseByte(s);
} else {
E_RESINSULTED96_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_4 = Byte.parseByte(s);
} else {
E_RESINSULTED96_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_5 = Byte.parseByte(s);
} else {
E_RESINSULTED96_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_6 = Byte.parseByte(s);
} else {
E_RESINSULTED96_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_7 = Byte.parseByte(s);
} else {
E_RESINSULTED96_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_8 = Byte.parseByte(s);
} else {
E_RESINSULTED96_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED96_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED96_9 = Byte.parseByte(s);
} else {
E_RESINSULTED96_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_1 = Byte.parseByte(s);
} else {
E_RESINSULTED97_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_10 = Byte.parseByte(s);
} else {
E_RESINSULTED97_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_11 = Byte.parseByte(s);
} else {
E_RESINSULTED97_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_12 = Byte.parseByte(s);
} else {
E_RESINSULTED97_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_2 = Byte.parseByte(s);
} else {
E_RESINSULTED97_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_3 = Byte.parseByte(s);
} else {
E_RESINSULTED97_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_4 = Byte.parseByte(s);
} else {
E_RESINSULTED97_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_5 = Byte.parseByte(s);
} else {
E_RESINSULTED97_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_6 = Byte.parseByte(s);
} else {
E_RESINSULTED97_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_7 = Byte.parseByte(s);
} else {
E_RESINSULTED97_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_8 = Byte.parseByte(s);
} else {
E_RESINSULTED97_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED97_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED97_9 = Byte.parseByte(s);
} else {
E_RESINSULTED97_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_1(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_1 = Byte.parseByte(s);
} else {
E_RESINSULTED9_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_10(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_10 = Byte.parseByte(s);
} else {
E_RESINSULTED9_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_11(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_11 = Byte.parseByte(s);
} else {
E_RESINSULTED9_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_12(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_12 = Byte.parseByte(s);
} else {
E_RESINSULTED9_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_2(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_2 = Byte.parseByte(s);
} else {
E_RESINSULTED9_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_3(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_3 = Byte.parseByte(s);
} else {
E_RESINSULTED9_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_4(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_4 = Byte.parseByte(s);
} else {
E_RESINSULTED9_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_5(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_5 = Byte.parseByte(s);
} else {
E_RESINSULTED9_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_6(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_6 = Byte.parseByte(s);
} else {
E_RESINSULTED9_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_7(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_7 = Byte.parseByte(s);
} else {
E_RESINSULTED9_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_8(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_8 = Byte.parseByte(s);
} else {
E_RESINSULTED9_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESINSULTED9_9(String s) {
if (!s.trim().isEmpty()) {
E_RESINSULTED9_9 = Byte.parseByte(s);
} else {
E_RESINSULTED9_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY1(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY1 = Byte.parseByte(s);
} else {
E_RESJOBDENY1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY2(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY2 = Byte.parseByte(s);
} else {
E_RESJOBDENY2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY3(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY3 = Byte.parseByte(s);
} else {
E_RESJOBDENY3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY4(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY4 = Byte.parseByte(s);
} else {
E_RESJOBDENY4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY5(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY5 = Byte.parseByte(s);
} else {
E_RESJOBDENY5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY6(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY6 = Byte.parseByte(s);
} else {
E_RESJOBDENY6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY7(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY7 = Byte.parseByte(s);
} else {
E_RESJOBDENY7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY8(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY8 = Byte.parseByte(s);
} else {
E_RESJOBDENY8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY9(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY9 = Byte.parseByte(s);
} else {
E_RESJOBDENY9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY96(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY96 = Byte.parseByte(s);
} else {
E_RESJOBDENY96 = Byte.MIN_VALUE;
}
}

protected final void initE_RESJOBDENY97(String s) {
if (!s.trim().isEmpty()) {
E_RESJOBDENY97 = Byte.parseByte(s);
} else {
E_RESJOBDENY97 = Byte.MIN_VALUE;
}
}

protected final void initE_RESPF16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_RESPF16 = false;
} else {
E_RESPF16 = true;
}
}
}

protected final void initE_RESPF16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_RESPF16_DV = false;
} else {
E_RESPF16_DV = true;
}
}
}

protected final void initE_RESPM16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_RESPM16 = false;
} else {
E_RESPM16 = true;
}
}
}

protected final void initE_RESPM16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_RESPM16_DV = false;
} else {
E_RESPM16_DV = true;
}
}
}

protected final void initE_RESUNSAFE1_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE1_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE1_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE1_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE2_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE2_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE2_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE3_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE3_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE3_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE4_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE4_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE4_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE5_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE5_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE5_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE6_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE6_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE6_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE7_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE7_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE7_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE8_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE8_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE8_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE96_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE96_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE96_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE97_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE97_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE97_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_1(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_1 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_1 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_10(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_10 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_10 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_11(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_11 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_11 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_12(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_12 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_12 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_2(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_2 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_2 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_3(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_3 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_3 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_4(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_4 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_4 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_5(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_5 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_5 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_6(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_6 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_6 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_7(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_7 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_7 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_8(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_8 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_8 = Byte.MIN_VALUE;
}
}

protected final void initE_RESUNSAFE9_9(String s) {
if (!s.trim().isEmpty()) {
E_RESUNSAFE9_9 = Byte.parseByte(s);
} else {
E_RESUNSAFE9_9 = Byte.MIN_VALUE;
}
}

protected final void initE_RETAMT(String s) {
if (!s.trim().isEmpty()) {
E_RETAMT = Byte.parseByte(s);
} else {
E_RETAMT = Byte.MIN_VALUE;
}
}

protected final void initE_RETCHK(String s) {
if (!s.trim().isEmpty()) {
E_RETCHK = Byte.parseByte(s);
} else {
E_RETCHK = Byte.MIN_VALUE;
}
}

protected final void initE_RETSUF(String s) {
if (!s.trim().isEmpty()) {
E_RETSUF = Byte.parseByte(s);
} else {
E_RETSUF = Byte.MIN_VALUE;
}
}

protected final void initE_RHLAND_CODE(String s) {
if (!s.trim().isEmpty()) {
E_RHLAND_CODE = Byte.parseByte(s);
} else {
E_RHLAND_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_RPHMOB_CODE(String s) {
if (!s.trim().isEmpty()) {
E_RPHMOB_CODE = Byte.parseByte(s);
} else {
E_RPHMOB_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_RPHWRK_CODE(String s) {
if (!s.trim().isEmpty()) {
E_RPHWRK_CODE = Byte.parseByte(s);
} else {
E_RPHWRK_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_RTCON1(String s) {
if (!s.trim().isEmpty()) {
E_RTCON1 = Byte.parseByte(s);
} else {
E_RTCON1 = Byte.MIN_VALUE;
}
}

protected final void initE_RTCON2(String s) {
if (!s.trim().isEmpty()) {
E_RTCON2 = Byte.parseByte(s);
} else {
E_RTCON2 = Byte.MIN_VALUE;
}
}

protected final void initE_RTCON3(String s) {
if (!s.trim().isEmpty()) {
E_RTCON3 = Byte.parseByte(s);
} else {
E_RTCON3 = Byte.MIN_VALUE;
}
}

protected final void initE_RTCON4(String s) {
if (!s.trim().isEmpty()) {
E_RTCON4 = Byte.parseByte(s);
} else {
E_RTCON4 = Byte.MIN_VALUE;
}
}

protected final void initE_RTEXPJB(String s) {
if (!s.trim().isEmpty()) {
E_RTEXPJB = Byte.parseByte(s);
} else {
E_RTEXPJB = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND1(String s) {
if (!s.trim().isEmpty()) {
E_RTFND1 = Byte.parseByte(s);
} else {
E_RTFND1 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND10(String s) {
if (!s.trim().isEmpty()) {
E_RTFND10 = Byte.parseByte(s);
} else {
E_RTFND10 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND2(String s) {
if (!s.trim().isEmpty()) {
E_RTFND2 = Byte.parseByte(s);
} else {
E_RTFND2 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND3(String s) {
if (!s.trim().isEmpty()) {
E_RTFND3 = Byte.parseByte(s);
} else {
E_RTFND3 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND4(String s) {
if (!s.trim().isEmpty()) {
E_RTFND4 = Byte.parseByte(s);
} else {
E_RTFND4 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND5(String s) {
if (!s.trim().isEmpty()) {
E_RTFND5 = Byte.parseByte(s);
} else {
E_RTFND5 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND6(String s) {
if (!s.trim().isEmpty()) {
E_RTFND6 = Byte.parseByte(s);
} else {
E_RTFND6 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND7(String s) {
if (!s.trim().isEmpty()) {
E_RTFND7 = Byte.parseByte(s);
} else {
E_RTFND7 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND8(String s) {
if (!s.trim().isEmpty()) {
E_RTFND8 = Byte.parseByte(s);
} else {
E_RTFND8 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND9(String s) {
if (!s.trim().isEmpty()) {
E_RTFND9 = Byte.parseByte(s);
} else {
E_RTFND9 = Byte.MIN_VALUE;
}
}

protected final void initE_RTFND96(String s) {
if (!s.trim().isEmpty()) {
E_RTFND96 = Byte.parseByte(s);
} else {
E_RTFND96 = Byte.MIN_VALUE;
}
}

protected final void initE_RTPRO1(String s) {
if (!s.trim().isEmpty()) {
E_RTPRO1 = Byte.parseByte(s);
} else {
E_RTPRO1 = Byte.MIN_VALUE;
}
}

protected final void initE_RTPRO2(String s) {
if (!s.trim().isEmpty()) {
E_RTPRO2 = Byte.parseByte(s);
} else {
E_RTPRO2 = Byte.MIN_VALUE;
}
}

protected final void initE_RTPRO3(String s) {
if (!s.trim().isEmpty()) {
E_RTPRO3 = Byte.parseByte(s);
} else {
E_RTPRO3 = Byte.MIN_VALUE;
}
}

protected final void initE_RTPRO4(String s) {
if (!s.trim().isEmpty()) {
E_RTPRO4 = Byte.parseByte(s);
} else {
E_RTPRO4 = Byte.MIN_VALUE;
}
}

protected final void initE_RTPRO5(String s) {
if (!s.trim().isEmpty()) {
E_RTPRO5 = Byte.parseByte(s);
} else {
E_RTPRO5 = Byte.MIN_VALUE;
}
}

protected final void initE_RTPRO6(String s) {
if (!s.trim().isEmpty()) {
E_RTPRO6 = Byte.parseByte(s);
} else {
E_RTPRO6 = Byte.MIN_VALUE;
}
}

protected final void initE_RULESKID(String s) {
if (!s.trim().isEmpty()) {
E_RULESKID = Byte.parseByte(s);
} else {
E_RULESKID = Byte.MIN_VALUE;
}
}

protected final void initE_SAMEJOB(String s) {
if (!s.trim().isEmpty()) {
E_SAMEJOB = Byte.parseByte(s);
} else {
E_SAMEJOB = Byte.MIN_VALUE;
}
}

protected final void initE_SAMPST(String s) {
if (!s.trim().isEmpty()) {
E_SAMPST = Byte.parseByte(s);
} else {
E_SAMPST = Byte.MIN_VALUE;
}
}

protected final void initE_SCAC(String s) {
if (!s.trim().isEmpty()) {
E_SCAC = Byte.parseByte(s);
} else {
E_SCAC = Byte.MIN_VALUE;
}
}

protected final void initE_SCAGE1DRNK(String s) {
if (!s.trim().isEmpty()) {
E_SCAGE1DRNK = Byte.parseByte(s);
} else {
E_SCAGE1DRNK = Byte.MIN_VALUE;
}
}

protected final void initE_SCALCL7D(String s) {
if (!s.trim().isEmpty()) {
E_SCALCL7D = Byte.parseByte(s);
} else {
E_SCALCL7D = Byte.MIN_VALUE;
}
}

protected final void initE_SCDASCOH_DV(String s) {
if (!s.trim().isEmpty()) {
E_SCDASCOH_DV = Byte.parseByte(s);
} else {
E_SCDASCOH_DV = Byte.MIN_VALUE;
}
}

protected final void initE_SCDASSAT_DV(String s) {
if (!s.trim().isEmpty()) {
E_SCDASSAT_DV = Byte.parseByte(s);
} else {
E_SCDASSAT_DV = Byte.MIN_VALUE;
}
}

protected final void initE_SCEND(String s) {
if (!s.trim().isEmpty()) {
E_SCEND = Byte.parseByte(s);
} else {
E_SCEND = Byte.MIN_VALUE;
}
}

protected final void initE_SCEVERDRNK(String s) {
if (!s.trim().isEmpty()) {
E_SCEVERDRNK = Byte.parseByte(s);
} else {
E_SCEVERDRNK = Byte.MIN_VALUE;
}
}

protected final void initE_SCFALCDRNK(String s) {
if (!s.trim().isEmpty()) {
E_SCFALCDRNK = Byte.parseByte(s);
} else {
E_SCFALCDRNK = Byte.MIN_VALUE;
}
}

protected final void initE_SCFANNOY(String s) {
if (!s.trim().isEmpty()) {
E_SCFANNOY = Byte.parseByte(s);
} else {
E_SCFANNOY = Byte.MIN_VALUE;
}
}

protected final void initE_SCFCRITIC(String s) {
if (!s.trim().isEmpty()) {
E_SCFCRITIC = Byte.parseByte(s);
} else {
E_SCFCRITIC = Byte.MIN_VALUE;
}
}

protected final void initE_SCFLAG_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_SCFLAG_DV = false;
} else {
E_SCFLAG_DV = true;
}
}
}

protected final void initE_SCFLETDWN(String s) {
if (!s.trim().isEmpty()) {
E_SCFLETDWN = Byte.parseByte(s);
} else {
E_SCFLETDWN = Byte.MIN_VALUE;
}
}

protected final void initE_SCFOPENUP(String s) {
if (!s.trim().isEmpty()) {
E_SCFOPENUP = Byte.parseByte(s);
} else {
E_SCFOPENUP = Byte.MIN_VALUE;
}
}

protected final void initE_SCFRELY(String s) {
if (!s.trim().isEmpty()) {
E_SCFRELY = Byte.parseByte(s);
} else {
E_SCFRELY = Byte.MIN_VALUE;
}
}

protected final void initE_SCFRENDANY(String s) {
if (!s.trim().isEmpty()) {
E_SCFRENDANY = Byte.parseByte(s);
} else {
E_SCFRENDANY = Byte.MIN_VALUE;
}
}

protected final void initE_SCFUNDSTND(String s) {
if (!s.trim().isEmpty()) {
E_SCFUNDSTND = Byte.parseByte(s);
} else {
E_SCFUNDSTND = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQ1_DV(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQ1_DV = Byte.parseByte(s);
} else {
E_SCGHQ1_DV = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQ2_DV(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQ2_DV = Byte.parseByte(s);
} else {
E_SCGHQ2_DV = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQA(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQA = Byte.parseByte(s);
} else {
E_SCGHQA = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQB(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQB = Byte.parseByte(s);
} else {
E_SCGHQB = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQC(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQC = Byte.parseByte(s);
} else {
E_SCGHQC = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQD(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQD = Byte.parseByte(s);
} else {
E_SCGHQD = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQE(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQE = Byte.parseByte(s);
} else {
E_SCGHQE = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQF(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQF = Byte.parseByte(s);
} else {
E_SCGHQF = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQG(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQG = Byte.parseByte(s);
} else {
E_SCGHQG = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQH(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQH = Byte.parseByte(s);
} else {
E_SCGHQH = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQI(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQI = Byte.parseByte(s);
} else {
E_SCGHQI = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQJ(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQJ = Byte.parseByte(s);
} else {
E_SCGHQJ = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQK(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQK = Byte.parseByte(s);
} else {
E_SCGHQK = Byte.MIN_VALUE;
}
}

protected final void initE_SCGHQL(String s) {
if (!s.trim().isEmpty()) {
E_SCGHQL = Byte.parseByte(s);
} else {
E_SCGHQL = Byte.MIN_VALUE;
}
}

protected final void initE_SCHLLOC(String s) {
if (!s.trim().isEmpty()) {
E_SCHLLOC = Byte.parseByte(s);
} else {
E_SCHLLOC = Byte.MIN_VALUE;
}
}

protected final void initE_SCHOK(String s) {
if (!s.trim().isEmpty()) {
E_SCHOK = Byte.parseByte(s);
} else {
E_SCHOK = Byte.MIN_VALUE;
}
}

protected final void initE_SCHOOL(String s) {
if (!s.trim().isEmpty()) {
E_SCHOOL = Byte.parseByte(s);
} else {
E_SCHOOL = Byte.MIN_VALUE;
}
}

protected final void initE_SCHOOLCNTRY1(String s) {
if (!s.trim().isEmpty()) {
E_SCHOOLCNTRY1 = Byte.parseByte(s);
} else {
E_SCHOOLCNTRY1 = Byte.MIN_VALUE;
}
}

protected final void initE_SCHOOLCNTRY2(String s) {
if (!s.trim().isEmpty()) {
E_SCHOOLCNTRY2 = Byte.parseByte(s);
} else {
E_SCHOOLCNTRY2 = Byte.MIN_VALUE;
}
}

protected final void initE_SCHOOLCNTRY3(String s) {
if (!s.trim().isEmpty()) {
E_SCHOOLCNTRY3 = Byte.parseByte(s);
} else {
E_SCHOOLCNTRY3 = Byte.MIN_VALUE;
}
}

protected final void initE_SCHOOLCNTRY4(String s) {
if (!s.trim().isEmpty()) {
E_SCHOOLCNTRY4 = Byte.parseByte(s);
} else {
E_SCHOOLCNTRY4 = Byte.MIN_VALUE;
}
}

protected final void initE_SCHOOLCNTRY5(String s) {
if (!s.trim().isEmpty()) {
E_SCHOOLCNTRY5 = Byte.parseByte(s);
} else {
E_SCHOOLCNTRY5 = Byte.MIN_VALUE;
}
}

protected final void initE_SCLFSAT1(String s) {
if (!s.trim().isEmpty()) {
E_SCLFSAT1 = Byte.parseByte(s);
} else {
E_SCLFSAT1 = Byte.MIN_VALUE;
}
}

protected final void initE_SCLFSAT2(String s) {
if (!s.trim().isEmpty()) {
E_SCLFSAT2 = Byte.parseByte(s);
} else {
E_SCLFSAT2 = Byte.MIN_VALUE;
}
}

protected final void initE_SCLFSAT7(String s) {
if (!s.trim().isEmpty()) {
E_SCLFSAT7 = Byte.parseByte(s);
} else {
E_SCLFSAT7 = Byte.MIN_VALUE;
}
}

protected final void initE_SCLFSATO(String s) {
if (!s.trim().isEmpty()) {
E_SCLFSATO = Byte.parseByte(s);
} else {
E_SCLFSATO = Byte.MIN_VALUE;
}
}

protected final void initE_SCNALCL7D(String s) {
if (!s.trim().isEmpty()) {
E_SCNALCL7D = Byte.parseByte(s);
} else {
E_SCNALCL7D = Byte.MIN_VALUE;
}
}

protected final void initE_SCNALCPINT(String s) {
if (!s.trim().isEmpty()) {
E_SCNALCPINT = Byte.parseByte(s);
} else {
E_SCNALCPINT = Byte.MIN_VALUE;
}
}

protected final void initE_SCNALCPOPS(String s) {
if (!s.trim().isEmpty()) {
E_SCNALCPOPS = Byte.parseByte(s);
} else {
E_SCNALCPOPS = Byte.MIN_VALUE;
}
}

protected final void initE_SCNALCSHOT(String s) {
if (!s.trim().isEmpty()) {
E_SCNALCSHOT = Byte.parseByte(s);
} else {
E_SCNALCSHOT = Byte.MIN_VALUE;
}
}

protected final void initE_SCNALCWINE(String s) {
if (!s.trim().isEmpty()) {
E_SCNALCWINE = Byte.parseByte(s);
} else {
E_SCNALCWINE = Byte.MIN_VALUE;
}
}

protected final void initE_SCOTVOT1(String s) {
if (!s.trim().isEmpty()) {
E_SCOTVOT1 = Byte.parseByte(s);
} else {
E_SCOTVOT1 = Byte.MIN_VALUE;
}
}

protected final void initE_SCOTVOT2(String s) {
if (!s.trim().isEmpty()) {
E_SCOTVOT2 = Byte.parseByte(s);
} else {
E_SCOTVOT2 = Byte.MIN_VALUE;
}
}

protected final void initE_SCOTVOT3(String s) {
if (!s.trim().isEmpty()) {
E_SCOTVOT3 = Byte.parseByte(s);
} else {
E_SCOTVOT3 = Byte.MIN_VALUE;
}
}

protected final void initE_SCOTVOT4(String s) {
if (!s.trim().isEmpty()) {
E_SCOTVOT4 = Byte.parseByte(s);
} else {
E_SCOTVOT4 = Byte.MIN_VALUE;
}
}

protected final void initE_SCPANNOY(String s) {
if (!s.trim().isEmpty()) {
E_SCPANNOY = Byte.parseByte(s);
} else {
E_SCPANNOY = Byte.MIN_VALUE;
}
}

protected final void initE_SCPAROUTINT(String s) {
if (!s.trim().isEmpty()) {
E_SCPAROUTINT = Byte.parseByte(s);
} else {
E_SCPAROUTINT = Byte.MIN_VALUE;
}
}

protected final void initE_SCPCRITIC(String s) {
if (!s.trim().isEmpty()) {
E_SCPCRITIC = Byte.parseByte(s);
} else {
E_SCPCRITIC = Byte.MIN_VALUE;
}
}

protected final void initE_SCPLETDWN(String s) {
if (!s.trim().isEmpty()) {
E_SCPLETDWN = Byte.parseByte(s);
} else {
E_SCPLETDWN = Byte.MIN_VALUE;
}
}

protected final void initE_SCPOPENUP(String s) {
if (!s.trim().isEmpty()) {
E_SCPOPENUP = Byte.parseByte(s);
} else {
E_SCPOPENUP = Byte.MIN_VALUE;
}
}

protected final void initE_SCPRELY(String s) {
if (!s.trim().isEmpty()) {
E_SCPRELY = Byte.parseByte(s);
} else {
E_SCPRELY = Byte.MIN_VALUE;
}
}

protected final void initE_SCPUNDSTND(String s) {
if (!s.trim().isEmpty()) {
E_SCPUNDSTND = Byte.parseByte(s);
} else {
E_SCPUNDSTND = Byte.MIN_VALUE;
}
}

protected final void initE_SCRANNOY(String s) {
if (!s.trim().isEmpty()) {
E_SCRANNOY = Byte.parseByte(s);
} else {
E_SCRANNOY = Byte.MIN_VALUE;
}
}

protected final void initE_SCRCRITIC(String s) {
if (!s.trim().isEmpty()) {
E_SCRCRITIC = Byte.parseByte(s);
} else {
E_SCRCRITIC = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELANY(String s) {
if (!s.trim().isEmpty()) {
E_SCRELANY = Byte.parseByte(s);
} else {
E_SCRELANY = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELHAPPY(String s) {
if (!s.trim().isEmpty()) {
E_SCRELHAPPY = Byte.parseByte(s);
} else {
E_SCRELHAPPY = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELPARAR(String s) {
if (!s.trim().isEmpty()) {
E_SCRELPARAR = Byte.parseByte(s);
} else {
E_SCRELPARAR = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELPARCD(String s) {
if (!s.trim().isEmpty()) {
E_SCRELPARCD = Byte.parseByte(s);
} else {
E_SCRELPARCD = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELPARDS(String s) {
if (!s.trim().isEmpty()) {
E_SCRELPARDS = Byte.parseByte(s);
} else {
E_SCRELPARDS = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELPAREI(String s) {
if (!s.trim().isEmpty()) {
E_SCRELPAREI = Byte.parseByte(s);
} else {
E_SCRELPAREI = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELPARIR(String s) {
if (!s.trim().isEmpty()) {
E_SCRELPARIR = Byte.parseByte(s);
} else {
E_SCRELPARIR = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELPARKS(String s) {
if (!s.trim().isEmpty()) {
E_SCRELPARKS = Byte.parseByte(s);
} else {
E_SCRELPARKS = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELPARRG(String s) {
if (!s.trim().isEmpty()) {
E_SCRELPARRG = Byte.parseByte(s);
} else {
E_SCRELPARRG = Byte.MIN_VALUE;
}
}

protected final void initE_SCRELPARWT(String s) {
if (!s.trim().isEmpty()) {
E_SCRELPARWT = Byte.parseByte(s);
} else {
E_SCRELPARWT = Byte.MIN_VALUE;
}
}

protected final void initE_SCRF1(String s) {
if (!s.trim().isEmpty()) {
E_SCRF1 = Byte.parseByte(s);
} else {
E_SCRF1 = Byte.MIN_VALUE;
}
}

protected final void initE_SCRF2(String s) {
if (!s.trim().isEmpty()) {
E_SCRF2 = Byte.parseByte(s);
} else {
E_SCRF2 = Byte.MIN_VALUE;
}
}

protected final void initE_SCRF3(String s) {
if (!s.trim().isEmpty()) {
E_SCRF3 = Byte.parseByte(s);
} else {
E_SCRF3 = Byte.MIN_VALUE;
}
}

protected final void initE_SCRF4(String s) {
if (!s.trim().isEmpty()) {
E_SCRF4 = Byte.parseByte(s);
} else {
E_SCRF4 = Byte.MIN_VALUE;
}
}

protected final void initE_SCRF5(String s) {
if (!s.trim().isEmpty()) {
E_SCRF5 = Byte.parseByte(s);
} else {
E_SCRF5 = Byte.MIN_VALUE;
}
}

protected final void initE_SCRF6(String s) {
if (!s.trim().isEmpty()) {
E_SCRF6 = Byte.parseByte(s);
} else {
E_SCRF6 = Byte.MIN_VALUE;
}
}

protected final void initE_SCRF97(String s) {
if (!s.trim().isEmpty()) {
E_SCRF97 = Byte.parseByte(s);
} else {
E_SCRF97 = Byte.MIN_VALUE;
}
}

protected final void initE_SCRLETDWN(String s) {
if (!s.trim().isEmpty()) {
E_SCRLETDWN = Byte.parseByte(s);
} else {
E_SCRLETDWN = Byte.MIN_VALUE;
}
}

protected final void initE_SCROPENUP(String s) {
if (!s.trim().isEmpty()) {
E_SCROPENUP = Byte.parseByte(s);
} else {
E_SCROPENUP = Byte.MIN_VALUE;
}
}

protected final void initE_SCRRELY(String s) {
if (!s.trim().isEmpty()) {
E_SCRRELY = Byte.parseByte(s);
} else {
E_SCRRELY = Byte.MIN_VALUE;
}
}

protected final void initE_SCRUNDSTND(String s) {
if (!s.trim().isEmpty()) {
E_SCRUNDSTND = Byte.parseByte(s);
} else {
E_SCRUNDSTND = Byte.MIN_VALUE;
}
}

protected final void initE_SCRX_CODE(String s) {
if (!s.trim().isEmpty()) {
E_SCRX_CODE = Byte.parseByte(s);
} else {
E_SCRX_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF1(String s) {
if (!s.trim().isEmpty()) {
E_SCSF1 = Byte.parseByte(s);
} else {
E_SCSF1 = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF2A(String s) {
if (!s.trim().isEmpty()) {
E_SCSF2A = Byte.parseByte(s);
} else {
E_SCSF2A = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF2B(String s) {
if (!s.trim().isEmpty()) {
E_SCSF2B = Byte.parseByte(s);
} else {
E_SCSF2B = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF3A(String s) {
if (!s.trim().isEmpty()) {
E_SCSF3A = Byte.parseByte(s);
} else {
E_SCSF3A = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF3B(String s) {
if (!s.trim().isEmpty()) {
E_SCSF3B = Byte.parseByte(s);
} else {
E_SCSF3B = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF4A(String s) {
if (!s.trim().isEmpty()) {
E_SCSF4A = Byte.parseByte(s);
} else {
E_SCSF4A = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF4B(String s) {
if (!s.trim().isEmpty()) {
E_SCSF4B = Byte.parseByte(s);
} else {
E_SCSF4B = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF5(String s) {
if (!s.trim().isEmpty()) {
E_SCSF5 = Byte.parseByte(s);
} else {
E_SCSF5 = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF6A(String s) {
if (!s.trim().isEmpty()) {
E_SCSF6A = Byte.parseByte(s);
} else {
E_SCSF6A = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF6B(String s) {
if (!s.trim().isEmpty()) {
E_SCSF6B = Byte.parseByte(s);
} else {
E_SCSF6B = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF6C(String s) {
if (!s.trim().isEmpty()) {
E_SCSF6C = Byte.parseByte(s);
} else {
E_SCSF6C = Byte.MIN_VALUE;
}
}

protected final void initE_SCSF7(String s) {
if (!s.trim().isEmpty()) {
E_SCSF7 = Byte.parseByte(s);
} else {
E_SCSF7 = Byte.MIN_VALUE;
}
}

protected final void initE_SCSSUP1(String s) {
if (!s.trim().isEmpty()) {
E_SCSSUP1 = Byte.parseByte(s);
} else {
E_SCSSUP1 = Byte.MIN_VALUE;
}
}

protected final void initE_SCSSUPR2R(String s) {
if (!s.trim().isEmpty()) {
E_SCSSUPR2R = Byte.parseByte(s);
} else {
E_SCSSUPR2R = Byte.MIN_VALUE;
}
}

protected final void initE_SCUN1(String s) {
if (!s.trim().isEmpty()) {
E_SCUN1 = Byte.parseByte(s);
} else {
E_SCUN1 = Byte.MIN_VALUE;
}
}

protected final void initE_SCUN2(String s) {
if (!s.trim().isEmpty()) {
E_SCUN2 = Byte.parseByte(s);
} else {
E_SCUN2 = Byte.MIN_VALUE;
}
}

protected final void initE_SCUN3(String s) {
if (!s.trim().isEmpty()) {
E_SCUN3 = Byte.parseByte(s);
} else {
E_SCUN3 = Byte.MIN_VALUE;
}
}

protected final void initE_SCUN97(String s) {
if (!s.trim().isEmpty()) {
E_SCUN97 = Byte.parseByte(s);
} else {
E_SCUN97 = Byte.MIN_VALUE;
}
}

protected final void initE_SCUX_CODE(String s) {
if (!s.trim().isEmpty()) {
E_SCUX_CODE = Byte.parseByte(s);
} else {
E_SCUX_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_SCWHORUAGE(String s) {
if (!s.trim().isEmpty()) {
E_SCWHORUAGE = Byte.parseByte(s);
} else {
E_SCWHORUAGE = Byte.MIN_VALUE;
}
}

protected final void initE_SCWHORUEDU(String s) {
if (!s.trim().isEmpty()) {
E_SCWHORUEDU = Byte.parseByte(s);
} else {
E_SCWHORUEDU = Byte.MIN_VALUE;
}
}

protected final void initE_SCWHORUFAM(String s) {
if (!s.trim().isEmpty()) {
E_SCWHORUFAM = Byte.parseByte(s);
} else {
E_SCWHORUFAM = Byte.MIN_VALUE;
}
}

protected final void initE_SCWHORUPOL(String s) {
if (!s.trim().isEmpty()) {
E_SCWHORUPOL = Byte.parseByte(s);
} else {
E_SCWHORUPOL = Byte.MIN_VALUE;
}
}

protected final void initE_SCWHORUPRO(String s) {
if (!s.trim().isEmpty()) {
E_SCWHORUPRO = Byte.parseByte(s);
} else {
E_SCWHORUPRO = Byte.MIN_VALUE;
}
}

protected final void initE_SCWHORURAC(String s) {
if (!s.trim().isEmpty()) {
E_SCWHORURAC = Byte.parseByte(s);
} else {
E_SCWHORURAC = Byte.MIN_VALUE;
}
}

protected final void initE_SCWHORUSEX(String s) {
if (!s.trim().isEmpty()) {
E_SCWHORUSEX = Byte.parseByte(s);
} else {
E_SCWHORUSEX = Byte.MIN_VALUE;
}
}

protected final void initE_SE1(String s) {
if (!s.trim().isEmpty()) {
E_SE1 = Byte.parseByte(s);
} else {
E_SE1 = Byte.MIN_VALUE;
}
}

protected final void initE_SE10(String s) {
if (!s.trim().isEmpty()) {
E_SE10 = Byte.parseByte(s);
} else {
E_SE10 = Byte.MIN_VALUE;
}
}

protected final void initE_SE2(String s) {
if (!s.trim().isEmpty()) {
E_SE2 = Byte.parseByte(s);
} else {
E_SE2 = Byte.MIN_VALUE;
}
}

protected final void initE_SE3(String s) {
if (!s.trim().isEmpty()) {
E_SE3 = Byte.parseByte(s);
} else {
E_SE3 = Byte.MIN_VALUE;
}
}

protected final void initE_SE4(String s) {
if (!s.trim().isEmpty()) {
E_SE4 = Byte.parseByte(s);
} else {
E_SE4 = Byte.MIN_VALUE;
}
}

protected final void initE_SE5(String s) {
if (!s.trim().isEmpty()) {
E_SE5 = Byte.parseByte(s);
} else {
E_SE5 = Byte.MIN_VALUE;
}
}

protected final void initE_SE6(String s) {
if (!s.trim().isEmpty()) {
E_SE6 = Byte.parseByte(s);
} else {
E_SE6 = Byte.MIN_VALUE;
}
}

protected final void initE_SE7(String s) {
if (!s.trim().isEmpty()) {
E_SE7 = Byte.parseByte(s);
} else {
E_SE7 = Byte.MIN_VALUE;
}
}

protected final void initE_SE8(String s) {
if (!s.trim().isEmpty()) {
E_SE8 = Byte.parseByte(s);
} else {
E_SE8 = Byte.MIN_VALUE;
}
}

protected final void initE_SE9(String s) {
if (!s.trim().isEmpty()) {
E_SE9 = Byte.parseByte(s);
} else {
E_SE9 = Byte.MIN_VALUE;
}
}

protected final void initE_SEEARNGRS_DV(String s) {
if (!s.trim().isEmpty()) {
E_SEEARNGRS_DV = Double.parseDouble(s);
} else {
E_SEEARNGRS_DV = Double.NaN;
}
}

protected final void initE_SEEARNGRS_IF(String s) {
if (!s.trim().isEmpty()) {
E_SEEARNGRS_IF = Byte.parseByte(s);
} else {
E_SEEARNGRS_IF = Byte.MIN_VALUE;
}
}

protected final void initE_SEEARNNET_DV(String s) {
if (!s.trim().isEmpty()) {
E_SEEARNNET_DV = Double.parseDouble(s);
} else {
E_SEEARNNET_DV = Double.NaN;
}
}

protected final void initE_SEEKID(String s) {
if (!s.trim().isEmpty()) {
E_SEEKID = Byte.parseByte(s);
} else {
E_SEEKID = Byte.MIN_VALUE;
}
}

protected final void initE_SEX(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
E_SEX = false;
} else {
E_SEX = true;
}
}
}

protected final void initE_SEXUOR(String s) {
if (!s.trim().isEmpty()) {
E_SEXUOR = Byte.parseByte(s);
} else {
E_SEXUOR = Byte.MIN_VALUE;
}
}

protected final void initE_SEX_DV(String s) {
if (!s.trim().isEmpty()) {
E_SEX_DV = Byte.parseByte(s);
} else {
E_SEX_DV = Byte.MIN_VALUE;
}
}

protected final void initE_SF1(String s) {
if (!s.trim().isEmpty()) {
E_SF1 = Byte.parseByte(s);
} else {
E_SF1 = Byte.MIN_VALUE;
}
}

protected final void initE_SF12MCS_DV(String s) {
if (!s.trim().isEmpty()) {
E_SF12MCS_DV = Double.parseDouble(s);
} else {
E_SF12MCS_DV = Double.NaN;
}
}

protected final void initE_SF12PCS_DV(String s) {
if (!s.trim().isEmpty()) {
E_SF12PCS_DV = Double.parseDouble(s);
} else {
E_SF12PCS_DV = Double.NaN;
}
}

protected final void initE_SIBHIT(String s) {
if (!s.trim().isEmpty()) {
E_SIBHIT = Byte.parseByte(s);
} else {
E_SIBHIT = Byte.MIN_VALUE;
}
}

protected final void initE_SIBLING(String s) {
if (!s.trim().isEmpty()) {
E_SIBLING = Byte.parseByte(s);
} else {
E_SIBLING = Byte.MIN_VALUE;
}
}

protected final void initE_SIBSTEAL(String s) {
if (!s.trim().isEmpty()) {
E_SIBSTEAL = Byte.parseByte(s);
} else {
E_SIBSTEAL = Byte.MIN_VALUE;
}
}

protected final void initE_SIBTEASE(String s) {
if (!s.trim().isEmpty()) {
E_SIBTEASE = Byte.parseByte(s);
} else {
E_SIBTEASE = Byte.MIN_VALUE;
}
}

protected final void initE_SIBVERAB(String s) {
if (!s.trim().isEmpty()) {
E_SIBVERAB = Byte.parseByte(s);
} else {
E_SIBVERAB = Byte.MIN_VALUE;
}
}

protected final void initE_SIGNEDUCKIDS1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_SIGNEDUCKIDS1 = false;
} else {
E_SIGNEDUCKIDS1 = true;
}
}
}

protected final void initE_SIGNEDUCKIDS2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_SIGNEDUCKIDS2 = false;
} else {
E_SIGNEDUCKIDS2 = true;
}
}
}

protected final void initE_SIGNHEALTHKIDS1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_SIGNHEALTHKIDS1 = false;
} else {
E_SIGNHEALTHKIDS1 = true;
}
}
}

protected final void initE_SIGNHEALTHKIDS2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_SIGNHEALTHKIDS2 = false;
} else {
E_SIGNHEALTHKIDS2 = true;
}
}
}

protected final void initE_SINGLE_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
E_SINGLE_DV = false;
} else {
E_SINGLE_DV = true;
}
}
}

protected final void initE_SLAPKID(String s) {
if (!s.trim().isEmpty()) {
E_SLAPKID = Byte.parseByte(s);
} else {
E_SLAPKID = Byte.MIN_VALUE;
}
}

protected final void initE_SMAGBG(String s) {
if (!s.trim().isEmpty()) {
E_SMAGBG = Byte.parseByte(s);
} else {
E_SMAGBG = Byte.MIN_VALUE;
}
}

protected final void initE_SMARTMOB(String s) {
if (!s.trim().isEmpty()) {
E_SMARTMOB = Byte.parseByte(s);
} else {
E_SMARTMOB = Byte.MIN_VALUE;
}
}

protected final void initE_SMCIGS(String s) {
if (!s.trim().isEmpty()) {
E_SMCIGS = Byte.parseByte(s);
} else {
E_SMCIGS = Byte.MIN_VALUE;
}
}

protected final void initE_SMEVER(String s) {
if (!s.trim().isEmpty()) {
E_SMEVER = Byte.parseByte(s);
} else {
E_SMEVER = Byte.MIN_VALUE;
}
}

protected final void initE_SMKMNTH11(String s) {
if (!s.trim().isEmpty()) {
E_SMKMNTH11 = Byte.parseByte(s);
} else {
E_SMKMNTH11 = Byte.MIN_VALUE;
}
}

protected final void initE_SMKMNTH12(String s) {
if (!s.trim().isEmpty()) {
E_SMKMNTH12 = Byte.parseByte(s);
} else {
E_SMKMNTH12 = Byte.MIN_VALUE;
}
}

protected final void initE_SMKMNTH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_SMKMNTH13 = false;
} else {
E_SMKMNTH13 = true;
}
}
}

protected final void initE_SMKMNTH21(String s) {
if (!s.trim().isEmpty()) {
E_SMKMNTH21 = Byte.parseByte(s);
} else {
E_SMKMNTH21 = Byte.MIN_VALUE;
}
}

protected final void initE_SMKMNTH22(String s) {
if (!s.trim().isEmpty()) {
E_SMKMNTH22 = Byte.parseByte(s);
} else {
E_SMKMNTH22 = Byte.MIN_VALUE;
}
}

protected final void initE_SMKMNTH23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_SMKMNTH23 = false;
} else {
E_SMKMNTH23 = true;
}
}
}

protected final void initE_SMKMNTH31(String s) {
if (!s.trim().isEmpty()) {
E_SMKMNTH31 = Byte.parseByte(s);
} else {
E_SMKMNTH31 = Byte.MIN_VALUE;
}
}

protected final void initE_SMKMNTH32(String s) {
if (!s.trim().isEmpty()) {
E_SMKMNTH32 = Byte.parseByte(s);
} else {
E_SMKMNTH32 = Byte.MIN_VALUE;
}
}

protected final void initE_SMKMNTH33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_SMKMNTH33 = false;
} else {
E_SMKMNTH33 = true;
}
}
}

protected final void initE_SMNCIGS(String s) {
if (!s.trim().isEmpty()) {
E_SMNCIGS = Byte.parseByte(s);
} else {
E_SMNCIGS = Byte.MIN_VALUE;
}
}

protected final void initE_SMNOW(String s) {
if (!s.trim().isEmpty()) {
E_SMNOW = Byte.parseByte(s);
} else {
E_SMNOW = Byte.MIN_VALUE;
}
}

protected final void initE_SOCCONT(String s) {
if (!s.trim().isEmpty()) {
E_SOCCONT = Byte.parseByte(s);
} else {
E_SOCCONT = Byte.MIN_VALUE;
}
}

protected final void initE_SOCIALKID(String s) {
if (!s.trim().isEmpty()) {
E_SOCIALKID = Byte.parseByte(s);
} else {
E_SOCIALKID = Byte.MIN_VALUE;
}
}

protected final void initE_SPKDIF(String s) {
if (!s.trim().isEmpty()) {
E_SPKDIF = Byte.parseByte(s);
} else {
E_SPKDIF = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTACT(String s) {
if (!s.trim().isEmpty()) {
E_SPORTACT = Byte.parseByte(s);
} else {
E_SPORTACT = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTOTH_CODE(String s) {
if (!s.trim().isEmpty()) {
E_SPORTOTH_CODE = Byte.parseByte(s);
} else {
E_SPORTOTH_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS11(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS11 = Byte.parseByte(s);
} else {
E_SPORTS11 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS110(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS110 = Byte.parseByte(s);
} else {
E_SPORTS110 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS111(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS111 = Byte.parseByte(s);
} else {
E_SPORTS111 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS112(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS112 = Byte.parseByte(s);
} else {
E_SPORTS112 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS113(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS113 = Byte.parseByte(s);
} else {
E_SPORTS113 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS114(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS114 = Byte.parseByte(s);
} else {
E_SPORTS114 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS12(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS12 = Byte.parseByte(s);
} else {
E_SPORTS12 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS13(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS13 = Byte.parseByte(s);
} else {
E_SPORTS13 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS14(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS14 = Byte.parseByte(s);
} else {
E_SPORTS14 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS15(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS15 = Byte.parseByte(s);
} else {
E_SPORTS15 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS16(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS16 = Byte.parseByte(s);
} else {
E_SPORTS16 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS17(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS17 = Byte.parseByte(s);
} else {
E_SPORTS17 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS18(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS18 = Byte.parseByte(s);
} else {
E_SPORTS18 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS19(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS19 = Byte.parseByte(s);
} else {
E_SPORTS19 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS196(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS196 = Byte.parseByte(s);
} else {
E_SPORTS196 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS216(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS216 = Byte.parseByte(s);
} else {
E_SPORTS216 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS217(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS217 = Byte.parseByte(s);
} else {
E_SPORTS217 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS218(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS218 = Byte.parseByte(s);
} else {
E_SPORTS218 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS219(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS219 = Byte.parseByte(s);
} else {
E_SPORTS219 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS220(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS220 = Byte.parseByte(s);
} else {
E_SPORTS220 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS221(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS221 = Byte.parseByte(s);
} else {
E_SPORTS221 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS222(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS222 = Byte.parseByte(s);
} else {
E_SPORTS222 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS223(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS223 = Byte.parseByte(s);
} else {
E_SPORTS223 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS224(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS224 = Byte.parseByte(s);
} else {
E_SPORTS224 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS225(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS225 = Byte.parseByte(s);
} else {
E_SPORTS225 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS226(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS226 = Byte.parseByte(s);
} else {
E_SPORTS226 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS227(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS227 = Byte.parseByte(s);
} else {
E_SPORTS227 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS228(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS228 = Byte.parseByte(s);
} else {
E_SPORTS228 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS229(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS229 = Byte.parseByte(s);
} else {
E_SPORTS229 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS230(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS230 = Byte.parseByte(s);
} else {
E_SPORTS230 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS231(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS231 = Byte.parseByte(s);
} else {
E_SPORTS231 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS296(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS296 = Byte.parseByte(s);
} else {
E_SPORTS296 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS31(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS31 = Byte.parseByte(s);
} else {
E_SPORTS31 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS32(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS32 = Byte.parseByte(s);
} else {
E_SPORTS32 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS33(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS33 = Byte.parseByte(s);
} else {
E_SPORTS33 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS34(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS34 = Byte.parseByte(s);
} else {
E_SPORTS34 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS35(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS35 = Byte.parseByte(s);
} else {
E_SPORTS35 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS36(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS36 = Byte.parseByte(s);
} else {
E_SPORTS36 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS37(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS37 = Byte.parseByte(s);
} else {
E_SPORTS37 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS38(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS38 = Byte.parseByte(s);
} else {
E_SPORTS38 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS39(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS39 = Byte.parseByte(s);
} else {
E_SPORTS39 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS396(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS396 = Byte.parseByte(s);
} else {
E_SPORTS396 = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTS3FREQ(String s) {
if (!s.trim().isEmpty()) {
E_SPORTS3FREQ = Byte.parseByte(s);
} else {
E_SPORTS3FREQ = Byte.MIN_VALUE;
}
}

protected final void initE_SPORTSFREQ(String s) {
if (!s.trim().isEmpty()) {
E_SPORTSFREQ = Byte.parseByte(s);
} else {
E_SPORTSFREQ = Byte.MIN_VALUE;
}
}

protected final void initE_SPPEN(String s) {
if (!s.trim().isEmpty()) {
E_SPPEN = Byte.parseByte(s);
} else {
E_SPPEN = Byte.MIN_VALUE;
}
}

protected final void initE_SPPID(String s) {
if (!s.trim().isEmpty()) {
E_SPPID = Integer.parseInt(s);
} else {
E_SPPID = Integer.MIN_VALUE;
}
}

protected final void initE_SPPNO(String s) {
if (!s.trim().isEmpty()) {
E_SPPNO = Byte.parseByte(s);
} else {
E_SPPNO = Byte.MIN_VALUE;
}
}

protected final void initE_STATCM1(String s) {
if (!s.trim().isEmpty()) {
E_STATCM1 = Byte.parseByte(s);
} else {
E_STATCM1 = Byte.MIN_VALUE;
}
}

protected final void initE_STATCM2(String s) {
if (!s.trim().isEmpty()) {
E_STATCM2 = Byte.parseByte(s);
} else {
E_STATCM2 = Byte.MIN_VALUE;
}
}

protected final void initE_STATCY41(String s) {
if (!s.trim().isEmpty()) {
E_STATCY41 = Short.parseShort(s);
} else {
E_STATCY41 = Short.MIN_VALUE;
}
}

protected final void initE_STATCY42(String s) {
if (!s.trim().isEmpty()) {
E_STATCY42 = Short.parseShort(s);
} else {
E_STATCY42 = Short.MIN_VALUE;
}
}

protected final void initE_STATENDD1(String s) {
if (!s.trim().isEmpty()) {
E_STATENDD1 = Byte.parseByte(s);
} else {
E_STATENDD1 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDD2(String s) {
if (!s.trim().isEmpty()) {
E_STATENDD2 = Byte.parseByte(s);
} else {
E_STATENDD2 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDD3(String s) {
if (!s.trim().isEmpty()) {
E_STATENDD3 = Byte.parseByte(s);
} else {
E_STATENDD3 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDD4(String s) {
if (!s.trim().isEmpty()) {
E_STATENDD4 = Byte.parseByte(s);
} else {
E_STATENDD4 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDD5(String s) {
if (!s.trim().isEmpty()) {
E_STATENDD5 = Byte.parseByte(s);
} else {
E_STATENDD5 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDD6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_STATENDD6 = false;
} else {
E_STATENDD6 = true;
}
}
}

protected final void initE_STATENDM1(String s) {
if (!s.trim().isEmpty()) {
E_STATENDM1 = Byte.parseByte(s);
} else {
E_STATENDM1 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDM2(String s) {
if (!s.trim().isEmpty()) {
E_STATENDM2 = Byte.parseByte(s);
} else {
E_STATENDM2 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDM3(String s) {
if (!s.trim().isEmpty()) {
E_STATENDM3 = Byte.parseByte(s);
} else {
E_STATENDM3 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDM4(String s) {
if (!s.trim().isEmpty()) {
E_STATENDM4 = Byte.parseByte(s);
} else {
E_STATENDM4 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDM5(String s) {
if (!s.trim().isEmpty()) {
E_STATENDM5 = Byte.parseByte(s);
} else {
E_STATENDM5 = Byte.MIN_VALUE;
}
}

protected final void initE_STATENDM6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_STATENDM6 = false;
} else {
E_STATENDM6 = true;
}
}
}

protected final void initE_STATENDY41(String s) {
if (!s.trim().isEmpty()) {
E_STATENDY41 = Short.parseShort(s);
} else {
E_STATENDY41 = Short.MIN_VALUE;
}
}

protected final void initE_STATENDY42(String s) {
if (!s.trim().isEmpty()) {
E_STATENDY42 = Short.parseShort(s);
} else {
E_STATENDY42 = Short.MIN_VALUE;
}
}

protected final void initE_STATENDY43(String s) {
if (!s.trim().isEmpty()) {
E_STATENDY43 = Short.parseShort(s);
} else {
E_STATENDY43 = Short.MIN_VALUE;
}
}

protected final void initE_STATENDY44(String s) {
if (!s.trim().isEmpty()) {
E_STATENDY44 = Short.parseShort(s);
} else {
E_STATENDY44 = Short.MIN_VALUE;
}
}

protected final void initE_STATENDY45(String s) {
if (!s.trim().isEmpty()) {
E_STATENDY45 = Short.parseShort(s);
} else {
E_STATENDY45 = Short.MIN_VALUE;
}
}

protected final void initE_STATENDY46(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
E_STATENDY46 = false;
} else {
E_STATENDY46 = true;
}
}
}

protected final void initE_STAYKID(String s) {
if (!s.trim().isEmpty()) {
E_STAYKID = Short.parseShort(s);
} else {
E_STAYKID = Short.MIN_VALUE;
}
}

protected final void initE_STAYKIDW(String s) {
if (!s.trim().isEmpty()) {
E_STAYKIDW = Byte.parseByte(s);
} else {
E_STAYKIDW = Byte.MIN_VALUE;
}
}

protected final void initE_STEALSIB(String s) {
if (!s.trim().isEmpty()) {
E_STEALSIB = Byte.parseByte(s);
} else {
E_STEALSIB = Byte.MIN_VALUE;
}
}

protected final void initE_STENDREAS(String s) {
if (!s.trim().isEmpty()) {
E_STENDREAS = Byte.parseByte(s);
} else {
E_STENDREAS = Byte.MIN_VALUE;
}
}

protected final void initE_STEPREL(String s) {
if (!s.trim().isEmpty()) {
E_STEPREL = Byte.parseByte(s);
} else {
E_STEPREL = Byte.MIN_VALUE;
}
}

protected final void initE_STRATA(String s) {
if (!s.trim().isEmpty()) {
E_STRATA = Short.parseShort(s);
} else {
E_STRATA = Short.MIN_VALUE;
}
}

protected final void initE_SUSP(String s) {
if (!s.trim().isEmpty()) {
E_SUSP = Byte.parseByte(s);
} else {
E_SUSP = Byte.MIN_VALUE;
}
}

protected final void initE_TALKMATTER(String s) {
if (!s.trim().isEmpty()) {
E_TALKMATTER = Byte.parseByte(s);
} else {
E_TALKMATTER = Byte.MIN_VALUE;
}
}

protected final void initE_TEASESIB(String s) {
if (!s.trim().isEmpty()) {
E_TEASESIB = Byte.parseByte(s);
} else {
E_TEASESIB = Byte.MIN_VALUE;
}
}

protected final void initE_TELDIF(String s) {
if (!s.trim().isEmpty()) {
E_TELDIF = Byte.parseByte(s);
} else {
E_TELDIF = Byte.MIN_VALUE;
}
}

protected final void initE_TLKF(String s) {
if (!s.trim().isEmpty()) {
E_TLKF = Byte.parseByte(s);
} else {
E_TLKF = Byte.MIN_VALUE;
}
}

protected final void initE_TLKM(String s) {
if (!s.trim().isEmpty()) {
E_TLKM = Byte.parseByte(s);
} else {
E_TLKM = Byte.MIN_VALUE;
}
}

protected final void initE_TMTIME(String s) {
if (!s.trim().isEmpty()) {
E_TMTIME = Short.parseShort(s);
} else {
E_TMTIME = Short.MIN_VALUE;
}
}

protected final void initE_TRAINANY(String s) {
if (!s.trim().isEmpty()) {
E_TRAINANY = Byte.parseByte(s);
} else {
E_TRAINANY = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINDAYS1(String s) {
if (!s.trim().isEmpty()) {
E_TRAINDAYS1 = Short.parseShort(s);
} else {
E_TRAINDAYS1 = Short.MIN_VALUE;
}
}

protected final void initE_TRAINDAYS2(String s) {
if (!s.trim().isEmpty()) {
E_TRAINDAYS2 = Short.parseShort(s);
} else {
E_TRAINDAYS2 = Short.MIN_VALUE;
}
}

protected final void initE_TRAINDAYS3(String s) {
if (!s.trim().isEmpty()) {
E_TRAINDAYS3 = Short.parseShort(s);
} else {
E_TRAINDAYS3 = Short.MIN_VALUE;
}
}

protected final void initE_TRAINEND1(String s) {
if (!s.trim().isEmpty()) {
E_TRAINEND1 = Byte.parseByte(s);
} else {
E_TRAINEND1 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINEND2(String s) {
if (!s.trim().isEmpty()) {
E_TRAINEND2 = Byte.parseByte(s);
} else {
E_TRAINEND2 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINEND3(String s) {
if (!s.trim().isEmpty()) {
E_TRAINEND3 = Byte.parseByte(s);
} else {
E_TRAINEND3 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINHRS1(String s) {
if (!s.trim().isEmpty()) {
E_TRAINHRS1 = Byte.parseByte(s);
} else {
E_TRAINHRS1 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINHRS2(String s) {
if (!s.trim().isEmpty()) {
E_TRAINHRS2 = Byte.parseByte(s);
} else {
E_TRAINHRS2 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINHRS3(String s) {
if (!s.trim().isEmpty()) {
E_TRAINHRS3 = Byte.parseByte(s);
} else {
E_TRAINHRS3 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINN(String s) {
if (!s.trim().isEmpty()) {
E_TRAINN = Byte.parseByte(s);
} else {
E_TRAINN = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP11(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP11 = Byte.parseByte(s);
} else {
E_TRAINPURP11 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP12(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP12 = Byte.parseByte(s);
} else {
E_TRAINPURP12 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP13(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP13 = Byte.parseByte(s);
} else {
E_TRAINPURP13 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP21(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP21 = Byte.parseByte(s);
} else {
E_TRAINPURP21 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP22(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP22 = Byte.parseByte(s);
} else {
E_TRAINPURP22 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP23(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP23 = Byte.parseByte(s);
} else {
E_TRAINPURP23 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP31(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP31 = Byte.parseByte(s);
} else {
E_TRAINPURP31 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP32(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP32 = Byte.parseByte(s);
} else {
E_TRAINPURP32 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP33(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP33 = Byte.parseByte(s);
} else {
E_TRAINPURP33 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP41(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP41 = Byte.parseByte(s);
} else {
E_TRAINPURP41 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP42(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP42 = Byte.parseByte(s);
} else {
E_TRAINPURP42 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP43(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP43 = Byte.parseByte(s);
} else {
E_TRAINPURP43 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP51(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP51 = Byte.parseByte(s);
} else {
E_TRAINPURP51 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP52(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP52 = Byte.parseByte(s);
} else {
E_TRAINPURP52 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP53(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP53 = Byte.parseByte(s);
} else {
E_TRAINPURP53 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP61(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP61 = Byte.parseByte(s);
} else {
E_TRAINPURP61 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP62(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP62 = Byte.parseByte(s);
} else {
E_TRAINPURP62 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP63(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP63 = Byte.parseByte(s);
} else {
E_TRAINPURP63 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP71(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP71 = Byte.parseByte(s);
} else {
E_TRAINPURP71 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP72(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP72 = Byte.parseByte(s);
} else {
E_TRAINPURP72 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINPURP73(String s) {
if (!s.trim().isEmpty()) {
E_TRAINPURP73 = Byte.parseByte(s);
} else {
E_TRAINPURP73 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINQUAL1(String s) {
if (!s.trim().isEmpty()) {
E_TRAINQUAL1 = Byte.parseByte(s);
} else {
E_TRAINQUAL1 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINQUAL2(String s) {
if (!s.trim().isEmpty()) {
E_TRAINQUAL2 = Byte.parseByte(s);
} else {
E_TRAINQUAL2 = Byte.MIN_VALUE;
}
}

protected final void initE_TRAINQUAL3(String s) {
if (!s.trim().isEmpty()) {
E_TRAINQUAL3 = Byte.parseByte(s);
} else {
E_TRAINQUAL3 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL1(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL1 = Byte.parseByte(s);
} else {
E_TRQUAL1 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL10(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL10 = Byte.parseByte(s);
} else {
E_TRQUAL10 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL11(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL11 = Byte.parseByte(s);
} else {
E_TRQUAL11 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL13(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL13 = Byte.parseByte(s);
} else {
E_TRQUAL13 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL15(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL15 = Byte.parseByte(s);
} else {
E_TRQUAL15 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL16(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL16 = Byte.parseByte(s);
} else {
E_TRQUAL16 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL17(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL17 = Byte.parseByte(s);
} else {
E_TRQUAL17 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL18(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL18 = Byte.parseByte(s);
} else {
E_TRQUAL18 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL19(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL19 = Byte.parseByte(s);
} else {
E_TRQUAL19 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL2(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL2 = Byte.parseByte(s);
} else {
E_TRQUAL2 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL20(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL20 = Byte.parseByte(s);
} else {
E_TRQUAL20 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL21(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL21 = Byte.parseByte(s);
} else {
E_TRQUAL21 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL22(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL22 = Byte.parseByte(s);
} else {
E_TRQUAL22 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL23(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL23 = Byte.parseByte(s);
} else {
E_TRQUAL23 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL24(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL24 = Byte.parseByte(s);
} else {
E_TRQUAL24 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL25(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL25 = Byte.parseByte(s);
} else {
E_TRQUAL25 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL26(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL26 = Byte.parseByte(s);
} else {
E_TRQUAL26 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL27(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL27 = Byte.parseByte(s);
} else {
E_TRQUAL27 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL28(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL28 = Byte.parseByte(s);
} else {
E_TRQUAL28 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL29(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL29 = Byte.parseByte(s);
} else {
E_TRQUAL29 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL3(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL3 = Byte.parseByte(s);
} else {
E_TRQUAL3 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL30(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL30 = Byte.parseByte(s);
} else {
E_TRQUAL30 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL31(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL31 = Byte.parseByte(s);
} else {
E_TRQUAL31 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL4(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL4 = Byte.parseByte(s);
} else {
E_TRQUAL4 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL5(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL5 = Byte.parseByte(s);
} else {
E_TRQUAL5 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL6(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL6 = Byte.parseByte(s);
} else {
E_TRQUAL6 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL7(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL7 = Byte.parseByte(s);
} else {
E_TRQUAL7 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL8(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL8 = Byte.parseByte(s);
} else {
E_TRQUAL8 = Byte.MIN_VALUE;
}
}

protected final void initE_TRQUAL9(String s) {
if (!s.trim().isEmpty()) {
E_TRQUAL9 = Byte.parseByte(s);
} else {
E_TRQUAL9 = Byte.MIN_VALUE;
}
}

protected final void initE_TRWHO1(String s) {
if (!s.trim().isEmpty()) {
E_TRWHO1 = Byte.parseByte(s);
} else {
E_TRWHO1 = Byte.MIN_VALUE;
}
}

protected final void initE_TRWHO2(String s) {
if (!s.trim().isEmpty()) {
E_TRWHO2 = Byte.parseByte(s);
} else {
E_TRWHO2 = Byte.MIN_VALUE;
}
}

protected final void initE_TRWHO3(String s) {
if (!s.trim().isEmpty()) {
E_TRWHO3 = Byte.parseByte(s);
} else {
E_TRWHO3 = Byte.MIN_VALUE;
}
}

protected final void initE_UKBORN(String s) {
if (!s.trim().isEmpty()) {
E_UKBORN = Byte.parseByte(s);
} else {
E_UKBORN = Byte.MIN_VALUE;
}
}

protected final void initE_UNDQUS(String s) {
if (!s.trim().isEmpty()) {
E_UNDQUS = Byte.parseByte(s);
} else {
E_UNDQUS = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE1(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE1 = Byte.parseByte(s);
} else {
E_UNSAFE1 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE10(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE10 = Byte.parseByte(s);
} else {
E_UNSAFE10 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE11(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE11 = Byte.parseByte(s);
} else {
E_UNSAFE11 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE2(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE2 = Byte.parseByte(s);
} else {
E_UNSAFE2 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE3(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE3 = Byte.parseByte(s);
} else {
E_UNSAFE3 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE4(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE4 = Byte.parseByte(s);
} else {
E_UNSAFE4 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE5(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE5 = Byte.parseByte(s);
} else {
E_UNSAFE5 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE6(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE6 = Byte.parseByte(s);
} else {
E_UNSAFE6 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE7(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE7 = Byte.parseByte(s);
} else {
E_UNSAFE7 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE8(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE8 = Byte.parseByte(s);
} else {
E_UNSAFE8 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE9(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE9 = Byte.parseByte(s);
} else {
E_UNSAFE9 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE96(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE96 = Byte.parseByte(s);
} else {
E_UNSAFE96 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE97(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE97 = Byte.parseByte(s);
} else {
E_UNSAFE97 = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFEO_CODE(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFEO_CODE = Byte.parseByte(s);
} else {
E_UNSAFEO_CODE = Byte.MIN_VALUE;
}
}

protected final void initE_UNSAFE_DV(String s) {
if (!s.trim().isEmpty()) {
E_UNSAFE_DV = Byte.parseByte(s);
} else {
E_UNSAFE_DV = Byte.MIN_VALUE;
}
}

protected final void initE_UPSET(String s) {
if (!s.trim().isEmpty()) {
E_UPSET = Byte.parseByte(s);
} else {
E_UPSET = Byte.MIN_VALUE;
}
}

protected final void initE_URBAN_DV(String s) {
if (!s.trim().isEmpty()) {
E_URBAN_DV = Byte.parseByte(s);
} else {
E_URBAN_DV = Byte.MIN_VALUE;
}
}

protected final void initE_USBREAD(String s) {
if (!s.trim().isEmpty()) {
E_USBREAD = Byte.parseByte(s);
} else {
E_USBREAD = Byte.MIN_VALUE;
}
}

protected final void initE_USDAIRY(String s) {
if (!s.trim().isEmpty()) {
E_USDAIRY = Byte.parseByte(s);
} else {
E_USDAIRY = Byte.MIN_VALUE;
}
}

protected final void initE_VERABSIB(String s) {
if (!s.trim().isEmpty()) {
E_VERABSIB = Byte.parseByte(s);
} else {
E_VERABSIB = Byte.MIN_VALUE;
}
}

protected final void initE_VOLRECPER(String s) {
if (!s.trim().isEmpty()) {
E_VOLRECPER = Byte.parseByte(s);
} else {
E_VOLRECPER = Byte.MIN_VALUE;
}
}

protected final void initE_VOTE1(String s) {
if (!s.trim().isEmpty()) {
E_VOTE1 = Byte.parseByte(s);
} else {
E_VOTE1 = Byte.MIN_VALUE;
}
}

protected final void initE_VOTE2(String s) {
if (!s.trim().isEmpty()) {
E_VOTE2 = Byte.parseByte(s);
} else {
E_VOTE2 = Byte.MIN_VALUE;
}
}

protected final void initE_VOTE3(String s) {
if (!s.trim().isEmpty()) {
E_VOTE3 = Byte.parseByte(s);
} else {
E_VOTE3 = Byte.MIN_VALUE;
}
}

protected final void initE_VOTE4(String s) {
if (!s.trim().isEmpty()) {
E_VOTE4 = Byte.parseByte(s);
} else {
E_VOTE4 = Byte.MIN_VALUE;
}
}

protected final void initE_VOTE5(String s) {
if (!s.trim().isEmpty()) {
E_VOTE5 = Byte.parseByte(s);
} else {
E_VOTE5 = Byte.MIN_VALUE;
}
}

protected final void initE_VOTE6(String s) {
if (!s.trim().isEmpty()) {
E_VOTE6 = Byte.parseByte(s);
} else {
E_VOTE6 = Byte.MIN_VALUE;
}
}

protected final void initE_VOUCHER(String s) {
if (!s.trim().isEmpty()) {
E_VOUCHER = Byte.parseByte(s);
} else {
E_VOUCHER = Byte.MIN_VALUE;
}
}

protected final void initE_VOUCHERNI(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
E_VOUCHERNI = false;
} else {
E_VOUCHERNI = true;
}
}
}

protected final void initE_VREGLINK(String s) {
if (!s.trim().isEmpty()) {
E_VREGLINK = Byte.parseByte(s);
} else {
E_VREGLINK = Byte.MIN_VALUE;
}
}

protected final void initE_VREGUKN(String s) {
if (!s.trim().isEmpty()) {
E_VREGUKN = Byte.parseByte(s);
} else {
E_VREGUKN = Byte.MIN_VALUE;
}
}

protected final void initE_WALKPACE(String s) {
if (!s.trim().isEmpty()) {
E_WALKPACE = Byte.parseByte(s);
} else {
E_WALKPACE = Byte.MIN_VALUE;
}
}

protected final void initE_WEKID(String s) {
if (!s.trim().isEmpty()) {
E_WEKID = Byte.parseByte(s);
} else {
E_WEKID = Byte.MIN_VALUE;
}
}

protected final void initE_WKFRUIT(String s) {
if (!s.trim().isEmpty()) {
E_WKFRUIT = Byte.parseByte(s);
} else {
E_WKFRUIT = Byte.MIN_VALUE;
}
}

protected final void initE_WKPHYS(String s) {
if (!s.trim().isEmpty()) {
E_WKPHYS = Byte.parseByte(s);
} else {
E_WKPHYS = Byte.MIN_VALUE;
}
}

protected final void initE_WKPLSAM(String s) {
if (!s.trim().isEmpty()) {
E_WKPLSAM = Byte.parseByte(s);
} else {
E_WKPLSAM = Byte.MIN_VALUE;
}
}

protected final void initE_WKVEGE(String s) {
if (!s.trim().isEmpty()) {
E_WKVEGE = Byte.parseByte(s);
} else {
E_WKVEGE = Byte.MIN_VALUE;
}
}

protected final void initE_WLK10M(String s) {
if (!s.trim().isEmpty()) {
E_WLK10M = Byte.parseByte(s);
} else {
E_WLK10M = Byte.MIN_VALUE;
}
}

protected final void initE_WLK30MIN(String s) {
if (!s.trim().isEmpty()) {
E_WLK30MIN = Byte.parseByte(s);
} else {
E_WLK30MIN = Byte.MIN_VALUE;
}
}

protected final void initE_WORKTRAV(String s) {
if (!s.trim().isEmpty()) {
E_WORKTRAV = Byte.parseByte(s);
} else {
E_WORKTRAV = Byte.MIN_VALUE;
}
}

protected final void initE_XPMOVE(String s) {
if (!s.trim().isEmpty()) {
E_XPMOVE = Byte.parseByte(s);
} else {
E_XPMOVE = Byte.MIN_VALUE;
}
}

protected final void initE_XPMVMNTH(String s) {
if (!s.trim().isEmpty()) {
E_XPMVMNTH = Byte.parseByte(s);
} else {
E_XPMVMNTH = Byte.MIN_VALUE;
}
}

protected final void initE_XPMVWHN(String s) {
if (!s.trim().isEmpty()) {
E_XPMVWHN = Byte.parseByte(s);
} else {
E_XPMVWHN = Byte.MIN_VALUE;
}
}

protected final void initE_XPMVWHR(String s) {
if (!s.trim().isEmpty()) {
E_XPMVWHR = Byte.parseByte(s);
} else {
E_XPMVWHR = Byte.MIN_VALUE;
}
}

protected final void initE_XPMVYR(String s) {
if (!s.trim().isEmpty()) {
E_XPMVYR = Short.parseShort(s);
} else {
E_XPMVYR = Short.MIN_VALUE;
}
}

protected final void initE_XTRA5MINOSM_DV(String s) {
if (!s.trim().isEmpty()) {
E_XTRA5MINOSM_DV = Byte.parseByte(s);
} else {
E_XTRA5MINOSM_DV = Byte.MIN_VALUE;
}
}

protected final void initE_XTRA5MIN_DV(String s) {
if (!s.trim().isEmpty()) {
E_XTRA5MIN_DV = Byte.parseByte(s);
} else {
E_XTRA5MIN_DV = Byte.MIN_VALUE;
}
}

protected final void initE_YAJBSRV1(String s) {
if (!s.trim().isEmpty()) {
E_YAJBSRV1 = Byte.parseByte(s);
} else {
E_YAJBSRV1 = Byte.MIN_VALUE;
}
}

protected final void initE_YAJBSRV2(String s) {
if (!s.trim().isEmpty()) {
E_YAJBSRV2 = Byte.parseByte(s);
} else {
E_YAJBSRV2 = Byte.MIN_VALUE;
}
}

protected final void initE_YAJBSRV3(String s) {
if (!s.trim().isEmpty()) {
E_YAJBSRV3 = Byte.parseByte(s);
} else {
E_YAJBSRV3 = Byte.MIN_VALUE;
}
}

protected final void initE_YAJBSRV4(String s) {
if (!s.trim().isEmpty()) {
E_YAJBSRV4 = Byte.parseByte(s);
} else {
E_YAJBSRV4 = Byte.MIN_VALUE;
}
}

protected final void initE_YAJBSRV5(String s) {
if (!s.trim().isEmpty()) {
E_YAJBSRV5 = Byte.parseByte(s);
} else {
E_YAJBSRV5 = Byte.MIN_VALUE;
}
}

protected final void initE_YAJBSRV7(String s) {
if (!s.trim().isEmpty()) {
E_YAJBSRV7 = Byte.parseByte(s);
} else {
E_YAJBSRV7 = Byte.MIN_VALUE;
}
}

protected final void initE_YAJBSRV8(String s) {
if (!s.trim().isEmpty()) {
E_YAJBSRV8 = Byte.parseByte(s);
} else {
E_YAJBSRV8 = Byte.MIN_VALUE;
}
}

protected final void initE_YAJBSRV96(String s) {
if (!s.trim().isEmpty()) {
E_YAJBSRV96 = Byte.parseByte(s);
} else {
E_YAJBSRV96 = Byte.MIN_VALUE;
}
}

protected final void initE_YANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
E_YANSSEC5_DV = Byte.parseByte(s);
} else {
E_YANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initE_YASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
E_YASOC00_CC = Short.parseShort(s);
} else {
E_YASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initE_YASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
E_YASOC10_CC = Short.parseShort(s);
} else {
E_YASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initE_YASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
E_YASOC90_CC = Byte.parseByte(s);
} else {
E_YASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initE_YELLKID(String s) {
if (!s.trim().isEmpty()) {
E_YELLKID = Byte.parseByte(s);
} else {
E_YELLKID = Byte.MIN_VALUE;
}
}

protected final void initE_YPNETCHT(String s) {
if (!s.trim().isEmpty()) {
E_YPNETCHT = Byte.parseByte(s);
} else {
E_YPNETCHT = Byte.MIN_VALUE;
}
}

protected final void initE_YPNPAL(String s) {
if (!s.trim().isEmpty()) {
E_YPNPAL = Byte.parseByte(s);
} else {
E_YPNPAL = Byte.MIN_VALUE;
}
}

protected final void initE_YPSOCWEB(String s) {
if (!s.trim().isEmpty()) {
E_YPSOCWEB = Byte.parseByte(s);
} else {
E_YPSOCWEB = Byte.MIN_VALUE;
}
}

protected final void initE_YR2UK4(String s) {
if (!s.trim().isEmpty()) {
E_YR2UK4 = Short.parseShort(s);
} else {
E_YR2UK4 = Short.MIN_VALUE;
}
}

public byte getE_ADCTS() {
return E_ADCTS;
}

public byte getE_ADOPTCH01() {
return E_ADOPTCH01;
}

public byte getE_ADOPTCH02() {
return E_ADOPTCH02;
}

public byte getE_ADOPTCH03() {
return E_ADOPTCH03;
}

public byte getE_ADOPTCH04() {
return E_ADOPTCH04;
}

public byte getE_ADOPTCH05() {
return E_ADOPTCH05;
}

public boolean getE_ADOPTCH06() {
return E_ADOPTCH06;
}

public boolean getE_ADOPTCH07() {
return E_ADOPTCH07;
}

public boolean getE_ADOPTCH08() {
return E_ADOPTCH08;
}

public boolean getE_ADOPTCH09() {
return E_ADOPTCH09;
}

public boolean getE_ADOPTCH10() {
return E_ADOPTCH10;
}

public boolean getE_ADOPTCH11() {
return E_ADOPTCH11;
}

public boolean getE_ADOPTCH12() {
return E_ADOPTCH12;
}

public boolean getE_ADOPTCH13() {
return E_ADOPTCH13;
}

public boolean getE_ADOPTCH14() {
return E_ADOPTCH14;
}

public boolean getE_ADOPTCH15() {
return E_ADOPTCH15;
}

public boolean getE_ADOPTCH16() {
return E_ADOPTCH16;
}

public byte getE_ADSTATUS() {
return E_ADSTATUS;
}

public byte getE_ADVVOUCHER() {
return E_ADVVOUCHER;
}

public byte getE_AEDROF1() {
return E_AEDROF1;
}

public byte getE_AEDROF2() {
return E_AEDROF2;
}

public boolean getE_AEDROF3() {
return E_AEDROF3;
}

protected double E_AEPUDA1() {
return E_AEPUDA1;
}

public byte getE_AEPUDA2() {
return E_AEPUDA2;
}

public boolean getE_AEPUDA3() {
return E_AEPUDA3;
}

public byte getE_AEPUWK1() {
return E_AEPUWK1;
}

public boolean getE_AEPUWK2() {
return E_AEPUWK2;
}

public boolean getE_AEPUWK3() {
return E_AEPUWK3;
}

public byte getE_AGEGR10_DV() {
return E_AGEGR10_DV;
}

public byte getE_AGEGR13_DV() {
return E_AGEGR13_DV;
}

public byte getE_AGEGR5_DV() {
return E_AGEGR5_DV;
}

public byte getE_AGERET() {
return E_AGERET;
}

public byte getE_AGE_DV() {
return E_AGE_DV;
}

public byte getE_AGLQUIT() {
return E_AGLQUIT;
}

public byte getE_AHVWELL() {
return E_AHVWELL;
}

public byte getE_AIDEFT() {
return E_AIDEFT;
}

public byte getE_AIDHH() {
return E_AIDHH;
}

public byte getE_AIDHRS() {
return E_AIDHRS;
}

public byte getE_AIDHU1() {
return E_AIDHU1;
}

public byte getE_AIDHU2() {
return E_AIDHU2;
}

public byte getE_AIDHUA1() {
return E_AIDHUA1;
}

public byte getE_AIDHUA10() {
return E_AIDHUA10;
}

public byte getE_AIDHUA11() {
return E_AIDHUA11;
}

public byte getE_AIDHUA12() {
return E_AIDHUA12;
}

public byte getE_AIDHUA13() {
return E_AIDHUA13;
}

public byte getE_AIDHUA14() {
return E_AIDHUA14;
}

public byte getE_AIDHUA15() {
return E_AIDHUA15;
}

public byte getE_AIDHUA16() {
return E_AIDHUA16;
}

public byte getE_AIDHUA2() {
return E_AIDHUA2;
}

public byte getE_AIDHUA3() {
return E_AIDHUA3;
}

public byte getE_AIDHUA4() {
return E_AIDHUA4;
}

public byte getE_AIDHUA5() {
return E_AIDHUA5;
}

public byte getE_AIDHUA6() {
return E_AIDHUA6;
}

public byte getE_AIDHUA7() {
return E_AIDHUA7;
}

public byte getE_AIDHUA8() {
return E_AIDHUA8;
}

public byte getE_AIDHUA9() {
return E_AIDHUA9;
}

public byte getE_AIDXHH() {
return E_AIDXHH;
}

public byte getE_ALLCH01() {
return E_ALLCH01;
}

public byte getE_ALLCH02() {
return E_ALLCH02;
}

public byte getE_ALLCH03() {
return E_ALLCH03;
}

public byte getE_ALLCH04() {
return E_ALLCH04;
}

public byte getE_ALLCH05() {
return E_ALLCH05;
}

public byte getE_ALLCH06() {
return E_ALLCH06;
}

public byte getE_ALLCH07() {
return E_ALLCH07;
}

public boolean getE_ALLCH08() {
return E_ALLCH08;
}

public boolean getE_ALLCH09() {
return E_ALLCH09;
}

public boolean getE_ALLCH10() {
return E_ALLCH10;
}

public boolean getE_ALLCH11() {
return E_ALLCH11;
}

public boolean getE_ALLCH12() {
return E_ALLCH12;
}

public boolean getE_ALLCH13() {
return E_ALLCH13;
}

public boolean getE_ALLCH14() {
return E_ALLCH14;
}

public boolean getE_ALLCH15() {
return E_ALLCH15;
}

public boolean getE_ALLCH16() {
return E_ALLCH16;
}

public byte getE_ANYMORE() {
return E_ANYMORE;
}

public byte getE_ANYMORE2() {
return E_ANYMORE2;
}

public byte getE_ANYMORE3() {
return E_ANYMORE3;
}

public byte getE_ANYMORE4() {
return E_ANYMORE4;
}

public byte getE_APVOCIMP() {
return E_APVOCIMP;
}

public byte getE_ARCFREQ() {
return E_ARCFREQ;
}

public byte getE_AREA() {
return E_AREA;
}

public byte getE_ARGF() {
return E_ARGF;
}

public byte getE_ARGM() {
return E_ARGM;
}

public byte getE_ARTS1A1() {
return E_ARTS1A1;
}

public byte getE_ARTS1A2() {
return E_ARTS1A2;
}

public byte getE_ARTS1A3() {
return E_ARTS1A3;
}

public byte getE_ARTS1A4() {
return E_ARTS1A4;
}

public byte getE_ARTS1A5() {
return E_ARTS1A5;
}

public byte getE_ARTS1A6() {
return E_ARTS1A6;
}

public byte getE_ARTS1A7() {
return E_ARTS1A7;
}

public byte getE_ARTS1A96() {
return E_ARTS1A96;
}

public byte getE_ARTS1B10() {
return E_ARTS1B10;
}

public byte getE_ARTS1B11() {
return E_ARTS1B11;
}

public byte getE_ARTS1B12() {
return E_ARTS1B12;
}

public byte getE_ARTS1B13() {
return E_ARTS1B13;
}

public byte getE_ARTS1B14() {
return E_ARTS1B14;
}

public byte getE_ARTS1B15() {
return E_ARTS1B15;
}

public byte getE_ARTS1B9() {
return E_ARTS1B9;
}

public byte getE_ARTS1B96() {
return E_ARTS1B96;
}

public byte getE_ARTS1FREQ() {
return E_ARTS1FREQ;
}

public byte getE_ARTS2A1() {
return E_ARTS2A1;
}

public byte getE_ARTS2A2() {
return E_ARTS2A2;
}

public byte getE_ARTS2A3() {
return E_ARTS2A3;
}

public byte getE_ARTS2A4() {
return E_ARTS2A4;
}

public byte getE_ARTS2A5() {
return E_ARTS2A5;
}

public byte getE_ARTS2A6() {
return E_ARTS2A6;
}

public byte getE_ARTS2A7() {
return E_ARTS2A7;
}

public byte getE_ARTS2A96() {
return E_ARTS2A96;
}

public byte getE_ARTS2B10() {
return E_ARTS2B10;
}

public byte getE_ARTS2B11() {
return E_ARTS2B11;
}

public byte getE_ARTS2B12() {
return E_ARTS2B12;
}

public byte getE_ARTS2B13() {
return E_ARTS2B13;
}

public byte getE_ARTS2B14() {
return E_ARTS2B14;
}

public byte getE_ARTS2B15() {
return E_ARTS2B15;
}

public byte getE_ARTS2B9() {
return E_ARTS2B9;
}

public byte getE_ARTS2B96() {
return E_ARTS2B96;
}

public byte getE_ARTS2FREQ() {
return E_ARTS2FREQ;
}

public byte getE_ATTACKED1() {
return E_ATTACKED1;
}

public byte getE_ATTACKED10() {
return E_ATTACKED10;
}

public byte getE_ATTACKED11() {
return E_ATTACKED11;
}

public byte getE_ATTACKED2() {
return E_ATTACKED2;
}

public byte getE_ATTACKED3() {
return E_ATTACKED3;
}

public byte getE_ATTACKED4() {
return E_ATTACKED4;
}

public byte getE_ATTACKED5() {
return E_ATTACKED5;
}

public byte getE_ATTACKED6() {
return E_ATTACKED6;
}

public byte getE_ATTACKED7() {
return E_ATTACKED7;
}

public byte getE_ATTACKED8() {
return E_ATTACKED8;
}

public byte getE_ATTACKED9() {
return E_ATTACKED9;
}

public byte getE_ATTACKED96() {
return E_ATTACKED96;
}

public byte getE_ATTACKED97() {
return E_ATTACKED97;
}

public byte getE_ATTACKEDO_CODE() {
return E_ATTACKEDO_CODE;
}

public byte getE_ATTACKED_DV() {
return E_ATTACKED_DV;
}

public byte getE_AVOIDANCE1() {
return E_AVOIDANCE1;
}

public byte getE_AVOIDANCE10() {
return E_AVOIDANCE10;
}

public byte getE_AVOIDANCE11() {
return E_AVOIDANCE11;
}

public byte getE_AVOIDANCE2() {
return E_AVOIDANCE2;
}

public byte getE_AVOIDANCE3() {
return E_AVOIDANCE3;
}

public byte getE_AVOIDANCE4() {
return E_AVOIDANCE4;
}

public byte getE_AVOIDANCE5() {
return E_AVOIDANCE5;
}

public byte getE_AVOIDANCE6() {
return E_AVOIDANCE6;
}

public byte getE_AVOIDANCE7() {
return E_AVOIDANCE7;
}

public byte getE_AVOIDANCE8() {
return E_AVOIDANCE8;
}

public byte getE_AVOIDANCE9() {
return E_AVOIDANCE9;
}

public byte getE_AVOIDANCE96() {
return E_AVOIDANCE96;
}

public byte getE_AVOIDANCE97() {
return E_AVOIDANCE97;
}

public byte getE_AVOIDANCEO_CODE() {
return E_AVOIDANCEO_CODE;
}

public byte getE_AVOIDED_DV() {
return E_AVOIDED_DV;
}

public byte getE_BASNSA() {
return E_BASNSA;
}

protected double E_BASRATE() {
return E_BASRATE;
}

public byte getE_BASREST() {
return E_BASREST;
}

public byte getE_BENCB() {
return E_BENCB;
}

public byte getE_BENCTC() {
return E_BENCTC;
}

public byte getE_BENDIS1() {
return E_BENDIS1;
}

public byte getE_BENDIS10() {
return E_BENDIS10;
}

public byte getE_BENDIS11() {
return E_BENDIS11;
}

public byte getE_BENDIS12() {
return E_BENDIS12;
}

public byte getE_BENDIS2() {
return E_BENDIS2;
}

public byte getE_BENDIS3() {
return E_BENDIS3;
}

public byte getE_BENDIS4() {
return E_BENDIS4;
}

public byte getE_BENDIS5() {
return E_BENDIS5;
}

public byte getE_BENDIS6() {
return E_BENDIS6;
}

public byte getE_BENDIS7() {
return E_BENDIS7;
}

public byte getE_BENDIS8() {
return E_BENDIS8;
}

public byte getE_BENDIS9() {
return E_BENDIS9;
}

public byte getE_BENDIS96() {
return E_BENDIS96;
}

public byte getE_BENDIS97() {
return E_BENDIS97;
}

public byte getE_BENESA() {
return E_BENESA;
}

public byte getE_BENFAM1() {
return E_BENFAM1;
}

public byte getE_BENFAM10() {
return E_BENFAM10;
}

public byte getE_BENFAM2() {
return E_BENFAM2;
}

public byte getE_BENFAM3() {
return E_BENFAM3;
}

public byte getE_BENFAM4() {
return E_BENFAM4;
}

public byte getE_BENFAM5() {
return E_BENFAM5;
}

public byte getE_BENFAM6() {
return E_BENFAM6;
}

public byte getE_BENFAM7() {
return E_BENFAM7;
}

public byte getE_BENFAM8() {
return E_BENFAM8;
}

public byte getE_BENFAM9() {
return E_BENFAM9;
}

public byte getE_BENFAM96() {
return E_BENFAM96;
}

public byte getE_BENHOU1() {
return E_BENHOU1;
}

public byte getE_BENHOU2() {
return E_BENHOU2;
}

public byte getE_BENHOU3() {
return E_BENHOU3;
}

public byte getE_BENHOU4() {
return E_BENHOU4;
}

public byte getE_BENHOU5() {
return E_BENHOU5;
}

public byte getE_BENHOU6() {
return E_BENHOU6;
}

public byte getE_BENHOU7() {
return E_BENHOU7;
}

public byte getE_BENHOU8() {
return E_BENHOU8;
}

public byte getE_BENHOU9() {
return E_BENHOU9;
}

public byte getE_BENHOU96() {
return E_BENHOU96;
}

public byte getE_BENPEN1() {
return E_BENPEN1;
}

public byte getE_BENPEN10() {
return E_BENPEN10;
}

public byte getE_BENPEN11() {
return E_BENPEN11;
}

public byte getE_BENPEN12() {
return E_BENPEN12;
}

public byte getE_BENPEN13() {
return E_BENPEN13;
}

public byte getE_BENPEN2() {
return E_BENPEN2;
}

public byte getE_BENPEN3() {
return E_BENPEN3;
}

public byte getE_BENPEN4() {
return E_BENPEN4;
}

public byte getE_BENPEN5() {
return E_BENPEN5;
}

public byte getE_BENPEN6() {
return E_BENPEN6;
}

public byte getE_BENPEN7() {
return E_BENPEN7;
}

public byte getE_BENPEN8() {
return E_BENPEN8;
}

public byte getE_BENPEN96() {
return E_BENPEN96;
}

public byte getE_BENSTA1() {
return E_BENSTA1;
}

public byte getE_BENSTA10() {
return E_BENSTA10;
}

public byte getE_BENSTA11() {
return E_BENSTA11;
}

public byte getE_BENSTA12() {
return E_BENSTA12;
}

public byte getE_BENSTA13() {
return E_BENSTA13;
}

public byte getE_BENSTA2() {
return E_BENSTA2;
}

public byte getE_BENSTA3() {
return E_BENSTA3;
}

public byte getE_BENSTA4() {
return E_BENSTA4;
}

public byte getE_BENSTA5() {
return E_BENSTA5;
}

public byte getE_BENSTA6() {
return E_BENSTA6;
}

public byte getE_BENSTA7() {
return E_BENSTA7;
}

public byte getE_BENSTA9() {
return E_BENSTA9;
}

public byte getE_BENSTA96() {
return E_BENSTA96;
}

public byte getE_BENSTA97() {
return E_BENSTA97;
}

public byte getE_BENTAX1() {
return E_BENTAX1;
}

public byte getE_BENTAX10() {
return E_BENTAX10;
}

public byte getE_BENTAX2() {
return E_BENTAX2;
}

public byte getE_BENTAX3() {
return E_BENTAX3;
}

public byte getE_BENTAX4() {
return E_BENTAX4;
}

public byte getE_BENTAX5() {
return E_BENTAX5;
}

public byte getE_BENTAX7() {
return E_BENTAX7;
}

public byte getE_BENTAX8() {
return E_BENTAX8;
}

public byte getE_BENTAX9() {
return E_BENTAX9;
}

public byte getE_BENTAX96() {
return E_BENTAX96;
}

public byte getE_BENUNEMP1() {
return E_BENUNEMP1;
}

public byte getE_BENUNEMP2() {
return E_BENUNEMP2;
}

public byte getE_BENUNEMP3() {
return E_BENUNEMP3;
}

public byte getE_BENUNEMP4() {
return E_BENUNEMP4;
}

public byte getE_BENUNEMP5() {
return E_BENUNEMP5;
}

public byte getE_BENUNEMP6() {
return E_BENUNEMP6;
}

public byte getE_BENUNEMP7() {
return E_BENUNEMP7;
}

public byte getE_BENUNEMP96() {
return E_BENUNEMP96;
}

public short getE_BIRTHY() {
return E_BIRTHY;
}

public byte getE_BOSSETHN() {
return E_BOSSETHN;
}

public byte getE_BOSSSEX() {
return E_BOSSSEX;
}

public byte getE_BTYPE1() {
return E_BTYPE1;
}

public byte getE_BTYPE10() {
return E_BTYPE10;
}

public byte getE_BTYPE2() {
return E_BTYPE2;
}

public byte getE_BTYPE3() {
return E_BTYPE3;
}

public byte getE_BTYPE4() {
return E_BTYPE4;
}

public byte getE_BTYPE5() {
return E_BTYPE5;
}

public byte getE_BTYPE6() {
return E_BTYPE6;
}

public byte getE_BTYPE7() {
return E_BTYPE7;
}

public byte getE_BTYPE8() {
return E_BTYPE8;
}

public byte getE_BTYPE9() {
return E_BTYPE9;
}

public byte getE_BTYPE96() {
return E_BTYPE96;
}

public byte getE_BUNO_DV() {
return E_BUNO_DV;
}

public byte getE_CAIDU1() {
return E_CAIDU1;
}

public byte getE_CAIDU2() {
return E_CAIDU2;
}

public byte getE_CAIDU3() {
return E_CAIDU3;
}

public byte getE_CAIDU4() {
return E_CAIDU4;
}

public byte getE_CAIDU5() {
return E_CAIDU5;
}

public byte getE_CAIDU6() {
return E_CAIDU6;
}

public byte getE_CAIDU7() {
return E_CAIDU7;
}

public byte getE_CAIDU8() {
return E_CAIDU8;
}

public byte getE_CAIDU96() {
return E_CAIDU96;
}

public byte getE_CAIDU97() {
return E_CAIDU97;
}

public byte getE_CAPGIFTV() {
return E_CAPGIFTV;
}

public byte getE_CARUSE() {
return E_CARUSE;
}

public byte getE_CASIEND() {
return E_CASIEND;
}

public byte getE_CATGIFTV() {
return E_CATGIFTV;
}

public byte getE_CATVOUCHER() {
return E_CATVOUCHER;
}

public byte getE_CCARE() {
return E_CCARE;
}

public byte getE_CCWORK() {
return E_CCWORK;
}

public byte getE_CDPREAMBLE() {
return E_CDPREAMBLE;
}

public short getE_CH1BY4() {
return E_CH1BY4;
}

public byte getE_CHAID1() {
return E_CHAID1;
}

public byte getE_CHAID2() {
return E_CHAID2;
}

public byte getE_CHAID3() {
return E_CHAID3;
}

public byte getE_CHAID4() {
return E_CHAID4;
}

public byte getE_CHAID5() {
return E_CHAID5;
}

public byte getE_CHAID6() {
return E_CHAID6;
}

public byte getE_CHAID7() {
return E_CHAID7;
}

public byte getE_CHAID8() {
return E_CHAID8;
}

public byte getE_CHAID96() {
return E_CHAID96;
}

public byte getE_CHAID97() {
return E_CHAID97;
}

public byte getE_CHCON() {
return E_CHCON;
}

public byte getE_CHFAR() {
return E_CHFAR;
}

public byte getE_CHILDPNO() {
return E_CHILDPNO;
}

public byte getE_CHKCOA() {
return E_CHKCOA;
}

public byte getE_CHKRESP() {
return E_CHKRESP;
}

public byte getE_CHSEE() {
return E_CHSEE;
}

public int getE_CINDTIME() {
return E_CINDTIME;
}

public byte getE_CITZN1() {
return E_CITZN1;
}

public byte getE_CITZN2() {
return E_CITZN2;
}

public byte getE_CITZN3() {
return E_CITZN3;
}

public byte getE_CJBATT() {
return E_CJBATT;
}

public byte getE_CJOB() {
return E_CJOB;
}

public byte getE_CLUB() {
return E_CLUB;
}

public byte getE_CMCOKIDNO1() {
return E_CMCOKIDNO1;
}

public byte getE_CMCOKIDNO2() {
return E_CMCOKIDNO2;
}

public byte getE_CMCOKIDNO3() {
return E_CMCOKIDNO3;
}

public byte getE_CMCOKIDNO4() {
return E_CMCOKIDNO4;
}

public byte getE_CMCOKIDNO5() {
return E_CMCOKIDNO5;
}

public byte getE_CMCORD() {
return E_CMCORD;
}

public byte getE_CMCORDALL() {
return E_CMCORDALL;
}

protected double E_CMCORDAM() {
return E_CMCORDAM;
}

public byte getE_CMCORDPER() {
return E_CMCORDPER;
}

public short getE_CMCORDRCAM() {
return E_CMCORDRCAM;
}

public boolean getE_CMCORDRCPR() {
return E_CMCORDRCPR;
}

public byte getE_CMCORDREC() {
return E_CMCORDREC;
}

public byte getE_CMCORDTM() {
return E_CMCORDTM;
}

public byte getE_CMCSAACT() {
return E_CMCSAACT;
}

public byte getE_CMCSAALL() {
return E_CMCSAALL;
}

public short getE_CMCSAAM() {
return E_CMCSAAM;
}

public byte getE_CMCSANIL1() {
return E_CMCSANIL1;
}

public byte getE_CMCSANIL2() {
return E_CMCSANIL2;
}

public byte getE_CMCSANIL3() {
return E_CMCSANIL3;
}

public byte getE_CMCSANIL4() {
return E_CMCSANIL4;
}

public byte getE_CMCSANIL5() {
return E_CMCSANIL5;
}

public byte getE_CMCSANIL6() {
return E_CMCSANIL6;
}

public byte getE_CMCSANIL7() {
return E_CMCSANIL7;
}

public byte getE_CMCSANIL8() {
return E_CMCSANIL8;
}

public byte getE_CMCSANIL9() {
return E_CMCSANIL9;
}

public byte getE_CMCSANIL97() {
return E_CMCSANIL97;
}

public byte getE_CMCSAPER() {
return E_CMCSAPER;
}

public boolean getE_CMCSAPR() {
return E_CMCSAPR;
}

public byte getE_CMFLAG() {
return E_CMFLAG;
}

public byte getE_CMKNDEVR1() {
return E_CMKNDEVR1;
}

public byte getE_CMKNDEVR2() {
return E_CMKNDEVR2;
}

public byte getE_CMKNDEVR3() {
return E_CMKNDEVR3;
}

public byte getE_CMKNDEVR4() {
return E_CMKNDEVR4;
}

public byte getE_CMKNDEVR96() {
return E_CMKNDEVR96;
}

public byte getE_CMKNDEVR97() {
return E_CMKNDEVR97;
}

public byte getE_CMLSTAT1() {
return E_CMLSTAT1;
}

public byte getE_CMLSTAT2() {
return E_CMLSTAT2;
}

public byte getE_CMNIL1() {
return E_CMNIL1;
}

public byte getE_CMNIL10() {
return E_CMNIL10;
}

public byte getE_CMNIL2() {
return E_CMNIL2;
}

public byte getE_CMNIL3() {
return E_CMNIL3;
}

public byte getE_CMNIL4() {
return E_CMNIL4;
}

public byte getE_CMNIL5() {
return E_CMNIL5;
}

public byte getE_CMNIL6() {
return E_CMNIL6;
}

public byte getE_CMNIL7() {
return E_CMNIL7;
}

public byte getE_CMNIL8() {
return E_CMNIL8;
}

public byte getE_CMNIL9() {
return E_CMNIL9;
}

public byte getE_CMNIL97() {
return E_CMNIL97;
}

public byte getE_CMNKY1() {
return E_CMNKY1;
}

public byte getE_CMNKY2() {
return E_CMNKY2;
}

public byte getE_CMNKY3() {
return E_CMNKY3;
}

public byte getE_CMOTHPAY1() {
return E_CMOTHPAY1;
}

public byte getE_CMOTHPAY10() {
return E_CMOTHPAY10;
}

public byte getE_CMOTHPAY11() {
return E_CMOTHPAY11;
}

public byte getE_CMOTHPAY2() {
return E_CMOTHPAY2;
}

public byte getE_CMOTHPAY3() {
return E_CMOTHPAY3;
}

public byte getE_CMOTHPAY4() {
return E_CMOTHPAY4;
}

public byte getE_CMOTHPAY5() {
return E_CMOTHPAY5;
}

public byte getE_CMOTHPAY6() {
return E_CMOTHPAY6;
}

public byte getE_CMOTHPAY7() {
return E_CMOTHPAY7;
}

public byte getE_CMOTHPAY8() {
return E_CMOTHPAY8;
}

public byte getE_CMOTHPAY9() {
return E_CMOTHPAY9;
}

public byte getE_CMOTHPAY96() {
return E_CMOTHPAY96;
}

public byte getE_CMOTHPAY97() {
return E_CMOTHPAY97;
}

public byte getE_CMROUTE() {
return E_CMROUTE;
}

public byte getE_CMSAMEA() {
return E_CMSAMEA;
}

public byte getE_CMSAMEB() {
return E_CMSAMEB;
}

public byte getE_CMSAMEC() {
return E_CMSAMEC;
}

public byte getE_CMVOL() {
return E_CMVOL;
}

public byte getE_CMVOLALL() {
return E_CMVOLALL;
}

protected double E_CMVOLAM() {
return E_CMVOLAM;
}

public byte getE_CMVOLKIDNO1() {
return E_CMVOLKIDNO1;
}

public byte getE_CMVOLKIDNO2() {
return E_CMVOLKIDNO2;
}

public byte getE_CMVOLKIDNO3() {
return E_CMVOLKIDNO3;
}

public byte getE_CMVOLKIDNO4() {
return E_CMVOLKIDNO4;
}

public byte getE_CMVOLKIDNO5() {
return E_CMVOLKIDNO5;
}

public byte getE_CMVOLPER() {
return E_CMVOLPER;
}

public short getE_CMVOLRCAM() {
return E_CMVOLRCAM;
}

public byte getE_CMVOLRCPR() {
return E_CMVOLRCPR;
}

public byte getE_CMVOLREC() {
return E_CMVOLREC;
}

public byte getE_CMVOLTM() {
return E_CMVOLTM;
}

public byte getE_COH1BM() {
return E_COH1BM;
}

public short getE_COH1BY() {
return E_COH1BY;
}

public byte getE_COH1EM() {
return E_COH1EM;
}

public short getE_COH1EY() {
return E_COH1EY;
}

public byte getE_COH1MR() {
return E_COH1MR;
}

public byte getE_COHAB() {
return E_COHAB;
}

public byte getE_COHABN() {
return E_COHABN;
}

public boolean getE_COHAB_DV() {
return E_COHAB_DV;
}

public byte getE_CONSINTRO() {
return E_CONSINTRO;
}

public byte getE_CONTFT() {
return E_CONTFT;
}

public byte getE_CORDRECPER() {
return E_CORDRECPER;
}

public byte getE_COUNTRY() {
return E_COUNTRY;
}

public byte getE_COWOSEXN() {
return E_COWOSEXN;
}

public byte getE_COWOSEXP() {
return E_COWOSEXP;
}

public byte getE_CSACALC() {
return E_CSACALC;
}

protected double E_CSACALCAM() {
return E_CSACALCAM;
}

public byte getE_CSAKIDNO1() {
return E_CSAKIDNO1;
}

public byte getE_CSAKIDNO2() {
return E_CSAKIDNO2;
}

public byte getE_CSAKIDNO3() {
return E_CSAKIDNO3;
}

public byte getE_CSAKIDNO4() {
return E_CSAKIDNO4;
}

public byte getE_CSAKIDNO5() {
return E_CSAKIDNO5;
}

public byte getE_CSAPAYTO() {
return E_CSAPAYTO;
}

public byte getE_CSARECPER() {
return E_CSARECPER;
}

public byte getE_CSTAT() {
return E_CSTAT;
}

public byte getE_CTADD1_CODE() {
return E_CTADD1_CODE;
}

public byte getE_CTADD2_CODE() {
return E_CTADD2_CODE;
}

public byte getE_CTCNTY_CODE() {
return E_CTCNTY_CODE;
}

public byte getE_CTCONS() {
return E_CTCONS;
}

public byte getE_CTCONSCONF1() {
return E_CTCONSCONF1;
}

public byte getE_CTCONSCONF2() {
return E_CTCONSCONF2;
}

public byte getE_CTCONSCONF3() {
return E_CTCONSCONF3;
}

public byte getE_CTCONSCONF4() {
return E_CTCONSCONF4;
}

public byte getE_CTCONSCONF5() {
return E_CTCONSCONF5;
}

public byte getE_CTCONSCONF6() {
return E_CTCONSCONF6;
}

public byte getE_CTCONSCONF7() {
return E_CTCONSCONF7;
}

public byte getE_CTCONSCONF8() {
return E_CTCONSCONF8;
}

public byte getE_CTCONSCONF94() {
return E_CTCONSCONF94;
}

public byte getE_CTEMAIL_CODE() {
return E_CTEMAIL_CODE;
}

public byte getE_CTPCODE_CODE() {
return E_CTPCODE_CODE;
}

public byte getE_CTREL() {
return E_CTREL;
}

public byte getE_CTTEL1_CODE() {
return E_CTTEL1_CODE;
}

public byte getE_CTTEL2_CODE() {
return E_CTTEL2_CODE;
}

public byte getE_CTTOWN_CODE() {
return E_CTTOWN_CODE;
}

public byte getE_CUDDLEKID() {
return E_CUDDLEKID;
}

public byte getE_CULTUREA() {
return E_CULTUREA;
}

public byte getE_CULTUREB() {
return E_CULTUREB;
}

public byte getE_CULTUREC() {
return E_CULTUREC;
}

public byte getE_CULTURED() {
return E_CULTURED;
}

public byte getE_CULTUREE() {
return E_CULTUREE;
}

public byte getE_CULTUREF() {
return E_CULTUREF;
}

public byte getE_CULTUREG() {
return E_CULTUREG;
}

public byte getE_CURRJOB1() {
return E_CURRJOB1;
}

public byte getE_CURRJOB2() {
return E_CURRJOB2;
}

public byte getE_CURRJOB3() {
return E_CURRJOB3;
}

public byte getE_CURRJOB4() {
return E_CURRJOB4;
}

public byte getE_CURRJOB5() {
return E_CURRJOB5;
}

public byte getE_CURRJOB6() {
return E_CURRJOB6;
}

public byte getE_CURRPART1() {
return E_CURRPART1;
}

public byte getE_CURRPART2() {
return E_CURRPART2;
}

public byte getE_CURRPART3() {
return E_CURRPART3;
}

public boolean getE_CURRPART4() {
return E_CURRPART4;
}

public byte getE_CURRSTAT1() {
return E_CURRSTAT1;
}

public byte getE_CURRSTAT2() {
return E_CURRSTAT2;
}

public byte getE_CURRSTAT3() {
return E_CURRSTAT3;
}

public byte getE_CURRSTAT4() {
return E_CURRSTAT4;
}

public byte getE_CURRSTAT5() {
return E_CURRSTAT5;
}

public boolean getE_CURRSTAT6() {
return E_CURRSTAT6;
}

public byte getE_DAYWLK() {
return E_DAYWLK;
}

public byte getE_DCSATM() {
return E_DCSATM;
}

public byte getE_DELAY1() {
return E_DELAY1;
}

public byte getE_DELAY10() {
return E_DELAY10;
}

public byte getE_DELAY2() {
return E_DELAY2;
}

public byte getE_DELAY3() {
return E_DELAY3;
}

public byte getE_DELAY4() {
return E_DELAY4;
}

public byte getE_DELAY5() {
return E_DELAY5;
}

public byte getE_DELAY6() {
return E_DELAY6;
}

public byte getE_DELAY7() {
return E_DELAY7;
}

public byte getE_DELAY8() {
return E_DELAY8;
}

public byte getE_DELAY9() {
return E_DELAY9;
}

public boolean getE_DEPCHL_DV() {
return E_DEPCHL_DV;
}

public byte getE_DETINC1() {
return E_DETINC1;
}

public byte getE_DETINC2() {
return E_DETINC2;
}

public byte getE_DETINC3() {
return E_DETINC3;
}

public byte getE_DETINC4() {
return E_DETINC4;
}

public byte getE_DETINC5() {
return E_DETINC5;
}

public byte getE_DETINC6() {
return E_DETINC6;
}

public byte getE_DINNER() {
return E_DINNER;
}

public byte getE_DISDIF1() {
return E_DISDIF1;
}

public byte getE_DISDIF10() {
return E_DISDIF10;
}

public byte getE_DISDIF11() {
return E_DISDIF11;
}

public byte getE_DISDIF12() {
return E_DISDIF12;
}

public byte getE_DISDIF2() {
return E_DISDIF2;
}

public byte getE_DISDIF3() {
return E_DISDIF3;
}

public byte getE_DISDIF4() {
return E_DISDIF4;
}

public byte getE_DISDIF5() {
return E_DISDIF5;
}

public byte getE_DISDIF6() {
return E_DISDIF6;
}

public byte getE_DISDIF7() {
return E_DISDIF7;
}

public byte getE_DISDIF8() {
return E_DISDIF8;
}

public byte getE_DISDIF9() {
return E_DISDIF9;
}

public byte getE_DISDIF96() {
return E_DISDIF96;
}

public byte getE_DISEFFECTS1() {
return E_DISEFFECTS1;
}

public byte getE_DISEFFECTS2() {
return E_DISEFFECTS2;
}

public byte getE_DISEFFECTS3() {
return E_DISEFFECTS3;
}

public byte getE_DISEFFECTS4() {
return E_DISEFFECTS4;
}

public byte getE_DISEFFECTS5() {
return E_DISEFFECTS5;
}

public byte getE_DIVCHK1() {
return E_DIVCHK1;
}

public boolean getE_DIVCHK2() {
return E_DIVCHK2;
}

public byte getE_DIVFIN1() {
return E_DIVFIN1;
}

public boolean getE_DIVFIN2() {
return E_DIVFIN2;
}

public short getE_DOBY_DV() {
return E_DOBY_DV;
}

public byte getE_DONEPROXY() {
return E_DONEPROXY;
}

public byte getE_DRGMJ() {
return E_DRGMJ;
}

public byte getE_DRGOTH() {
return E_DRGOTH;
}

public byte getE_DRGSOL() {
return E_DRGSOL;
}

public byte getE_DRIVE() {
return E_DRIVE;
}

public byte getE_DVAGE() {
return E_DVAGE;
}

public byte getE_DVM1() {
return E_DVM1;
}

public boolean getE_DVM2() {
return E_DVM2;
}

public short getE_DVY41() {
return E_DVY41;
}

public boolean getE_DVY42() {
return E_DVY42;
}

public byte getE_EATLIVU() {
return E_EATLIVU;
}

public byte getE_EDASP() {
return E_EDASP;
}

public byte getE_EDLINK() {
return E_EDLINK;
}

public boolean getE_EDLINKCONF() {
return E_EDLINKCONF;
}

public boolean getE_EDLINKCONFB() {
return E_EDLINKCONFB;
}

public boolean getE_EDLINKKIDCONFSW() {
return E_EDLINKKIDCONFSW;
}

public boolean getE_EDLINKKIDE() {
return E_EDLINKKIDE;
}

public boolean getE_EDLINKKIDSWN() {
return E_EDLINKKIDSWN;
}

public boolean getE_EDLKKIDCONFE() {
return E_EDLKKIDCONFE;
}

public byte getE_EDTYPE() {
return E_EDTYPE;
}

public byte getE_EDUCATION() {
return E_EDUCATION;
}

public byte getE_EDUCISGN() {
return E_EDUCISGN;
}

public boolean getE_EDUCKIDSN() {
return E_EDUCKIDSN;
}

public byte getE_EDUCLINKB1() {
return E_EDUCLINKB1;
}

public byte getE_EDUCLINKB2() {
return E_EDUCLINKB2;
}

public byte getE_EDUCLINKB3() {
return E_EDUCLINKB3;
}

public byte getE_EDUCRECD() {
return E_EDUCRECD;
}

public byte getE_EDUCRSGN() {
return E_EDUCRSGN;
}

public byte getE_EDUCSN() {
return E_EDUCSN;
}

public byte getE_EMAILENT() {
return E_EMAILENT;
}

public byte getE_EMPCHK() {
return E_EMPCHK;
}

public byte getE_EMPINTRO() {
return E_EMPINTRO;
}

public byte getE_EMPLOY() {
return E_EMPLOY;
}

public byte getE_EMPSTENDD() {
return E_EMPSTENDD;
}

public byte getE_EMPSTENDM() {
return E_EMPSTENDM;
}

public short getE_EMPSTENDY4() {
return E_EMPSTENDY4;
}

public byte getE_ENDMNTH1() {
return E_ENDMNTH1;
}

public byte getE_ENDMNTH2() {
return E_ENDMNTH2;
}

public boolean getE_ENDMNTH3() {
return E_ENDMNTH3;
}

public byte getE_ENGFORM() {
return E_ENGFORM;
}

public byte getE_ENGLANG() {
return E_ENGLANG;
}

public byte getE_ENGREAD() {
return E_ENGREAD;
}

public byte getE_ENGSPK() {
return E_ENGSPK;
}

public byte getE_ENGTEL() {
return E_ENGTEL;
}

public byte getE_EPROSH() {
return E_EPROSH;
}

public byte getE_ETCOOTN() {
return E_ETCOOTN;
}

public byte getE_ETCOOTP() {
return E_ETCOOTP;
}

public byte getE_ETCOSAMN() {
return E_ETCOSAMN;
}

public byte getE_ETCOSAMP() {
return E_ETCOSAMP;
}

public byte getE_ETCOWHN() {
return E_ETCOWHN;
}

public byte getE_ETCOWHP() {
return E_ETCOWHP;
}

public byte getE_ETHCLOSE1() {
return E_ETHCLOSE1;
}

public byte getE_ETHCLOSE10() {
return E_ETHCLOSE10;
}

public byte getE_ETHCLOSE11() {
return E_ETHCLOSE11;
}

public byte getE_ETHCLOSE2A() {
return E_ETHCLOSE2A;
}

public byte getE_ETHCLOSE2B() {
return E_ETHCLOSE2B;
}

public byte getE_ETHCLOSE3() {
return E_ETHCLOSE3;
}

public byte getE_ETHCLOSE4A() {
return E_ETHCLOSE4A;
}

public byte getE_ETHCLOSE4B() {
return E_ETHCLOSE4B;
}

public byte getE_ETHCLOSE5() {
return E_ETHCLOSE5;
}

public byte getE_ETHCLOSE6() {
return E_ETHCLOSE6;
}

public byte getE_ETHCLOSE7() {
return E_ETHCLOSE7;
}

public byte getE_ETHCLOSE8() {
return E_ETHCLOSE8;
}

public byte getE_ETHCLOSE9() {
return E_ETHCLOSE9;
}

public byte getE_ETHID10() {
return E_ETHID10;
}

public byte getE_ETHID11() {
return E_ETHID11;
}

public byte getE_ETHID12() {
return E_ETHID12;
}

public byte getE_ETHID13() {
return E_ETHID13;
}

public byte getE_ETHID14() {
return E_ETHID14;
}

public byte getE_ETHID2() {
return E_ETHID2;
}

public byte getE_ETHID3() {
return E_ETHID3;
}

public byte getE_ETHID4A() {
return E_ETHID4A;
}

public byte getE_ETHID4B() {
return E_ETHID4B;
}

public byte getE_ETHID5() {
return E_ETHID5;
}

public byte getE_ETHID6() {
return E_ETHID6;
}

public byte getE_ETHID7() {
return E_ETHID7;
}

public byte getE_ETHID8() {
return E_ETHID8;
}

public byte getE_ETHID9() {
return E_ETHID9;
}

public byte getE_ETHN_DV() {
return E_ETHN_DV;
}

public byte getE_EVENT1() {
return E_EVENT1;
}

public byte getE_EVENT1S() {
return E_EVENT1S;
}

public byte getE_EVENT2() {
return E_EVENT2;
}

public byte getE_EVENT2S() {
return E_EVENT2S;
}

public byte getE_EVENT3() {
return E_EVENT3;
}

public byte getE_EVENT3S() {
return E_EVENT3S;
}

public byte getE_EVENT4() {
return E_EVENT4;
}

public byte getE_EVENT4S() {
return E_EVENT4S;
}

public byte getE_EXPREAM() {
return E_EXPREAM;
}

public byte getE_EXSAME() {
return E_EXSAME;
}

public byte getE_EXTNSA() {
return E_EXTNSA;
}

protected double E_EXTRATE() {
return E_EXTRATE;
}

public byte getE_EXTREST() {
return E_EXTREST;
}

public byte getE_FAMILY() {
return E_FAMILY;
}

public byte getE_FAMSUP() {
return E_FAMSUP;
}

public byte getE_FARKID() {
return E_FARKID;
}

public byte getE_FATHER() {
return E_FATHER;
}

public byte getE_FEEND() {
return E_FEEND;
}

public byte getE_FENOW() {
return E_FENOW;
}

public byte getE_FF_BENTYPE01() {
return E_FF_BENTYPE01;
}

public byte getE_FF_BENTYPE02() {
return E_FF_BENTYPE02;
}

public byte getE_FF_BENTYPE03() {
return E_FF_BENTYPE03;
}

public byte getE_FF_BENTYPE04() {
return E_FF_BENTYPE04;
}

public byte getE_FF_BENTYPE05() {
return E_FF_BENTYPE05;
}

public byte getE_FF_BENTYPE06() {
return E_FF_BENTYPE06;
}

public byte getE_FF_BENTYPE07() {
return E_FF_BENTYPE07;
}

public byte getE_FF_BENTYPE08() {
return E_FF_BENTYPE08;
}

public byte getE_FF_BENTYPE09() {
return E_FF_BENTYPE09;
}

public byte getE_FF_BENTYPE10() {
return E_FF_BENTYPE10;
}

public byte getE_FF_BENTYPE11() {
return E_FF_BENTYPE11;
}

public byte getE_FF_BENTYPE12() {
return E_FF_BENTYPE12;
}

public byte getE_FF_BENTYPE13() {
return E_FF_BENTYPE13;
}

public byte getE_FF_BENTYPE14() {
return E_FF_BENTYPE14;
}

public byte getE_FF_BENTYPE15() {
return E_FF_BENTYPE15;
}

public byte getE_FF_BENTYPE16() {
return E_FF_BENTYPE16;
}

public byte getE_FF_BENTYPE17() {
return E_FF_BENTYPE17;
}

public byte getE_FF_BENTYPE18() {
return E_FF_BENTYPE18;
}

public byte getE_FF_BENTYPE19() {
return E_FF_BENTYPE19;
}

public byte getE_FF_BENTYPE20() {
return E_FF_BENTYPE20;
}

public byte getE_FF_BENTYPE21() {
return E_FF_BENTYPE21;
}

public byte getE_FF_BENTYPE22() {
return E_FF_BENTYPE22;
}

public byte getE_FF_BENTYPE23() {
return E_FF_BENTYPE23;
}

public byte getE_FF_BENTYPE24() {
return E_FF_BENTYPE24;
}

public byte getE_FF_BENTYPE25() {
return E_FF_BENTYPE25;
}

public byte getE_FF_BENTYPE26() {
return E_FF_BENTYPE26;
}

public byte getE_FF_BENTYPE27() {
return E_FF_BENTYPE27;
}

public byte getE_FF_BENTYPE28() {
return E_FF_BENTYPE28;
}

public byte getE_FF_BENTYPE29() {
return E_FF_BENTYPE29;
}

public byte getE_FF_BENTYPE30() {
return E_FF_BENTYPE30;
}

public byte getE_FF_BENTYPE31() {
return E_FF_BENTYPE31;
}

public byte getE_FF_BENTYPE32() {
return E_FF_BENTYPE32;
}

public byte getE_FF_BENTYPE33() {
return E_FF_BENTYPE33;
}

public byte getE_FF_BENTYPE34() {
return E_FF_BENTYPE34;
}

public byte getE_FF_BENTYPE35() {
return E_FF_BENTYPE35;
}

public byte getE_FF_BENTYPE36() {
return E_FF_BENTYPE36;
}

public byte getE_FF_BENTYPE37() {
return E_FF_BENTYPE37;
}

public byte getE_FF_BENTYPE38() {
return E_FF_BENTYPE38;
}

public byte getE_FF_BENTYPE39() {
return E_FF_BENTYPE39;
}

public boolean getE_FF_BENTYPE40() {
return E_FF_BENTYPE40;
}

public boolean getE_FF_BENTYPE41() {
return E_FF_BENTYPE41;
}

public byte getE_FF_EMPLW() {
return E_FF_EMPLW;
}

public byte getE_FF_EVERINT() {
return E_FF_EVERINT;
}

public byte getE_FF_IVINTLANG() {
return E_FF_IVINTLANG;
}

public byte getE_FF_IVLOLW() {
return E_FF_IVLOLW;
}

public byte getE_FF_JBMNGR() {
return E_FF_JBMNGR;
}

public byte getE_FF_JBSEMP() {
return E_FF_JBSEMP;
}

public byte getE_FF_JBSIZE() {
return E_FF_JBSIZE;
}

public byte getE_FF_JBSTAT() {
return E_FF_JBSTAT;
}

public byte getE_FF_OPRLG() {
return E_FF_OPRLG;
}

public byte getE_FF_OPRLG0() {
return E_FF_OPRLG0;
}

public byte getE_FF_OPRLG0NI() {
return E_FF_OPRLG0NI;
}

public byte getE_FF_TEL() {
return E_FF_TEL;
}

public byte getE_FF_UKBORN() {
return E_FF_UKBORN;
}

public short getE_FF_YR2UK4() {
return E_FF_YR2UK4;
}

protected double E_FIBENOTHR_DV() {
return E_FIBENOTHR_DV;
}

protected double E_FIBENOTHR_IF() {
return E_FIBENOTHR_IF;
}

public boolean getE_FIBENOTHR_TC() {
return E_FIBENOTHR_TC;
}

protected double E_FIMNGRS_DV() {
return E_FIMNGRS_DV;
}

protected double E_FIMNGRS_IF() {
return E_FIMNGRS_IF;
}

public boolean getE_FIMNGRS_TC() {
return E_FIMNGRS_TC;
}

protected double E_FIMNINVNET_DV() {
return E_FIMNINVNET_DV;
}

protected double E_FIMNLABGRS_DV() {
return E_FIMNLABGRS_DV;
}

protected double E_FIMNLABGRS_IF() {
return E_FIMNLABGRS_IF;
}

public boolean getE_FIMNLABGRS_TC() {
return E_FIMNLABGRS_TC;
}

protected double E_FIMNLABNET_DV() {
return E_FIMNLABNET_DV;
}

public boolean getE_FIMNLABNET_TC() {
return E_FIMNLABNET_TC;
}

protected double E_FIMNMISC_DV() {
return E_FIMNMISC_DV;
}

protected double E_FIMNNET_DV() {
return E_FIMNNET_DV;
}

protected double E_FIMNPEN_DV() {
return E_FIMNPEN_DV;
}

protected double E_FIMNPRBEN_DV() {
return E_FIMNPRBEN_DV;
}

protected double E_FIMNSBEN_DV() {
return E_FIMNSBEN_DV;
}

public byte getE_FINFUT() {
return E_FINFUT;
}

public byte getE_FINNOW() {
return E_FINNOW;
}

public byte getE_FIYRDB1() {
return E_FIYRDB1;
}

public byte getE_FIYRDB2() {
return E_FIYRDB2;
}

public byte getE_FIYRDB3() {
return E_FIYRDB3;
}

public byte getE_FIYRDB4() {
return E_FIYRDB4;
}

public byte getE_FIYRDB5() {
return E_FIYRDB5;
}

public byte getE_FIYRDB6() {
return E_FIYRDB6;
}

public int getE_FIYRDIA() {
return E_FIYRDIA;
}

protected double E_FIYRINVINC_DV() {
return E_FIYRINVINC_DV;
}

public byte getE_FIYRINVINC_IF() {
return E_FIYRINVINC_IF;
}

public boolean getE_FIYRINVINC_TC() {
return E_FIYRINVINC_TC;
}

public byte getE_FLAGLINKB1() {
return E_FLAGLINKB1;
}

public byte getE_FLAGLINKB2() {
return E_FLAGLINKB2;
}

public byte getE_FLAGLINKB3() {
return E_FLAGLINKB3;
}

public int getE_FNPID() {
return E_FNPID;
}

public byte getE_FNPNO() {
return E_FNPNO;
}

public int getE_FNSPID() {
return E_FNSPID;
}

public byte getE_FNSPNO() {
return E_FNSPNO;
}

public byte getE_FOOD1() {
return E_FOOD1;
}

public byte getE_FOOD2() {
return E_FOOD2;
}

public byte getE_FOOD3() {
return E_FOOD3;
}

public byte getE_FOOD4() {
return E_FOOD4;
}

public byte getE_FOOD5() {
return E_FOOD5;
}

public byte getE_FOOD6() {
return E_FOOD6;
}

public byte getE_FOOD7() {
return E_FOOD7;
}

public byte getE_FORMDIF() {
return E_FORMDIF;
}

public byte getE_FRDRG() {
return E_FRDRG;
}

public byte getE_FROBULLI() {
return E_FROBULLI;
}

public byte getE_FROBULLY() {
return E_FROBULLY;
}

public byte getE_FRPBULLI() {
return E_FRPBULLI;
}

public byte getE_FRPBULLY() {
return E_FRPBULLY;
}

public byte getE_FRUVEGE() {
return E_FRUVEGE;
}

public byte getE_FT2ENDM1() {
return E_FT2ENDM1;
}

public byte getE_FT2ENDM2() {
return E_FT2ENDM2;
}

public short getE_FT2ENDY41() {
return E_FT2ENDY41;
}

public short getE_FT2ENDY42() {
return E_FT2ENDY42;
}

public byte getE_FTEDANY() {
return E_FTEDANY;
}

public byte getE_FTEDEND1() {
return E_FTEDEND1;
}

public byte getE_FTEDEND2() {
return E_FTEDEND2;
}

public byte getE_FTEDMOR1() {
return E_FTEDMOR1;
}

public byte getE_FTEDMOR2() {
return E_FTEDMOR2;
}

public byte getE_FTEDSTARTM1() {
return E_FTEDSTARTM1;
}

public byte getE_FTEDSTARTM2() {
return E_FTEDSTARTM2;
}

public short getE_FTEDSTARTY41() {
return E_FTEDSTARTY41;
}

public short getE_FTEDSTARTY42() {
return E_FTEDSTARTY42;
}

public byte getE_FTENDM() {
return E_FTENDM;
}

public short getE_FTENDY4() {
return E_FTENDY4;
}

public short getE_FTEXV() {
return E_FTEXV;
}

public byte getE_FTEXW() {
return E_FTEXW;
}

public byte getE_FTQUALS() {
return E_FTQUALS;
}

public short getE_FUTRA() {
return E_FUTRA;
}

public short getE_FUTRB() {
return E_FUTRB;
}

public short getE_FUTRC() {
return E_FUTRC;
}

public short getE_FUTRD() {
return E_FUTRD;
}

public short getE_FUTRE() {
return E_FUTRE;
}

public short getE_FUTRF() {
return E_FUTRF;
}

public short getE_FUTRG() {
return E_FUTRG;
}

public short getE_FUTRH() {
return E_FUTRH;
}

public short getE_FUTRI() {
return E_FUTRI;
}

public short getE_FUTRJ() {
return E_FUTRJ;
}

public short getE_FUTRK() {
return E_FUTRK;
}

public byte getE_FUTRL() {
return E_FUTRL;
}

public byte getE_GIVECOA() {
return E_GIVECOA;
}

public byte getE_GOR_DV() {
return E_GOR_DV;
}

public int getE_GRFPID() {
return E_GRFPID;
}

public byte getE_GRFPNO() {
return E_GRFPNO;
}

public int getE_GRMPID() {
return E_GRMPID;
}

public byte getE_GRMPNO() {
return E_GRMPNO;
}

public byte getE_HASEMAIL() {
return E_HASEMAIL;
}

public byte getE_HASSTEP() {
return E_HASSTEP;
}

public byte getE_HCOND1() {
return E_HCOND1;
}

public byte getE_HCOND10() {
return E_HCOND10;
}

public byte getE_HCOND11() {
return E_HCOND11;
}

public byte getE_HCOND12() {
return E_HCOND12;
}

public byte getE_HCOND13() {
return E_HCOND13;
}

public byte getE_HCOND14() {
return E_HCOND14;
}

public byte getE_HCOND15() {
return E_HCOND15;
}

public byte getE_HCOND16() {
return E_HCOND16;
}

public byte getE_HCOND17() {
return E_HCOND17;
}

public byte getE_HCOND2() {
return E_HCOND2;
}

public byte getE_HCOND3() {
return E_HCOND3;
}

public byte getE_HCOND4() {
return E_HCOND4;
}

public byte getE_HCOND5() {
return E_HCOND5;
}

public byte getE_HCOND6() {
return E_HCOND6;
}

public byte getE_HCOND7() {
return E_HCOND7;
}

public byte getE_HCOND8() {
return E_HCOND8;
}

public byte getE_HCOND9() {
return E_HCOND9;
}

public byte getE_HCOND96() {
return E_HCOND96;
}

public byte getE_HCONDA01() {
return E_HCONDA01;
}

public byte getE_HCONDA02() {
return E_HCONDA02;
}

public byte getE_HCONDA03() {
return E_HCONDA03;
}

public byte getE_HCONDA04() {
return E_HCONDA04;
}

public byte getE_HCONDA05() {
return E_HCONDA05;
}

public byte getE_HCONDA06() {
return E_HCONDA06;
}

public byte getE_HCONDA07() {
return E_HCONDA07;
}

public byte getE_HCONDA08() {
return E_HCONDA08;
}

public byte getE_HCONDA09() {
return E_HCONDA09;
}

public byte getE_HCONDA10() {
return E_HCONDA10;
}

public byte getE_HCONDA11() {
return E_HCONDA11;
}

public byte getE_HCONDA12() {
return E_HCONDA12;
}

public byte getE_HCONDA13() {
return E_HCONDA13;
}

public byte getE_HCONDA14() {
return E_HCONDA14;
}

public byte getE_HCONDA15() {
return E_HCONDA15;
}

public byte getE_HCONDA16() {
return E_HCONDA16;
}

public byte getE_HCONDA17() {
return E_HCONDA17;
}

public byte getE_HCONDN1() {
return E_HCONDN1;
}

public byte getE_HCONDN10() {
return E_HCONDN10;
}

public byte getE_HCONDN11() {
return E_HCONDN11;
}

public byte getE_HCONDN12() {
return E_HCONDN12;
}

public byte getE_HCONDN13() {
return E_HCONDN13;
}

public byte getE_HCONDN14() {
return E_HCONDN14;
}

public byte getE_HCONDN15() {
return E_HCONDN15;
}

public byte getE_HCONDN16() {
return E_HCONDN16;
}

public byte getE_HCONDN17() {
return E_HCONDN17;
}

public byte getE_HCONDN2() {
return E_HCONDN2;
}

public byte getE_HCONDN3() {
return E_HCONDN3;
}

public byte getE_HCONDN4() {
return E_HCONDN4;
}

public byte getE_HCONDN5() {
return E_HCONDN5;
}

public byte getE_HCONDN6() {
return E_HCONDN6;
}

public byte getE_HCONDN7() {
return E_HCONDN7;
}

public byte getE_HCONDN8() {
return E_HCONDN8;
}

public byte getE_HCONDN9() {
return E_HCONDN9;
}

public byte getE_HCONDN96() {
return E_HCONDN96;
}

public byte getE_HCONDNO1() {
return E_HCONDNO1;
}

public byte getE_HCONDNO2() {
return E_HCONDNO2;
}

public byte getE_HCONDNO3() {
return E_HCONDNO3;
}

public byte getE_HCONDNO4() {
return E_HCONDNO4;
}

public byte getE_HCONDNO5() {
return E_HCONDNO5;
}

public byte getE_HCONDNO6() {
return E_HCONDNO6;
}

public byte getE_HCONDNO7() {
return E_HCONDNO7;
}

public byte getE_HCONDNS1() {
return E_HCONDNS1;
}

public byte getE_HCONDNS2() {
return E_HCONDNS2;
}

public byte getE_HCONDNS3() {
return E_HCONDNS3;
}

public byte getE_HCONDNS4() {
return E_HCONDNS4;
}

public byte getE_HCONDNS5() {
return E_HCONDNS5;
}

public byte getE_HCONDNS6() {
return E_HCONDNS6;
}

public byte getE_HCONDNS7() {
return E_HCONDNS7;
}

public byte getE_HCONDS01() {
return E_HCONDS01;
}

public byte getE_HCONDS02() {
return E_HCONDS02;
}

public byte getE_HCONDS03() {
return E_HCONDS03;
}

public byte getE_HCONDS04() {
return E_HCONDS04;
}

public byte getE_HCONDS05() {
return E_HCONDS05;
}

public byte getE_HCONDS08() {
return E_HCONDS08;
}

public byte getE_HCONDS09() {
return E_HCONDS09;
}

public byte getE_HCONDS10() {
return E_HCONDS10;
}

public byte getE_HCONDS11() {
return E_HCONDS11;
}

public byte getE_HCONDS12() {
return E_HCONDS12;
}

public byte getE_HCONDS13() {
return E_HCONDS13;
}

public byte getE_HCONDS14() {
return E_HCONDS14;
}

public byte getE_HCONDS15() {
return E_HCONDS15;
}

public byte getE_HCONDS16() {
return E_HCONDS16;
}

public byte getE_HCONDS17() {
return E_HCONDS17;
}

public byte getE_HEALTH() {
return E_HEALTH;
}

public boolean getE_HEALTHKIDSN() {
return E_HEALTHKIDSN;
}

public byte getE_HEALTHSN() {
return E_HEALTHSN;
}

public byte getE_HEDLIK() {
return E_HEDLIK;
}

public byte getE_HEDNT() {
return E_HEDNT;
}

public byte getE_HEDNTO_CODE() {
return E_HEDNTO_CODE;
}

public byte getE_HERFREQ() {
return E_HERFREQ;
}

public byte getE_HERITAGE1() {
return E_HERITAGE1;
}

public byte getE_HERITAGE2() {
return E_HERITAGE2;
}

public byte getE_HERITAGE3() {
return E_HERITAGE3;
}

public byte getE_HERITAGE4() {
return E_HERITAGE4;
}

public byte getE_HERITAGE5() {
return E_HERITAGE5;
}

public byte getE_HERITAGE6() {
return E_HERITAGE6;
}

public byte getE_HERITAGE7() {
return E_HERITAGE7;
}

public byte getE_HERITAGE8() {
return E_HERITAGE8;
}

public byte getE_HERITAGE96() {
return E_HERITAGE96;
}

public byte getE_HESACONS() {
return E_HESACONS;
}

public byte getE_HGADOPTF() {
return E_HGADOPTF;
}

public byte getE_HGADOPTM() {
return E_HGADOPTM;
}

public byte getE_HGBIOF() {
return E_HGBIOF;
}

public byte getE_HGBIOM() {
return E_HGBIOM;
}

public byte getE_HGPART() {
return E_HGPART;
}

public byte getE_HHORIG() {
return E_HHORIG;
}

public byte getE_HHRESP_DV() {
return E_HHRESP_DV;
}

public byte getE_HHTYPE_DV() {
return E_HHTYPE_DV;
}

public int getE_HIDP() {
return E_HIDP;
}

public byte getE_HIQUAL_DV() {
return E_HIQUAL_DV;
}

public byte getE_HITSIB() {
return E_HITSIB;
}

public byte getE_HLPHMWK() {
return E_HLPHMWK;
}

public byte getE_HLTHISGN() {
return E_HLTHISGN;
}

public boolean getE_HLTHKIDLINK() {
return E_HLTHKIDLINK;
}

public byte getE_HLTHLINK() {
return E_HLTHLINK;
}

public byte getE_HLTHLINKB1() {
return E_HLTHLINKB1;
}

public byte getE_HLTHLINKB2() {
return E_HLTHLINKB2;
}

public byte getE_HLTHLINKB3() {
return E_HLTHLINKB3;
}

public byte getE_HLTHRECD() {
return E_HLTHRECD;
}

public byte getE_HLTHRSGN() {
return E_HLTHRSGN;
}

public byte getE_HMRCLINK() {
return E_HMRCLINK;
}

public byte getE_HOSPC1() {
return E_HOSPC1;
}

public byte getE_HOSPC2() {
return E_HOSPC2;
}

public byte getE_HOSPC3() {
return E_HOSPC3;
}

public byte getE_HOSPC4() {
return E_HOSPC4;
}

public byte getE_HOSPC5() {
return E_HOSPC5;
}

public byte getE_HOSPC6() {
return E_HOSPC6;
}

public byte getE_HOSPC7() {
return E_HOSPC7;
}

public short getE_HOSPDC1() {
return E_HOSPDC1;
}

public short getE_HOSPDC2() {
return E_HOSPDC2;
}

public byte getE_HOSPDC3() {
return E_HOSPDC3;
}

public byte getE_HOSPDC4() {
return E_HOSPDC4;
}

public byte getE_HOSPDC5() {
return E_HOSPDC5;
}

public byte getE_HOSPDC6() {
return E_HOSPDC6;
}

public boolean getE_HOSPDC7() {
return E_HOSPDC7;
}

public byte getE_HOUSING() {
return E_HOUSING;
}

public int getE_HRPID() {
return E_HRPID;
}

public byte getE_HRPNO() {
return E_HRPNO;
}

public byte getE_IENDDATD() {
return E_IENDDATD;
}

public byte getE_IENDDATHH() {
return E_IENDDATHH;
}

public byte getE_IENDDATM() {
return E_IENDDATM;
}

public byte getE_IENDDATMM() {
return E_IENDDATMM;
}

public byte getE_IENDDATSS() {
return E_IENDDATSS;
}

public short getE_IENDDATY() {
return E_IENDDATY;
}

protected double E_IND5MUS_LW() {
return E_IND5MUS_LW;
}

protected double E_IND5MUS_XW() {
return E_IND5MUS_XW;
}

protected double E_INDBD91_LW() {
return E_INDBD91_LW;
}

protected double E_INDBDUB_LW() {
return E_INDBDUB_LW;
}

protected double E_INDIN01_LW() {
return E_INDIN01_LW;
}

protected double E_INDIN91_LW() {
return E_INDIN91_LW;
}

protected double E_INDINUB_LW() {
return E_INDINUB_LW;
}

protected double E_INDINUB_XW() {
return E_INDINUB_XW;
}

protected double E_INDINUS_LW() {
return E_INDINUS_LW;
}

public boolean getE_INDMODE() {
return E_INDMODE;
}

protected double E_INDNS91_LW() {
return E_INDNS91_LW;
}

protected double E_INDNSUB_LW() {
return E_INDNSUB_LW;
}

protected double E_INDPXUB_LW() {
return E_INDPXUB_LW;
}

protected double E_INDPXUB_XW() {
return E_INDPXUB_XW;
}

protected double E_INDPXUS_LW() {
return E_INDPXUS_LW;
}

protected double E_INDSCUB_LW() {
return E_INDSCUB_LW;
}

protected double E_INDSCUB_XW() {
return E_INDSCUB_XW;
}

protected double E_INDSCUS_LW() {
return E_INDSCUS_LW;
}

public byte getE_INSTOK() {
return E_INSTOK;
}

public byte getE_INSTOK2() {
return E_INSTOK2;
}

public byte getE_INSTOK3() {
return E_INSTOK3;
}

public byte getE_INSTOK4() {
return E_INSTOK4;
}

public byte getE_INSULTED1() {
return E_INSULTED1;
}

public byte getE_INSULTED10() {
return E_INSULTED10;
}

public byte getE_INSULTED11() {
return E_INSULTED11;
}

public byte getE_INSULTED2() {
return E_INSULTED2;
}

public byte getE_INSULTED3() {
return E_INSULTED3;
}

public byte getE_INSULTED4() {
return E_INSULTED4;
}

public byte getE_INSULTED5() {
return E_INSULTED5;
}

public byte getE_INSULTED6() {
return E_INSULTED6;
}

public byte getE_INSULTED7() {
return E_INSULTED7;
}

public byte getE_INSULTED8() {
return E_INSULTED8;
}

public byte getE_INSULTED9() {
return E_INSULTED9;
}

public byte getE_INSULTED96() {
return E_INSULTED96;
}

public byte getE_INSULTED97() {
return E_INSULTED97;
}

public byte getE_INSULTEDO_CODE() {
return E_INSULTEDO_CODE;
}

public byte getE_INSULTED_DV() {
return E_INSULTED_DV;
}

public byte getE_INTCONTACT() {
return E_INTCONTACT;
}

public byte getE_INTDATD_DV() {
return E_INTDATD_DV;
}

public byte getE_INTDATM_DV() {
return E_INTDATM_DV;
}

public short getE_INTDATY_DV() {
return E_INTDATY_DV;
}

public byte getE_INTSIGNHEALTH() {
return E_INTSIGNHEALTH;
}

public byte getE_INVITRO1() {
return E_INVITRO1;
}

public boolean getE_INVITRO2() {
return E_INVITRO2;
}

public boolean getE_INVITRO3() {
return E_INVITRO3;
}

public byte getE_IOUTCOME() {
return E_IOUTCOME;
}

public byte getE_ISTRTDATD() {
return E_ISTRTDATD;
}

public byte getE_ISTRTDATHH() {
return E_ISTRTDATHH;
}

public byte getE_ISTRTDATM() {
return E_ISTRTDATM;
}

public byte getE_ISTRTDATMM() {
return E_ISTRTDATMM;
}

public byte getE_ISTRTDATSS() {
return E_ISTRTDATSS;
}

public short getE_ISTRTDATY() {
return E_ISTRTDATY;
}

public short getE_ISYEAR() {
return E_ISYEAR;
}

public byte getE_IVAFFCT11() {
return E_IVAFFCT11;
}

public byte getE_IVAFFCT12() {
return E_IVAFFCT12;
}

public byte getE_IVAFFCT13() {
return E_IVAFFCT13;
}

public byte getE_IVAFFCT14() {
return E_IVAFFCT14;
}

public byte getE_IVAFFCT15() {
return E_IVAFFCT15;
}

public byte getE_IVAFFCT17() {
return E_IVAFFCT17;
}

public byte getE_IVAFFCT21() {
return E_IVAFFCT21;
}

public byte getE_IVAFFCT22() {
return E_IVAFFCT22;
}

public byte getE_IVAFFCT23() {
return E_IVAFFCT23;
}

public byte getE_IVAFFCT27() {
return E_IVAFFCT27;
}

public byte getE_IVAFFCT30() {
return E_IVAFFCT30;
}

public byte getE_IVAFFCT97() {
return E_IVAFFCT97;
}

public byte getE_IVCOOP() {
return E_IVCOOP;
}

public boolean getE_IVFIO() {
return E_IVFIO;
}

public byte getE_IVINFNCE() {
return E_IVINFNCE;
}

public byte getE_IVLIBAL() {
return E_IVLIBAL;
}

public byte getE_IVLIENG() {
return E_IVLIENG;
}

public byte getE_IVLITRANS() {
return E_IVLITRANS;
}

public byte getE_IVLIWHO() {
return E_IVLIWHO;
}

public byte getE_IVPRSNT() {
return E_IVPRSNT;
}

public byte getE_J1BOSS() {
return E_J1BOSS;
}

public byte getE_J1MNGR() {
return E_J1MNGR;
}

public byte getE_J1NONE() {
return E_J1NONE;
}

public byte getE_J1NSSEC5_DV() {
return E_J1NSSEC5_DV;
}

public byte getE_J1SEMP() {
return E_J1SEMP;
}

public short getE_J1SOC00_CC() {
return E_J1SOC00_CC;
}

public short getE_J1SOC10_CC() {
return E_J1SOC10_CC;
}

public byte getE_J1SOC90_CC() {
return E_J1SOC90_CC;
}

public byte getE_J2HAS() {
return E_J2HAS;
}

public short getE_J2HRS() {
return E_J2HRS;
}

public byte getE_J2NSSEC5_DV() {
return E_J2NSSEC5_DV;
}

public int getE_J2PAY() {
return E_J2PAY;
}

protected double E_J2PAYNET_DV() {
return E_J2PAYNET_DV;
}

protected double E_J2PAY_DV() {
return E_J2PAY_DV;
}

public byte getE_J2PAY_IF() {
return E_J2PAY_IF;
}

public byte getE_J2SEMP() {
return E_J2SEMP;
}

public short getE_J2SOC00_CC() {
return E_J2SOC00_CC;
}

public short getE_J2SOC10_CC() {
return E_J2SOC10_CC;
}

public byte getE_J2SOC90_CC() {
return E_J2SOC90_CC;
}

public byte getE_JBATT1() {
return E_JBATT1;
}

public byte getE_JBATT2() {
return E_JBATT2;
}

public byte getE_JBATT3() {
return E_JBATT3;
}

public byte getE_JBATT4() {
return E_JBATT4;
}

public byte getE_JBATT5() {
return E_JBATT5;
}

public byte getE_JBATT6() {
return E_JBATT6;
}

public byte getE_JBBGD() {
return E_JBBGD;
}

public byte getE_JBBGDATD() {
return E_JBBGDATD;
}

public byte getE_JBBGDATM() {
return E_JBBGDATM;
}

public short getE_JBBGDATY() {
return E_JBBGDATY;
}

public byte getE_JBBGM() {
return E_JBBGM;
}

public short getE_JBBGY() {
return E_JBBGY;
}

public byte getE_JBENDD() {
return E_JBENDD;
}

public byte getE_JBENDM() {
return E_JBENDM;
}

public byte getE_JBENDREAS() {
return E_JBENDREAS;
}

public short getE_JBENDY4() {
return E_JBENDY4;
}

public byte getE_JBES2000() {
return E_JBES2000;
}

public byte getE_JBFT_DV() {
return E_JBFT_DV;
}

public byte getE_JBHAD() {
return E_JBHAD;
}

public byte getE_JBHAS() {
return E_JBHAS;
}

protected double E_JBHRS() {
return E_JBHRS;
}

public byte getE_JBIINDB_DV() {
return E_JBIINDB_DV;
}

public short getE_JBISCO88_CC() {
return E_JBISCO88_CC;
}

public byte getE_JBMNGR() {
return E_JBMNGR;
}

public byte getE_JBMNGRCHK() {
return E_JBMNGRCHK;
}

public byte getE_JBNSSEC3_DV() {
return E_JBNSSEC3_DV;
}

public byte getE_JBNSSEC5_DV() {
return E_JBNSSEC5_DV;
}

public byte getE_JBNSSEC8_DV() {
return E_JBNSSEC8_DV;
}

public byte getE_JBNSSEC_DV() {
return E_JBNSSEC_DV;
}

public byte getE_JBOFF() {
return E_JBOFF;
}

public byte getE_JBOFFY() {
return E_JBOFFY;
}

public byte getE_JBOT() {
return E_JBOT;
}

public byte getE_JBOTPD() {
return E_JBOTPD;
}

public byte getE_JBPL() {
return E_JBPL;
}

public byte getE_JBRGSC_DV() {
return E_JBRGSC_DV;
}

public byte getE_JBSAMR() {
return E_JBSAMR;
}

public byte getE_JBSAT() {
return E_JBSAT;
}

public byte getE_JBSECT() {
return E_JBSECT;
}

public byte getE_JBSECTPUB() {
return E_JBSECTPUB;
}

public byte getE_JBSEG_DV() {
return E_JBSEG_DV;
}

public byte getE_JBSEMP() {
return E_JBSEMP;
}

public byte getE_JBSEMPCHK() {
return E_JBSEMPCHK;
}

public byte getE_JBSIC07CHK() {
return E_JBSIC07CHK;
}

public byte getE_JBSIC07_CC() {
return E_JBSIC07_CC;
}

public byte getE_JBSIZE() {
return E_JBSIZE;
}

public byte getE_JBSIZECHK() {
return E_JBSIZECHK;
}

public byte getE_JBSOC00CHK() {
return E_JBSOC00CHK;
}

public short getE_JBSOC00_CC() {
return E_JBSOC00_CC;
}

public short getE_JBSOC10_CC() {
return E_JBSOC10_CC;
}

public byte getE_JBSOCGR_DV() {
return E_JBSOCGR_DV;
}

public byte getE_JBSTAT() {
return E_JBSTAT;
}

public byte getE_JBTERM1() {
return E_JBTERM1;
}

public byte getE_JBTERM2() {
return E_JBTERM2;
}

public short getE_JBTTWT() {
return E_JBTTWT;
}

public byte getE_JLBOSS() {
return E_JLBOSS;
}

public byte getE_JLENDM() {
return E_JLENDM;
}

public short getE_JLENDY() {
return E_JLENDY;
}

public byte getE_JLES2000() {
return E_JLES2000;
}

public byte getE_JLIINDB_DV() {
return E_JLIINDB_DV;
}

public short getE_JLISCO88_CC() {
return E_JLISCO88_CC;
}

public byte getE_JLMNGR() {
return E_JLMNGR;
}

public byte getE_JLNSSEC3_DV() {
return E_JLNSSEC3_DV;
}

public byte getE_JLNSSEC5_DV() {
return E_JLNSSEC5_DV;
}

public byte getE_JLNSSEC8_DV() {
return E_JLNSSEC8_DV;
}

public byte getE_JLNSSEC_DV() {
return E_JLNSSEC_DV;
}

public byte getE_JLRGSC_DV() {
return E_JLRGSC_DV;
}

public byte getE_JLSEG_DV() {
return E_JLSEG_DV;
}

public byte getE_JLSEMP() {
return E_JLSEMP;
}

public byte getE_JLSIC07_CC() {
return E_JLSIC07_CC;
}

public byte getE_JLSIZE() {
return E_JLSIZE;
}

public short getE_JLSOC00_CC() {
return E_JLSOC00_CC;
}

public short getE_JLSOC10_CC() {
return E_JLSOC10_CC;
}

public byte getE_JOBDENY() {
return E_JOBDENY;
}

public byte getE_JOBHOURS1() {
return E_JOBHOURS1;
}

public byte getE_JOBHOURS2() {
return E_JOBHOURS2;
}

public byte getE_JOBHOURS3() {
return E_JOBHOURS3;
}

public byte getE_JOBHOURS4() {
return E_JOBHOURS4;
}

public byte getE_JOBHOURS5() {
return E_JOBHOURS5;
}

public boolean getE_JOBHOURS6() {
return E_JOBHOURS6;
}

public byte getE_JOBLOOK() {
return E_JOBLOOK;
}

public byte getE_JSACCS() {
return E_JSACCS;
}

public byte getE_JSBOSS() {
return E_JSBOSS;
}

public byte getE_JSHRS() {
return E_JSHRS;
}

public byte getE_JSPART() {
return E_JSPART;
}

public int getE_JSPAYU() {
return E_JSPAYU;
}

public byte getE_JSPAYW() {
return E_JSPAYW;
}

public byte getE_JSPL() {
return E_JSPL;
}

public byte getE_JSPRBM() {
return E_JSPRBM;
}

public short getE_JSPRBY4() {
return E_JSPRBY4;
}

public byte getE_JSPREM() {
return E_JSPREM;
}

public short getE_JSPREY4() {
return E_JSPREY4;
}

public int getE_JSPRF() {
return E_JSPRF;
}

public byte getE_JSPRLS() {
return E_JSPRLS;
}

public byte getE_JSPRNI() {
return E_JSPRNI;
}

public byte getE_JSPRTX() {
return E_JSPRTX;
}

public byte getE_JSPYNI() {
return E_JSPYNI;
}

public byte getE_JSPYTX() {
return E_JSPYTX;
}

public byte getE_JSSIZE() {
return E_JSSIZE;
}

public byte getE_JSTTWT() {
return E_JSTTWT;
}

public short getE_JSTTWTB() {
return E_JSTTWTB;
}

public byte getE_JSTYPEB() {
return E_JSTYPEB;
}

public byte getE_JSWORKTRAV() {
return E_JSWORKTRAV;
}

public byte getE_JUBGN() {
return E_JUBGN;
}

public byte getE_JULK4WK() {
return E_JULK4WK;
}

public byte getE_JULK4X1() {
return E_JULK4X1;
}

public byte getE_JULK4X2() {
return E_JULK4X2;
}

public byte getE_JULK4X3() {
return E_JULK4X3;
}

public byte getE_JULK4X4() {
return E_JULK4X4;
}

public byte getE_JULK4X5() {
return E_JULK4X5;
}

public byte getE_JULK4X6() {
return E_JULK4X6;
}

public byte getE_JULK4X96() {
return E_JULK4X96;
}

public byte getE_JULKJB() {
return E_JULKJB;
}

public byte getE_KID2UNI01() {
return E_KID2UNI01;
}

public byte getE_KID2UNI02() {
return E_KID2UNI02;
}

public byte getE_KID2UNI03() {
return E_KID2UNI03;
}

public byte getE_KID2UNI04() {
return E_KID2UNI04;
}

public byte getE_KID2UNI05() {
return E_KID2UNI05;
}

public byte getE_KID2UNI06() {
return E_KID2UNI06;
}

public byte getE_KID2UNI07() {
return E_KID2UNI07;
}

public byte getE_KID2UNI08() {
return E_KID2UNI08;
}

public byte getE_KID2UNI09() {
return E_KID2UNI09;
}

public byte getE_KID2UNI10() {
return E_KID2UNI10;
}

public byte getE_KID2UNI11() {
return E_KID2UNI11;
}

public boolean getE_KID2UNI12() {
return E_KID2UNI12;
}

public boolean getE_KID2UNI13() {
return E_KID2UNI13;
}

public boolean getE_KID2UNI14() {
return E_KID2UNI14;
}

public boolean getE_KID2UNI15() {
return E_KID2UNI15;
}

public boolean getE_KID2UNI16() {
return E_KID2UNI16;
}

public byte getE_KIDSPT() {
return E_KIDSPT;
}

public byte getE_LADOPT() {
return E_LADOPT;
}

public byte getE_LATE() {
return E_LATE;
}

public byte getE_LCHMOR() {
return E_LCHMOR;
}

public byte getE_LCHMORN() {
return E_LCHMORN;
}

public byte getE_LCHMULTI1() {
return E_LCHMULTI1;
}

public byte getE_LCHMULTI2() {
return E_LCHMULTI2;
}

public boolean getE_LCHMULTI3() {
return E_LCHMULTI3;
}

public byte getE_LCOHNPI() {
return E_LCOHNPI;
}

protected double E_LENINDINTV() {
return E_LENINDINTV;
}

public byte getE_LEVELIMP() {
return E_LEVELIMP;
}

public byte getE_LGAPED() {
return E_LGAPED;
}

public byte getE_LIBFREQ() {
return E_LIBFREQ;
}

public byte getE_LIENG() {
return E_LIENG;
}

public byte getE_LIHOW() {
return E_LIHOW;
}

public byte getE_LINGUA() {
return E_LINGUA;
}

public byte getE_LITRANS() {
return E_LITRANS;
}

public byte getE_LIVESP() {
return E_LIVESP;
}

public boolean getE_LIVESP_DV() {
return E_LIVESP_DV;
}

public byte getE_LIVEWITH() {
return E_LIVEWITH;
}

public byte getE_LIWHO() {
return E_LIWHO;
}

public byte getE_LKMOVE() {
return E_LKMOVE;
}

public byte getE_LMAR1M() {
return E_LMAR1M;
}

public short getE_LMAR1Y() {
return E_LMAR1Y;
}

public byte getE_LMCBM1() {
return E_LMCBM1;
}

public byte getE_LMCBM2() {
return E_LMCBM2;
}

public byte getE_LMCBM3() {
return E_LMCBM3;
}

public byte getE_LMCBM4() {
return E_LMCBM4;
}

public short getE_LMCBY41() {
return E_LMCBY41;
}

public short getE_LMCBY42() {
return E_LMCBY42;
}

public short getE_LMCBY43() {
return E_LMCBY43;
}

public short getE_LMCBY44() {
return E_LMCBY44;
}

public byte getE_LMSPM1() {
return E_LMSPM1;
}

public byte getE_LMSPM2() {
return E_LMSPM2;
}

public byte getE_LMSPM3() {
return E_LMSPM3;
}

public byte getE_LMSPM4() {
return E_LMSPM4;
}

public short getE_LMSPY41() {
return E_LMSPY41;
}

public short getE_LMSPY42() {
return E_LMSPY42;
}

public short getE_LMSPY43() {
return E_LMSPY43;
}

public short getE_LMSPY44() {
return E_LMSPY44;
}

public byte getE_LNADOPT() {
return E_LNADOPT;
}

public byte getE_LNPRNT() {
return E_LNPRNT;
}

public byte getE_LPRNT() {
return E_LPRNT;
}

public byte getE_LVHM() {
return E_LVHM;
}

public byte getE_LVREL1() {
return E_LVREL1;
}

public byte getE_LVREL10() {
return E_LVREL10;
}

public byte getE_LVREL2() {
return E_LVREL2;
}

public byte getE_LVREL3() {
return E_LVREL3;
}

public byte getE_LVREL4() {
return E_LVREL4;
}

public byte getE_LVREL5() {
return E_LVREL5;
}

public byte getE_LVREL6() {
return E_LVREL6;
}

public byte getE_LVREL7() {
return E_LVREL7;
}

public byte getE_LVREL8() {
return E_LVREL8;
}

public byte getE_LVREL9() {
return E_LVREL9;
}

public byte getE_LVREL96() {
return E_LVREL96;
}

public byte getE_LVSCHDO() {
return E_LVSCHDO;
}

public byte getE_LWWRONG() {
return E_LWWRONG;
}

public byte getE_MAAGE() {
return E_MAAGE;
}

public byte getE_MACOB() {
return E_MACOB;
}

public byte getE_MACON() {
return E_MACON;
}

public byte getE_MAFAR() {
return E_MAFAR;
}

public byte getE_MAJU() {
return E_MAJU;
}

public byte getE_MALONE() {
return E_MALONE;
}

public byte getE_MAMOSTCON() {
return E_MAMOSTCON;
}

public byte getE_MANSSEC5_DV() {
return E_MANSSEC5_DV;
}

public byte getE_MARSTAT() {
return E_MARSTAT;
}

public byte getE_MASEE() {
return E_MASEE;
}

public short getE_MASOC00_CC() {
return E_MASOC00_CC;
}

public short getE_MASOC10_CC() {
return E_MASOC10_CC;
}

public byte getE_MASOC90_CC() {
return E_MASOC90_CC;
}

public byte getE_MASTAT_DV() {
return E_MASTAT_DV;
}

public byte getE_MATLEAVE() {
return E_MATLEAVE;
}

public byte getE_MATLV() {
return E_MATLV;
}

public byte getE_MATLVENDD() {
return E_MATLVENDD;
}

public byte getE_MATLVENDM() {
return E_MATLVENDM;
}

public short getE_MATLVENDY4() {
return E_MATLVENDY4;
}

public byte getE_MATLVSTD() {
return E_MATLVSTD;
}

public byte getE_MATLVSTM() {
return E_MATLVSTM;
}

public short getE_MATLVSTY4() {
return E_MATLVSTY4;
}

public byte getE_MAYRUK() {
return E_MAYRUK;
}

public byte getE_MEMORIG() {
return E_MEMORIG;
}

public byte getE_MEMPLOY() {
return E_MEMPLOY;
}

public byte getE_MLA1() {
return E_MLA1;
}

public byte getE_MLA2() {
return E_MLA2;
}

public byte getE_MLA3() {
return E_MLA3;
}

public byte getE_MLA96() {
return E_MLA96;
}

public byte getE_MLAGST() {
return E_MLAGST;
}

public byte getE_MLAGSTU() {
return E_MLAGSTU;
}

public byte getE_MLFUTR() {
return E_MLFUTR;
}

public byte getE_MLRNOT1() {
return E_MLRNOT1;
}

public byte getE_MLRNOT10() {
return E_MLRNOT10;
}

public byte getE_MLRNOT11() {
return E_MLRNOT11;
}

public byte getE_MLRNOT12() {
return E_MLRNOT12;
}

public byte getE_MLRNOT13() {
return E_MLRNOT13;
}

public byte getE_MLRNOT2() {
return E_MLRNOT2;
}

public byte getE_MLRNOT3() {
return E_MLRNOT3;
}

public byte getE_MLRNOT4() {
return E_MLRNOT4;
}

public byte getE_MLRNOT5() {
return E_MLRNOT5;
}

public byte getE_MLRNOT6() {
return E_MLRNOT6;
}

public byte getE_MLRNOT7() {
return E_MLRNOT7;
}

public byte getE_MLRNOT8() {
return E_MLRNOT8;
}

public byte getE_MLRNOT9() {
return E_MLRNOT9;
}

public byte getE_MLRNOT97() {
return E_MLRNOT97;
}

public byte getE_MLSTAT() {
return E_MLSTAT;
}

public byte getE_MLSTATCHK() {
return E_MLSTATCHK;
}

public byte getE_MLWKFPT() {
return E_MLWKFPT;
}

public int getE_MNPID() {
return E_MNPID;
}

public byte getE_MNPNO() {
return E_MNPNO;
}

public int getE_MNSPID() {
return E_MNSPID;
}

public byte getE_MNSPNO() {
return E_MNSPNO;
}

public byte getE_MOBCOMP() {
return E_MOBCOMP;
}

public byte getE_MOBUSE() {
return E_MOBUSE;
}

public byte getE_MONTH() {
return E_MONTH;
}

public byte getE_MOVDIR() {
return E_MOVDIR;
}

public byte getE_MOVEOTH_CODE() {
return E_MOVEOTH_CODE;
}

public byte getE_MOVY11() {
return E_MOVY11;
}

public byte getE_MOVY12() {
return E_MOVY12;
}

public byte getE_MOVY13() {
return E_MOVY13;
}

public byte getE_MOVY14() {
return E_MOVY14;
}

public byte getE_MOVY15() {
return E_MOVY15;
}

public byte getE_MOVY16() {
return E_MOVY16;
}

public byte getE_MPWEB() {
return E_MPWEB;
}

public byte getE_MSTATCH1() {
return E_MSTATCH1;
}

public byte getE_MSTATCH2() {
return E_MSTATCH2;
}

public byte getE_MSTATSAM() {
return E_MSTATSAM;
}

public byte getE_MSTATSAMN() {
return E_MSTATSAMN;
}

public byte getE_MUSFREQ() {
return E_MUSFREQ;
}

public byte getE_MVEVER() {
return E_MVEVER;
}

public byte getE_MVMNTH() {
return E_MVMNTH;
}

public short getE_MVYR() {
return E_MVYR;
}

public byte getE_N1619ABS() {
return E_N1619ABS;
}

public byte getE_NADOPTCH() {
return E_NADOPTCH;
}

public byte getE_NAIDXHH() {
return E_NAIDXHH;
}

public byte getE_NATCH01() {
return E_NATCH01;
}

public byte getE_NATCH02() {
return E_NATCH02;
}

public byte getE_NATCH03() {
return E_NATCH03;
}

public byte getE_NATCH04() {
return E_NATCH04;
}

public byte getE_NATCH05() {
return E_NATCH05;
}

public byte getE_NATCH06() {
return E_NATCH06;
}

public byte getE_NATCH07() {
return E_NATCH07;
}

public byte getE_NATCH08() {
return E_NATCH08;
}

public byte getE_NATCH09() {
return E_NATCH09;
}

public byte getE_NATCH10() {
return E_NATCH10;
}

public byte getE_NATCH11() {
return E_NATCH11;
}

public boolean getE_NATCH12() {
return E_NATCH12;
}

public boolean getE_NATCH13() {
return E_NATCH13;
}

public boolean getE_NATCH14() {
return E_NATCH14;
}

public boolean getE_NATCH15() {
return E_NATCH15;
}

public boolean getE_NATCH16() {
return E_NATCH16;
}

public byte getE_NATID1() {
return E_NATID1;
}

public byte getE_NATID2() {
return E_NATID2;
}

public byte getE_NATID3() {
return E_NATID3;
}

public byte getE_NATID4() {
return E_NATID4;
}

public byte getE_NATID5() {
return E_NATID5;
}

public byte getE_NATID6() {
return E_NATID6;
}

public byte getE_NATID97() {
return E_NATID97;
}

public byte getE_NCARS() {
return E_NCARS;
}

public byte getE_NCH10() {
return E_NCH10;
}

public byte getE_NCH10TO15() {
return E_NCH10TO15;
}

public byte getE_NCH14RESP() {
return E_NCH14RESP;
}

public byte getE_NCH3RESP() {
return E_NCH3RESP;
}

public byte getE_NCH415RESP() {
return E_NCH415RESP;
}

public byte getE_NCH5RESP() {
return E_NCH5RESP;
}

public byte getE_NCH5TO15() {
return E_NCH5TO15;
}

public byte getE_NCH8RESP() {
return E_NCH8RESP;
}

public byte getE_NCHILD() {
return E_NCHILD;
}

public byte getE_NCHILD_DV() {
return E_NCHILD_DV;
}

public byte getE_NCHRESP() {
return E_NCHRESP;
}

public byte getE_NCHUND18RESP() {
return E_NCHUND18RESP;
}

public byte getE_NCHUNDER16() {
return E_NCHUNDER16;
}

public byte getE_NCIGS() {
return E_NCIGS;
}

public byte getE_NCRR1() {
return E_NCRR1;
}

public byte getE_NCRR11() {
return E_NCRR11;
}

public byte getE_NCRR12() {
return E_NCRR12;
}

public byte getE_NCRR3() {
return E_NCRR3;
}

public byte getE_NCRR4() {
return E_NCRR4;
}

public byte getE_NCRR5() {
return E_NCRR5;
}

public byte getE_NCRR6() {
return E_NCRR6;
}

public byte getE_NCRR8() {
return E_NCRR8;
}

public byte getE_NCRR9() {
return E_NCRR9;
}

public byte getE_NCRRM() {
return E_NCRRM;
}

public short getE_NCRRY4() {
return E_NCRRY4;
}

public byte getE_NDEPCHL_DV() {
return E_NDEPCHL_DV;
}

public byte getE_NETPUSE() {
return E_NETPUSE;
}

public byte getE_NETUSE() {
return E_NETUSE;
}

public byte getE_NEXT() {
return E_NEXT;
}

public byte getE_NEXT1() {
return E_NEXT1;
}

public byte getE_NEXT2() {
return E_NEXT2;
}

public byte getE_NEXT3() {
return E_NEXT3;
}

public byte getE_NEXT4() {
return E_NEXT4;
}

public byte getE_NEXT5() {
return E_NEXT5;
}

public byte getE_NEXT6() {
return E_NEXT6;
}

public byte getE_NEXTELSE1() {
return E_NEXTELSE1;
}

public byte getE_NEXTELSE2() {
return E_NEXTELSE2;
}

public byte getE_NEXTELSE3() {
return E_NEXTELSE3;
}

public byte getE_NEXTELSE4() {
return E_NEXTELSE4;
}

public byte getE_NEXTELSE5() {
return E_NEXTELSE5;
}

public boolean getE_NEXTELSE6() {
return E_NEXTELSE6;
}

public byte getE_NEXTJOB1() {
return E_NEXTJOB1;
}

public byte getE_NEXTJOB2() {
return E_NEXTJOB2;
}

public byte getE_NEXTJOB3() {
return E_NEXTJOB3;
}

public byte getE_NEXTJOB4() {
return E_NEXTJOB4;
}

public byte getE_NEXTJOB5() {
return E_NEXTJOB5;
}

public byte getE_NEXTJOB6() {
return E_NEXTJOB6;
}

public byte getE_NEXTSTAT1() {
return E_NEXTSTAT1;
}

public byte getE_NEXTSTAT2() {
return E_NEXTSTAT2;
}

public byte getE_NEXTSTAT3() {
return E_NEXTSTAT3;
}

public byte getE_NEXTSTAT4() {
return E_NEXTSTAT4;
}

public byte getE_NEXTSTAT5() {
return E_NEXTSTAT5;
}

public byte getE_NEXTSTAT6() {
return E_NEXTSTAT6;
}

public byte getE_NFH01() {
return E_NFH01;
}

public byte getE_NFH02() {
return E_NFH02;
}

public byte getE_NFH03() {
return E_NFH03;
}

public byte getE_NFH04() {
return E_NFH04;
}

public byte getE_NFH05() {
return E_NFH05;
}

public byte getE_NFH06() {
return E_NFH06;
}

public byte getE_NFH07() {
return E_NFH07;
}

public byte getE_NFH08() {
return E_NFH08;
}

public byte getE_NFH09() {
return E_NFH09;
}

public byte getE_NFH10() {
return E_NFH10;
}

public byte getE_NFH11() {
return E_NFH11;
}

public byte getE_NFH12() {
return E_NFH12;
}

public byte getE_NFH13() {
return E_NFH13;
}

public byte getE_NFH14() {
return E_NFH14;
}

public byte getE_NFH15() {
return E_NFH15;
}

public byte getE_NFH16() {
return E_NFH16;
}

public byte getE_NFH17() {
return E_NFH17;
}

public byte getE_NFH18() {
return E_NFH18;
}

public byte getE_NFH19() {
return E_NFH19;
}

public byte getE_NFH20() {
return E_NFH20;
}

public byte getE_NFH21() {
return E_NFH21;
}

public byte getE_NFH22() {
return E_NFH22;
}

public byte getE_NFH23() {
return E_NFH23;
}

public byte getE_NFH24() {
return E_NFH24;
}

public byte getE_NFH25() {
return E_NFH25;
}

public byte getE_NFH26() {
return E_NFH26;
}

public byte getE_NFH27() {
return E_NFH27;
}

public byte getE_NFH28() {
return E_NFH28;
}

public byte getE_NFH29() {
return E_NFH29;
}

public byte getE_NFH30() {
return E_NFH30;
}

public byte getE_NFH31() {
return E_NFH31;
}

public byte getE_NFH32() {
return E_NFH32;
}

public byte getE_NFH33() {
return E_NFH33;
}

public byte getE_NFH34() {
return E_NFH34;
}

public byte getE_NFH35() {
return E_NFH35;
}

public boolean getE_NFH36() {
return E_NFH36;
}

public byte getE_NFH37() {
return E_NFH37;
}

public byte getE_NFH38() {
return E_NFH38;
}

public byte getE_NFH39() {
return E_NFH39;
}

public byte getE_NGRP_DV() {
return E_NGRP_DV;
}

public byte getE_NHIQUAL_DV() {
return E_NHIQUAL_DV;
}

public byte getE_NIACT() {
return E_NIACT;
}

public byte getE_NIREL() {
return E_NIREL;
}

public byte getE_NISERPS() {
return E_NISERPS;
}

public byte getE_NJOBHIST() {
return E_NJOBHIST;
}

public byte getE_NMAR() {
return E_NMAR;
}

public byte getE_NMPSP_DV() {
return E_NMPSP_DV;
}

public byte getE_NNATCH() {
return E_NNATCH;
}

public byte getE_NNEWBORN() {
return E_NNEWBORN;
}

public byte getE_NNMPSP_DV() {
return E_NNMPSP_DV;
}

public byte getE_NNSIB_DV() {
return E_NNSIB_DV;
}

public byte getE_NNSSIB_DV() {
return E_NNSSIB_DV;
}

public byte getE_NOTEMPCHK() {
return E_NOTEMPCHK;
}

public byte getE_NPENSIONER_DV() {
return E_NPENSIONER_DV;
}

public byte getE_NPNS_DV() {
return E_NPNS_DV;
}

public byte getE_NPN_DV() {
return E_NPN_DV;
}

public byte getE_NQFHIGH_DV() {
return E_NQFHIGH_DV;
}

public byte getE_NRELS1() {
return E_NRELS1;
}

public byte getE_NRELS2() {
return E_NRELS2;
}

public byte getE_NRELS3() {
return E_NRELS3;
}

public byte getE_NRELS4() {
return E_NRELS4;
}

public byte getE_NRELS5() {
return E_NRELS5;
}

public byte getE_NRELS6() {
return E_NRELS6;
}

public byte getE_NUNDER16() {
return E_NUNDER16;
}

public byte getE_NUNDER16ABS() {
return E_NUNDER16ABS;
}

public byte getE_NUNDER20ABS() {
return E_NUNDER20ABS;
}

public byte getE_NUNMPSP_DV() {
return E_NUNMPSP_DV;
}

public byte getE_NXTENDREAS() {
return E_NXTENDREAS;
}

public byte getE_NXTJBENDD() {
return E_NXTJBENDD;
}

public byte getE_NXTJBENDM() {
return E_NXTJBENDM;
}

public short getE_NXTJBENDY4() {
return E_NXTJBENDY4;
}

public byte getE_NXTJBES() {
return E_NXTJBES;
}

public byte getE_NXTJBHRS() {
return E_NXTJBHRS;
}

public byte getE_NXTST() {
return E_NXTST;
}

public byte getE_NXTSTELSE() {
return E_NXTSTELSE;
}

public byte getE_NXTSTENDD() {
return E_NXTSTENDD;
}

public byte getE_NXTSTENDM() {
return E_NXTSTENDM;
}

public short getE_NXTSTENDY4() {
return E_NXTSTENDY4;
}

public byte getE_OCIMPA() {
return E_OCIMPA;
}

public byte getE_OCIMPB() {
return E_OCIMPB;
}

public byte getE_OCIMPE() {
return E_OCIMPE;
}

public byte getE_OCIMPF() {
return E_OCIMPF;
}

public byte getE_OCIMPI() {
return E_OCIMPI;
}

public byte getE_OCIMPK() {
return E_OCIMPK;
}

public byte getE_OCIMPL() {
return E_OCIMPL;
}

public byte getE_OHCH16() {
return E_OHCH16;
}

public byte getE_OLYMACT31() {
return E_OLYMACT31;
}

public byte getE_OLYMACT32() {
return E_OLYMACT32;
}

public byte getE_OLYMACT33() {
return E_OLYMACT33;
}

public byte getE_OLYMACT34() {
return E_OLYMACT34;
}

public byte getE_OLYMACT35() {
return E_OLYMACT35;
}

public byte getE_OLYMACT36() {
return E_OLYMACT36;
}

public byte getE_OLYMACT37() {
return E_OLYMACT37;
}

public byte getE_OLYMACT38() {
return E_OLYMACT38;
}

public byte getE_OLYMACT396() {
return E_OLYMACT396;
}

public byte getE_OLYMACT398() {
return E_OLYMACT398;
}

public byte getE_OLYMPAS31() {
return E_OLYMPAS31;
}

public byte getE_OLYMPAS32() {
return E_OLYMPAS32;
}

public byte getE_OLYMPAS33() {
return E_OLYMPAS33;
}

public byte getE_OLYMPAS34() {
return E_OLYMPAS34;
}

public byte getE_OLYMPAS35() {
return E_OLYMPAS35;
}

public byte getE_OLYMPAS396() {
return E_OLYMPAS396;
}

public byte getE_OLYMPAS398() {
return E_OLYMPAS398;
}

public byte getE_OPRLG() {
return E_OPRLG;
}

public byte getE_OPRLG0() {
return E_OPRLG0;
}

public byte getE_OPRLG0NI() {
return E_OPRLG0NI;
}

public byte getE_OPRLG1() {
return E_OPRLG1;
}

public boolean getE_ORIGADD() {
return E_ORIGADD;
}

public byte getE_OTHCONT() {
return E_OTHCONT;
}

public byte getE_OVTNSA() {
return E_OVTNSA;
}

public byte getE_OVTPAY() {
return E_OVTPAY;
}

protected double E_OVTRATE() {
return E_OVTRATE;
}

public byte getE_OVTREST() {
return E_OVTREST;
}

public byte getE_PAAGE() {
return E_PAAGE;
}

public byte getE_PAAID1() {
return E_PAAID1;
}

public byte getE_PAAID2() {
return E_PAAID2;
}

public byte getE_PAAID3() {
return E_PAAID3;
}

public byte getE_PAAID4() {
return E_PAAID4;
}

public byte getE_PAAID5() {
return E_PAAID5;
}

public byte getE_PAAID6() {
return E_PAAID6;
}

public byte getE_PAAID7() {
return E_PAAID7;
}

public byte getE_PAAID8() {
return E_PAAID8;
}

public byte getE_PAAID96() {
return E_PAAID96;
}

public byte getE_PAAID97() {
return E_PAAID97;
}

public byte getE_PACOB() {
return E_PACOB;
}

public byte getE_PACON() {
return E_PACON;
}

public byte getE_PAFAR() {
return E_PAFAR;
}

public byte getE_PAIDU1() {
return E_PAIDU1;
}

public byte getE_PAIDU2() {
return E_PAIDU2;
}

public byte getE_PAIDU3() {
return E_PAIDU3;
}

public byte getE_PAIDU4() {
return E_PAIDU4;
}

public byte getE_PAIDU5() {
return E_PAIDU5;
}

public byte getE_PAIDU6() {
return E_PAIDU6;
}

public byte getE_PAIDU7() {
return E_PAIDU7;
}

public byte getE_PAIDU8() {
return E_PAIDU8;
}

public byte getE_PAIDU96() {
return E_PAIDU96;
}

public byte getE_PAIDU97() {
return E_PAIDU97;
}

public byte getE_PAJU() {
return E_PAJU;
}

public byte getE_PALONE() {
return E_PALONE;
}

public byte getE_PAMOSTCON() {
return E_PAMOSTCON;
}

public byte getE_PANSSEC5_DV() {
return E_PANSSEC5_DV;
}

public byte getE_PARCHILD() {
return E_PARCHILD;
}

public byte getE_PAREVE() {
return E_PAREVE;
}

public byte getE_PARMAR() {
return E_PARMAR;
}

public byte getE_PARSCH() {
return E_PARSCH;
}

public byte getE_PASEE() {
return E_PASEE;
}

public short getE_PASOC00_CC() {
return E_PASOC00_CC;
}

public short getE_PASOC10_CC() {
return E_PASOC10_CC;
}

public byte getE_PASOC90_CC() {
return E_PASOC90_CC;
}

public int getE_PAYGL() {
return E_PAYGL;
}

protected double E_PAYGU_DV() {
return E_PAYGU_DV;
}

public byte getE_PAYGU_IF() {
return E_PAYGU_IF;
}

public byte getE_PAYGWC() {
return E_PAYGWC;
}

protected double E_PAYG_DV() {
return E_PAYG_DV;
}

public int getE_PAYNL() {
return E_PAYNL;
}

protected double E_PAYNU_DV() {
return E_PAYNU_DV;
}

public byte getE_PAYNU_IF() {
return E_PAYNU_IF;
}

public byte getE_PAYNWC() {
return E_PAYNWC;
}

protected double E_PAYN_DV() {
return E_PAYN_DV;
}

public byte getE_PAYRUK() {
return E_PAYRUK;
}

public byte getE_PAYTYP() {
return E_PAYTYP;
}

public int getE_PAYU() {
return E_PAYU;
}

public byte getE_PAYUG() {
return E_PAYUG;
}

public byte getE_PAYUSL() {
return E_PAYUSL;
}

public byte getE_PAYUWC() {
return E_PAYUWC;
}

protected double E_PAYU_DV() {
return E_PAYU_DV;
}

public byte getE_PBNFT1() {
return E_PBNFT1;
}

public byte getE_PBNFT10() {
return E_PBNFT10;
}

public byte getE_PBNFT11() {
return E_PBNFT11;
}

public byte getE_PBNFT12() {
return E_PBNFT12;
}

public byte getE_PBNFT13() {
return E_PBNFT13;
}

public byte getE_PBNFT2() {
return E_PBNFT2;
}

public byte getE_PBNFT3() {
return E_PBNFT3;
}

public byte getE_PBNFT4() {
return E_PBNFT4;
}

public byte getE_PBNFT5() {
return E_PBNFT5;
}

public byte getE_PBNFT6() {
return E_PBNFT6;
}

public byte getE_PBNFT7() {
return E_PBNFT7;
}

public byte getE_PBNFT8() {
return E_PBNFT8;
}

public byte getE_PBNFT9() {
return E_PBNFT9;
}

public byte getE_PBNFT96() {
return E_PBNFT96;
}

public byte getE_PENMEX() {
return E_PENMEX;
}

public boolean getE_PENSIONER_DV() {
return E_PENSIONER_DV;
}

public byte getE_PJBPTFT() {
return E_PJBPTFT;
}

public byte getE_PJSPTFT() {
return E_PJSPTFT;
}

public byte getE_PJULK4WK() {
return E_PJULK4WK;
}

public byte getE_PLBORNC() {
return E_PLBORNC;
}

public byte getE_PLIVPAR() {
return E_PLIVPAR;
}

public byte getE_PLNOWM() {
return E_PLNOWM;
}

public short getE_PLNOWY4() {
return E_PLNOWY4;
}

public int getE_PN1PID() {
return E_PN1PID;
}

public byte getE_PN1PNO() {
return E_PN1PNO;
}

public byte getE_PN1SEX() {
return E_PN1SEX;
}

public int getE_PN2PID() {
return E_PN2PID;
}

public byte getE_PN2PNO() {
return E_PN2PNO;
}

public byte getE_PN2SEX() {
return E_PN2SEX;
}

public byte getE_PNO() {
return E_PNO;
}

public int getE_PNS1PID() {
return E_PNS1PID;
}

public byte getE_PNS1PNO() {
return E_PNS1PNO;
}

public byte getE_PNS1SEX() {
return E_PNS1SEX;
}

public int getE_PNS2PID() {
return E_PNS2PID;
}

public byte getE_PNS2PNO() {
return E_PNS2PNO;
}

public byte getE_PNS2SEX() {
return E_PNS2SEX;
}

public byte getE_PPENSIONER() {
return E_PPENSIONER;
}

public int getE_PPID() {
return E_PPID;
}

public byte getE_PPNO() {
return E_PPNO;
}

public byte getE_PPPEX() {
return E_PPPEX;
}

public byte getE_PPPEXM() {
return E_PPPEXM;
}

public byte getE_PPSEX() {
return E_PPSEX;
}

public byte getE_PRAISEKID() {
return E_PRAISEKID;
}

public byte getE_PREARN() {
return E_PREARN;
}

public byte getE_PREARNA() {
return E_PREARNA;
}

public byte getE_PREARNW() {
return E_PREARNW;
}

public byte getE_PREASON() {
return E_PREASON;
}

public byte getE_PREG() {
return E_PREG;
}

public byte getE_PREGEND1() {
return E_PREGEND1;
}

public byte getE_PREGEND2() {
return E_PREGEND2;
}

public boolean getE_PREGEND3() {
return E_PREGEND3;
}

public byte getE_PREGFERT1() {
return E_PREGFERT1;
}

public byte getE_PREGFERT2() {
return E_PREGFERT2;
}

public byte getE_PREGFERT3() {
return E_PREGFERT3;
}

public byte getE_PREGM1() {
return E_PREGM1;
}

public byte getE_PREGM2() {
return E_PREGM2;
}

public byte getE_PREGM3() {
return E_PREGM3;
}

public byte getE_PREGOUT1() {
return E_PREGOUT1;
}

public byte getE_PREGOUT2() {
return E_PREGOUT2;
}

public byte getE_PREGOUT3() {
return E_PREGOUT3;
}

public byte getE_PREGSMK11() {
return E_PREGSMK11;
}

public byte getE_PREGSMK12() {
return E_PREGSMK12;
}

public boolean getE_PREGSMK13() {
return E_PREGSMK13;
}

public byte getE_PREGSMK21() {
return E_PREGSMK21;
}

public byte getE_PREGSMK22() {
return E_PREGSMK22;
}

public boolean getE_PREGSMK23() {
return E_PREGSMK23;
}

public byte getE_PREGSMK31() {
return E_PREGSMK31;
}

public byte getE_PREGSMK32() {
return E_PREGSMK32;
}

public boolean getE_PREGSMK33() {
return E_PREGSMK33;
}

public byte getE_PREGSMOKE1() {
return E_PREGSMOKE1;
}

public byte getE_PREGSMOKE2() {
return E_PREGSMOKE2;
}

public boolean getE_PREGSMOKE3() {
return E_PREGSMOKE3;
}

public short getE_PREGY41() {
return E_PREGY41;
}

public short getE_PREGY42() {
return E_PREGY42;
}

public short getE_PREGY43() {
return E_PREGY43;
}

public byte getE_PREL() {
return E_PREL;
}

public byte getE_PRFITB() {
return E_PRFITB;
}

public byte getE_PRFITBA() {
return E_PRFITBA;
}

public byte getE_PRFITBW() {
return E_PRFITBW;
}

public byte getE_PRIDE10() {
return E_PRIDE10;
}

public byte getE_PRIDE11() {
return E_PRIDE11;
}

public byte getE_PRIDE12() {
return E_PRIDE12;
}

public byte getE_PRIDE13() {
return E_PRIDE13;
}

public byte getE_PRIDE14() {
return E_PRIDE14;
}

public byte getE_PRIDE2() {
return E_PRIDE2;
}

public byte getE_PRIDE4A() {
return E_PRIDE4A;
}

public byte getE_PRIDE4B() {
return E_PRIDE4B;
}

public byte getE_PRIDE5() {
return E_PRIDE5;
}

public byte getE_PRIDE6() {
return E_PRIDE6;
}

public byte getE_PRIDE7() {
return E_PRIDE7;
}

public byte getE_PRIDE8() {
return E_PRIDE8;
}

public byte getE_PRIDE9() {
return E_PRIDE9;
}

public byte getE_PRIPN() {
return E_PRIPN;
}

public byte getE_PS1() {
return E_PS1;
}

public byte getE_PS10() {
return E_PS10;
}

public byte getE_PS11() {
return E_PS11;
}

public byte getE_PS12() {
return E_PS12;
}

public byte getE_PS13() {
return E_PS13;
}

public byte getE_PS14() {
return E_PS14;
}

public byte getE_PS15() {
return E_PS15;
}

public byte getE_PS16() {
return E_PS16;
}

public byte getE_PS17() {
return E_PS17;
}

public byte getE_PS18() {
return E_PS18;
}

public byte getE_PS19() {
return E_PS19;
}

public byte getE_PS2() {
return E_PS2;
}

public byte getE_PS20() {
return E_PS20;
}

public byte getE_PS21() {
return E_PS21;
}

public byte getE_PS22() {
return E_PS22;
}

public byte getE_PS23() {
return E_PS23;
}

public byte getE_PS24() {
return E_PS24;
}

public byte getE_PS25() {
return E_PS25;
}

public byte getE_PS26() {
return E_PS26;
}

public byte getE_PS27() {
return E_PS27;
}

public byte getE_PS28() {
return E_PS28;
}

public byte getE_PS29() {
return E_PS29;
}

public byte getE_PS3() {
return E_PS3;
}

public byte getE_PS30() {
return E_PS30;
}

public byte getE_PS31() {
return E_PS31;
}

public byte getE_PS32() {
return E_PS32;
}

public byte getE_PS4() {
return E_PS4;
}

public byte getE_PS5() {
return E_PS5;
}

public byte getE_PS6() {
return E_PS6;
}

public byte getE_PS7() {
return E_PS7;
}

public byte getE_PS8() {
return E_PS8;
}

public byte getE_PS9() {
return E_PS9;
}

public byte getE_PSDQA_DV() {
return E_PSDQA_DV;
}

public byte getE_PSDQB_DV() {
return E_PSDQB_DV;
}

public byte getE_PSDQC_DV() {
return E_PSDQC_DV;
}

public byte getE_PSNUMCH() {
return E_PSNUMCH;
}

public int getE_PSU() {
return E_PSU;
}

public byte getE_PYENRL() {
return E_PYENRL;
}

public byte getE_QFHIGH() {
return E_QFHIGH;
}

public boolean getE_QFHIGHFL_DV() {
return E_QFHIGHFL_DV;
}

public byte getE_QFHIGH_DV() {
return E_QFHIGH_DV;
}

public byte getE_QFVOC1() {
return E_QFVOC1;
}

public byte getE_QFVOC10() {
return E_QFVOC10;
}

public byte getE_QFVOC11() {
return E_QFVOC11;
}

public byte getE_QFVOC12() {
return E_QFVOC12;
}

public byte getE_QFVOC13() {
return E_QFVOC13;
}

public byte getE_QFVOC14() {
return E_QFVOC14;
}

public byte getE_QFVOC15() {
return E_QFVOC15;
}

public byte getE_QFVOC2() {
return E_QFVOC2;
}

public byte getE_QFVOC3() {
return E_QFVOC3;
}

public byte getE_QFVOC4() {
return E_QFVOC4;
}

public byte getE_QFVOC5() {
return E_QFVOC5;
}

public byte getE_QFVOC6() {
return E_QFVOC6;
}

public byte getE_QFVOC7() {
return E_QFVOC7;
}

public byte getE_QFVOC8() {
return E_QFVOC8;
}

public byte getE_QFVOC9() {
return E_QFVOC9;
}

public byte getE_QFVOC96() {
return E_QFVOC96;
}

public byte getE_QUALNE() {
return E_QUALNE;
}

public byte getE_QUALNEW1() {
return E_QUALNEW1;
}

public byte getE_QUALNEW10() {
return E_QUALNEW10;
}

public byte getE_QUALNEW11() {
return E_QUALNEW11;
}

public byte getE_QUALNEW13() {
return E_QUALNEW13;
}

public byte getE_QUALNEW15() {
return E_QUALNEW15;
}

public byte getE_QUALNEW16() {
return E_QUALNEW16;
}

public byte getE_QUALNEW17() {
return E_QUALNEW17;
}

public byte getE_QUALNEW18() {
return E_QUALNEW18;
}

public byte getE_QUALNEW19() {
return E_QUALNEW19;
}

public byte getE_QUALNEW2() {
return E_QUALNEW2;
}

public byte getE_QUALNEW20() {
return E_QUALNEW20;
}

public byte getE_QUALNEW21() {
return E_QUALNEW21;
}

public byte getE_QUALNEW22() {
return E_QUALNEW22;
}

public byte getE_QUALNEW23() {
return E_QUALNEW23;
}

public byte getE_QUALNEW24() {
return E_QUALNEW24;
}

public byte getE_QUALNEW25() {
return E_QUALNEW25;
}

public byte getE_QUALNEW26() {
return E_QUALNEW26;
}

public byte getE_QUALNEW27() {
return E_QUALNEW27;
}

public byte getE_QUALNEW28() {
return E_QUALNEW28;
}

public byte getE_QUALNEW29() {
return E_QUALNEW29;
}

public byte getE_QUALNEW3() {
return E_QUALNEW3;
}

public byte getE_QUALNEW30() {
return E_QUALNEW30;
}

public byte getE_QUALNEW31() {
return E_QUALNEW31;
}

public byte getE_QUALNEW4() {
return E_QUALNEW4;
}

public byte getE_QUALNEW6() {
return E_QUALNEW6;
}

public byte getE_QUALNEW7() {
return E_QUALNEW7;
}

public byte getE_QUALNEW8() {
return E_QUALNEW8;
}

public byte getE_QUALNEW9() {
return E_QUALNEW9;
}

public byte getE_QUALOC() {
return E_QUALOC;
}

public byte getE_QUARREL() {
return E_QUARREL;
}

public byte getE_RACEL() {
return E_RACEL;
}

public byte getE_RACELAT() {
return E_RACELAT;
}

public byte getE_RACELBT() {
return E_RACELBT;
}

public byte getE_RACELMT() {
return E_RACELMT;
}

public byte getE_RACELOT_CODE() {
return E_RACELOT_CODE;
}

public byte getE_RACELO_CODE() {
return E_RACELO_CODE;
}

public byte getE_RACELT() {
return E_RACELT;
}

public byte getE_RACELWT() {
return E_RACELWT;
}

public byte getE_RACEL_DV() {
return E_RACEL_DV;
}

public boolean getE_RACH16_DV() {
return E_RACH16_DV;
}

public byte getE_READDIF() {
return E_READDIF;
}

public byte getE_REASEND1() {
return E_REASEND1;
}

public byte getE_REASEND2() {
return E_REASEND2;
}

public byte getE_REASEND3() {
return E_REASEND3;
}

public byte getE_REASEND4() {
return E_REASEND4;
}

public byte getE_REASEND5() {
return E_REASEND5;
}

public boolean getE_REASEND6() {
return E_REASEND6;
}

public byte getE_RELKID() {
return E_RELKID;
}

public byte getE_RELUP() {
return E_RELUP;
}

public byte getE_REMAIL_CODE() {
return E_REMAIL_CODE;
}

public byte getE_RESATTACKED1_1() {
return E_RESATTACKED1_1;
}

public byte getE_RESATTACKED1_10() {
return E_RESATTACKED1_10;
}

public byte getE_RESATTACKED1_11() {
return E_RESATTACKED1_11;
}

public byte getE_RESATTACKED1_12() {
return E_RESATTACKED1_12;
}

public byte getE_RESATTACKED1_2() {
return E_RESATTACKED1_2;
}

public byte getE_RESATTACKED1_3() {
return E_RESATTACKED1_3;
}

public byte getE_RESATTACKED1_4() {
return E_RESATTACKED1_4;
}

public byte getE_RESATTACKED1_5() {
return E_RESATTACKED1_5;
}

public byte getE_RESATTACKED1_6() {
return E_RESATTACKED1_6;
}

public boolean getE_RESATTACKED1_7() {
return E_RESATTACKED1_7;
}

public byte getE_RESATTACKED1_8() {
return E_RESATTACKED1_8;
}

public byte getE_RESATTACKED1_9() {
return E_RESATTACKED1_9;
}

public byte getE_RESATTACKED2_1() {
return E_RESATTACKED2_1;
}

public byte getE_RESATTACKED2_10() {
return E_RESATTACKED2_10;
}

public byte getE_RESATTACKED2_11() {
return E_RESATTACKED2_11;
}

public byte getE_RESATTACKED2_12() {
return E_RESATTACKED2_12;
}

public byte getE_RESATTACKED2_2() {
return E_RESATTACKED2_2;
}

public byte getE_RESATTACKED2_3() {
return E_RESATTACKED2_3;
}

public byte getE_RESATTACKED2_4() {
return E_RESATTACKED2_4;
}

public byte getE_RESATTACKED2_5() {
return E_RESATTACKED2_5;
}

public byte getE_RESATTACKED2_6() {
return E_RESATTACKED2_6;
}

public boolean getE_RESATTACKED2_7() {
return E_RESATTACKED2_7;
}

public byte getE_RESATTACKED2_8() {
return E_RESATTACKED2_8;
}

public byte getE_RESATTACKED2_9() {
return E_RESATTACKED2_9;
}

public byte getE_RESATTACKED3_1() {
return E_RESATTACKED3_1;
}

public byte getE_RESATTACKED3_10() {
return E_RESATTACKED3_10;
}

public byte getE_RESATTACKED3_11() {
return E_RESATTACKED3_11;
}

public byte getE_RESATTACKED3_12() {
return E_RESATTACKED3_12;
}

public byte getE_RESATTACKED3_2() {
return E_RESATTACKED3_2;
}

public byte getE_RESATTACKED3_3() {
return E_RESATTACKED3_3;
}

public byte getE_RESATTACKED3_4() {
return E_RESATTACKED3_4;
}

public byte getE_RESATTACKED3_5() {
return E_RESATTACKED3_5;
}

public byte getE_RESATTACKED3_6() {
return E_RESATTACKED3_6;
}

public boolean getE_RESATTACKED3_7() {
return E_RESATTACKED3_7;
}

public byte getE_RESATTACKED3_8() {
return E_RESATTACKED3_8;
}

public byte getE_RESATTACKED3_9() {
return E_RESATTACKED3_9;
}

public byte getE_RESATTACKED4_1() {
return E_RESATTACKED4_1;
}

public byte getE_RESATTACKED4_10() {
return E_RESATTACKED4_10;
}

public byte getE_RESATTACKED4_11() {
return E_RESATTACKED4_11;
}

public byte getE_RESATTACKED4_12() {
return E_RESATTACKED4_12;
}

public byte getE_RESATTACKED4_2() {
return E_RESATTACKED4_2;
}

public byte getE_RESATTACKED4_3() {
return E_RESATTACKED4_3;
}

public byte getE_RESATTACKED4_4() {
return E_RESATTACKED4_4;
}

public byte getE_RESATTACKED4_5() {
return E_RESATTACKED4_5;
}

public byte getE_RESATTACKED4_6() {
return E_RESATTACKED4_6;
}

public boolean getE_RESATTACKED4_7() {
return E_RESATTACKED4_7;
}

public byte getE_RESATTACKED4_8() {
return E_RESATTACKED4_8;
}

public byte getE_RESATTACKED4_9() {
return E_RESATTACKED4_9;
}

public byte getE_RESATTACKED5_1() {
return E_RESATTACKED5_1;
}

public byte getE_RESATTACKED5_10() {
return E_RESATTACKED5_10;
}

public byte getE_RESATTACKED5_11() {
return E_RESATTACKED5_11;
}

public byte getE_RESATTACKED5_12() {
return E_RESATTACKED5_12;
}

public byte getE_RESATTACKED5_2() {
return E_RESATTACKED5_2;
}

public byte getE_RESATTACKED5_3() {
return E_RESATTACKED5_3;
}

public byte getE_RESATTACKED5_4() {
return E_RESATTACKED5_4;
}

public byte getE_RESATTACKED5_5() {
return E_RESATTACKED5_5;
}

public byte getE_RESATTACKED5_6() {
return E_RESATTACKED5_6;
}

public boolean getE_RESATTACKED5_7() {
return E_RESATTACKED5_7;
}

public byte getE_RESATTACKED5_8() {
return E_RESATTACKED5_8;
}

public byte getE_RESATTACKED5_9() {
return E_RESATTACKED5_9;
}

public byte getE_RESATTACKED6_1() {
return E_RESATTACKED6_1;
}

public byte getE_RESATTACKED6_10() {
return E_RESATTACKED6_10;
}

public byte getE_RESATTACKED6_11() {
return E_RESATTACKED6_11;
}

public byte getE_RESATTACKED6_12() {
return E_RESATTACKED6_12;
}

public byte getE_RESATTACKED6_2() {
return E_RESATTACKED6_2;
}

public byte getE_RESATTACKED6_3() {
return E_RESATTACKED6_3;
}

public byte getE_RESATTACKED6_4() {
return E_RESATTACKED6_4;
}

public byte getE_RESATTACKED6_5() {
return E_RESATTACKED6_5;
}

public byte getE_RESATTACKED6_6() {
return E_RESATTACKED6_6;
}

public boolean getE_RESATTACKED6_7() {
return E_RESATTACKED6_7;
}

public byte getE_RESATTACKED6_8() {
return E_RESATTACKED6_8;
}

public byte getE_RESATTACKED6_9() {
return E_RESATTACKED6_9;
}

public byte getE_RESATTACKED7_1() {
return E_RESATTACKED7_1;
}

public byte getE_RESATTACKED7_10() {
return E_RESATTACKED7_10;
}

public byte getE_RESATTACKED7_11() {
return E_RESATTACKED7_11;
}

public byte getE_RESATTACKED7_12() {
return E_RESATTACKED7_12;
}

public byte getE_RESATTACKED7_2() {
return E_RESATTACKED7_2;
}

public byte getE_RESATTACKED7_3() {
return E_RESATTACKED7_3;
}

public byte getE_RESATTACKED7_4() {
return E_RESATTACKED7_4;
}

public byte getE_RESATTACKED7_5() {
return E_RESATTACKED7_5;
}

public byte getE_RESATTACKED7_6() {
return E_RESATTACKED7_6;
}

public boolean getE_RESATTACKED7_7() {
return E_RESATTACKED7_7;
}

public byte getE_RESATTACKED7_8() {
return E_RESATTACKED7_8;
}

public byte getE_RESATTACKED7_9() {
return E_RESATTACKED7_9;
}

public byte getE_RESATTACKED8_1() {
return E_RESATTACKED8_1;
}

public byte getE_RESATTACKED8_10() {
return E_RESATTACKED8_10;
}

public byte getE_RESATTACKED8_11() {
return E_RESATTACKED8_11;
}

public byte getE_RESATTACKED8_12() {
return E_RESATTACKED8_12;
}

public byte getE_RESATTACKED8_2() {
return E_RESATTACKED8_2;
}

public byte getE_RESATTACKED8_3() {
return E_RESATTACKED8_3;
}

public byte getE_RESATTACKED8_4() {
return E_RESATTACKED8_4;
}

public byte getE_RESATTACKED8_5() {
return E_RESATTACKED8_5;
}

public byte getE_RESATTACKED8_6() {
return E_RESATTACKED8_6;
}

public boolean getE_RESATTACKED8_7() {
return E_RESATTACKED8_7;
}

public byte getE_RESATTACKED8_8() {
return E_RESATTACKED8_8;
}

public byte getE_RESATTACKED8_9() {
return E_RESATTACKED8_9;
}

public byte getE_RESATTACKED96_1() {
return E_RESATTACKED96_1;
}

public byte getE_RESATTACKED96_10() {
return E_RESATTACKED96_10;
}

public byte getE_RESATTACKED96_11() {
return E_RESATTACKED96_11;
}

public byte getE_RESATTACKED96_12() {
return E_RESATTACKED96_12;
}

public byte getE_RESATTACKED96_2() {
return E_RESATTACKED96_2;
}

public byte getE_RESATTACKED96_3() {
return E_RESATTACKED96_3;
}

public byte getE_RESATTACKED96_4() {
return E_RESATTACKED96_4;
}

public byte getE_RESATTACKED96_5() {
return E_RESATTACKED96_5;
}

public byte getE_RESATTACKED96_6() {
return E_RESATTACKED96_6;
}

public boolean getE_RESATTACKED96_7() {
return E_RESATTACKED96_7;
}

public byte getE_RESATTACKED96_8() {
return E_RESATTACKED96_8;
}

public byte getE_RESATTACKED96_9() {
return E_RESATTACKED96_9;
}

public byte getE_RESATTACKED97_1() {
return E_RESATTACKED97_1;
}

public byte getE_RESATTACKED97_10() {
return E_RESATTACKED97_10;
}

public byte getE_RESATTACKED97_11() {
return E_RESATTACKED97_11;
}

public byte getE_RESATTACKED97_12() {
return E_RESATTACKED97_12;
}

public byte getE_RESATTACKED97_2() {
return E_RESATTACKED97_2;
}

public byte getE_RESATTACKED97_3() {
return E_RESATTACKED97_3;
}

public byte getE_RESATTACKED97_4() {
return E_RESATTACKED97_4;
}

public byte getE_RESATTACKED97_5() {
return E_RESATTACKED97_5;
}

public byte getE_RESATTACKED97_6() {
return E_RESATTACKED97_6;
}

public boolean getE_RESATTACKED97_7() {
return E_RESATTACKED97_7;
}

public byte getE_RESATTACKED97_8() {
return E_RESATTACKED97_8;
}

public byte getE_RESATTACKED97_9() {
return E_RESATTACKED97_9;
}

public byte getE_RESATTACKED9_1() {
return E_RESATTACKED9_1;
}

public byte getE_RESATTACKED9_10() {
return E_RESATTACKED9_10;
}

public byte getE_RESATTACKED9_11() {
return E_RESATTACKED9_11;
}

public byte getE_RESATTACKED9_12() {
return E_RESATTACKED9_12;
}

public byte getE_RESATTACKED9_2() {
return E_RESATTACKED9_2;
}

public byte getE_RESATTACKED9_3() {
return E_RESATTACKED9_3;
}

public byte getE_RESATTACKED9_4() {
return E_RESATTACKED9_4;
}

public byte getE_RESATTACKED9_5() {
return E_RESATTACKED9_5;
}

public byte getE_RESATTACKED9_6() {
return E_RESATTACKED9_6;
}

public boolean getE_RESATTACKED9_7() {
return E_RESATTACKED9_7;
}

public byte getE_RESATTACKED9_8() {
return E_RESATTACKED9_8;
}

public byte getE_RESATTACKED9_9() {
return E_RESATTACKED9_9;
}

public byte getE_RESAVOID1_1() {
return E_RESAVOID1_1;
}

public byte getE_RESAVOID1_10() {
return E_RESAVOID1_10;
}

public byte getE_RESAVOID1_11() {
return E_RESAVOID1_11;
}

public byte getE_RESAVOID1_12() {
return E_RESAVOID1_12;
}

public byte getE_RESAVOID1_2() {
return E_RESAVOID1_2;
}

public byte getE_RESAVOID1_3() {
return E_RESAVOID1_3;
}

public byte getE_RESAVOID1_4() {
return E_RESAVOID1_4;
}

public byte getE_RESAVOID1_5() {
return E_RESAVOID1_5;
}

public byte getE_RESAVOID1_6() {
return E_RESAVOID1_6;
}

public byte getE_RESAVOID1_7() {
return E_RESAVOID1_7;
}

public byte getE_RESAVOID1_8() {
return E_RESAVOID1_8;
}

public byte getE_RESAVOID1_9() {
return E_RESAVOID1_9;
}

public byte getE_RESAVOID2_1() {
return E_RESAVOID2_1;
}

public byte getE_RESAVOID2_10() {
return E_RESAVOID2_10;
}

public byte getE_RESAVOID2_11() {
return E_RESAVOID2_11;
}

public byte getE_RESAVOID2_12() {
return E_RESAVOID2_12;
}

public byte getE_RESAVOID2_2() {
return E_RESAVOID2_2;
}

public byte getE_RESAVOID2_3() {
return E_RESAVOID2_3;
}

public byte getE_RESAVOID2_4() {
return E_RESAVOID2_4;
}

public byte getE_RESAVOID2_5() {
return E_RESAVOID2_5;
}

public byte getE_RESAVOID2_6() {
return E_RESAVOID2_6;
}

public byte getE_RESAVOID2_7() {
return E_RESAVOID2_7;
}

public byte getE_RESAVOID2_8() {
return E_RESAVOID2_8;
}

public byte getE_RESAVOID2_9() {
return E_RESAVOID2_9;
}

public byte getE_RESAVOID3_1() {
return E_RESAVOID3_1;
}

public byte getE_RESAVOID3_10() {
return E_RESAVOID3_10;
}

public byte getE_RESAVOID3_11() {
return E_RESAVOID3_11;
}

public byte getE_RESAVOID3_12() {
return E_RESAVOID3_12;
}

public byte getE_RESAVOID3_2() {
return E_RESAVOID3_2;
}

public byte getE_RESAVOID3_3() {
return E_RESAVOID3_3;
}

public byte getE_RESAVOID3_4() {
return E_RESAVOID3_4;
}

public byte getE_RESAVOID3_5() {
return E_RESAVOID3_5;
}

public byte getE_RESAVOID3_6() {
return E_RESAVOID3_6;
}

public byte getE_RESAVOID3_7() {
return E_RESAVOID3_7;
}

public byte getE_RESAVOID3_8() {
return E_RESAVOID3_8;
}

public byte getE_RESAVOID3_9() {
return E_RESAVOID3_9;
}

public byte getE_RESAVOID4_1() {
return E_RESAVOID4_1;
}

public byte getE_RESAVOID4_10() {
return E_RESAVOID4_10;
}

public byte getE_RESAVOID4_11() {
return E_RESAVOID4_11;
}

public byte getE_RESAVOID4_12() {
return E_RESAVOID4_12;
}

public byte getE_RESAVOID4_2() {
return E_RESAVOID4_2;
}

public byte getE_RESAVOID4_3() {
return E_RESAVOID4_3;
}

public byte getE_RESAVOID4_4() {
return E_RESAVOID4_4;
}

public byte getE_RESAVOID4_5() {
return E_RESAVOID4_5;
}

public byte getE_RESAVOID4_6() {
return E_RESAVOID4_6;
}

public byte getE_RESAVOID4_7() {
return E_RESAVOID4_7;
}

public byte getE_RESAVOID4_8() {
return E_RESAVOID4_8;
}

public byte getE_RESAVOID4_9() {
return E_RESAVOID4_9;
}

public byte getE_RESAVOID5_1() {
return E_RESAVOID5_1;
}

public byte getE_RESAVOID5_10() {
return E_RESAVOID5_10;
}

public byte getE_RESAVOID5_11() {
return E_RESAVOID5_11;
}

public byte getE_RESAVOID5_12() {
return E_RESAVOID5_12;
}

public byte getE_RESAVOID5_2() {
return E_RESAVOID5_2;
}

public byte getE_RESAVOID5_3() {
return E_RESAVOID5_3;
}

public byte getE_RESAVOID5_4() {
return E_RESAVOID5_4;
}

public byte getE_RESAVOID5_5() {
return E_RESAVOID5_5;
}

public byte getE_RESAVOID5_6() {
return E_RESAVOID5_6;
}

public byte getE_RESAVOID5_7() {
return E_RESAVOID5_7;
}

public byte getE_RESAVOID5_8() {
return E_RESAVOID5_8;
}

public byte getE_RESAVOID5_9() {
return E_RESAVOID5_9;
}

public byte getE_RESAVOID6_1() {
return E_RESAVOID6_1;
}

public byte getE_RESAVOID6_10() {
return E_RESAVOID6_10;
}

public byte getE_RESAVOID6_11() {
return E_RESAVOID6_11;
}

public byte getE_RESAVOID6_12() {
return E_RESAVOID6_12;
}

public byte getE_RESAVOID6_2() {
return E_RESAVOID6_2;
}

public byte getE_RESAVOID6_3() {
return E_RESAVOID6_3;
}

public byte getE_RESAVOID6_4() {
return E_RESAVOID6_4;
}

public byte getE_RESAVOID6_5() {
return E_RESAVOID6_5;
}

public byte getE_RESAVOID6_6() {
return E_RESAVOID6_6;
}

public byte getE_RESAVOID6_7() {
return E_RESAVOID6_7;
}

public byte getE_RESAVOID6_8() {
return E_RESAVOID6_8;
}

public byte getE_RESAVOID6_9() {
return E_RESAVOID6_9;
}

public byte getE_RESAVOID7_1() {
return E_RESAVOID7_1;
}

public byte getE_RESAVOID7_10() {
return E_RESAVOID7_10;
}

public byte getE_RESAVOID7_11() {
return E_RESAVOID7_11;
}

public byte getE_RESAVOID7_12() {
return E_RESAVOID7_12;
}

public byte getE_RESAVOID7_2() {
return E_RESAVOID7_2;
}

public byte getE_RESAVOID7_3() {
return E_RESAVOID7_3;
}

public byte getE_RESAVOID7_4() {
return E_RESAVOID7_4;
}

public byte getE_RESAVOID7_5() {
return E_RESAVOID7_5;
}

public byte getE_RESAVOID7_6() {
return E_RESAVOID7_6;
}

public byte getE_RESAVOID7_7() {
return E_RESAVOID7_7;
}

public byte getE_RESAVOID7_8() {
return E_RESAVOID7_8;
}

public byte getE_RESAVOID7_9() {
return E_RESAVOID7_9;
}

public byte getE_RESAVOID8_1() {
return E_RESAVOID8_1;
}

public byte getE_RESAVOID8_10() {
return E_RESAVOID8_10;
}

public byte getE_RESAVOID8_11() {
return E_RESAVOID8_11;
}

public byte getE_RESAVOID8_12() {
return E_RESAVOID8_12;
}

public byte getE_RESAVOID8_2() {
return E_RESAVOID8_2;
}

public byte getE_RESAVOID8_3() {
return E_RESAVOID8_3;
}

public byte getE_RESAVOID8_4() {
return E_RESAVOID8_4;
}

public byte getE_RESAVOID8_5() {
return E_RESAVOID8_5;
}

public byte getE_RESAVOID8_6() {
return E_RESAVOID8_6;
}

public byte getE_RESAVOID8_7() {
return E_RESAVOID8_7;
}

public byte getE_RESAVOID8_8() {
return E_RESAVOID8_8;
}

public byte getE_RESAVOID8_9() {
return E_RESAVOID8_9;
}

public byte getE_RESAVOID96_1() {
return E_RESAVOID96_1;
}

public byte getE_RESAVOID96_10() {
return E_RESAVOID96_10;
}

public byte getE_RESAVOID96_11() {
return E_RESAVOID96_11;
}

public byte getE_RESAVOID96_12() {
return E_RESAVOID96_12;
}

public byte getE_RESAVOID96_2() {
return E_RESAVOID96_2;
}

public byte getE_RESAVOID96_3() {
return E_RESAVOID96_3;
}

public byte getE_RESAVOID96_4() {
return E_RESAVOID96_4;
}

public byte getE_RESAVOID96_5() {
return E_RESAVOID96_5;
}

public byte getE_RESAVOID96_6() {
return E_RESAVOID96_6;
}

public byte getE_RESAVOID96_7() {
return E_RESAVOID96_7;
}

public byte getE_RESAVOID96_8() {
return E_RESAVOID96_8;
}

public byte getE_RESAVOID96_9() {
return E_RESAVOID96_9;
}

public byte getE_RESAVOID97_1() {
return E_RESAVOID97_1;
}

public byte getE_RESAVOID97_10() {
return E_RESAVOID97_10;
}

public byte getE_RESAVOID97_11() {
return E_RESAVOID97_11;
}

public byte getE_RESAVOID97_12() {
return E_RESAVOID97_12;
}

public byte getE_RESAVOID97_2() {
return E_RESAVOID97_2;
}

public byte getE_RESAVOID97_3() {
return E_RESAVOID97_3;
}

public byte getE_RESAVOID97_4() {
return E_RESAVOID97_4;
}

public byte getE_RESAVOID97_5() {
return E_RESAVOID97_5;
}

public byte getE_RESAVOID97_6() {
return E_RESAVOID97_6;
}

public byte getE_RESAVOID97_7() {
return E_RESAVOID97_7;
}

public byte getE_RESAVOID97_8() {
return E_RESAVOID97_8;
}

public byte getE_RESAVOID97_9() {
return E_RESAVOID97_9;
}

public byte getE_RESAVOID9_1() {
return E_RESAVOID9_1;
}

public byte getE_RESAVOID9_10() {
return E_RESAVOID9_10;
}

public byte getE_RESAVOID9_11() {
return E_RESAVOID9_11;
}

public byte getE_RESAVOID9_12() {
return E_RESAVOID9_12;
}

public byte getE_RESAVOID9_2() {
return E_RESAVOID9_2;
}

public byte getE_RESAVOID9_3() {
return E_RESAVOID9_3;
}

public byte getE_RESAVOID9_4() {
return E_RESAVOID9_4;
}

public byte getE_RESAVOID9_5() {
return E_RESAVOID9_5;
}

public byte getE_RESAVOID9_6() {
return E_RESAVOID9_6;
}

public byte getE_RESAVOID9_7() {
return E_RESAVOID9_7;
}

public byte getE_RESAVOID9_8() {
return E_RESAVOID9_8;
}

public byte getE_RESAVOID9_9() {
return E_RESAVOID9_9;
}

public byte getE_RESINSULTED1_1() {
return E_RESINSULTED1_1;
}

public byte getE_RESINSULTED1_10() {
return E_RESINSULTED1_10;
}

public byte getE_RESINSULTED1_11() {
return E_RESINSULTED1_11;
}

public byte getE_RESINSULTED1_12() {
return E_RESINSULTED1_12;
}

public byte getE_RESINSULTED1_2() {
return E_RESINSULTED1_2;
}

public byte getE_RESINSULTED1_3() {
return E_RESINSULTED1_3;
}

public byte getE_RESINSULTED1_4() {
return E_RESINSULTED1_4;
}

public byte getE_RESINSULTED1_5() {
return E_RESINSULTED1_5;
}

public byte getE_RESINSULTED1_6() {
return E_RESINSULTED1_6;
}

public byte getE_RESINSULTED1_7() {
return E_RESINSULTED1_7;
}

public byte getE_RESINSULTED1_8() {
return E_RESINSULTED1_8;
}

public byte getE_RESINSULTED1_9() {
return E_RESINSULTED1_9;
}

public byte getE_RESINSULTED2_1() {
return E_RESINSULTED2_1;
}

public byte getE_RESINSULTED2_10() {
return E_RESINSULTED2_10;
}

public byte getE_RESINSULTED2_11() {
return E_RESINSULTED2_11;
}

public byte getE_RESINSULTED2_12() {
return E_RESINSULTED2_12;
}

public byte getE_RESINSULTED2_2() {
return E_RESINSULTED2_2;
}

public byte getE_RESINSULTED2_3() {
return E_RESINSULTED2_3;
}

public byte getE_RESINSULTED2_4() {
return E_RESINSULTED2_4;
}

public byte getE_RESINSULTED2_5() {
return E_RESINSULTED2_5;
}

public byte getE_RESINSULTED2_6() {
return E_RESINSULTED2_6;
}

public byte getE_RESINSULTED2_7() {
return E_RESINSULTED2_7;
}

public byte getE_RESINSULTED2_8() {
return E_RESINSULTED2_8;
}

public byte getE_RESINSULTED2_9() {
return E_RESINSULTED2_9;
}

public byte getE_RESINSULTED3_1() {
return E_RESINSULTED3_1;
}

public byte getE_RESINSULTED3_10() {
return E_RESINSULTED3_10;
}

public byte getE_RESINSULTED3_11() {
return E_RESINSULTED3_11;
}

public byte getE_RESINSULTED3_12() {
return E_RESINSULTED3_12;
}

public byte getE_RESINSULTED3_2() {
return E_RESINSULTED3_2;
}

public byte getE_RESINSULTED3_3() {
return E_RESINSULTED3_3;
}

public byte getE_RESINSULTED3_4() {
return E_RESINSULTED3_4;
}

public byte getE_RESINSULTED3_5() {
return E_RESINSULTED3_5;
}

public byte getE_RESINSULTED3_6() {
return E_RESINSULTED3_6;
}

public byte getE_RESINSULTED3_7() {
return E_RESINSULTED3_7;
}

public byte getE_RESINSULTED3_8() {
return E_RESINSULTED3_8;
}

public byte getE_RESINSULTED3_9() {
return E_RESINSULTED3_9;
}

public byte getE_RESINSULTED4_1() {
return E_RESINSULTED4_1;
}

public byte getE_RESINSULTED4_10() {
return E_RESINSULTED4_10;
}

public byte getE_RESINSULTED4_11() {
return E_RESINSULTED4_11;
}

public byte getE_RESINSULTED4_12() {
return E_RESINSULTED4_12;
}

public byte getE_RESINSULTED4_2() {
return E_RESINSULTED4_2;
}

public byte getE_RESINSULTED4_3() {
return E_RESINSULTED4_3;
}

public byte getE_RESINSULTED4_4() {
return E_RESINSULTED4_4;
}

public byte getE_RESINSULTED4_5() {
return E_RESINSULTED4_5;
}

public byte getE_RESINSULTED4_6() {
return E_RESINSULTED4_6;
}

public byte getE_RESINSULTED4_7() {
return E_RESINSULTED4_7;
}

public byte getE_RESINSULTED4_8() {
return E_RESINSULTED4_8;
}

public byte getE_RESINSULTED4_9() {
return E_RESINSULTED4_9;
}

public byte getE_RESINSULTED5_1() {
return E_RESINSULTED5_1;
}

public byte getE_RESINSULTED5_10() {
return E_RESINSULTED5_10;
}

public byte getE_RESINSULTED5_11() {
return E_RESINSULTED5_11;
}

public byte getE_RESINSULTED5_12() {
return E_RESINSULTED5_12;
}

public byte getE_RESINSULTED5_2() {
return E_RESINSULTED5_2;
}

public byte getE_RESINSULTED5_3() {
return E_RESINSULTED5_3;
}

public byte getE_RESINSULTED5_4() {
return E_RESINSULTED5_4;
}

public byte getE_RESINSULTED5_5() {
return E_RESINSULTED5_5;
}

public byte getE_RESINSULTED5_6() {
return E_RESINSULTED5_6;
}

public byte getE_RESINSULTED5_7() {
return E_RESINSULTED5_7;
}

public byte getE_RESINSULTED5_8() {
return E_RESINSULTED5_8;
}

public byte getE_RESINSULTED5_9() {
return E_RESINSULTED5_9;
}

public byte getE_RESINSULTED6_1() {
return E_RESINSULTED6_1;
}

public byte getE_RESINSULTED6_10() {
return E_RESINSULTED6_10;
}

public byte getE_RESINSULTED6_11() {
return E_RESINSULTED6_11;
}

public byte getE_RESINSULTED6_12() {
return E_RESINSULTED6_12;
}

public byte getE_RESINSULTED6_2() {
return E_RESINSULTED6_2;
}

public byte getE_RESINSULTED6_3() {
return E_RESINSULTED6_3;
}

public byte getE_RESINSULTED6_4() {
return E_RESINSULTED6_4;
}

public byte getE_RESINSULTED6_5() {
return E_RESINSULTED6_5;
}

public byte getE_RESINSULTED6_6() {
return E_RESINSULTED6_6;
}

public byte getE_RESINSULTED6_7() {
return E_RESINSULTED6_7;
}

public byte getE_RESINSULTED6_8() {
return E_RESINSULTED6_8;
}

public byte getE_RESINSULTED6_9() {
return E_RESINSULTED6_9;
}

public byte getE_RESINSULTED7_1() {
return E_RESINSULTED7_1;
}

public byte getE_RESINSULTED7_10() {
return E_RESINSULTED7_10;
}

public byte getE_RESINSULTED7_11() {
return E_RESINSULTED7_11;
}

public byte getE_RESINSULTED7_12() {
return E_RESINSULTED7_12;
}

public byte getE_RESINSULTED7_2() {
return E_RESINSULTED7_2;
}

public byte getE_RESINSULTED7_3() {
return E_RESINSULTED7_3;
}

public byte getE_RESINSULTED7_4() {
return E_RESINSULTED7_4;
}

public byte getE_RESINSULTED7_5() {
return E_RESINSULTED7_5;
}

public byte getE_RESINSULTED7_6() {
return E_RESINSULTED7_6;
}

public byte getE_RESINSULTED7_7() {
return E_RESINSULTED7_7;
}

public byte getE_RESINSULTED7_8() {
return E_RESINSULTED7_8;
}

public byte getE_RESINSULTED7_9() {
return E_RESINSULTED7_9;
}

public byte getE_RESINSULTED8_1() {
return E_RESINSULTED8_1;
}

public byte getE_RESINSULTED8_10() {
return E_RESINSULTED8_10;
}

public byte getE_RESINSULTED8_11() {
return E_RESINSULTED8_11;
}

public byte getE_RESINSULTED8_12() {
return E_RESINSULTED8_12;
}

public byte getE_RESINSULTED8_2() {
return E_RESINSULTED8_2;
}

public byte getE_RESINSULTED8_3() {
return E_RESINSULTED8_3;
}

public byte getE_RESINSULTED8_4() {
return E_RESINSULTED8_4;
}

public byte getE_RESINSULTED8_5() {
return E_RESINSULTED8_5;
}

public byte getE_RESINSULTED8_6() {
return E_RESINSULTED8_6;
}

public byte getE_RESINSULTED8_7() {
return E_RESINSULTED8_7;
}

public byte getE_RESINSULTED8_8() {
return E_RESINSULTED8_8;
}

public byte getE_RESINSULTED8_9() {
return E_RESINSULTED8_9;
}

public byte getE_RESINSULTED96_1() {
return E_RESINSULTED96_1;
}

public byte getE_RESINSULTED96_10() {
return E_RESINSULTED96_10;
}

public byte getE_RESINSULTED96_11() {
return E_RESINSULTED96_11;
}

public byte getE_RESINSULTED96_12() {
return E_RESINSULTED96_12;
}

public byte getE_RESINSULTED96_2() {
return E_RESINSULTED96_2;
}

public byte getE_RESINSULTED96_3() {
return E_RESINSULTED96_3;
}

public byte getE_RESINSULTED96_4() {
return E_RESINSULTED96_4;
}

public byte getE_RESINSULTED96_5() {
return E_RESINSULTED96_5;
}

public byte getE_RESINSULTED96_6() {
return E_RESINSULTED96_6;
}

public byte getE_RESINSULTED96_7() {
return E_RESINSULTED96_7;
}

public byte getE_RESINSULTED96_8() {
return E_RESINSULTED96_8;
}

public byte getE_RESINSULTED96_9() {
return E_RESINSULTED96_9;
}

public byte getE_RESINSULTED97_1() {
return E_RESINSULTED97_1;
}

public byte getE_RESINSULTED97_10() {
return E_RESINSULTED97_10;
}

public byte getE_RESINSULTED97_11() {
return E_RESINSULTED97_11;
}

public byte getE_RESINSULTED97_12() {
return E_RESINSULTED97_12;
}

public byte getE_RESINSULTED97_2() {
return E_RESINSULTED97_2;
}

public byte getE_RESINSULTED97_3() {
return E_RESINSULTED97_3;
}

public byte getE_RESINSULTED97_4() {
return E_RESINSULTED97_4;
}

public byte getE_RESINSULTED97_5() {
return E_RESINSULTED97_5;
}

public byte getE_RESINSULTED97_6() {
return E_RESINSULTED97_6;
}

public byte getE_RESINSULTED97_7() {
return E_RESINSULTED97_7;
}

public byte getE_RESINSULTED97_8() {
return E_RESINSULTED97_8;
}

public byte getE_RESINSULTED97_9() {
return E_RESINSULTED97_9;
}

public byte getE_RESINSULTED9_1() {
return E_RESINSULTED9_1;
}

public byte getE_RESINSULTED9_10() {
return E_RESINSULTED9_10;
}

public byte getE_RESINSULTED9_11() {
return E_RESINSULTED9_11;
}

public byte getE_RESINSULTED9_12() {
return E_RESINSULTED9_12;
}

public byte getE_RESINSULTED9_2() {
return E_RESINSULTED9_2;
}

public byte getE_RESINSULTED9_3() {
return E_RESINSULTED9_3;
}

public byte getE_RESINSULTED9_4() {
return E_RESINSULTED9_4;
}

public byte getE_RESINSULTED9_5() {
return E_RESINSULTED9_5;
}

public byte getE_RESINSULTED9_6() {
return E_RESINSULTED9_6;
}

public byte getE_RESINSULTED9_7() {
return E_RESINSULTED9_7;
}

public byte getE_RESINSULTED9_8() {
return E_RESINSULTED9_8;
}

public byte getE_RESINSULTED9_9() {
return E_RESINSULTED9_9;
}

public byte getE_RESJOBDENY1() {
return E_RESJOBDENY1;
}

public byte getE_RESJOBDENY2() {
return E_RESJOBDENY2;
}

public byte getE_RESJOBDENY3() {
return E_RESJOBDENY3;
}

public byte getE_RESJOBDENY4() {
return E_RESJOBDENY4;
}

public byte getE_RESJOBDENY5() {
return E_RESJOBDENY5;
}

public byte getE_RESJOBDENY6() {
return E_RESJOBDENY6;
}

public byte getE_RESJOBDENY7() {
return E_RESJOBDENY7;
}

public byte getE_RESJOBDENY8() {
return E_RESJOBDENY8;
}

public byte getE_RESJOBDENY9() {
return E_RESJOBDENY9;
}

public byte getE_RESJOBDENY96() {
return E_RESJOBDENY96;
}

public byte getE_RESJOBDENY97() {
return E_RESJOBDENY97;
}

public boolean getE_RESPF16() {
return E_RESPF16;
}

public boolean getE_RESPF16_DV() {
return E_RESPF16_DV;
}

public boolean getE_RESPM16() {
return E_RESPM16;
}

public boolean getE_RESPM16_DV() {
return E_RESPM16_DV;
}

public byte getE_RESUNSAFE1_1() {
return E_RESUNSAFE1_1;
}

public byte getE_RESUNSAFE1_10() {
return E_RESUNSAFE1_10;
}

public byte getE_RESUNSAFE1_11() {
return E_RESUNSAFE1_11;
}

public byte getE_RESUNSAFE1_12() {
return E_RESUNSAFE1_12;
}

public byte getE_RESUNSAFE1_2() {
return E_RESUNSAFE1_2;
}

public byte getE_RESUNSAFE1_3() {
return E_RESUNSAFE1_3;
}

public byte getE_RESUNSAFE1_4() {
return E_RESUNSAFE1_4;
}

public byte getE_RESUNSAFE1_5() {
return E_RESUNSAFE1_5;
}

public byte getE_RESUNSAFE1_6() {
return E_RESUNSAFE1_6;
}

public byte getE_RESUNSAFE1_7() {
return E_RESUNSAFE1_7;
}

public byte getE_RESUNSAFE1_8() {
return E_RESUNSAFE1_8;
}

public byte getE_RESUNSAFE1_9() {
return E_RESUNSAFE1_9;
}

public byte getE_RESUNSAFE2_1() {
return E_RESUNSAFE2_1;
}

public byte getE_RESUNSAFE2_10() {
return E_RESUNSAFE2_10;
}

public byte getE_RESUNSAFE2_11() {
return E_RESUNSAFE2_11;
}

public byte getE_RESUNSAFE2_12() {
return E_RESUNSAFE2_12;
}

public byte getE_RESUNSAFE2_2() {
return E_RESUNSAFE2_2;
}

public byte getE_RESUNSAFE2_3() {
return E_RESUNSAFE2_3;
}

public byte getE_RESUNSAFE2_4() {
return E_RESUNSAFE2_4;
}

public byte getE_RESUNSAFE2_5() {
return E_RESUNSAFE2_5;
}

public byte getE_RESUNSAFE2_6() {
return E_RESUNSAFE2_6;
}

public byte getE_RESUNSAFE2_7() {
return E_RESUNSAFE2_7;
}

public byte getE_RESUNSAFE2_8() {
return E_RESUNSAFE2_8;
}

public byte getE_RESUNSAFE2_9() {
return E_RESUNSAFE2_9;
}

public byte getE_RESUNSAFE3_1() {
return E_RESUNSAFE3_1;
}

public byte getE_RESUNSAFE3_10() {
return E_RESUNSAFE3_10;
}

public byte getE_RESUNSAFE3_11() {
return E_RESUNSAFE3_11;
}

public byte getE_RESUNSAFE3_12() {
return E_RESUNSAFE3_12;
}

public byte getE_RESUNSAFE3_2() {
return E_RESUNSAFE3_2;
}

public byte getE_RESUNSAFE3_3() {
return E_RESUNSAFE3_3;
}

public byte getE_RESUNSAFE3_4() {
return E_RESUNSAFE3_4;
}

public byte getE_RESUNSAFE3_5() {
return E_RESUNSAFE3_5;
}

public byte getE_RESUNSAFE3_6() {
return E_RESUNSAFE3_6;
}

public byte getE_RESUNSAFE3_7() {
return E_RESUNSAFE3_7;
}

public byte getE_RESUNSAFE3_8() {
return E_RESUNSAFE3_8;
}

public byte getE_RESUNSAFE3_9() {
return E_RESUNSAFE3_9;
}

public byte getE_RESUNSAFE4_1() {
return E_RESUNSAFE4_1;
}

public byte getE_RESUNSAFE4_10() {
return E_RESUNSAFE4_10;
}

public byte getE_RESUNSAFE4_11() {
return E_RESUNSAFE4_11;
}

public byte getE_RESUNSAFE4_12() {
return E_RESUNSAFE4_12;
}

public byte getE_RESUNSAFE4_2() {
return E_RESUNSAFE4_2;
}

public byte getE_RESUNSAFE4_3() {
return E_RESUNSAFE4_3;
}

public byte getE_RESUNSAFE4_4() {
return E_RESUNSAFE4_4;
}

public byte getE_RESUNSAFE4_5() {
return E_RESUNSAFE4_5;
}

public byte getE_RESUNSAFE4_6() {
return E_RESUNSAFE4_6;
}

public byte getE_RESUNSAFE4_7() {
return E_RESUNSAFE4_7;
}

public byte getE_RESUNSAFE4_8() {
return E_RESUNSAFE4_8;
}

public byte getE_RESUNSAFE4_9() {
return E_RESUNSAFE4_9;
}

public byte getE_RESUNSAFE5_1() {
return E_RESUNSAFE5_1;
}

public byte getE_RESUNSAFE5_10() {
return E_RESUNSAFE5_10;
}

public byte getE_RESUNSAFE5_11() {
return E_RESUNSAFE5_11;
}

public byte getE_RESUNSAFE5_12() {
return E_RESUNSAFE5_12;
}

public byte getE_RESUNSAFE5_2() {
return E_RESUNSAFE5_2;
}

public byte getE_RESUNSAFE5_3() {
return E_RESUNSAFE5_3;
}

public byte getE_RESUNSAFE5_4() {
return E_RESUNSAFE5_4;
}

public byte getE_RESUNSAFE5_5() {
return E_RESUNSAFE5_5;
}

public byte getE_RESUNSAFE5_6() {
return E_RESUNSAFE5_6;
}

public byte getE_RESUNSAFE5_7() {
return E_RESUNSAFE5_7;
}

public byte getE_RESUNSAFE5_8() {
return E_RESUNSAFE5_8;
}

public byte getE_RESUNSAFE5_9() {
return E_RESUNSAFE5_9;
}

public byte getE_RESUNSAFE6_1() {
return E_RESUNSAFE6_1;
}

public byte getE_RESUNSAFE6_10() {
return E_RESUNSAFE6_10;
}

public byte getE_RESUNSAFE6_11() {
return E_RESUNSAFE6_11;
}

public byte getE_RESUNSAFE6_12() {
return E_RESUNSAFE6_12;
}

public byte getE_RESUNSAFE6_2() {
return E_RESUNSAFE6_2;
}

public byte getE_RESUNSAFE6_3() {
return E_RESUNSAFE6_3;
}

public byte getE_RESUNSAFE6_4() {
return E_RESUNSAFE6_4;
}

public byte getE_RESUNSAFE6_5() {
return E_RESUNSAFE6_5;
}

public byte getE_RESUNSAFE6_6() {
return E_RESUNSAFE6_6;
}

public byte getE_RESUNSAFE6_7() {
return E_RESUNSAFE6_7;
}

public byte getE_RESUNSAFE6_8() {
return E_RESUNSAFE6_8;
}

public byte getE_RESUNSAFE6_9() {
return E_RESUNSAFE6_9;
}

public byte getE_RESUNSAFE7_1() {
return E_RESUNSAFE7_1;
}

public byte getE_RESUNSAFE7_10() {
return E_RESUNSAFE7_10;
}

public byte getE_RESUNSAFE7_11() {
return E_RESUNSAFE7_11;
}

public byte getE_RESUNSAFE7_12() {
return E_RESUNSAFE7_12;
}

public byte getE_RESUNSAFE7_2() {
return E_RESUNSAFE7_2;
}

public byte getE_RESUNSAFE7_3() {
return E_RESUNSAFE7_3;
}

public byte getE_RESUNSAFE7_4() {
return E_RESUNSAFE7_4;
}

public byte getE_RESUNSAFE7_5() {
return E_RESUNSAFE7_5;
}

public byte getE_RESUNSAFE7_6() {
return E_RESUNSAFE7_6;
}

public byte getE_RESUNSAFE7_7() {
return E_RESUNSAFE7_7;
}

public byte getE_RESUNSAFE7_8() {
return E_RESUNSAFE7_8;
}

public byte getE_RESUNSAFE7_9() {
return E_RESUNSAFE7_9;
}

public byte getE_RESUNSAFE8_1() {
return E_RESUNSAFE8_1;
}

public byte getE_RESUNSAFE8_10() {
return E_RESUNSAFE8_10;
}

public byte getE_RESUNSAFE8_11() {
return E_RESUNSAFE8_11;
}

public byte getE_RESUNSAFE8_12() {
return E_RESUNSAFE8_12;
}

public byte getE_RESUNSAFE8_2() {
return E_RESUNSAFE8_2;
}

public byte getE_RESUNSAFE8_3() {
return E_RESUNSAFE8_3;
}

public byte getE_RESUNSAFE8_4() {
return E_RESUNSAFE8_4;
}

public byte getE_RESUNSAFE8_5() {
return E_RESUNSAFE8_5;
}

public byte getE_RESUNSAFE8_6() {
return E_RESUNSAFE8_6;
}

public byte getE_RESUNSAFE8_7() {
return E_RESUNSAFE8_7;
}

public byte getE_RESUNSAFE8_8() {
return E_RESUNSAFE8_8;
}

public byte getE_RESUNSAFE8_9() {
return E_RESUNSAFE8_9;
}

public byte getE_RESUNSAFE96_1() {
return E_RESUNSAFE96_1;
}

public byte getE_RESUNSAFE96_10() {
return E_RESUNSAFE96_10;
}

public byte getE_RESUNSAFE96_11() {
return E_RESUNSAFE96_11;
}

public byte getE_RESUNSAFE96_12() {
return E_RESUNSAFE96_12;
}

public byte getE_RESUNSAFE96_2() {
return E_RESUNSAFE96_2;
}

public byte getE_RESUNSAFE96_3() {
return E_RESUNSAFE96_3;
}

public byte getE_RESUNSAFE96_4() {
return E_RESUNSAFE96_4;
}

public byte getE_RESUNSAFE96_5() {
return E_RESUNSAFE96_5;
}

public byte getE_RESUNSAFE96_6() {
return E_RESUNSAFE96_6;
}

public byte getE_RESUNSAFE96_7() {
return E_RESUNSAFE96_7;
}

public byte getE_RESUNSAFE96_8() {
return E_RESUNSAFE96_8;
}

public byte getE_RESUNSAFE96_9() {
return E_RESUNSAFE96_9;
}

public byte getE_RESUNSAFE97_1() {
return E_RESUNSAFE97_1;
}

public byte getE_RESUNSAFE97_10() {
return E_RESUNSAFE97_10;
}

public byte getE_RESUNSAFE97_11() {
return E_RESUNSAFE97_11;
}

public byte getE_RESUNSAFE97_12() {
return E_RESUNSAFE97_12;
}

public byte getE_RESUNSAFE97_2() {
return E_RESUNSAFE97_2;
}

public byte getE_RESUNSAFE97_3() {
return E_RESUNSAFE97_3;
}

public byte getE_RESUNSAFE97_4() {
return E_RESUNSAFE97_4;
}

public byte getE_RESUNSAFE97_5() {
return E_RESUNSAFE97_5;
}

public byte getE_RESUNSAFE97_6() {
return E_RESUNSAFE97_6;
}

public byte getE_RESUNSAFE97_7() {
return E_RESUNSAFE97_7;
}

public byte getE_RESUNSAFE97_8() {
return E_RESUNSAFE97_8;
}

public byte getE_RESUNSAFE97_9() {
return E_RESUNSAFE97_9;
}

public byte getE_RESUNSAFE9_1() {
return E_RESUNSAFE9_1;
}

public byte getE_RESUNSAFE9_10() {
return E_RESUNSAFE9_10;
}

public byte getE_RESUNSAFE9_11() {
return E_RESUNSAFE9_11;
}

public byte getE_RESUNSAFE9_12() {
return E_RESUNSAFE9_12;
}

public byte getE_RESUNSAFE9_2() {
return E_RESUNSAFE9_2;
}

public byte getE_RESUNSAFE9_3() {
return E_RESUNSAFE9_3;
}

public byte getE_RESUNSAFE9_4() {
return E_RESUNSAFE9_4;
}

public byte getE_RESUNSAFE9_5() {
return E_RESUNSAFE9_5;
}

public byte getE_RESUNSAFE9_6() {
return E_RESUNSAFE9_6;
}

public byte getE_RESUNSAFE9_7() {
return E_RESUNSAFE9_7;
}

public byte getE_RESUNSAFE9_8() {
return E_RESUNSAFE9_8;
}

public byte getE_RESUNSAFE9_9() {
return E_RESUNSAFE9_9;
}

public byte getE_RETAMT() {
return E_RETAMT;
}

public byte getE_RETCHK() {
return E_RETCHK;
}

public byte getE_RETSUF() {
return E_RETSUF;
}

public byte getE_RHLAND_CODE() {
return E_RHLAND_CODE;
}

public byte getE_RPHMOB_CODE() {
return E_RPHMOB_CODE;
}

public byte getE_RPHWRK_CODE() {
return E_RPHWRK_CODE;
}

public byte getE_RTCON1() {
return E_RTCON1;
}

public byte getE_RTCON2() {
return E_RTCON2;
}

public byte getE_RTCON3() {
return E_RTCON3;
}

public byte getE_RTCON4() {
return E_RTCON4;
}

public byte getE_RTEXPJB() {
return E_RTEXPJB;
}

public byte getE_RTFND1() {
return E_RTFND1;
}

public byte getE_RTFND10() {
return E_RTFND10;
}

public byte getE_RTFND2() {
return E_RTFND2;
}

public byte getE_RTFND3() {
return E_RTFND3;
}

public byte getE_RTFND4() {
return E_RTFND4;
}

public byte getE_RTFND5() {
return E_RTFND5;
}

public byte getE_RTFND6() {
return E_RTFND6;
}

public byte getE_RTFND7() {
return E_RTFND7;
}

public byte getE_RTFND8() {
return E_RTFND8;
}

public byte getE_RTFND9() {
return E_RTFND9;
}

public byte getE_RTFND96() {
return E_RTFND96;
}

public byte getE_RTPRO1() {
return E_RTPRO1;
}

public byte getE_RTPRO2() {
return E_RTPRO2;
}

public byte getE_RTPRO3() {
return E_RTPRO3;
}

public byte getE_RTPRO4() {
return E_RTPRO4;
}

public byte getE_RTPRO5() {
return E_RTPRO5;
}

public byte getE_RTPRO6() {
return E_RTPRO6;
}

public byte getE_RULESKID() {
return E_RULESKID;
}

public byte getE_SAMEJOB() {
return E_SAMEJOB;
}

public byte getE_SAMPST() {
return E_SAMPST;
}

public byte getE_SCAC() {
return E_SCAC;
}

public byte getE_SCAGE1DRNK() {
return E_SCAGE1DRNK;
}

public byte getE_SCALCL7D() {
return E_SCALCL7D;
}

public byte getE_SCDASCOH_DV() {
return E_SCDASCOH_DV;
}

public byte getE_SCDASSAT_DV() {
return E_SCDASSAT_DV;
}

public byte getE_SCEND() {
return E_SCEND;
}

public byte getE_SCEVERDRNK() {
return E_SCEVERDRNK;
}

public byte getE_SCFALCDRNK() {
return E_SCFALCDRNK;
}

public byte getE_SCFANNOY() {
return E_SCFANNOY;
}

public byte getE_SCFCRITIC() {
return E_SCFCRITIC;
}

public boolean getE_SCFLAG_DV() {
return E_SCFLAG_DV;
}

public byte getE_SCFLETDWN() {
return E_SCFLETDWN;
}

public byte getE_SCFOPENUP() {
return E_SCFOPENUP;
}

public byte getE_SCFRELY() {
return E_SCFRELY;
}

public byte getE_SCFRENDANY() {
return E_SCFRENDANY;
}

public byte getE_SCFUNDSTND() {
return E_SCFUNDSTND;
}

public byte getE_SCGHQ1_DV() {
return E_SCGHQ1_DV;
}

public byte getE_SCGHQ2_DV() {
return E_SCGHQ2_DV;
}

public byte getE_SCGHQA() {
return E_SCGHQA;
}

public byte getE_SCGHQB() {
return E_SCGHQB;
}

public byte getE_SCGHQC() {
return E_SCGHQC;
}

public byte getE_SCGHQD() {
return E_SCGHQD;
}

public byte getE_SCGHQE() {
return E_SCGHQE;
}

public byte getE_SCGHQF() {
return E_SCGHQF;
}

public byte getE_SCGHQG() {
return E_SCGHQG;
}

public byte getE_SCGHQH() {
return E_SCGHQH;
}

public byte getE_SCGHQI() {
return E_SCGHQI;
}

public byte getE_SCGHQJ() {
return E_SCGHQJ;
}

public byte getE_SCGHQK() {
return E_SCGHQK;
}

public byte getE_SCGHQL() {
return E_SCGHQL;
}

public byte getE_SCHLLOC() {
return E_SCHLLOC;
}

public byte getE_SCHOK() {
return E_SCHOK;
}

public byte getE_SCHOOL() {
return E_SCHOOL;
}

public byte getE_SCHOOLCNTRY1() {
return E_SCHOOLCNTRY1;
}

public byte getE_SCHOOLCNTRY2() {
return E_SCHOOLCNTRY2;
}

public byte getE_SCHOOLCNTRY3() {
return E_SCHOOLCNTRY3;
}

public byte getE_SCHOOLCNTRY4() {
return E_SCHOOLCNTRY4;
}

public byte getE_SCHOOLCNTRY5() {
return E_SCHOOLCNTRY5;
}

public byte getE_SCLFSAT1() {
return E_SCLFSAT1;
}

public byte getE_SCLFSAT2() {
return E_SCLFSAT2;
}

public byte getE_SCLFSAT7() {
return E_SCLFSAT7;
}

public byte getE_SCLFSATO() {
return E_SCLFSATO;
}

public byte getE_SCNALCL7D() {
return E_SCNALCL7D;
}

public byte getE_SCNALCPINT() {
return E_SCNALCPINT;
}

public byte getE_SCNALCPOPS() {
return E_SCNALCPOPS;
}

public byte getE_SCNALCSHOT() {
return E_SCNALCSHOT;
}

public byte getE_SCNALCWINE() {
return E_SCNALCWINE;
}

public byte getE_SCOTVOT1() {
return E_SCOTVOT1;
}

public byte getE_SCOTVOT2() {
return E_SCOTVOT2;
}

public byte getE_SCOTVOT3() {
return E_SCOTVOT3;
}

public byte getE_SCOTVOT4() {
return E_SCOTVOT4;
}

public byte getE_SCPANNOY() {
return E_SCPANNOY;
}

public byte getE_SCPAROUTINT() {
return E_SCPAROUTINT;
}

public byte getE_SCPCRITIC() {
return E_SCPCRITIC;
}

public byte getE_SCPLETDWN() {
return E_SCPLETDWN;
}

public byte getE_SCPOPENUP() {
return E_SCPOPENUP;
}

public byte getE_SCPRELY() {
return E_SCPRELY;
}

public byte getE_SCPUNDSTND() {
return E_SCPUNDSTND;
}

public byte getE_SCRANNOY() {
return E_SCRANNOY;
}

public byte getE_SCRCRITIC() {
return E_SCRCRITIC;
}

public byte getE_SCRELANY() {
return E_SCRELANY;
}

public byte getE_SCRELHAPPY() {
return E_SCRELHAPPY;
}

public byte getE_SCRELPARAR() {
return E_SCRELPARAR;
}

public byte getE_SCRELPARCD() {
return E_SCRELPARCD;
}

public byte getE_SCRELPARDS() {
return E_SCRELPARDS;
}

public byte getE_SCRELPAREI() {
return E_SCRELPAREI;
}

public byte getE_SCRELPARIR() {
return E_SCRELPARIR;
}

public byte getE_SCRELPARKS() {
return E_SCRELPARKS;
}

public byte getE_SCRELPARRG() {
return E_SCRELPARRG;
}

public byte getE_SCRELPARWT() {
return E_SCRELPARWT;
}

public byte getE_SCRF1() {
return E_SCRF1;
}

public byte getE_SCRF2() {
return E_SCRF2;
}

public byte getE_SCRF3() {
return E_SCRF3;
}

public byte getE_SCRF4() {
return E_SCRF4;
}

public byte getE_SCRF5() {
return E_SCRF5;
}

public byte getE_SCRF6() {
return E_SCRF6;
}

public byte getE_SCRF97() {
return E_SCRF97;
}

public byte getE_SCRLETDWN() {
return E_SCRLETDWN;
}

public byte getE_SCROPENUP() {
return E_SCROPENUP;
}

public byte getE_SCRRELY() {
return E_SCRRELY;
}

public byte getE_SCRUNDSTND() {
return E_SCRUNDSTND;
}

public byte getE_SCRX_CODE() {
return E_SCRX_CODE;
}

public byte getE_SCSF1() {
return E_SCSF1;
}

public byte getE_SCSF2A() {
return E_SCSF2A;
}

public byte getE_SCSF2B() {
return E_SCSF2B;
}

public byte getE_SCSF3A() {
return E_SCSF3A;
}

public byte getE_SCSF3B() {
return E_SCSF3B;
}

public byte getE_SCSF4A() {
return E_SCSF4A;
}

public byte getE_SCSF4B() {
return E_SCSF4B;
}

public byte getE_SCSF5() {
return E_SCSF5;
}

public byte getE_SCSF6A() {
return E_SCSF6A;
}

public byte getE_SCSF6B() {
return E_SCSF6B;
}

public byte getE_SCSF6C() {
return E_SCSF6C;
}

public byte getE_SCSF7() {
return E_SCSF7;
}

public byte getE_SCSSUP1() {
return E_SCSSUP1;
}

public byte getE_SCSSUPR2R() {
return E_SCSSUPR2R;
}

public byte getE_SCUN1() {
return E_SCUN1;
}

public byte getE_SCUN2() {
return E_SCUN2;
}

public byte getE_SCUN3() {
return E_SCUN3;
}

public byte getE_SCUN97() {
return E_SCUN97;
}

public byte getE_SCUX_CODE() {
return E_SCUX_CODE;
}

public byte getE_SCWHORUAGE() {
return E_SCWHORUAGE;
}

public byte getE_SCWHORUEDU() {
return E_SCWHORUEDU;
}

public byte getE_SCWHORUFAM() {
return E_SCWHORUFAM;
}

public byte getE_SCWHORUPOL() {
return E_SCWHORUPOL;
}

public byte getE_SCWHORUPRO() {
return E_SCWHORUPRO;
}

public byte getE_SCWHORURAC() {
return E_SCWHORURAC;
}

public byte getE_SCWHORUSEX() {
return E_SCWHORUSEX;
}

public byte getE_SE1() {
return E_SE1;
}

public byte getE_SE10() {
return E_SE10;
}

public byte getE_SE2() {
return E_SE2;
}

public byte getE_SE3() {
return E_SE3;
}

public byte getE_SE4() {
return E_SE4;
}

public byte getE_SE5() {
return E_SE5;
}

public byte getE_SE6() {
return E_SE6;
}

public byte getE_SE7() {
return E_SE7;
}

public byte getE_SE8() {
return E_SE8;
}

public byte getE_SE9() {
return E_SE9;
}

protected double E_SEEARNGRS_DV() {
return E_SEEARNGRS_DV;
}

public byte getE_SEEARNGRS_IF() {
return E_SEEARNGRS_IF;
}

protected double E_SEEARNNET_DV() {
return E_SEEARNNET_DV;
}

public byte getE_SEEKID() {
return E_SEEKID;
}

public boolean getE_SEX() {
return E_SEX;
}

public byte getE_SEXUOR() {
return E_SEXUOR;
}

public byte getE_SEX_DV() {
return E_SEX_DV;
}

public byte getE_SF1() {
return E_SF1;
}

protected double E_SF12MCS_DV() {
return E_SF12MCS_DV;
}

protected double E_SF12PCS_DV() {
return E_SF12PCS_DV;
}

public byte getE_SIBHIT() {
return E_SIBHIT;
}

public byte getE_SIBLING() {
return E_SIBLING;
}

public byte getE_SIBSTEAL() {
return E_SIBSTEAL;
}

public byte getE_SIBTEASE() {
return E_SIBTEASE;
}

public byte getE_SIBVERAB() {
return E_SIBVERAB;
}

public boolean getE_SIGNEDUCKIDS1() {
return E_SIGNEDUCKIDS1;
}

public boolean getE_SIGNEDUCKIDS2() {
return E_SIGNEDUCKIDS2;
}

public boolean getE_SIGNHEALTHKIDS1() {
return E_SIGNHEALTHKIDS1;
}

public boolean getE_SIGNHEALTHKIDS2() {
return E_SIGNHEALTHKIDS2;
}

public boolean getE_SINGLE_DV() {
return E_SINGLE_DV;
}

public byte getE_SLAPKID() {
return E_SLAPKID;
}

public byte getE_SMAGBG() {
return E_SMAGBG;
}

public byte getE_SMARTMOB() {
return E_SMARTMOB;
}

public byte getE_SMCIGS() {
return E_SMCIGS;
}

public byte getE_SMEVER() {
return E_SMEVER;
}

public byte getE_SMKMNTH11() {
return E_SMKMNTH11;
}

public byte getE_SMKMNTH12() {
return E_SMKMNTH12;
}

public boolean getE_SMKMNTH13() {
return E_SMKMNTH13;
}

public byte getE_SMKMNTH21() {
return E_SMKMNTH21;
}

public byte getE_SMKMNTH22() {
return E_SMKMNTH22;
}

public boolean getE_SMKMNTH23() {
return E_SMKMNTH23;
}

public byte getE_SMKMNTH31() {
return E_SMKMNTH31;
}

public byte getE_SMKMNTH32() {
return E_SMKMNTH32;
}

public boolean getE_SMKMNTH33() {
return E_SMKMNTH33;
}

public byte getE_SMNCIGS() {
return E_SMNCIGS;
}

public byte getE_SMNOW() {
return E_SMNOW;
}

public byte getE_SOCCONT() {
return E_SOCCONT;
}

public byte getE_SOCIALKID() {
return E_SOCIALKID;
}

public byte getE_SPKDIF() {
return E_SPKDIF;
}

public byte getE_SPORTACT() {
return E_SPORTACT;
}

public byte getE_SPORTOTH_CODE() {
return E_SPORTOTH_CODE;
}

public byte getE_SPORTS11() {
return E_SPORTS11;
}

public byte getE_SPORTS110() {
return E_SPORTS110;
}

public byte getE_SPORTS111() {
return E_SPORTS111;
}

public byte getE_SPORTS112() {
return E_SPORTS112;
}

public byte getE_SPORTS113() {
return E_SPORTS113;
}

public byte getE_SPORTS114() {
return E_SPORTS114;
}

public byte getE_SPORTS12() {
return E_SPORTS12;
}

public byte getE_SPORTS13() {
return E_SPORTS13;
}

public byte getE_SPORTS14() {
return E_SPORTS14;
}

public byte getE_SPORTS15() {
return E_SPORTS15;
}

public byte getE_SPORTS16() {
return E_SPORTS16;
}

public byte getE_SPORTS17() {
return E_SPORTS17;
}

public byte getE_SPORTS18() {
return E_SPORTS18;
}

public byte getE_SPORTS19() {
return E_SPORTS19;
}

public byte getE_SPORTS196() {
return E_SPORTS196;
}

public byte getE_SPORTS216() {
return E_SPORTS216;
}

public byte getE_SPORTS217() {
return E_SPORTS217;
}

public byte getE_SPORTS218() {
return E_SPORTS218;
}

public byte getE_SPORTS219() {
return E_SPORTS219;
}

public byte getE_SPORTS220() {
return E_SPORTS220;
}

public byte getE_SPORTS221() {
return E_SPORTS221;
}

public byte getE_SPORTS222() {
return E_SPORTS222;
}

public byte getE_SPORTS223() {
return E_SPORTS223;
}

public byte getE_SPORTS224() {
return E_SPORTS224;
}

public byte getE_SPORTS225() {
return E_SPORTS225;
}

public byte getE_SPORTS226() {
return E_SPORTS226;
}

public byte getE_SPORTS227() {
return E_SPORTS227;
}

public byte getE_SPORTS228() {
return E_SPORTS228;
}

public byte getE_SPORTS229() {
return E_SPORTS229;
}

public byte getE_SPORTS230() {
return E_SPORTS230;
}

public byte getE_SPORTS231() {
return E_SPORTS231;
}

public byte getE_SPORTS296() {
return E_SPORTS296;
}

public byte getE_SPORTS31() {
return E_SPORTS31;
}

public byte getE_SPORTS32() {
return E_SPORTS32;
}

public byte getE_SPORTS33() {
return E_SPORTS33;
}

public byte getE_SPORTS34() {
return E_SPORTS34;
}

public byte getE_SPORTS35() {
return E_SPORTS35;
}

public byte getE_SPORTS36() {
return E_SPORTS36;
}

public byte getE_SPORTS37() {
return E_SPORTS37;
}

public byte getE_SPORTS38() {
return E_SPORTS38;
}

public byte getE_SPORTS39() {
return E_SPORTS39;
}

public byte getE_SPORTS396() {
return E_SPORTS396;
}

public byte getE_SPORTS3FREQ() {
return E_SPORTS3FREQ;
}

public byte getE_SPORTSFREQ() {
return E_SPORTSFREQ;
}

public byte getE_SPPEN() {
return E_SPPEN;
}

public int getE_SPPID() {
return E_SPPID;
}

public byte getE_SPPNO() {
return E_SPPNO;
}

public byte getE_STATCM1() {
return E_STATCM1;
}

public byte getE_STATCM2() {
return E_STATCM2;
}

public short getE_STATCY41() {
return E_STATCY41;
}

public short getE_STATCY42() {
return E_STATCY42;
}

public byte getE_STATENDD1() {
return E_STATENDD1;
}

public byte getE_STATENDD2() {
return E_STATENDD2;
}

public byte getE_STATENDD3() {
return E_STATENDD3;
}

public byte getE_STATENDD4() {
return E_STATENDD4;
}

public byte getE_STATENDD5() {
return E_STATENDD5;
}

public boolean getE_STATENDD6() {
return E_STATENDD6;
}

public byte getE_STATENDM1() {
return E_STATENDM1;
}

public byte getE_STATENDM2() {
return E_STATENDM2;
}

public byte getE_STATENDM3() {
return E_STATENDM3;
}

public byte getE_STATENDM4() {
return E_STATENDM4;
}

public byte getE_STATENDM5() {
return E_STATENDM5;
}

public boolean getE_STATENDM6() {
return E_STATENDM6;
}

public short getE_STATENDY41() {
return E_STATENDY41;
}

public short getE_STATENDY42() {
return E_STATENDY42;
}

public short getE_STATENDY43() {
return E_STATENDY43;
}

public short getE_STATENDY44() {
return E_STATENDY44;
}

public short getE_STATENDY45() {
return E_STATENDY45;
}

public boolean getE_STATENDY46() {
return E_STATENDY46;
}

public short getE_STAYKID() {
return E_STAYKID;
}

public byte getE_STAYKIDW() {
return E_STAYKIDW;
}

public byte getE_STEALSIB() {
return E_STEALSIB;
}

public byte getE_STENDREAS() {
return E_STENDREAS;
}

public byte getE_STEPREL() {
return E_STEPREL;
}

public short getE_STRATA() {
return E_STRATA;
}

public byte getE_SUSP() {
return E_SUSP;
}

public byte getE_TALKMATTER() {
return E_TALKMATTER;
}

public byte getE_TEASESIB() {
return E_TEASESIB;
}

public byte getE_TELDIF() {
return E_TELDIF;
}

public byte getE_TLKF() {
return E_TLKF;
}

public byte getE_TLKM() {
return E_TLKM;
}

public short getE_TMTIME() {
return E_TMTIME;
}

public byte getE_TRAINANY() {
return E_TRAINANY;
}

public short getE_TRAINDAYS1() {
return E_TRAINDAYS1;
}

public short getE_TRAINDAYS2() {
return E_TRAINDAYS2;
}

public short getE_TRAINDAYS3() {
return E_TRAINDAYS3;
}

public byte getE_TRAINEND1() {
return E_TRAINEND1;
}

public byte getE_TRAINEND2() {
return E_TRAINEND2;
}

public byte getE_TRAINEND3() {
return E_TRAINEND3;
}

public byte getE_TRAINHRS1() {
return E_TRAINHRS1;
}

public byte getE_TRAINHRS2() {
return E_TRAINHRS2;
}

public byte getE_TRAINHRS3() {
return E_TRAINHRS3;
}

public byte getE_TRAINN() {
return E_TRAINN;
}

public byte getE_TRAINPURP11() {
return E_TRAINPURP11;
}

public byte getE_TRAINPURP12() {
return E_TRAINPURP12;
}

public byte getE_TRAINPURP13() {
return E_TRAINPURP13;
}

public byte getE_TRAINPURP21() {
return E_TRAINPURP21;
}

public byte getE_TRAINPURP22() {
return E_TRAINPURP22;
}

public byte getE_TRAINPURP23() {
return E_TRAINPURP23;
}

public byte getE_TRAINPURP31() {
return E_TRAINPURP31;
}

public byte getE_TRAINPURP32() {
return E_TRAINPURP32;
}

public byte getE_TRAINPURP33() {
return E_TRAINPURP33;
}

public byte getE_TRAINPURP41() {
return E_TRAINPURP41;
}

public byte getE_TRAINPURP42() {
return E_TRAINPURP42;
}

public byte getE_TRAINPURP43() {
return E_TRAINPURP43;
}

public byte getE_TRAINPURP51() {
return E_TRAINPURP51;
}

public byte getE_TRAINPURP52() {
return E_TRAINPURP52;
}

public byte getE_TRAINPURP53() {
return E_TRAINPURP53;
}

public byte getE_TRAINPURP61() {
return E_TRAINPURP61;
}

public byte getE_TRAINPURP62() {
return E_TRAINPURP62;
}

public byte getE_TRAINPURP63() {
return E_TRAINPURP63;
}

public byte getE_TRAINPURP71() {
return E_TRAINPURP71;
}

public byte getE_TRAINPURP72() {
return E_TRAINPURP72;
}

public byte getE_TRAINPURP73() {
return E_TRAINPURP73;
}

public byte getE_TRAINQUAL1() {
return E_TRAINQUAL1;
}

public byte getE_TRAINQUAL2() {
return E_TRAINQUAL2;
}

public byte getE_TRAINQUAL3() {
return E_TRAINQUAL3;
}

public byte getE_TRQUAL1() {
return E_TRQUAL1;
}

public byte getE_TRQUAL10() {
return E_TRQUAL10;
}

public byte getE_TRQUAL11() {
return E_TRQUAL11;
}

public byte getE_TRQUAL13() {
return E_TRQUAL13;
}

public byte getE_TRQUAL15() {
return E_TRQUAL15;
}

public byte getE_TRQUAL16() {
return E_TRQUAL16;
}

public byte getE_TRQUAL17() {
return E_TRQUAL17;
}

public byte getE_TRQUAL18() {
return E_TRQUAL18;
}

public byte getE_TRQUAL19() {
return E_TRQUAL19;
}

public byte getE_TRQUAL2() {
return E_TRQUAL2;
}

public byte getE_TRQUAL20() {
return E_TRQUAL20;
}

public byte getE_TRQUAL21() {
return E_TRQUAL21;
}

public byte getE_TRQUAL22() {
return E_TRQUAL22;
}

public byte getE_TRQUAL23() {
return E_TRQUAL23;
}

public byte getE_TRQUAL24() {
return E_TRQUAL24;
}

public byte getE_TRQUAL25() {
return E_TRQUAL25;
}

public byte getE_TRQUAL26() {
return E_TRQUAL26;
}

public byte getE_TRQUAL27() {
return E_TRQUAL27;
}

public byte getE_TRQUAL28() {
return E_TRQUAL28;
}

public byte getE_TRQUAL29() {
return E_TRQUAL29;
}

public byte getE_TRQUAL3() {
return E_TRQUAL3;
}

public byte getE_TRQUAL30() {
return E_TRQUAL30;
}

public byte getE_TRQUAL31() {
return E_TRQUAL31;
}

public byte getE_TRQUAL4() {
return E_TRQUAL4;
}

public byte getE_TRQUAL5() {
return E_TRQUAL5;
}

public byte getE_TRQUAL6() {
return E_TRQUAL6;
}

public byte getE_TRQUAL7() {
return E_TRQUAL7;
}

public byte getE_TRQUAL8() {
return E_TRQUAL8;
}

public byte getE_TRQUAL9() {
return E_TRQUAL9;
}

public byte getE_TRWHO1() {
return E_TRWHO1;
}

public byte getE_TRWHO2() {
return E_TRWHO2;
}

public byte getE_TRWHO3() {
return E_TRWHO3;
}

public byte getE_UKBORN() {
return E_UKBORN;
}

public byte getE_UNDQUS() {
return E_UNDQUS;
}

public byte getE_UNSAFE1() {
return E_UNSAFE1;
}

public byte getE_UNSAFE10() {
return E_UNSAFE10;
}

public byte getE_UNSAFE11() {
return E_UNSAFE11;
}

public byte getE_UNSAFE2() {
return E_UNSAFE2;
}

public byte getE_UNSAFE3() {
return E_UNSAFE3;
}

public byte getE_UNSAFE4() {
return E_UNSAFE4;
}

public byte getE_UNSAFE5() {
return E_UNSAFE5;
}

public byte getE_UNSAFE6() {
return E_UNSAFE6;
}

public byte getE_UNSAFE7() {
return E_UNSAFE7;
}

public byte getE_UNSAFE8() {
return E_UNSAFE8;
}

public byte getE_UNSAFE9() {
return E_UNSAFE9;
}

public byte getE_UNSAFE96() {
return E_UNSAFE96;
}

public byte getE_UNSAFE97() {
return E_UNSAFE97;
}

public byte getE_UNSAFEO_CODE() {
return E_UNSAFEO_CODE;
}

public byte getE_UNSAFE_DV() {
return E_UNSAFE_DV;
}

public byte getE_UPSET() {
return E_UPSET;
}

public byte getE_URBAN_DV() {
return E_URBAN_DV;
}

public byte getE_USBREAD() {
return E_USBREAD;
}

public byte getE_USDAIRY() {
return E_USDAIRY;
}

public byte getE_VERABSIB() {
return E_VERABSIB;
}

public byte getE_VOLRECPER() {
return E_VOLRECPER;
}

public byte getE_VOTE1() {
return E_VOTE1;
}

public byte getE_VOTE2() {
return E_VOTE2;
}

public byte getE_VOTE3() {
return E_VOTE3;
}

public byte getE_VOTE4() {
return E_VOTE4;
}

public byte getE_VOTE5() {
return E_VOTE5;
}

public byte getE_VOTE6() {
return E_VOTE6;
}

public byte getE_VOUCHER() {
return E_VOUCHER;
}

public boolean getE_VOUCHERNI() {
return E_VOUCHERNI;
}

public byte getE_VREGLINK() {
return E_VREGLINK;
}

public byte getE_VREGUKN() {
return E_VREGUKN;
}

public byte getE_WALKPACE() {
return E_WALKPACE;
}

public byte getE_WEKID() {
return E_WEKID;
}

public byte getE_WKFRUIT() {
return E_WKFRUIT;
}

public byte getE_WKPHYS() {
return E_WKPHYS;
}

public byte getE_WKPLSAM() {
return E_WKPLSAM;
}

public byte getE_WKVEGE() {
return E_WKVEGE;
}

public byte getE_WLK10M() {
return E_WLK10M;
}

public byte getE_WLK30MIN() {
return E_WLK30MIN;
}

public byte getE_WORKTRAV() {
return E_WORKTRAV;
}

public byte getE_XPMOVE() {
return E_XPMOVE;
}

public byte getE_XPMVMNTH() {
return E_XPMVMNTH;
}

public byte getE_XPMVWHN() {
return E_XPMVWHN;
}

public byte getE_XPMVWHR() {
return E_XPMVWHR;
}

public short getE_XPMVYR() {
return E_XPMVYR;
}

public byte getE_XTRA5MINOSM_DV() {
return E_XTRA5MINOSM_DV;
}

public byte getE_XTRA5MIN_DV() {
return E_XTRA5MIN_DV;
}

public byte getE_YAJBSRV1() {
return E_YAJBSRV1;
}

public byte getE_YAJBSRV2() {
return E_YAJBSRV2;
}

public byte getE_YAJBSRV3() {
return E_YAJBSRV3;
}

public byte getE_YAJBSRV4() {
return E_YAJBSRV4;
}

public byte getE_YAJBSRV5() {
return E_YAJBSRV5;
}

public byte getE_YAJBSRV7() {
return E_YAJBSRV7;
}

public byte getE_YAJBSRV8() {
return E_YAJBSRV8;
}

public byte getE_YAJBSRV96() {
return E_YAJBSRV96;
}

public byte getE_YANSSEC5_DV() {
return E_YANSSEC5_DV;
}

public short getE_YASOC00_CC() {
return E_YASOC00_CC;
}

public short getE_YASOC10_CC() {
return E_YASOC10_CC;
}

public byte getE_YASOC90_CC() {
return E_YASOC90_CC;
}

public byte getE_YELLKID() {
return E_YELLKID;
}

public byte getE_YPNETCHT() {
return E_YPNETCHT;
}

public byte getE_YPNPAL() {
return E_YPNPAL;
}

public byte getE_YPSOCWEB() {
return E_YPSOCWEB;
}

public short getE_YR2UK4() {
return E_YR2UK4;
}

public US_Wave5_HHOLD_Record(String line) {
s = line.split("\t");
initPIDP(s[0]);
initPID(s[1]);
initE_HIDP(s[2]);
initE_PNO(s[3]);
initE_CHILDPNO(s[4]);
initE_HHORIG(s[5]);
initE_MEMORIG(s[6]);
initE_PSU(s[7]);
initE_STRATA(s[8]);
initE_SAMPST(s[9]);
initE_MONTH(s[10]);
initE_IVFIO(s[11]);
initE_IOUTCOME(s[12]);
initE_SEX(s[13]);
initE_DVAGE(s[14]);
initE_BIRTHY(s[15]);
initE_IENDDATHH(s[16]);
initE_IENDDATMM(s[17]);
initE_IENDDATSS(s[18]);
initE_CINDTIME(s[19]);
initE_IENDDATY(s[20]);
initE_IENDDATM(s[21]);
initE_IENDDATD(s[22]);
initE_TMTIME(s[23]);
initE_NCARS(s[24]);
initE_ISYEAR(s[25]);
initE_ADSTATUS(s[26]);
initE_PLIVPAR(s[27]);
initE_SIBLING(s[28]);
initE_PPENSIONER(s[29]);
initE_NCH14RESP(s[30]);
initE_NCH3RESP(s[31]);
initE_NCH5RESP(s[32]);
initE_NCH8RESP(s[33]);
initE_NCH415RESP(s[34]);
initE_NCHRESP(s[35]);
initE_NCHUND18RESP(s[36]);
initE_NATCH01(s[37]);
initE_NATCH02(s[38]);
initE_NATCH03(s[39]);
initE_NATCH04(s[40]);
initE_NATCH05(s[41]);
initE_NATCH06(s[42]);
initE_NATCH07(s[43]);
initE_NATCH08(s[44]);
initE_NATCH09(s[45]);
initE_NATCH10(s[46]);
initE_NATCH11(s[47]);
initE_NATCH12(s[48]);
initE_NATCH13(s[49]);
initE_NATCH14(s[50]);
initE_NATCH15(s[51]);
initE_NATCH16(s[52]);
initE_NNATCH(s[53]);
initE_NADOPTCH(s[54]);
initE_ADOPTCH01(s[55]);
initE_ADOPTCH02(s[56]);
initE_ADOPTCH03(s[57]);
initE_ADOPTCH04(s[58]);
initE_ADOPTCH05(s[59]);
initE_ADOPTCH06(s[60]);
initE_ADOPTCH07(s[61]);
initE_ADOPTCH08(s[62]);
initE_ADOPTCH09(s[63]);
initE_ADOPTCH10(s[64]);
initE_ADOPTCH11(s[65]);
initE_ADOPTCH12(s[66]);
initE_ADOPTCH13(s[67]);
initE_ADOPTCH14(s[68]);
initE_ADOPTCH15(s[69]);
initE_ADOPTCH16(s[70]);
initE_NCHUNDER16(s[71]);
initE_NCH5TO15(s[72]);
initE_NCH10TO15(s[73]);
initE_NCH10(s[74]);
initE_ALLCH01(s[75]);
initE_ALLCH02(s[76]);
initE_ALLCH03(s[77]);
initE_ALLCH04(s[78]);
initE_ALLCH05(s[79]);
initE_ALLCH06(s[80]);
initE_ALLCH07(s[81]);
initE_ALLCH08(s[82]);
initE_ALLCH09(s[83]);
initE_ALLCH10(s[84]);
initE_ALLCH11(s[85]);
initE_ALLCH12(s[86]);
initE_ALLCH13(s[87]);
initE_ALLCH14(s[88]);
initE_ALLCH15(s[89]);
initE_ALLCH16(s[90]);
initE_LENINDINTV(s[91]);
initE_ISTRTDATHH(s[92]);
initE_ISTRTDATMM(s[93]);
initE_ISTRTDATSS(s[94]);
initE_ISTRTDATY(s[95]);
initE_ISTRTDATM(s[96]);
initE_ISTRTDATD(s[97]);
initE_LIENG(s[98]);
initE_LITRANS(s[99]);
initE_LIWHO(s[100]);
initE_LIHOW(s[101]);
initE_CHKRESP(s[102]);
initE_MVEVER(s[103]);
initE_MVMNTH(s[104]);
initE_MVYR(s[105]);
initE_LKMOVE(s[106]);
initE_XPMOVE(s[107]);
initE_XPMVWHN(s[108]);
initE_XPMVMNTH(s[109]);
initE_XPMVWHR(s[110]);
initE_JBSTAT(s[111]);
initE_MLSTATCHK(s[112]);
initE_MLSTAT(s[113]);
initE_DRIVE(s[114]);
initE_CARUSE(s[115]);
initE_VREGUKN(s[116]);
initE_VREGLINK(s[117]);
initE_MOBUSE(s[118]);
initE_SMARTMOB(s[119]);
initE_MOBCOMP(s[120]);
initE_NETPUSE(s[121]);
initE_XPMVYR(s[122]);
initE_UKBORN(s[123]);
initE_PLBORNC(s[124]);
initE_YR2UK4(s[125]);
initE_CITZN1(s[126]);
initE_CITZN2(s[127]);
initE_CITZN3(s[128]);
initE_QFHIGH(s[129]);
initE_QUALOC(s[130]);
initE_QFVOC1(s[131]);
initE_QFVOC2(s[132]);
initE_QFVOC3(s[133]);
initE_QFVOC4(s[134]);
initE_QFVOC5(s[135]);
initE_QFVOC6(s[136]);
initE_QFVOC7(s[137]);
initE_QFVOC8(s[138]);
initE_QFVOC9(s[139]);
initE_QFVOC10(s[140]);
initE_QFVOC11(s[141]);
initE_QFVOC12(s[142]);
initE_QFVOC13(s[143]);
initE_QFVOC14(s[144]);
initE_QFVOC15(s[145]);
initE_QFVOC96(s[146]);
initE_SCHOOL(s[147]);
initE_SCEND(s[148]);
initE_SCHLLOC(s[149]);
initE_SCHOK(s[150]);
initE_FENOW(s[151]);
initE_FEEND(s[152]);
initE_J1NONE(s[153]);
initE_J1SEMP(s[154]);
initE_J1BOSS(s[155]);
initE_J1MNGR(s[156]);
initE_EDTYPE(s[157]);
initE_EDASP(s[158]);
initE_LVSCHDO(s[159]);
initE_AHVWELL(s[160]);
initE_HEDLIK(s[161]);
initE_HEDNT(s[162]);
initE_LVHM(s[163]);
initE_OCIMPA(s[164]);
initE_OCIMPB(s[165]);
initE_OCIMPE(s[166]);
initE_OCIMPF(s[167]);
initE_OCIMPI(s[168]);
initE_OCIMPK(s[169]);
initE_OCIMPL(s[170]);
initE_FUTRA(s[171]);
initE_FUTRB(s[172]);
initE_FUTRC(s[173]);
initE_FUTRD(s[174]);
initE_FUTRE(s[175]);
initE_FUTRF(s[176]);
initE_FUTRG(s[177]);
initE_FUTRH(s[178]);
initE_FUTRI(s[179]);
initE_FUTRJ(s[180]);
initE_FUTRK(s[181]);
initE_FUTRL(s[182]);
initE_PAJU(s[183]);
initE_MAJU(s[184]);
initE_PACOB(s[185]);
initE_PAYRUK(s[186]);
initE_MACOB(s[187]);
initE_MAYRUK(s[188]);
initE_NATID1(s[189]);
initE_NATID2(s[190]);
initE_NATID3(s[191]);
initE_NATID4(s[192]);
initE_NATID5(s[193]);
initE_NATID6(s[194]);
initE_NATID97(s[195]);
initE_RACEL(s[196]);
initE_RACELO_CODE(s[197]);
initE_RACELT(s[198]);
initE_RACELWT(s[199]);
initE_RACELMT(s[200]);
initE_RACELAT(s[201]);
initE_RACELBT(s[202]);
initE_RACELOT_CODE(s[203]);
initE_ENGLANG(s[204]);
initE_ENGSPK(s[205]);
initE_SPKDIF(s[206]);
initE_ENGTEL(s[207]);
initE_TELDIF(s[208]);
initE_ENGREAD(s[209]);
initE_READDIF(s[210]);
initE_ENGFORM(s[211]);
initE_FORMDIF(s[212]);
initE_ETHID2(s[213]);
initE_ETHID3(s[214]);
initE_ETHID4A(s[215]);
initE_ETHID4B(s[216]);
initE_ETHID5(s[217]);
initE_ETHID6(s[218]);
initE_ETHID7(s[219]);
initE_ETHID8(s[220]);
initE_ETHID9(s[221]);
initE_ETHID10(s[222]);
initE_ETHID11(s[223]);
initE_ETHID12(s[224]);
initE_ETHID13(s[225]);
initE_ETHID14(s[226]);
initE_ETHCLOSE1(s[227]);
initE_ETHCLOSE2A(s[228]);
initE_ETHCLOSE2B(s[229]);
initE_ETHCLOSE3(s[230]);
initE_ETHCLOSE4A(s[231]);
initE_ETHCLOSE4B(s[232]);
initE_ETHCLOSE5(s[233]);
initE_ETHCLOSE6(s[234]);
initE_ETHCLOSE7(s[235]);
initE_ETHCLOSE8(s[236]);
initE_ETHCLOSE9(s[237]);
initE_ETHCLOSE10(s[238]);
initE_ETHCLOSE11(s[239]);
initE_PRIDE2(s[240]);
initE_PRIDE4A(s[241]);
initE_PRIDE4B(s[242]);
initE_PRIDE6(s[243]);
initE_PRIDE7(s[244]);
initE_PRIDE5(s[245]);
initE_PRIDE8(s[246]);
initE_PRIDE9(s[247]);
initE_PRIDE10(s[248]);
initE_PRIDE11(s[249]);
initE_PRIDE12(s[250]);
initE_PRIDE13(s[251]);
initE_PRIDE14(s[252]);
initE_FOOD1(s[253]);
initE_FOOD2(s[254]);
initE_FOOD3(s[255]);
initE_FOOD4(s[256]);
initE_FOOD5(s[257]);
initE_FOOD6(s[258]);
initE_FOOD7(s[259]);
initE_OPRLG(s[260]);
initE_OPRLG0NI(s[261]);
initE_NIREL(s[262]);
initE_NIACT(s[263]);
initE_OPRLG0(s[264]);
initE_OPRLG1(s[265]);
initE_UNSAFE1(s[266]);
initE_UNSAFE2(s[267]);
initE_UNSAFE3(s[268]);
initE_UNSAFE4(s[269]);
initE_UNSAFE5(s[270]);
initE_UNSAFE6(s[271]);
initE_UNSAFE7(s[272]);
initE_UNSAFE8(s[273]);
initE_UNSAFE9(s[274]);
initE_UNSAFE10(s[275]);
initE_UNSAFE11(s[276]);
initE_UNSAFE96(s[277]);
initE_UNSAFE97(s[278]);
initE_UNSAFEO_CODE(s[279]);
initE_RESUNSAFE1_1(s[280]);
initE_RESUNSAFE2_1(s[281]);
initE_RESUNSAFE3_1(s[282]);
initE_RESUNSAFE4_1(s[283]);
initE_RESUNSAFE5_1(s[284]);
initE_RESUNSAFE6_1(s[285]);
initE_RESUNSAFE7_1(s[286]);
initE_RESUNSAFE8_1(s[287]);
initE_RESUNSAFE9_1(s[288]);
initE_RESUNSAFE96_1(s[289]);
initE_RESUNSAFE97_1(s[290]);
initE_RESUNSAFE1_2(s[291]);
initE_RESUNSAFE2_2(s[292]);
initE_RESUNSAFE3_2(s[293]);
initE_RESUNSAFE4_2(s[294]);
initE_RESUNSAFE5_2(s[295]);
initE_RESUNSAFE6_2(s[296]);
initE_RESUNSAFE7_2(s[297]);
initE_RESUNSAFE8_2(s[298]);
initE_RESUNSAFE9_2(s[299]);
initE_RESUNSAFE96_2(s[300]);
initE_RESUNSAFE97_2(s[301]);
initE_RESUNSAFE1_3(s[302]);
initE_RESUNSAFE2_3(s[303]);
initE_RESUNSAFE3_3(s[304]);
initE_RESUNSAFE4_3(s[305]);
initE_RESUNSAFE5_3(s[306]);
initE_RESUNSAFE6_3(s[307]);
initE_RESUNSAFE7_3(s[308]);
initE_RESUNSAFE8_3(s[309]);
initE_RESUNSAFE9_3(s[310]);
initE_RESUNSAFE96_3(s[311]);
initE_RESUNSAFE97_3(s[312]);
initE_RESUNSAFE1_4(s[313]);
initE_RESUNSAFE2_4(s[314]);
initE_RESUNSAFE3_4(s[315]);
initE_RESUNSAFE4_4(s[316]);
initE_RESUNSAFE5_4(s[317]);
initE_RESUNSAFE6_4(s[318]);
initE_RESUNSAFE7_4(s[319]);
initE_RESUNSAFE8_4(s[320]);
initE_RESUNSAFE9_4(s[321]);
initE_RESUNSAFE96_4(s[322]);
initE_RESUNSAFE97_4(s[323]);
initE_RESUNSAFE1_5(s[324]);
initE_RESUNSAFE2_5(s[325]);
initE_RESUNSAFE3_5(s[326]);
initE_RESUNSAFE4_5(s[327]);
initE_RESUNSAFE5_5(s[328]);
initE_RESUNSAFE6_5(s[329]);
initE_RESUNSAFE7_5(s[330]);
initE_RESUNSAFE8_5(s[331]);
initE_RESUNSAFE9_5(s[332]);
initE_RESUNSAFE96_5(s[333]);
initE_RESUNSAFE97_5(s[334]);
initE_RESUNSAFE1_6(s[335]);
initE_RESUNSAFE2_6(s[336]);
initE_RESUNSAFE3_6(s[337]);
initE_RESUNSAFE4_6(s[338]);
initE_RESUNSAFE5_6(s[339]);
initE_RESUNSAFE6_6(s[340]);
initE_RESUNSAFE7_6(s[341]);
initE_RESUNSAFE8_6(s[342]);
initE_RESUNSAFE9_6(s[343]);
initE_RESUNSAFE96_6(s[344]);
initE_RESUNSAFE97_6(s[345]);
initE_RESUNSAFE1_7(s[346]);
initE_RESUNSAFE2_7(s[347]);
initE_RESUNSAFE3_7(s[348]);
initE_RESUNSAFE4_7(s[349]);
initE_RESUNSAFE5_7(s[350]);
initE_RESUNSAFE6_7(s[351]);
initE_RESUNSAFE7_7(s[352]);
initE_RESUNSAFE8_7(s[353]);
initE_RESUNSAFE9_7(s[354]);
initE_RESUNSAFE96_7(s[355]);
initE_RESUNSAFE97_7(s[356]);
initE_RESUNSAFE1_8(s[357]);
initE_RESUNSAFE2_8(s[358]);
initE_RESUNSAFE3_8(s[359]);
initE_RESUNSAFE4_8(s[360]);
initE_RESUNSAFE5_8(s[361]);
initE_RESUNSAFE6_8(s[362]);
initE_RESUNSAFE7_8(s[363]);
initE_RESUNSAFE8_8(s[364]);
initE_RESUNSAFE9_8(s[365]);
initE_RESUNSAFE96_8(s[366]);
initE_RESUNSAFE97_8(s[367]);
initE_RESUNSAFE1_9(s[368]);
initE_RESUNSAFE2_9(s[369]);
initE_RESUNSAFE3_9(s[370]);
initE_RESUNSAFE4_9(s[371]);
initE_RESUNSAFE5_9(s[372]);
initE_RESUNSAFE6_9(s[373]);
initE_RESUNSAFE7_9(s[374]);
initE_RESUNSAFE8_9(s[375]);
initE_RESUNSAFE9_9(s[376]);
initE_RESUNSAFE96_9(s[377]);
initE_RESUNSAFE97_9(s[378]);
initE_RESUNSAFE1_10(s[379]);
initE_RESUNSAFE2_10(s[380]);
initE_RESUNSAFE3_10(s[381]);
initE_RESUNSAFE4_10(s[382]);
initE_RESUNSAFE5_10(s[383]);
initE_RESUNSAFE6_10(s[384]);
initE_RESUNSAFE7_10(s[385]);
initE_RESUNSAFE8_10(s[386]);
initE_RESUNSAFE9_10(s[387]);
initE_RESUNSAFE96_10(s[388]);
initE_RESUNSAFE97_10(s[389]);
initE_RESUNSAFE1_11(s[390]);
initE_RESUNSAFE2_11(s[391]);
initE_RESUNSAFE3_11(s[392]);
initE_RESUNSAFE4_11(s[393]);
initE_RESUNSAFE5_11(s[394]);
initE_RESUNSAFE6_11(s[395]);
initE_RESUNSAFE7_11(s[396]);
initE_RESUNSAFE8_11(s[397]);
initE_RESUNSAFE9_11(s[398]);
initE_RESUNSAFE96_11(s[399]);
initE_RESUNSAFE97_11(s[400]);
initE_RESUNSAFE1_12(s[401]);
initE_RESUNSAFE2_12(s[402]);
initE_RESUNSAFE3_12(s[403]);
initE_RESUNSAFE4_12(s[404]);
initE_RESUNSAFE5_12(s[405]);
initE_RESUNSAFE6_12(s[406]);
initE_RESUNSAFE7_12(s[407]);
initE_RESUNSAFE8_12(s[408]);
initE_RESUNSAFE9_12(s[409]);
initE_RESUNSAFE96_12(s[410]);
initE_RESUNSAFE97_12(s[411]);
initE_AVOIDANCE1(s[412]);
initE_AVOIDANCE2(s[413]);
initE_AVOIDANCE3(s[414]);
initE_AVOIDANCE4(s[415]);
initE_AVOIDANCE5(s[416]);
initE_AVOIDANCE6(s[417]);
initE_AVOIDANCE7(s[418]);
initE_AVOIDANCE8(s[419]);
initE_AVOIDANCE9(s[420]);
initE_AVOIDANCE10(s[421]);
initE_AVOIDANCE11(s[422]);
initE_AVOIDANCE96(s[423]);
initE_AVOIDANCE97(s[424]);
initE_AVOIDANCEO_CODE(s[425]);
initE_RESAVOID1_1(s[426]);
initE_RESAVOID2_1(s[427]);
initE_RESAVOID3_1(s[428]);
initE_RESAVOID4_1(s[429]);
initE_RESAVOID5_1(s[430]);
initE_RESAVOID6_1(s[431]);
initE_RESAVOID7_1(s[432]);
initE_RESAVOID8_1(s[433]);
initE_RESAVOID9_1(s[434]);
initE_RESAVOID96_1(s[435]);
initE_RESAVOID97_1(s[436]);
initE_RESAVOID1_2(s[437]);
initE_RESAVOID2_2(s[438]);
initE_RESAVOID3_2(s[439]);
initE_RESAVOID4_2(s[440]);
initE_RESAVOID5_2(s[441]);
initE_RESAVOID6_2(s[442]);
initE_RESAVOID7_2(s[443]);
initE_RESAVOID8_2(s[444]);
initE_RESAVOID9_2(s[445]);
initE_RESAVOID96_2(s[446]);
initE_RESAVOID97_2(s[447]);
initE_RESAVOID1_3(s[448]);
initE_RESAVOID2_3(s[449]);
initE_RESAVOID3_3(s[450]);
initE_RESAVOID4_3(s[451]);
initE_RESAVOID5_3(s[452]);
initE_RESAVOID6_3(s[453]);
initE_RESAVOID7_3(s[454]);
initE_RESAVOID8_3(s[455]);
initE_RESAVOID9_3(s[456]);
initE_RESAVOID96_3(s[457]);
initE_RESAVOID97_3(s[458]);
initE_RESAVOID1_4(s[459]);
initE_RESAVOID2_4(s[460]);
initE_RESAVOID3_4(s[461]);
initE_RESAVOID4_4(s[462]);
initE_RESAVOID5_4(s[463]);
initE_RESAVOID6_4(s[464]);
initE_RESAVOID7_4(s[465]);
initE_RESAVOID8_4(s[466]);
initE_RESAVOID9_4(s[467]);
initE_RESAVOID96_4(s[468]);
initE_RESAVOID97_4(s[469]);
initE_RESAVOID1_5(s[470]);
initE_RESAVOID2_5(s[471]);
initE_RESAVOID3_5(s[472]);
initE_RESAVOID4_5(s[473]);
initE_RESAVOID5_5(s[474]);
initE_RESAVOID6_5(s[475]);
initE_RESAVOID7_5(s[476]);
initE_RESAVOID8_5(s[477]);
initE_RESAVOID9_5(s[478]);
initE_RESAVOID96_5(s[479]);
initE_RESAVOID97_5(s[480]);
initE_RESAVOID1_6(s[481]);
initE_RESAVOID2_6(s[482]);
initE_RESAVOID3_6(s[483]);
initE_RESAVOID4_6(s[484]);
initE_RESAVOID5_6(s[485]);
initE_RESAVOID6_6(s[486]);
initE_RESAVOID7_6(s[487]);
initE_RESAVOID8_6(s[488]);
initE_RESAVOID9_6(s[489]);
initE_RESAVOID96_6(s[490]);
initE_RESAVOID97_6(s[491]);
initE_RESAVOID1_7(s[492]);
initE_RESAVOID2_7(s[493]);
initE_RESAVOID3_7(s[494]);
initE_RESAVOID4_7(s[495]);
initE_RESAVOID5_7(s[496]);
initE_RESAVOID6_7(s[497]);
initE_RESAVOID7_7(s[498]);
initE_RESAVOID8_7(s[499]);
initE_RESAVOID9_7(s[500]);
initE_RESAVOID96_7(s[501]);
initE_RESAVOID97_7(s[502]);
initE_RESAVOID1_8(s[503]);
initE_RESAVOID2_8(s[504]);
initE_RESAVOID3_8(s[505]);
initE_RESAVOID4_8(s[506]);
initE_RESAVOID5_8(s[507]);
initE_RESAVOID6_8(s[508]);
initE_RESAVOID7_8(s[509]);
initE_RESAVOID8_8(s[510]);
initE_RESAVOID9_8(s[511]);
initE_RESAVOID96_8(s[512]);
initE_RESAVOID97_8(s[513]);
initE_RESAVOID1_9(s[514]);
initE_RESAVOID2_9(s[515]);
initE_RESAVOID3_9(s[516]);
initE_RESAVOID4_9(s[517]);
initE_RESAVOID5_9(s[518]);
initE_RESAVOID6_9(s[519]);
initE_RESAVOID7_9(s[520]);
initE_RESAVOID8_9(s[521]);
initE_RESAVOID9_9(s[522]);
initE_RESAVOID96_9(s[523]);
initE_RESAVOID97_9(s[524]);
initE_RESAVOID1_10(s[525]);
initE_RESAVOID2_10(s[526]);
initE_RESAVOID3_10(s[527]);
initE_RESAVOID4_10(s[528]);
initE_RESAVOID5_10(s[529]);
initE_RESAVOID6_10(s[530]);
initE_RESAVOID7_10(s[531]);
initE_RESAVOID8_10(s[532]);
initE_RESAVOID9_10(s[533]);
initE_RESAVOID96_10(s[534]);
initE_RESAVOID97_10(s[535]);
initE_RESAVOID1_11(s[536]);
initE_RESAVOID2_11(s[537]);
initE_RESAVOID3_11(s[538]);
initE_RESAVOID4_11(s[539]);
initE_RESAVOID5_11(s[540]);
initE_RESAVOID6_11(s[541]);
initE_RESAVOID7_11(s[542]);
initE_RESAVOID8_11(s[543]);
initE_RESAVOID9_11(s[544]);
initE_RESAVOID96_11(s[545]);
initE_RESAVOID97_11(s[546]);
initE_RESAVOID1_12(s[547]);
initE_RESAVOID2_12(s[548]);
initE_RESAVOID3_12(s[549]);
initE_RESAVOID4_12(s[550]);
initE_RESAVOID5_12(s[551]);
initE_RESAVOID6_12(s[552]);
initE_RESAVOID7_12(s[553]);
initE_RESAVOID8_12(s[554]);
initE_RESAVOID9_12(s[555]);
initE_RESAVOID96_12(s[556]);
initE_RESAVOID97_12(s[557]);
initE_INSULTED1(s[558]);
initE_INSULTED2(s[559]);
initE_INSULTED3(s[560]);
initE_INSULTED4(s[561]);
initE_INSULTED5(s[562]);
initE_INSULTED6(s[563]);
initE_INSULTED7(s[564]);
initE_INSULTED8(s[565]);
initE_INSULTED9(s[566]);
initE_INSULTED10(s[567]);
initE_INSULTED11(s[568]);
initE_INSULTED96(s[569]);
initE_INSULTED97(s[570]);
initE_INSULTEDO_CODE(s[571]);
initE_RESINSULTED1_1(s[572]);
initE_RESINSULTED2_1(s[573]);
initE_RESINSULTED3_1(s[574]);
initE_RESINSULTED4_1(s[575]);
initE_RESINSULTED5_1(s[576]);
initE_RESINSULTED6_1(s[577]);
initE_RESINSULTED7_1(s[578]);
initE_RESINSULTED8_1(s[579]);
initE_RESINSULTED9_1(s[580]);
initE_RESINSULTED96_1(s[581]);
initE_RESINSULTED97_1(s[582]);
initE_RESINSULTED1_2(s[583]);
initE_RESINSULTED2_2(s[584]);
initE_RESINSULTED3_2(s[585]);
initE_RESINSULTED4_2(s[586]);
initE_RESINSULTED5_2(s[587]);
initE_RESINSULTED6_2(s[588]);
initE_RESINSULTED7_2(s[589]);
initE_RESINSULTED8_2(s[590]);
initE_RESINSULTED9_2(s[591]);
initE_RESINSULTED96_2(s[592]);
initE_RESINSULTED97_2(s[593]);
initE_RESINSULTED1_3(s[594]);
initE_RESINSULTED2_3(s[595]);
initE_RESINSULTED3_3(s[596]);
initE_RESINSULTED4_3(s[597]);
initE_RESINSULTED5_3(s[598]);
initE_RESINSULTED6_3(s[599]);
initE_RESINSULTED7_3(s[600]);
initE_RESINSULTED8_3(s[601]);
initE_RESINSULTED9_3(s[602]);
initE_RESINSULTED96_3(s[603]);
initE_RESINSULTED97_3(s[604]);
initE_RESINSULTED1_4(s[605]);
initE_RESINSULTED2_4(s[606]);
initE_RESINSULTED3_4(s[607]);
initE_RESINSULTED4_4(s[608]);
initE_RESINSULTED5_4(s[609]);
initE_RESINSULTED6_4(s[610]);
initE_RESINSULTED7_4(s[611]);
initE_RESINSULTED8_4(s[612]);
initE_RESINSULTED9_4(s[613]);
initE_RESINSULTED96_4(s[614]);
initE_RESINSULTED97_4(s[615]);
initE_RESINSULTED1_5(s[616]);
initE_RESINSULTED2_5(s[617]);
initE_RESINSULTED3_5(s[618]);
initE_RESINSULTED4_5(s[619]);
initE_RESINSULTED5_5(s[620]);
initE_RESINSULTED6_5(s[621]);
initE_RESINSULTED7_5(s[622]);
initE_RESINSULTED8_5(s[623]);
initE_RESINSULTED9_5(s[624]);
initE_RESINSULTED96_5(s[625]);
initE_RESINSULTED97_5(s[626]);
initE_RESINSULTED1_6(s[627]);
initE_RESINSULTED2_6(s[628]);
initE_RESINSULTED3_6(s[629]);
initE_RESINSULTED4_6(s[630]);
initE_RESINSULTED5_6(s[631]);
initE_RESINSULTED6_6(s[632]);
initE_RESINSULTED7_6(s[633]);
initE_RESINSULTED8_6(s[634]);
initE_RESINSULTED9_6(s[635]);
initE_RESINSULTED96_6(s[636]);
initE_RESINSULTED97_6(s[637]);
initE_RESINSULTED1_7(s[638]);
initE_RESINSULTED2_7(s[639]);
initE_RESINSULTED3_7(s[640]);
initE_RESINSULTED4_7(s[641]);
initE_RESINSULTED5_7(s[642]);
initE_RESINSULTED6_7(s[643]);
initE_RESINSULTED7_7(s[644]);
initE_RESINSULTED8_7(s[645]);
initE_RESINSULTED9_7(s[646]);
initE_RESINSULTED96_7(s[647]);
initE_RESINSULTED97_7(s[648]);
initE_RESINSULTED1_8(s[649]);
initE_RESINSULTED2_8(s[650]);
initE_RESINSULTED3_8(s[651]);
initE_RESINSULTED4_8(s[652]);
initE_RESINSULTED5_8(s[653]);
initE_RESINSULTED6_8(s[654]);
initE_RESINSULTED7_8(s[655]);
initE_RESINSULTED8_8(s[656]);
initE_RESINSULTED9_8(s[657]);
initE_RESINSULTED96_8(s[658]);
initE_RESINSULTED97_8(s[659]);
initE_RESINSULTED1_9(s[660]);
initE_RESINSULTED2_9(s[661]);
initE_RESINSULTED3_9(s[662]);
initE_RESINSULTED4_9(s[663]);
initE_RESINSULTED5_9(s[664]);
initE_RESINSULTED6_9(s[665]);
initE_RESINSULTED7_9(s[666]);
initE_RESINSULTED8_9(s[667]);
initE_RESINSULTED9_9(s[668]);
initE_RESINSULTED96_9(s[669]);
initE_RESINSULTED97_9(s[670]);
initE_RESINSULTED1_10(s[671]);
initE_RESINSULTED2_10(s[672]);
initE_RESINSULTED3_10(s[673]);
initE_RESINSULTED4_10(s[674]);
initE_RESINSULTED5_10(s[675]);
initE_RESINSULTED6_10(s[676]);
initE_RESINSULTED7_10(s[677]);
initE_RESINSULTED8_10(s[678]);
initE_RESINSULTED9_10(s[679]);
initE_RESINSULTED96_10(s[680]);
initE_RESINSULTED97_10(s[681]);
initE_RESINSULTED1_11(s[682]);
initE_RESINSULTED2_11(s[683]);
initE_RESINSULTED3_11(s[684]);
initE_RESINSULTED4_11(s[685]);
initE_RESINSULTED5_11(s[686]);
initE_RESINSULTED6_11(s[687]);
initE_RESINSULTED7_11(s[688]);
initE_RESINSULTED8_11(s[689]);
initE_RESINSULTED9_11(s[690]);
initE_RESINSULTED96_11(s[691]);
initE_RESINSULTED97_11(s[692]);
initE_RESINSULTED1_12(s[693]);
initE_RESINSULTED2_12(s[694]);
initE_RESINSULTED3_12(s[695]);
initE_RESINSULTED4_12(s[696]);
initE_RESINSULTED5_12(s[697]);
initE_RESINSULTED6_12(s[698]);
initE_RESINSULTED7_12(s[699]);
initE_RESINSULTED8_12(s[700]);
initE_RESINSULTED9_12(s[701]);
initE_RESINSULTED96_12(s[702]);
initE_RESINSULTED97_12(s[703]);
initE_ATTACKED1(s[704]);
initE_ATTACKED2(s[705]);
initE_ATTACKED3(s[706]);
initE_ATTACKED4(s[707]);
initE_ATTACKED5(s[708]);
initE_ATTACKED6(s[709]);
initE_ATTACKED7(s[710]);
initE_ATTACKED8(s[711]);
initE_ATTACKED9(s[712]);
initE_ATTACKED10(s[713]);
initE_ATTACKED11(s[714]);
initE_ATTACKED96(s[715]);
initE_ATTACKED97(s[716]);
initE_ATTACKEDO_CODE(s[717]);
initE_RESATTACKED1_1(s[718]);
initE_RESATTACKED2_1(s[719]);
initE_RESATTACKED3_1(s[720]);
initE_RESATTACKED4_1(s[721]);
initE_RESATTACKED5_1(s[722]);
initE_RESATTACKED6_1(s[723]);
initE_RESATTACKED7_1(s[724]);
initE_RESATTACKED8_1(s[725]);
initE_RESATTACKED9_1(s[726]);
initE_RESATTACKED96_1(s[727]);
initE_RESATTACKED97_1(s[728]);
initE_RESATTACKED1_2(s[729]);
initE_RESATTACKED2_2(s[730]);
initE_RESATTACKED3_2(s[731]);
initE_RESATTACKED4_2(s[732]);
initE_RESATTACKED5_2(s[733]);
initE_RESATTACKED6_2(s[734]);
initE_RESATTACKED7_2(s[735]);
initE_RESATTACKED8_2(s[736]);
initE_RESATTACKED9_2(s[737]);
initE_RESATTACKED96_2(s[738]);
initE_RESATTACKED97_2(s[739]);
initE_RESATTACKED1_3(s[740]);
initE_RESATTACKED2_3(s[741]);
initE_RESATTACKED3_3(s[742]);
initE_RESATTACKED4_3(s[743]);
initE_RESATTACKED5_3(s[744]);
initE_RESATTACKED6_3(s[745]);
initE_RESATTACKED7_3(s[746]);
initE_RESATTACKED8_3(s[747]);
initE_RESATTACKED9_3(s[748]);
initE_RESATTACKED96_3(s[749]);
initE_RESATTACKED97_3(s[750]);
initE_RESATTACKED1_4(s[751]);
initE_RESATTACKED2_4(s[752]);
initE_RESATTACKED3_4(s[753]);
initE_RESATTACKED4_4(s[754]);
initE_RESATTACKED5_4(s[755]);
initE_RESATTACKED6_4(s[756]);
initE_RESATTACKED7_4(s[757]);
initE_RESATTACKED8_4(s[758]);
initE_RESATTACKED9_4(s[759]);
initE_RESATTACKED96_4(s[760]);
initE_RESATTACKED97_4(s[761]);
initE_RESATTACKED1_5(s[762]);
initE_RESATTACKED2_5(s[763]);
initE_RESATTACKED3_5(s[764]);
initE_RESATTACKED4_5(s[765]);
initE_RESATTACKED5_5(s[766]);
initE_RESATTACKED6_5(s[767]);
initE_RESATTACKED7_5(s[768]);
initE_RESATTACKED8_5(s[769]);
initE_RESATTACKED9_5(s[770]);
initE_RESATTACKED96_5(s[771]);
initE_RESATTACKED97_5(s[772]);
initE_RESATTACKED1_6(s[773]);
initE_RESATTACKED2_6(s[774]);
initE_RESATTACKED3_6(s[775]);
initE_RESATTACKED4_6(s[776]);
initE_RESATTACKED5_6(s[777]);
initE_RESATTACKED6_6(s[778]);
initE_RESATTACKED7_6(s[779]);
initE_RESATTACKED8_6(s[780]);
initE_RESATTACKED9_6(s[781]);
initE_RESATTACKED96_6(s[782]);
initE_RESATTACKED97_6(s[783]);
initE_RESATTACKED1_7(s[784]);
initE_RESATTACKED2_7(s[785]);
initE_RESATTACKED3_7(s[786]);
initE_RESATTACKED4_7(s[787]);
initE_RESATTACKED5_7(s[788]);
initE_RESATTACKED6_7(s[789]);
initE_RESATTACKED7_7(s[790]);
initE_RESATTACKED8_7(s[791]);
initE_RESATTACKED9_7(s[792]);
initE_RESATTACKED96_7(s[793]);
initE_RESATTACKED97_7(s[794]);
initE_RESATTACKED1_8(s[795]);
initE_RESATTACKED2_8(s[796]);
initE_RESATTACKED3_8(s[797]);
initE_RESATTACKED4_8(s[798]);
initE_RESATTACKED5_8(s[799]);
initE_RESATTACKED6_8(s[800]);
initE_RESATTACKED7_8(s[801]);
initE_RESATTACKED8_8(s[802]);
initE_RESATTACKED9_8(s[803]);
initE_RESATTACKED96_8(s[804]);
initE_RESATTACKED97_8(s[805]);
initE_RESATTACKED1_9(s[806]);
initE_RESATTACKED2_9(s[807]);
initE_RESATTACKED3_9(s[808]);
initE_RESATTACKED4_9(s[809]);
initE_RESATTACKED5_9(s[810]);
initE_RESATTACKED6_9(s[811]);
initE_RESATTACKED7_9(s[812]);
initE_RESATTACKED8_9(s[813]);
initE_RESATTACKED9_9(s[814]);
initE_RESATTACKED96_9(s[815]);
initE_RESATTACKED97_9(s[816]);
initE_RESATTACKED1_10(s[817]);
initE_RESATTACKED2_10(s[818]);
initE_RESATTACKED3_10(s[819]);
initE_RESATTACKED4_10(s[820]);
initE_RESATTACKED5_10(s[821]);
initE_RESATTACKED6_10(s[822]);
initE_RESATTACKED7_10(s[823]);
initE_RESATTACKED8_10(s[824]);
initE_RESATTACKED9_10(s[825]);
initE_RESATTACKED96_10(s[826]);
initE_RESATTACKED97_10(s[827]);
initE_RESATTACKED1_11(s[828]);
initE_RESATTACKED2_11(s[829]);
initE_RESATTACKED3_11(s[830]);
initE_RESATTACKED4_11(s[831]);
initE_RESATTACKED5_11(s[832]);
initE_RESATTACKED6_11(s[833]);
initE_RESATTACKED7_11(s[834]);
initE_RESATTACKED8_11(s[835]);
initE_RESATTACKED9_11(s[836]);
initE_RESATTACKED96_11(s[837]);
initE_RESATTACKED97_11(s[838]);
initE_RESATTACKED1_12(s[839]);
initE_RESATTACKED2_12(s[840]);
initE_RESATTACKED3_12(s[841]);
initE_RESATTACKED4_12(s[842]);
initE_RESATTACKED5_12(s[843]);
initE_RESATTACKED6_12(s[844]);
initE_RESATTACKED7_12(s[845]);
initE_RESATTACKED8_12(s[846]);
initE_RESATTACKED9_12(s[847]);
initE_RESATTACKED96_12(s[848]);
initE_RESATTACKED97_12(s[849]);
initE_SF1(s[850]);
initE_HEALTH(s[851]);
initE_HOSPC1(s[852]);
initE_HOSPDC1(s[853]);
initE_HOSPC2(s[854]);
initE_HOSPDC2(s[855]);
initE_HOSPC3(s[856]);
initE_HOSPDC3(s[857]);
initE_HOSPC4(s[858]);
initE_HOSPDC4(s[859]);
initE_HOSPC5(s[860]);
initE_HOSPDC5(s[861]);
initE_HOSPC6(s[862]);
initE_HOSPDC6(s[863]);
initE_HOSPC7(s[864]);
initE_HOSPDC7(s[865]);
initE_DISDIF1(s[866]);
initE_DISDIF2(s[867]);
initE_DISDIF3(s[868]);
initE_DISDIF4(s[869]);
initE_DISDIF5(s[870]);
initE_DISDIF6(s[871]);
initE_DISDIF7(s[872]);
initE_DISDIF8(s[873]);
initE_DISDIF9(s[874]);
initE_DISDIF10(s[875]);
initE_DISDIF11(s[876]);
initE_DISDIF12(s[877]);
initE_DISDIF96(s[878]);
initE_USDAIRY(s[879]);
initE_USBREAD(s[880]);
initE_WKFRUIT(s[881]);
initE_WKVEGE(s[882]);
initE_FRUVEGE(s[883]);
initE_WLK10M(s[884]);
initE_DAYWLK(s[885]);
initE_WLK30MIN(s[886]);
initE_WALKPACE(s[887]);
initE_SMEVER(s[888]);
initE_SMNOW(s[889]);
initE_NCIGS(s[890]);
initE_SMCIGS(s[891]);
initE_SMNCIGS(s[892]);
initE_AGLQUIT(s[893]);
initE_SMAGBG(s[894]);
initE_HCOND1(s[895]);
initE_HCOND2(s[896]);
initE_HCOND3(s[897]);
initE_HCOND4(s[898]);
initE_HCOND5(s[899]);
initE_HCOND6(s[900]);
initE_HCOND7(s[901]);
initE_HCOND8(s[902]);
initE_HCOND9(s[903]);
initE_HCOND10(s[904]);
initE_HCOND11(s[905]);
initE_HCOND12(s[906]);
initE_HCOND13(s[907]);
initE_HCOND14(s[908]);
initE_HCOND15(s[909]);
initE_HCOND16(s[910]);
initE_HCOND17(s[911]);
initE_HCOND96(s[912]);
initE_HCONDS01(s[913]);
initE_HCONDS02(s[914]);
initE_HCONDS03(s[915]);
initE_HCONDS04(s[916]);
initE_HCONDS05(s[917]);
initE_HCONDS08(s[918]);
initE_HCONDS09(s[919]);
initE_HCONDS10(s[920]);
initE_HCONDS11(s[921]);
initE_HCONDS12(s[922]);
initE_HCONDS13(s[923]);
initE_HCONDS14(s[924]);
initE_HCONDS15(s[925]);
initE_HCONDS16(s[926]);
initE_HCONDS17(s[927]);
initE_HCONDA01(s[928]);
initE_HCONDA02(s[929]);
initE_HCONDA03(s[930]);
initE_HCONDA04(s[931]);
initE_HCONDA05(s[932]);
initE_HCONDA06(s[933]);
initE_HCONDA07(s[934]);
initE_HCONDA08(s[935]);
initE_HCONDA09(s[936]);
initE_HCONDA10(s[937]);
initE_HCONDA11(s[938]);
initE_HCONDA12(s[939]);
initE_HCONDA13(s[940]);
initE_HCONDA14(s[941]);
initE_HCONDA15(s[942]);
initE_HCONDA16(s[943]);
initE_HCONDA17(s[944]);
initE_LCHMOR(s[945]);
initE_LCHMORN(s[946]);
initE_AIDHH(s[947]);
initE_AIDHUA1(s[948]);
initE_AIDHUA2(s[949]);
initE_AIDHUA3(s[950]);
initE_AIDHUA4(s[951]);
initE_AIDHUA5(s[952]);
initE_AIDHUA6(s[953]);
initE_AIDHUA7(s[954]);
initE_AIDHUA8(s[955]);
initE_AIDHUA9(s[956]);
initE_AIDHUA10(s[957]);
initE_AIDHUA11(s[958]);
initE_AIDHUA12(s[959]);
initE_AIDHUA13(s[960]);
initE_AIDHUA14(s[961]);
initE_AIDHUA15(s[962]);
initE_AIDHUA16(s[963]);
initE_AIDXHH(s[964]);
initE_NAIDXHH(s[965]);
initE_AIDHU1(s[966]);
initE_AIDHU2(s[967]);
initE_AIDHRS(s[968]);
initE_AIDEFT(s[969]);
initE_LCOHNPI(s[970]);
initE_COH1BM(s[971]);
initE_COH1BY(s[972]);
initE_COH1MR(s[973]);
initE_COH1EM(s[974]);
initE_COH1EY(s[975]);
initE_NMAR(s[976]);
initE_LMAR1M(s[977]);
initE_LMAR1Y(s[978]);
initE_LADOPT(s[979]);
initE_LNADOPT(s[980]);
initE_LPRNT(s[981]);
initE_LNPRNT(s[982]);
initE_CH1BY4(s[983]);
initE_ADCTS(s[984]);
initE_MOVY11(s[985]);
initE_MOVY12(s[986]);
initE_MOVY13(s[987]);
initE_MOVY14(s[988]);
initE_MOVY15(s[989]);
initE_MOVY16(s[990]);
initE_FAMILY(s[991]);
initE_EDUCATION(s[992]);
initE_MEMPLOY(s[993]);
initE_HOUSING(s[994]);
initE_AREA(s[995]);
initE_MOVEOTH_CODE(s[996]);
initE_MOVDIR(s[997]);
initE_PLNOWM(s[998]);
initE_PLNOWY4(s[999]);
initE_RELUP(s[1000]);
initE_MSTATSAM(s[1001]);
initE_LWWRONG(s[1002]);
initE_MSTATSAMN(s[1003]);
initE_MSTATCH1(s[1004]);
initE_STATCM1(s[1005]);
initE_STATCY41(s[1006]);
initE_DIVCHK1(s[1007]);
initE_DIVFIN1(s[1008]);
initE_DVM1(s[1009]);
initE_DVY41(s[1010]);
initE_CMLSTAT1(s[1011]);
initE_MSTATCH2(s[1012]);
initE_STATCM2(s[1013]);
initE_STATCY42(s[1014]);
initE_DIVCHK2(s[1015]);
initE_DIVFIN2(s[1016]);
initE_DVM2(s[1017]);
initE_DVY42(s[1018]);
initE_CMLSTAT2(s[1019]);
initE_COHAB(s[1020]);
initE_COHABN(s[1021]);
initE_LMCBM1(s[1022]);
initE_LMCBY41(s[1023]);
initE_CURRPART1(s[1024]);
initE_LMSPM1(s[1025]);
initE_LMSPY41(s[1026]);
initE_LMCBM2(s[1027]);
initE_LMCBY42(s[1028]);
initE_CURRPART2(s[1029]);
initE_LMSPM2(s[1030]);
initE_LMSPY42(s[1031]);
initE_LMCBM3(s[1032]);
initE_LMCBY43(s[1033]);
initE_CURRPART3(s[1034]);
initE_LMSPM3(s[1035]);
initE_LMSPY43(s[1036]);
initE_LMCBM4(s[1037]);
initE_LMCBY44(s[1038]);
initE_CURRPART4(s[1039]);
initE_LMSPM4(s[1040]);
initE_LMSPY44(s[1041]);
initE_FATHER(s[1042]);
initE_NCHILD(s[1043]);
initE_PREG(s[1044]);
initE_PREGM1(s[1045]);
initE_PREGY41(s[1046]);
initE_PREGFERT1(s[1047]);
initE_INVITRO1(s[1048]);
initE_PREGOUT1(s[1049]);
initE_PREGEND1(s[1050]);
initE_ENDMNTH1(s[1051]);
initE_PREGSMOKE1(s[1052]);
initE_SMKMNTH11(s[1053]);
initE_SMKMNTH21(s[1054]);
initE_SMKMNTH31(s[1055]);
initE_PREGSMK11(s[1056]);
initE_PREGSMK21(s[1057]);
initE_PREGSMK31(s[1058]);
initE_AEDROF1(s[1059]);
initE_AEPUWK1(s[1060]);
initE_AEPUDA1(s[1061]);
initE_LCHMULTI1(s[1062]);
initE_PREGM2(s[1063]);
initE_PREGY42(s[1064]);
initE_PREGFERT2(s[1065]);
initE_INVITRO2(s[1066]);
initE_PREGOUT2(s[1067]);
initE_PREGEND2(s[1068]);
initE_ENDMNTH2(s[1069]);
initE_PREGSMOKE2(s[1070]);
initE_SMKMNTH12(s[1071]);
initE_SMKMNTH22(s[1072]);
initE_SMKMNTH32(s[1073]);
initE_PREGSMK12(s[1074]);
initE_PREGSMK22(s[1075]);
initE_PREGSMK32(s[1076]);
initE_AEDROF2(s[1077]);
initE_AEPUWK2(s[1078]);
initE_AEPUDA2(s[1079]);
initE_LCHMULTI2(s[1080]);
initE_PREGM3(s[1081]);
initE_PREGY43(s[1082]);
initE_PREGFERT3(s[1083]);
initE_INVITRO3(s[1084]);
initE_PREGOUT3(s[1085]);
initE_PREGEND3(s[1086]);
initE_ENDMNTH3(s[1087]);
initE_PREGSMOKE3(s[1088]);
initE_SMKMNTH13(s[1089]);
initE_SMKMNTH23(s[1090]);
initE_SMKMNTH33(s[1091]);
initE_PREGSMK13(s[1092]);
initE_PREGSMK23(s[1093]);
initE_PREGSMK33(s[1094]);
initE_AEDROF3(s[1095]);
initE_AEPUWK3(s[1096]);
initE_AEPUDA3(s[1097]);
initE_LCHMULTI3(s[1098]);
initE_NNEWBORN(s[1099]);
initE_HCONDNO1(s[1100]);
initE_HCONDNS1(s[1101]);
initE_HCONDNO2(s[1102]);
initE_HCONDNS2(s[1103]);
initE_HCONDNO3(s[1104]);
initE_HCONDNS3(s[1105]);
initE_HCONDNO4(s[1106]);
initE_HCONDNS4(s[1107]);
initE_HCONDNO5(s[1108]);
initE_HCONDNS5(s[1109]);
initE_HCONDNO6(s[1110]);
initE_HCONDNS6(s[1111]);
initE_HCONDNO7(s[1112]);
initE_HCONDNS7(s[1113]);
initE_HCONDN1(s[1114]);
initE_HCONDN2(s[1115]);
initE_HCONDN3(s[1116]);
initE_HCONDN4(s[1117]);
initE_HCONDN5(s[1118]);
initE_HCONDN6(s[1119]);
initE_HCONDN7(s[1120]);
initE_HCONDN8(s[1121]);
initE_HCONDN9(s[1122]);
initE_HCONDN10(s[1123]);
initE_HCONDN11(s[1124]);
initE_HCONDN12(s[1125]);
initE_HCONDN13(s[1126]);
initE_HCONDN14(s[1127]);
initE_HCONDN15(s[1128]);
initE_HCONDN16(s[1129]);
initE_HCONDN17(s[1130]);
initE_HCONDN96(s[1131]);
initE_CONTFT(s[1132]);
initE_FTENDM(s[1133]);
initE_FTENDY4(s[1134]);
initE_FTEDANY(s[1135]);
initE_FTQUALS(s[1136]);
initE_FTEDSTARTM1(s[1137]);
initE_FTEDSTARTY41(s[1138]);
initE_FTEDEND1(s[1139]);
initE_FT2ENDM1(s[1140]);
initE_FT2ENDY41(s[1141]);
initE_FTEDMOR1(s[1142]);
initE_FTEDSTARTM2(s[1143]);
initE_FTEDSTARTY42(s[1144]);
initE_FTEDEND2(s[1145]);
initE_FT2ENDM2(s[1146]);
initE_FT2ENDY42(s[1147]);
initE_FTEDMOR2(s[1148]);
initE_QUALNEW1(s[1149]);
initE_QUALNEW2(s[1150]);
initE_QUALNEW3(s[1151]);
initE_QUALNEW4(s[1152]);
initE_QUALNE(s[1153]);
initE_QUALNEW6(s[1154]);
initE_QUALNEW7(s[1155]);
initE_QUALNEW8(s[1156]);
initE_QUALNEW9(s[1157]);
initE_QUALNEW10(s[1158]);
initE_QUALNEW11(s[1159]);
initE_QUALNEW13(s[1160]);
initE_QUALNEW15(s[1161]);
initE_QUALNEW16(s[1162]);
initE_QUALNEW17(s[1163]);
initE_QUALNEW18(s[1164]);
initE_QUALNEW19(s[1165]);
initE_QUALNEW20(s[1166]);
initE_QUALNEW21(s[1167]);
initE_QUALNEW22(s[1168]);
initE_QUALNEW23(s[1169]);
initE_QUALNEW24(s[1170]);
initE_QUALNEW25(s[1171]);
initE_QUALNEW26(s[1172]);
initE_QUALNEW27(s[1173]);
initE_QUALNEW28(s[1174]);
initE_QUALNEW29(s[1175]);
initE_QUALNEW30(s[1176]);
initE_QUALNEW31(s[1177]);
initE_TRAINANY(s[1178]);
initE_TRWHO1(s[1179]);
initE_TRAINDAYS1(s[1180]);
initE_TRAINHRS1(s[1181]);
initE_TRAINEND1(s[1182]);
initE_TRAINPURP11(s[1183]);
initE_TRAINPURP21(s[1184]);
initE_TRAINPURP31(s[1185]);
initE_TRAINPURP41(s[1186]);
initE_TRAINPURP51(s[1187]);
initE_TRAINPURP61(s[1188]);
initE_TRAINPURP71(s[1189]);
initE_TRAINQUAL1(s[1190]);
initE_TRWHO2(s[1191]);
initE_TRAINDAYS2(s[1192]);
initE_TRAINHRS2(s[1193]);
initE_TRAINEND2(s[1194]);
initE_TRAINPURP12(s[1195]);
initE_TRAINPURP22(s[1196]);
initE_TRAINPURP32(s[1197]);
initE_TRAINPURP42(s[1198]);
initE_TRAINPURP52(s[1199]);
initE_TRAINPURP62(s[1200]);
initE_TRAINPURP72(s[1201]);
initE_TRAINQUAL2(s[1202]);
initE_TRWHO3(s[1203]);
initE_TRAINDAYS3(s[1204]);
initE_TRAINHRS3(s[1205]);
initE_TRAINEND3(s[1206]);
initE_TRAINPURP13(s[1207]);
initE_TRAINPURP23(s[1208]);
initE_TRAINPURP33(s[1209]);
initE_TRAINPURP43(s[1210]);
initE_TRAINPURP53(s[1211]);
initE_TRAINPURP63(s[1212]);
initE_TRAINPURP73(s[1213]);
initE_TRAINQUAL3(s[1214]);
initE_TRAINN(s[1215]);
initE_TRQUAL1(s[1216]);
initE_TRQUAL2(s[1217]);
initE_TRQUAL3(s[1218]);
initE_TRQUAL4(s[1219]);
initE_TRQUAL5(s[1220]);
initE_TRQUAL6(s[1221]);
initE_TRQUAL7(s[1222]);
initE_TRQUAL8(s[1223]);
initE_TRQUAL9(s[1224]);
initE_TRQUAL10(s[1225]);
initE_TRQUAL11(s[1226]);
initE_TRQUAL13(s[1227]);
initE_TRQUAL15(s[1228]);
initE_TRQUAL16(s[1229]);
initE_TRQUAL17(s[1230]);
initE_TRQUAL18(s[1231]);
initE_TRQUAL19(s[1232]);
initE_TRQUAL20(s[1233]);
initE_TRQUAL21(s[1234]);
initE_TRQUAL22(s[1235]);
initE_TRQUAL23(s[1236]);
initE_TRQUAL24(s[1237]);
initE_TRQUAL25(s[1238]);
initE_TRQUAL26(s[1239]);
initE_TRQUAL27(s[1240]);
initE_TRQUAL28(s[1241]);
initE_TRQUAL29(s[1242]);
initE_TRQUAL30(s[1243]);
initE_TRQUAL31(s[1244]);
initE_NOTEMPCHK(s[1245]);
initE_EMPCHK(s[1246]);
initE_EMPSTENDD(s[1247]);
initE_EMPSTENDM(s[1248]);
initE_EMPSTENDY4(s[1249]);
initE_STENDREAS(s[1250]);
initE_NXTST(s[1251]);
initE_NEXT1(s[1252]);
initE_NEXTSTAT1(s[1253]);
initE_NEXTELSE1(s[1254]);
initE_CURRSTAT1(s[1255]);
initE_NEXTJOB1(s[1256]);
initE_CURRJOB1(s[1257]);
initE_JOBHOURS1(s[1258]);
initE_REASEND1(s[1259]);
initE_JBATT1(s[1260]);
initE_STATENDD1(s[1261]);
initE_STATENDM1(s[1262]);
initE_STATENDY41(s[1263]);
initE_NEXT2(s[1264]);
initE_NEXTSTAT2(s[1265]);
initE_NEXTELSE2(s[1266]);
initE_CURRSTAT2(s[1267]);
initE_NEXTJOB2(s[1268]);
initE_CURRJOB2(s[1269]);
initE_JOBHOURS2(s[1270]);
initE_REASEND2(s[1271]);
initE_JBATT2(s[1272]);
initE_STATENDD2(s[1273]);
initE_STATENDM2(s[1274]);
initE_STATENDY42(s[1275]);
initE_NEXT3(s[1276]);
initE_NEXTSTAT3(s[1277]);
initE_NEXTELSE3(s[1278]);
initE_CURRSTAT3(s[1279]);
initE_NEXTJOB3(s[1280]);
initE_CURRJOB3(s[1281]);
initE_JOBHOURS3(s[1282]);
initE_REASEND3(s[1283]);
initE_JBATT3(s[1284]);
initE_STATENDD3(s[1285]);
initE_STATENDM3(s[1286]);
initE_STATENDY43(s[1287]);
initE_NEXT4(s[1288]);
initE_NEXTSTAT4(s[1289]);
initE_NEXTELSE4(s[1290]);
initE_CURRSTAT4(s[1291]);
initE_NEXTJOB4(s[1292]);
initE_CURRJOB4(s[1293]);
initE_JOBHOURS4(s[1294]);
initE_REASEND4(s[1295]);
initE_JBATT4(s[1296]);
initE_STATENDD4(s[1297]);
initE_STATENDM4(s[1298]);
initE_STATENDY44(s[1299]);
initE_NEXT5(s[1300]);
initE_NEXTSTAT5(s[1301]);
initE_NEXTELSE5(s[1302]);
initE_CURRSTAT5(s[1303]);
initE_NEXTJOB5(s[1304]);
initE_CURRJOB5(s[1305]);
initE_JOBHOURS5(s[1306]);
initE_REASEND5(s[1307]);
initE_JBATT5(s[1308]);
initE_STATENDD5(s[1309]);
initE_STATENDM5(s[1310]);
initE_STATENDY45(s[1311]);
initE_NEXT6(s[1312]);
initE_NEXTSTAT6(s[1313]);
initE_NEXTELSE6(s[1314]);
initE_CURRSTAT6(s[1315]);
initE_NEXTJOB6(s[1316]);
initE_CURRJOB6(s[1317]);
initE_JOBHOURS6(s[1318]);
initE_REASEND6(s[1319]);
initE_JBATT6(s[1320]);
initE_STATENDD6(s[1321]);
initE_STATENDM6(s[1322]);
initE_STATENDY46(s[1323]);
initE_NXTSTELSE(s[1324]);
initE_CSTAT(s[1325]);
initE_NXTSTENDD(s[1326]);
initE_NXTSTENDM(s[1327]);
initE_NXTSTENDY4(s[1328]);
initE_JBSAMR(s[1329]);
initE_WKPLSAM(s[1330]);
initE_SAMEJOB(s[1331]);
initE_MATLV(s[1332]);
initE_MATLVSTD(s[1333]);
initE_MATLVSTM(s[1334]);
initE_MATLVSTY4(s[1335]);
initE_MATLVENDD(s[1336]);
initE_MATLVENDM(s[1337]);
initE_MATLVENDY4(s[1338]);
initE_JBENDD(s[1339]);
initE_JBENDM(s[1340]);
initE_JBENDY4(s[1341]);
initE_JBENDREAS(s[1342]);
initE_CJOB(s[1343]);
initE_NXTJBHRS(s[1344]);
initE_NXTJBES(s[1345]);
initE_NXTJBENDD(s[1346]);
initE_NXTJBENDM(s[1347]);
initE_NXTJBENDY4(s[1348]);
initE_NXTENDREAS(s[1349]);
initE_CJBATT(s[1350]);
initE_NEXT(s[1351]);
initE_JBHAS(s[1352]);
initE_JBOFF(s[1353]);
initE_JBOFFY(s[1354]);
initE_JBTERM1(s[1355]);
initE_JBTERM2(s[1356]);
initE_JBSIC07CHK(s[1357]);
initE_JBSOC00CHK(s[1358]);
initE_JBSEMPCHK(s[1359]);
initE_JBSEMP(s[1360]);
initE_JBBGDATY(s[1361]);
initE_JBBGDATM(s[1362]);
initE_JBBGDATD(s[1363]);
initE_JBBGD(s[1364]);
initE_JBBGM(s[1365]);
initE_JBBGY(s[1366]);
initE_JBMNGRCHK(s[1367]);
initE_JBMNGR(s[1368]);
initE_JBSIZECHK(s[1369]);
initE_JBSIZE(s[1370]);
initE_JBSECT(s[1371]);
initE_JBSECTPUB(s[1372]);
initE_JBHRS(s[1373]);
initE_JBOT(s[1374]);
initE_JBOTPD(s[1375]);
initE_JBPL(s[1376]);
initE_PAYGWC(s[1377]);
initE_PAYNWC(s[1378]);
initE_PAYUSL(s[1379]);
initE_PAYU(s[1380]);
initE_PAYUWC(s[1381]);
initE_PAYUG(s[1382]);
initE_PAYTYP(s[1383]);
initE_OVTPAY(s[1384]);
initE_EXTNSA(s[1385]);
initE_EXTRATE(s[1386]);
initE_EXTREST(s[1387]);
initE_BASNSA(s[1388]);
initE_BASRATE(s[1389]);
initE_BASREST(s[1390]);
initE_OVTNSA(s[1391]);
initE_OVTRATE(s[1392]);
initE_OVTREST(s[1393]);
initE_JBTTWT(s[1394]);
initE_WORKTRAV(s[1395]);
initE_BOSSETHN(s[1396]);
initE_BOSSSEX(s[1397]);
initE_ETCOSAMN(s[1398]);
initE_ETCOWHN(s[1399]);
initE_ETCOOTN(s[1400]);
initE_COWOSEXN(s[1401]);
initE_ETCOSAMP(s[1402]);
initE_ETCOWHP(s[1403]);
initE_ETCOOTP(s[1404]);
initE_COWOSEXP(s[1405]);
initE_JSBOSS(s[1406]);
initE_JSSIZE(s[1407]);
initE_JSHRS(s[1408]);
initE_JSTYPEB(s[1409]);
initE_JSACCS(s[1410]);
initE_JSPART(s[1411]);
initE_JSPRBM(s[1412]);
initE_JSPRBY4(s[1413]);
initE_JSPREM(s[1414]);
initE_JSPREY4(s[1415]);
initE_JSPRLS(s[1416]);
initE_JSPRTX(s[1417]);
initE_JSPRNI(s[1418]);
initE_JSPAYU(s[1419]);
initE_JSPAYW(s[1420]);
initE_JSPYTX(s[1421]);
initE_JSPYNI(s[1422]);
initE_JSPL(s[1423]);
initE_JSTTWT(s[1424]);
initE_JSTTWTB(s[1425]);
initE_JSWORKTRAV(s[1426]);
initE_JBSAT(s[1427]);
initE_WKPHYS(s[1428]);
initE_JULK4WK(s[1429]);
initE_JULKJB(s[1430]);
initE_JUBGN(s[1431]);
initE_JULK4X1(s[1432]);
initE_JULK4X2(s[1433]);
initE_JULK4X3(s[1434]);
initE_JULK4X4(s[1435]);
initE_JULK4X5(s[1436]);
initE_JULK4X6(s[1437]);
initE_JULK4X96(s[1438]);
initE_JBHAD(s[1439]);
initE_JLENDM(s[1440]);
initE_JLENDY(s[1441]);
initE_JLSEMP(s[1442]);
initE_JLBOSS(s[1443]);
initE_JLMNGR(s[1444]);
initE_JLSIZE(s[1445]);
initE_EPROSH(s[1446]);
initE_MLFUTR(s[1447]);
initE_MLRNOT1(s[1448]);
initE_MLRNOT2(s[1449]);
initE_MLRNOT3(s[1450]);
initE_MLRNOT4(s[1451]);
initE_MLRNOT5(s[1452]);
initE_MLRNOT6(s[1453]);
initE_MLRNOT7(s[1454]);
initE_MLRNOT8(s[1455]);
initE_MLRNOT9(s[1456]);
initE_MLRNOT10(s[1457]);
initE_MLRNOT11(s[1458]);
initE_MLRNOT12(s[1459]);
initE_MLRNOT13(s[1460]);
initE_MLRNOT97(s[1461]);
initE_MLAGST(s[1462]);
initE_MLAGSTU(s[1463]);
initE_MLWKFPT(s[1464]);
initE_MATLEAVE(s[1465]);
initE_J2HAS(s[1466]);
initE_J2SEMP(s[1467]);
initE_J2HRS(s[1468]);
initE_J2PAY(s[1469]);
initE_LGAPED(s[1470]);
initE_EMPINTRO(s[1471]);
initE_NJOBHIST(s[1472]);
initE_JOBLOOK(s[1473]);
initE_JOBDENY(s[1474]);
initE_RESJOBDENY1(s[1475]);
initE_RESJOBDENY2(s[1476]);
initE_RESJOBDENY3(s[1477]);
initE_RESJOBDENY4(s[1478]);
initE_RESJOBDENY5(s[1479]);
initE_RESJOBDENY6(s[1480]);
initE_RESJOBDENY7(s[1481]);
initE_RESJOBDENY8(s[1482]);
initE_RESJOBDENY9(s[1483]);
initE_RESJOBDENY96(s[1484]);
initE_RESJOBDENY97(s[1485]);
initE_DISEFFECTS1(s[1486]);
initE_DISEFFECTS2(s[1487]);
initE_DISEFFECTS3(s[1488]);
initE_DISEFFECTS4(s[1489]);
initE_DISEFFECTS5(s[1490]);
initE_CCARE(s[1491]);
initE_CCWORK(s[1492]);
initE_LVREL1(s[1493]);
initE_LVREL9(s[1494]);
initE_LVREL2(s[1495]);
initE_LVREL10(s[1496]);
initE_LVREL3(s[1497]);
initE_LVREL4(s[1498]);
initE_LVREL5(s[1499]);
initE_LVREL6(s[1500]);
initE_LVREL7(s[1501]);
initE_LVREL8(s[1502]);
initE_LVREL96(s[1503]);
initE_MAMOSTCON(s[1504]);
initE_PAMOSTCON(s[1505]);
initE_MAAGE(s[1506]);
initE_PAAGE(s[1507]);
initE_NRELS1(s[1508]);
initE_NRELS2(s[1509]);
initE_NRELS3(s[1510]);
initE_NRELS4(s[1511]);
initE_NRELS5(s[1512]);
initE_NRELS6(s[1513]);
initE_PARMAR(s[1514]);
initE_MALONE(s[1515]);
initE_PALONE(s[1516]);
initE_OHCH16(s[1517]);
initE_SEEKID(s[1518]);
initE_WEKID(s[1519]);
initE_STAYKID(s[1520]);
initE_STAYKIDW(s[1521]);
initE_FARKID(s[1522]);
initE_RELKID(s[1523]);
initE_MASEE(s[1524]);
initE_MACON(s[1525]);
initE_MAFAR(s[1526]);
initE_PASEE(s[1527]);
initE_PACON(s[1528]);
initE_PAFAR(s[1529]);
initE_PAAID1(s[1530]);
initE_PAAID2(s[1531]);
initE_PAAID3(s[1532]);
initE_PAAID4(s[1533]);
initE_PAAID5(s[1534]);
initE_PAAID6(s[1535]);
initE_PAAID7(s[1536]);
initE_PAAID8(s[1537]);
initE_PAAID96(s[1538]);
initE_PAAID97(s[1539]);
initE_PAIDU1(s[1540]);
initE_PAIDU2(s[1541]);
initE_PAIDU3(s[1542]);
initE_PAIDU4(s[1543]);
initE_PAIDU5(s[1544]);
initE_PAIDU6(s[1545]);
initE_PAIDU7(s[1546]);
initE_PAIDU8(s[1547]);
initE_PAIDU96(s[1548]);
initE_PAIDU97(s[1549]);
initE_CHSEE(s[1550]);
initE_CHCON(s[1551]);
initE_CHFAR(s[1552]);
initE_CHAID1(s[1553]);
initE_CHAID2(s[1554]);
initE_CHAID3(s[1555]);
initE_CHAID4(s[1556]);
initE_CHAID5(s[1557]);
initE_CHAID6(s[1558]);
initE_CHAID7(s[1559]);
initE_CHAID8(s[1560]);
initE_CHAID96(s[1561]);
initE_CHAID97(s[1562]);
initE_CAIDU1(s[1563]);
initE_CAIDU2(s[1564]);
initE_CAIDU3(s[1565]);
initE_CAIDU4(s[1566]);
initE_CAIDU5(s[1567]);
initE_CAIDU6(s[1568]);
initE_CAIDU7(s[1569]);
initE_CAIDU8(s[1570]);
initE_CAIDU96(s[1571]);
initE_CAIDU97(s[1572]);
initE_KIDSPT(s[1573]);
initE_FTEXV(s[1574]);
initE_FTEXW(s[1575]);
initE_PARCHILD(s[1576]);
initE_HLPHMWK(s[1577]);
initE_LEVELIMP(s[1578]);
initE_APVOCIMP(s[1579]);
initE_KID2UNI01(s[1580]);
initE_KID2UNI02(s[1581]);
initE_KID2UNI03(s[1582]);
initE_KID2UNI04(s[1583]);
initE_KID2UNI05(s[1584]);
initE_KID2UNI06(s[1585]);
initE_KID2UNI07(s[1586]);
initE_KID2UNI08(s[1587]);
initE_KID2UNI09(s[1588]);
initE_KID2UNI10(s[1589]);
initE_KID2UNI11(s[1590]);
initE_KID2UNI12(s[1591]);
initE_KID2UNI13(s[1592]);
initE_KID2UNI14(s[1593]);
initE_KID2UNI15(s[1594]);
initE_KID2UNI16(s[1595]);
initE_SOCIALKID(s[1596]);
initE_DINNER(s[1597]);
initE_QUARREL(s[1598]);
initE_TALKMATTER(s[1599]);
initE_RULESKID(s[1600]);
initE_PYENRL(s[1601]);
initE_PRAISEKID(s[1602]);
initE_SLAPKID(s[1603]);
initE_CUDDLEKID(s[1604]);
initE_YELLKID(s[1605]);
initE_BTYPE1(s[1606]);
initE_BTYPE2(s[1607]);
initE_BTYPE10(s[1608]);
initE_BTYPE3(s[1609]);
initE_BTYPE4(s[1610]);
initE_BTYPE5(s[1611]);
initE_BTYPE6(s[1612]);
initE_BTYPE7(s[1613]);
initE_BTYPE8(s[1614]);
initE_BTYPE9(s[1615]);
initE_BTYPE96(s[1616]);
initE_BENUNEMP1(s[1617]);
initE_BENUNEMP2(s[1618]);
initE_BENUNEMP3(s[1619]);
initE_BENUNEMP4(s[1620]);
initE_BENUNEMP5(s[1621]);
initE_BENUNEMP6(s[1622]);
initE_BENUNEMP7(s[1623]);
initE_BENUNEMP96(s[1624]);
initE_BENDIS1(s[1625]);
initE_BENDIS11(s[1626]);
initE_BENDIS2(s[1627]);
initE_BENDIS3(s[1628]);
initE_BENDIS4(s[1629]);
initE_BENDIS5(s[1630]);
initE_BENDIS12(s[1631]);
initE_BENDIS6(s[1632]);
initE_BENDIS7(s[1633]);
initE_BENDIS8(s[1634]);
initE_BENDIS9(s[1635]);
initE_BENDIS10(s[1636]);
initE_BENDIS96(s[1637]);
initE_BENDIS97(s[1638]);
initE_BENESA(s[1639]);
initE_BENPEN1(s[1640]);
initE_BENPEN2(s[1641]);
initE_BENPEN3(s[1642]);
initE_BENPEN4(s[1643]);
initE_BENPEN5(s[1644]);
initE_BENPEN6(s[1645]);
initE_BENPEN7(s[1646]);
initE_BENPEN8(s[1647]);
initE_BENPEN10(s[1648]);
initE_BENPEN11(s[1649]);
initE_BENPEN12(s[1650]);
initE_BENPEN13(s[1651]);
initE_BENPEN96(s[1652]);
initE_NISERPS(s[1653]);
initE_BENCB(s[1654]);
initE_BENCTC(s[1655]);
initE_BENFAM1(s[1656]);
initE_BENFAM2(s[1657]);
initE_BENFAM3(s[1658]);
initE_BENFAM4(s[1659]);
initE_BENFAM5(s[1660]);
initE_BENFAM6(s[1661]);
initE_BENFAM7(s[1662]);
initE_BENFAM8(s[1663]);
initE_BENFAM9(s[1664]);
initE_BENFAM10(s[1665]);
initE_BENFAM96(s[1666]);
initE_BENTAX1(s[1667]);
initE_BENTAX2(s[1668]);
initE_BENTAX3(s[1669]);
initE_BENTAX4(s[1670]);
initE_BENTAX5(s[1671]);
initE_BENTAX7(s[1672]);
initE_BENTAX8(s[1673]);
initE_BENTAX9(s[1674]);
initE_BENTAX10(s[1675]);
initE_BENTAX96(s[1676]);
initE_BENHOU1(s[1677]);
initE_BENHOU2(s[1678]);
initE_BENHOU3(s[1679]);
initE_BENHOU4(s[1680]);
initE_BENHOU5(s[1681]);
initE_BENHOU6(s[1682]);
initE_BENHOU7(s[1683]);
initE_BENHOU8(s[1684]);
initE_BENHOU9(s[1685]);
initE_BENHOU96(s[1686]);
initE_BENSTA1(s[1687]);
initE_BENSTA2(s[1688]);
initE_BENSTA3(s[1689]);
initE_BENSTA4(s[1690]);
initE_BENSTA5(s[1691]);
initE_BENSTA6(s[1692]);
initE_BENSTA7(s[1693]);
initE_BENSTA9(s[1694]);
initE_BENSTA10(s[1695]);
initE_BENSTA11(s[1696]);
initE_BENSTA12(s[1697]);
initE_BENSTA13(s[1698]);
initE_BENSTA96(s[1699]);
initE_BENSTA97(s[1700]);
initE_NFH01(s[1701]);
initE_NFH02(s[1702]);
initE_NFH03(s[1703]);
initE_NFH04(s[1704]);
initE_NFH05(s[1705]);
initE_NFH06(s[1706]);
initE_NFH07(s[1707]);
initE_NFH08(s[1708]);
initE_NFH09(s[1709]);
initE_NFH10(s[1710]);
initE_NFH11(s[1711]);
initE_NFH12(s[1712]);
initE_NFH13(s[1713]);
initE_NFH14(s[1714]);
initE_NFH15(s[1715]);
initE_NFH16(s[1716]);
initE_NFH17(s[1717]);
initE_NFH18(s[1718]);
initE_NFH19(s[1719]);
initE_NFH20(s[1720]);
initE_NFH21(s[1721]);
initE_NFH22(s[1722]);
initE_NFH23(s[1723]);
initE_NFH24(s[1724]);
initE_NFH25(s[1725]);
initE_NFH26(s[1726]);
initE_NFH27(s[1727]);
initE_NFH28(s[1728]);
initE_NFH29(s[1729]);
initE_NFH30(s[1730]);
initE_NFH31(s[1731]);
initE_NFH32(s[1732]);
initE_NFH33(s[1733]);
initE_NFH34(s[1734]);
initE_NFH35(s[1735]);
initE_NFH36(s[1736]);
initE_NFH37(s[1737]);
initE_NFH38(s[1738]);
initE_NFH39(s[1739]);
initE_FIYRDIA(s[1740]);
initE_FIYRDB1(s[1741]);
initE_FIYRDB2(s[1742]);
initE_FIYRDB3(s[1743]);
initE_FIYRDB4(s[1744]);
initE_FIYRDB5(s[1745]);
initE_FIYRDB6(s[1746]);
initE_FINNOW(s[1747]);
initE_FINFUT(s[1748]);
initE_N1619ABS(s[1749]);
initE_NUNDER16(s[1750]);
initE_NUNDER16ABS(s[1751]);
initE_NUNDER20ABS(s[1752]);
initE_CMROUTE(s[1753]);
initE_CMSAMEA(s[1754]);
initE_CMSAMEB(s[1755]);
initE_CMSAMEC(s[1756]);
initE_CMFLAG(s[1757]);
initE_CSACALC(s[1758]);
initE_CSAKIDNO1(s[1759]);
initE_CSAKIDNO2(s[1760]);
initE_CSAKIDNO3(s[1761]);
initE_CSAKIDNO4(s[1762]);
initE_CSAKIDNO5(s[1763]);
initE_CSAPAYTO(s[1764]);
initE_CSACALCAM(s[1765]);
initE_CMCSAPER(s[1766]);
initE_CMCSAALL(s[1767]);
initE_CMCSAACT(s[1768]);
initE_CMCSAAM(s[1769]);
initE_CMCSAPR(s[1770]);
initE_CSARECPER(s[1771]);
initE_DCSATM(s[1772]);
initE_CMCSANIL1(s[1773]);
initE_CMCSANIL2(s[1774]);
initE_CMCSANIL3(s[1775]);
initE_CMCSANIL4(s[1776]);
initE_CMCSANIL5(s[1777]);
initE_CMCSANIL6(s[1778]);
initE_CMCSANIL7(s[1779]);
initE_CMCSANIL8(s[1780]);
initE_CMCSANIL9(s[1781]);
initE_CMCSANIL97(s[1782]);
initE_CMCORD(s[1783]);
initE_CMCOKIDNO1(s[1784]);
initE_CMCOKIDNO2(s[1785]);
initE_CMCOKIDNO3(s[1786]);
initE_CMCOKIDNO4(s[1787]);
initE_CMCOKIDNO5(s[1788]);
initE_CMCORDAM(s[1789]);
initE_CMCORDPER(s[1790]);
initE_CMCORDALL(s[1791]);
initE_CMCORDREC(s[1792]);
initE_CMCORDRCAM(s[1793]);
initE_CMCORDRCPR(s[1794]);
initE_CORDRECPER(s[1795]);
initE_CMCORDTM(s[1796]);
initE_CMVOL(s[1797]);
initE_CMVOLKIDNO1(s[1798]);
initE_CMVOLKIDNO2(s[1799]);
initE_CMVOLKIDNO3(s[1800]);
initE_CMVOLKIDNO4(s[1801]);
initE_CMVOLKIDNO5(s[1802]);
initE_CMVOLAM(s[1803]);
initE_CMVOLPER(s[1804]);
initE_CMVOLALL(s[1805]);
initE_CMVOLREC(s[1806]);
initE_CMVOLRCAM(s[1807]);
initE_CMVOLRCPR(s[1808]);
initE_VOLRECPER(s[1809]);
initE_CMVOLTM(s[1810]);
initE_CMNIL1(s[1811]);
initE_CMNIL2(s[1812]);
initE_CMNIL3(s[1813]);
initE_CMNIL4(s[1814]);
initE_CMNIL5(s[1815]);
initE_CMNIL6(s[1816]);
initE_CMNIL7(s[1817]);
initE_CMNIL8(s[1818]);
initE_CMNIL9(s[1819]);
initE_CMNIL10(s[1820]);
initE_CMNIL97(s[1821]);
initE_CMOTHPAY1(s[1822]);
initE_CMOTHPAY2(s[1823]);
initE_CMOTHPAY3(s[1824]);
initE_CMOTHPAY4(s[1825]);
initE_CMOTHPAY5(s[1826]);
initE_CMOTHPAY6(s[1827]);
initE_CMOTHPAY7(s[1828]);
initE_CMOTHPAY8(s[1829]);
initE_CMOTHPAY9(s[1830]);
initE_CMOTHPAY10(s[1831]);
initE_CMOTHPAY11(s[1832]);
initE_CMOTHPAY96(s[1833]);
initE_CMOTHPAY97(s[1834]);
initE_CMKNDEVR1(s[1835]);
initE_CMKNDEVR2(s[1836]);
initE_CMKNDEVR3(s[1837]);
initE_CMKNDEVR4(s[1838]);
initE_CMKNDEVR96(s[1839]);
initE_CMKNDEVR97(s[1840]);
initE_CMNKY1(s[1841]);
initE_CMNKY2(s[1842]);
initE_CMNKY3(s[1843]);
initE_EXPREAM(s[1844]);
initE_EXSAME(s[1845]);
initE_RETCHK(s[1846]);
initE_AGERET(s[1847]);
initE_RTPRO1(s[1848]);
initE_RTPRO2(s[1849]);
initE_RTPRO3(s[1850]);
initE_RTPRO4(s[1851]);
initE_RTPRO5(s[1852]);
initE_RTPRO6(s[1853]);
initE_RTCON1(s[1854]);
initE_RTCON2(s[1855]);
initE_RTCON3(s[1856]);
initE_RTCON4(s[1857]);
initE_PENMEX(s[1858]);
initE_PPPEX(s[1859]);
initE_PPPEXM(s[1860]);
initE_SPPEN(s[1861]);
initE_RTEXPJB(s[1862]);
initE_RTFND1(s[1863]);
initE_RTFND2(s[1864]);
initE_RTFND3(s[1865]);
initE_RTFND4(s[1866]);
initE_RTFND5(s[1867]);
initE_RTFND6(s[1868]);
initE_RTFND7(s[1869]);
initE_RTFND8(s[1870]);
initE_RTFND9(s[1871]);
initE_RTFND10(s[1872]);
initE_RTFND96(s[1873]);
initE_RETAMT(s[1874]);
initE_RETSUF(s[1875]);
initE_VOTE1(s[1876]);
initE_VOTE2(s[1877]);
initE_VOTE3(s[1878]);
initE_VOTE4(s[1879]);
initE_VOTE5(s[1880]);
initE_VOTE6(s[1881]);
initE_OLYMPAS31(s[1882]);
initE_OLYMPAS32(s[1883]);
initE_OLYMPAS33(s[1884]);
initE_OLYMPAS34(s[1885]);
initE_OLYMPAS35(s[1886]);
initE_OLYMPAS396(s[1887]);
initE_OLYMPAS398(s[1888]);
initE_OLYMACT31(s[1889]);
initE_OLYMACT32(s[1890]);
initE_OLYMACT33(s[1891]);
initE_OLYMACT34(s[1892]);
initE_OLYMACT35(s[1893]);
initE_OLYMACT36(s[1894]);
initE_OLYMACT37(s[1895]);
initE_OLYMACT38(s[1896]);
initE_OLYMACT396(s[1897]);
initE_OLYMACT398(s[1898]);
initE_ARTS1A1(s[1899]);
initE_ARTS1A2(s[1900]);
initE_ARTS1A3(s[1901]);
initE_ARTS1A4(s[1902]);
initE_ARTS1A5(s[1903]);
initE_ARTS1A6(s[1904]);
initE_ARTS1A7(s[1905]);
initE_ARTS1A96(s[1906]);
initE_ARTS1B9(s[1907]);
initE_ARTS1B10(s[1908]);
initE_ARTS1B11(s[1909]);
initE_ARTS1B12(s[1910]);
initE_ARTS1B13(s[1911]);
initE_ARTS1B14(s[1912]);
initE_ARTS1B15(s[1913]);
initE_ARTS1B96(s[1914]);
initE_ARTS1FREQ(s[1915]);
initE_ARTS2A1(s[1916]);
initE_ARTS2A2(s[1917]);
initE_ARTS2A3(s[1918]);
initE_ARTS2A4(s[1919]);
initE_ARTS2A5(s[1920]);
initE_ARTS2A6(s[1921]);
initE_ARTS2A7(s[1922]);
initE_ARTS2A96(s[1923]);
initE_ARTS2B9(s[1924]);
initE_ARTS2B10(s[1925]);
initE_ARTS2B11(s[1926]);
initE_ARTS2B12(s[1927]);
initE_ARTS2B13(s[1928]);
initE_ARTS2B14(s[1929]);
initE_ARTS2B15(s[1930]);
initE_ARTS2B96(s[1931]);
initE_ARTS2FREQ(s[1932]);
initE_MLA1(s[1933]);
initE_MLA2(s[1934]);
initE_MLA3(s[1935]);
initE_MLA96(s[1936]);
initE_LIBFREQ(s[1937]);
initE_ARCFREQ(s[1938]);
initE_MUSFREQ(s[1939]);
initE_HERITAGE1(s[1940]);
initE_HERITAGE2(s[1941]);
initE_HERITAGE3(s[1942]);
initE_HERITAGE4(s[1943]);
initE_HERITAGE5(s[1944]);
initE_HERITAGE6(s[1945]);
initE_HERITAGE7(s[1946]);
initE_HERITAGE8(s[1947]);
initE_HERITAGE96(s[1948]);
initE_HERFREQ(s[1949]);
initE_SPORTS11(s[1950]);
initE_SPORTS12(s[1951]);
initE_SPORTS13(s[1952]);
initE_SPORTS14(s[1953]);
initE_SPORTS15(s[1954]);
initE_SPORTS16(s[1955]);
initE_SPORTS17(s[1956]);
initE_SPORTS18(s[1957]);
initE_SPORTS19(s[1958]);
initE_SPORTS110(s[1959]);
initE_SPORTS111(s[1960]);
initE_SPORTS112(s[1961]);
initE_SPORTS113(s[1962]);
initE_SPORTS114(s[1963]);
initE_SPORTS196(s[1964]);
initE_SPORTS216(s[1965]);
initE_SPORTS217(s[1966]);
initE_SPORTS218(s[1967]);
initE_SPORTS219(s[1968]);
initE_SPORTS220(s[1969]);
initE_SPORTS221(s[1970]);
initE_SPORTS222(s[1971]);
initE_SPORTS223(s[1972]);
initE_SPORTS224(s[1973]);
initE_SPORTS225(s[1974]);
initE_SPORTS226(s[1975]);
initE_SPORTS227(s[1976]);
initE_SPORTS228(s[1977]);
initE_SPORTS229(s[1978]);
initE_SPORTS230(s[1979]);
initE_SPORTS231(s[1980]);
initE_SPORTS296(s[1981]);
initE_SPORTSFREQ(s[1982]);
initE_SPORTS31(s[1983]);
initE_SPORTS32(s[1984]);
initE_SPORTS33(s[1985]);
initE_SPORTS34(s[1986]);
initE_SPORTS35(s[1987]);
initE_SPORTS36(s[1988]);
initE_SPORTS37(s[1989]);
initE_SPORTS38(s[1990]);
initE_SPORTS39(s[1991]);
initE_SPORTS396(s[1992]);
initE_SPORTS3FREQ(s[1993]);
initE_CLUB(s[1994]);
initE_SPORTACT(s[1995]);
initE_CULTUREA(s[1996]);
initE_CULTUREB(s[1997]);
initE_CULTUREC(s[1998]);
initE_CULTURED(s[1999]);
initE_CULTUREE(s[2000]);
initE_CULTUREF(s[2001]);
initE_CULTUREG(s[2002]);
initE_SCAC(s[2003]);
initE_SCRF1(s[2004]);
initE_SCRF2(s[2005]);
initE_SCRF3(s[2006]);
initE_SCRF4(s[2007]);
initE_SCRF5(s[2008]);
initE_SCRF6(s[2009]);
initE_SCRF97(s[2010]);
initE_SCUN1(s[2011]);
initE_SCUN2(s[2012]);
initE_SCUN3(s[2013]);
initE_SCUN97(s[2014]);
initE_SCSF1(s[2015]);
initE_SCSF2A(s[2016]);
initE_SCSF2B(s[2017]);
initE_SCSF3A(s[2018]);
initE_SCSF3B(s[2019]);
initE_SCSF4A(s[2020]);
initE_SCSF4B(s[2021]);
initE_SCSF5(s[2022]);
initE_SCSF6A(s[2023]);
initE_SCSF6B(s[2024]);
initE_SCSF6C(s[2025]);
initE_SCSF7(s[2026]);
initE_SCGHQA(s[2027]);
initE_SCGHQB(s[2028]);
initE_SCGHQC(s[2029]);
initE_SCGHQD(s[2030]);
initE_SCGHQE(s[2031]);
initE_SCGHQF(s[2032]);
initE_SCGHQG(s[2033]);
initE_SCGHQH(s[2034]);
initE_SCGHQI(s[2035]);
initE_SCGHQJ(s[2036]);
initE_SCGHQK(s[2037]);
initE_SCGHQL(s[2038]);
initE_SCOTVOT1(s[2039]);
initE_SCOTVOT2(s[2040]);
initE_SCOTVOT3(s[2041]);
initE_SCOTVOT4(s[2042]);
initE_SCLFSAT1(s[2043]);
initE_SCLFSAT2(s[2044]);
initE_SCLFSAT7(s[2045]);
initE_SCLFSATO(s[2046]);
initE_SE1(s[2047]);
initE_SE2(s[2048]);
initE_SE3(s[2049]);
initE_SE4(s[2050]);
initE_SE5(s[2051]);
initE_SE6(s[2052]);
initE_SE7(s[2053]);
initE_SE8(s[2054]);
initE_SE9(s[2055]);
initE_SE10(s[2056]);
initE_SCRELPAREI(s[2057]);
initE_SCRELPARCD(s[2058]);
initE_SCRELPARWT(s[2059]);
initE_SCRELPARDS(s[2060]);
initE_SCRELPARRG(s[2061]);
initE_SCRELPARAR(s[2062]);
initE_SCRELPARIR(s[2063]);
initE_SCRELPARKS(s[2064]);
initE_SCPAROUTINT(s[2065]);
initE_SCRELHAPPY(s[2066]);
initE_YPNPAL(s[2067]);
initE_YPSOCWEB(s[2068]);
initE_YPNETCHT(s[2069]);
initE_SEXUOR(s[2070]);
initE_EATLIVU(s[2071]);
initE_FAMSUP(s[2072]);
initE_UPSET(s[2073]);
initE_LATE(s[2074]);
initE_SIBHIT(s[2075]);
initE_SIBSTEAL(s[2076]);
initE_SIBVERAB(s[2077]);
initE_SIBTEASE(s[2078]);
initE_HITSIB(s[2079]);
initE_STEALSIB(s[2080]);
initE_VERABSIB(s[2081]);
initE_TEASESIB(s[2082]);
initE_ARGM(s[2083]);
initE_ARGF(s[2084]);
initE_TLKM(s[2085]);
initE_TLKF(s[2086]);
initE_PARSCH(s[2087]);
initE_PAREVE(s[2088]);
initE_HASSTEP(s[2089]);
initE_STEPREL(s[2090]);
initE_YAJBSRV1(s[2091]);
initE_YAJBSRV2(s[2092]);
initE_YAJBSRV3(s[2093]);
initE_YAJBSRV4(s[2094]);
initE_YAJBSRV5(s[2095]);
initE_YAJBSRV8(s[2096]);
initE_YAJBSRV7(s[2097]);
initE_YAJBSRV96(s[2098]);
initE_FRPBULLI(s[2099]);
initE_FROBULLI(s[2100]);
initE_FRPBULLY(s[2101]);
initE_FROBULLY(s[2102]);
initE_DRGSOL(s[2103]);
initE_DRGMJ(s[2104]);
initE_DRGOTH(s[2105]);
initE_FRDRG(s[2106]);
initE_NCRR1(s[2107]);
initE_NCRRM(s[2108]);
initE_NCRRY4(s[2109]);
initE_NCRR3(s[2110]);
initE_NCRR4(s[2111]);
initE_NCRR5(s[2112]);
initE_NCRR6(s[2113]);
initE_NCRR8(s[2114]);
initE_NCRR9(s[2115]);
initE_NCRR11(s[2116]);
initE_NCRR12(s[2117]);
initE_CDPREAMBLE(s[2118]);
initE_SCWHORUPRO(s[2119]);
initE_SCWHORUEDU(s[2120]);
initE_SCWHORURAC(s[2121]);
initE_SCWHORUPOL(s[2122]);
initE_SCWHORUFAM(s[2123]);
initE_SCWHORUSEX(s[2124]);
initE_SCWHORUAGE(s[2125]);
initE_DELAY1(s[2126]);
initE_DELAY2(s[2127]);
initE_DELAY3(s[2128]);
initE_DELAY4(s[2129]);
initE_DELAY5(s[2130]);
initE_DELAY6(s[2131]);
initE_DELAY7(s[2132]);
initE_DELAY8(s[2133]);
initE_DELAY9(s[2134]);
initE_DELAY10(s[2135]);
initE_SCEVERDRNK(s[2136]);
initE_SCAGE1DRNK(s[2137]);
initE_SCFALCDRNK(s[2138]);
initE_SCALCL7D(s[2139]);
initE_SCNALCL7D(s[2140]);
initE_SCNALCPINT(s[2141]);
initE_SCNALCSHOT(s[2142]);
initE_SCNALCWINE(s[2143]);
initE_SCNALCPOPS(s[2144]);
initE_SCPUNDSTND(s[2145]);
initE_SCPRELY(s[2146]);
initE_SCPOPENUP(s[2147]);
initE_SCPCRITIC(s[2148]);
initE_SCPLETDWN(s[2149]);
initE_SCPANNOY(s[2150]);
initE_SCRELANY(s[2151]);
initE_SCRUNDSTND(s[2152]);
initE_SCRRELY(s[2153]);
initE_SCROPENUP(s[2154]);
initE_SCRCRITIC(s[2155]);
initE_SCRLETDWN(s[2156]);
initE_SCRANNOY(s[2157]);
initE_SCFRENDANY(s[2158]);
initE_SCFUNDSTND(s[2159]);
initE_SCFRELY(s[2160]);
initE_SCFOPENUP(s[2161]);
initE_SCFCRITIC(s[2162]);
initE_SCFLETDWN(s[2163]);
initE_SCFANNOY(s[2164]);
initE_SCSSUP1(s[2165]);
initE_SCSSUPR2R(s[2166]);
initE_MPWEB(s[2167]);
initE_CASIEND(s[2168]);
initE_CONSINTRO(s[2169]);
initE_SCHOOLCNTRY1(s[2170]);
initE_SCHOOLCNTRY2(s[2171]);
initE_SCHOOLCNTRY3(s[2172]);
initE_SCHOOLCNTRY4(s[2173]);
initE_SCHOOLCNTRY5(s[2174]);
initE_EDLINK(s[2175]);
initE_EDLINKCONF(s[2176]);
initE_EDLINKCONFB(s[2177]);
initE_EDLINKKIDE(s[2178]);
initE_EDLINKKIDSWN(s[2179]);
initE_EDLKKIDCONFE(s[2180]);
initE_EDLINKKIDCONFSW(s[2181]);
initE_EDUCSN(s[2182]);
initE_EDUCLINKB1(s[2183]);
initE_EDUCLINKB2(s[2184]);
initE_EDUCLINKB3(s[2185]);
initE_EDUCKIDSN(s[2186]);
initE_SIGNEDUCKIDS1(s[2187]);
initE_SIGNEDUCKIDS2(s[2188]);
initE_HESACONS(s[2189]);
initE_INSTOK(s[2190]);
initE_ANYMORE(s[2191]);
initE_INSTOK2(s[2192]);
initE_ANYMORE2(s[2193]);
initE_INSTOK3(s[2194]);
initE_ANYMORE3(s[2195]);
initE_INSTOK4(s[2196]);
initE_ANYMORE4(s[2197]);
initE_HLTHLINK(s[2198]);
initE_HLTHKIDLINK(s[2199]);
initE_HEALTHSN(s[2200]);
initE_HLTHLINKB1(s[2201]);
initE_HLTHLINKB2(s[2202]);
initE_HLTHLINKB3(s[2203]);
initE_FLAGLINKB1(s[2204]);
initE_FLAGLINKB2(s[2205]);
initE_FLAGLINKB3(s[2206]);
initE_INTSIGNHEALTH(s[2207]);
initE_HEALTHKIDSN(s[2208]);
initE_SIGNHEALTHKIDS1(s[2209]);
initE_SIGNHEALTHKIDS2(s[2210]);
initE_HMRCLINK(s[2211]);
initE_ADVVOUCHER(s[2212]);
initE_VOUCHER(s[2213]);
initE_VOUCHERNI(s[2214]);
initE_CATVOUCHER(s[2215]);
initE_CATGIFTV(s[2216]);
initE_CAPGIFTV(s[2217]);
initE_CHKCOA(s[2218]);
initE_GIVECOA(s[2219]);
initE_EDUCRECD(s[2220]);
initE_EDUCRSGN(s[2221]);
initE_EDUCISGN(s[2222]);
initE_HLTHRECD(s[2223]);
initE_HLTHRSGN(s[2224]);
initE_HLTHISGN(s[2225]);
initE_SCRX_CODE(s[2226]);
initE_SCUX_CODE(s[2227]);
initE_HEDNTO_CODE(s[2228]);
initE_EVENT1(s[2229]);
initE_EVENT1S(s[2230]);
initE_EVENT2(s[2231]);
initE_EVENT2S(s[2232]);
initE_EVENT3(s[2233]);
initE_EVENT3S(s[2234]);
initE_EVENT4(s[2235]);
initE_EVENT4S(s[2236]);
initE_SPORTOTH_CODE(s[2237]);
initE_MARSTAT(s[2238]);
initE_LIVESP(s[2239]);
initE_LIVEWITH(s[2240]);
initE_EMPLOY(s[2241]);
initE_LINGUA(s[2242]);
initE_PS1(s[2243]);
initE_PS2(s[2244]);
initE_PS3(s[2245]);
initE_PS4(s[2246]);
initE_PS5(s[2247]);
initE_PS6(s[2248]);
initE_PS7(s[2249]);
initE_PS8(s[2250]);
initE_PS9(s[2251]);
initE_PS10(s[2252]);
initE_PS11(s[2253]);
initE_PS12(s[2254]);
initE_PS13(s[2255]);
initE_PS14(s[2256]);
initE_PS15(s[2257]);
initE_PS16(s[2258]);
initE_PS17(s[2259]);
initE_PS18(s[2260]);
initE_PS19(s[2261]);
initE_PS20(s[2262]);
initE_PS21(s[2263]);
initE_PS22(s[2264]);
initE_PS23(s[2265]);
initE_PS24(s[2266]);
initE_PS25(s[2267]);
initE_PS26(s[2268]);
initE_PS27(s[2269]);
initE_PS28(s[2270]);
initE_PS29(s[2271]);
initE_PS30(s[2272]);
initE_PS31(s[2273]);
initE_PS32(s[2274]);
initE_PSNUMCH(s[2275]);
initE_DONEPROXY(s[2276]);
initE_PREL(s[2277]);
initE_PREASON(s[2278]);
initE_PRIPN(s[2279]);
initE_PJULK4WK(s[2280]);
initE_PJBPTFT(s[2281]);
initE_PJSPTFT(s[2282]);
initE_PREARN(s[2283]);
initE_PREARNW(s[2284]);
initE_PREARNA(s[2285]);
initE_PBNFT1(s[2286]);
initE_PBNFT2(s[2287]);
initE_PBNFT13(s[2288]);
initE_PBNFT3(s[2289]);
initE_PBNFT4(s[2290]);
initE_PBNFT5(s[2291]);
initE_PBNFT6(s[2292]);
initE_PBNFT7(s[2293]);
initE_PBNFT8(s[2294]);
initE_PBNFT9(s[2295]);
initE_PBNFT10(s[2296]);
initE_PBNFT11(s[2297]);
initE_PBNFT12(s[2298]);
initE_PBNFT96(s[2299]);
initE_NETUSE(s[2300]);
initE_PRFITB(s[2301]);
initE_PRFITBW(s[2302]);
initE_PRFITBA(s[2303]);
initE_IVCOOP(s[2304]);
initE_SUSP(s[2305]);
initE_UNDQUS(s[2306]);
initE_IVPRSNT(s[2307]);
initE_IVINFNCE(s[2308]);
initE_IVAFFCT11(s[2309]);
initE_IVAFFCT12(s[2310]);
initE_IVAFFCT13(s[2311]);
initE_IVAFFCT14(s[2312]);
initE_IVAFFCT15(s[2313]);
initE_IVAFFCT17(s[2314]);
initE_IVAFFCT21(s[2315]);
initE_IVAFFCT22(s[2316]);
initE_IVAFFCT23(s[2317]);
initE_IVAFFCT27(s[2318]);
initE_IVAFFCT30(s[2319]);
initE_IVAFFCT97(s[2320]);
initE_IVLIENG(s[2321]);
initE_IVLITRANS(s[2322]);
initE_IVLIWHO(s[2323]);
initE_IVLIBAL(s[2324]);
initE_HGBIOM(s[2325]);
initE_HGBIOF(s[2326]);
initE_RESPM16(s[2327]);
initE_RESPF16(s[2328]);
initE_HGADOPTM(s[2329]);
initE_HGADOPTF(s[2330]);
initE_HGPART(s[2331]);
initE_INTCONTACT(s[2332]);
initE_DETINC1(s[2333]);
initE_DETINC2(s[2334]);
initE_DETINC3(s[2335]);
initE_DETINC4(s[2336]);
initE_DETINC5(s[2337]);
initE_DETINC6(s[2338]);
initE_HASEMAIL(s[2339]);
initE_EMAILENT(s[2340]);
initE_SOCCONT(s[2341]);
initE_OTHCONT(s[2342]);
initE_RHLAND_CODE(s[2343]);
initE_RPHMOB_CODE(s[2344]);
initE_RPHWRK_CODE(s[2345]);
initE_REMAIL_CODE(s[2346]);
initE_CTCONS(s[2347]);
initE_CTCONSCONF1(s[2348]);
initE_CTCONSCONF2(s[2349]);
initE_CTCONSCONF3(s[2350]);
initE_CTCONSCONF4(s[2351]);
initE_CTCONSCONF5(s[2352]);
initE_CTCONSCONF6(s[2353]);
initE_CTCONSCONF7(s[2354]);
initE_CTCONSCONF8(s[2355]);
initE_CTCONSCONF94(s[2356]);
initE_CTREL(s[2357]);
initE_CTADD1_CODE(s[2358]);
initE_CTADD2_CODE(s[2359]);
initE_CTTOWN_CODE(s[2360]);
initE_CTCNTY_CODE(s[2361]);
initE_CTPCODE_CODE(s[2362]);
initE_CTTEL1_CODE(s[2363]);
initE_CTTEL2_CODE(s[2364]);
initE_CTEMAIL_CODE(s[2365]);
initE_ORIGADD(s[2366]);
initE_INDMODE(s[2367]);
initE_PPSEX(s[2368]);
initE_FNPID(s[2369]);
initE_MNPID(s[2370]);
initE_PN1PID(s[2371]);
initE_PN1PNO(s[2372]);
initE_PN1SEX(s[2373]);
initE_PN2PID(s[2374]);
initE_PN2PNO(s[2375]);
initE_PN2SEX(s[2376]);
initE_PNS1PID(s[2377]);
initE_PNS1PNO(s[2378]);
initE_PNS1SEX(s[2379]);
initE_PNS2PID(s[2380]);
initE_PNS2PNO(s[2381]);
initE_PNS2SEX(s[2382]);
initE_GRFPID(s[2383]);
initE_GRMPID(s[2384]);
initE_J2PAY_IF(s[2385]);
initE_FIMNGRS_TC(s[2386]);
initE_FIMNGRS_DV(s[2387]);
initE_FIMNLABGRS_TC(s[2388]);
initE_FIMNLABGRS_DV(s[2389]);
initE_FIMNLABNET_TC(s[2390]);
initE_FIMNLABNET_DV(s[2391]);
initE_FIYRINVINC_TC(s[2392]);
initE_FIYRINVINC_DV(s[2393]);
initE_FIBENOTHR_TC(s[2394]);
initE_FIBENOTHR_DV(s[2395]);
initE_PAYGL(s[2396]);
initE_PAYNL(s[2397]);
initE_JSPRF(s[2398]);
initE_PAYGU_DV(s[2399]);
initE_PAYG_DV(s[2400]);
initE_PAYNU_DV(s[2401]);
initE_PAYN_DV(s[2402]);
initE_SEEARNGRS_DV(s[2403]);
initE_SEEARNNET_DV(s[2404]);
initE_J2PAY_DV(s[2405]);
initE_J2PAYNET_DV(s[2406]);
initE_FF_EVERINT(s[2407]);
initE_FF_JBSTAT(s[2408]);
initE_FF_EMPLW(s[2409]);
initE_FF_IVLOLW(s[2410]);
initE_FF_TEL(s[2411]);
initE_FF_JBSEMP(s[2412]);
initE_FF_JBMNGR(s[2413]);
initE_FF_JBSIZE(s[2414]);
initE_FF_OPRLG(s[2415]);
initE_FF_OPRLG0(s[2416]);
initE_FF_OPRLG0NI(s[2417]);
initE_FF_UKBORN(s[2418]);
initE_FF_YR2UK4(s[2419]);
initE_FF_BENTYPE01(s[2420]);
initE_FF_BENTYPE02(s[2421]);
initE_FF_BENTYPE03(s[2422]);
initE_FF_BENTYPE04(s[2423]);
initE_FF_BENTYPE05(s[2424]);
initE_FF_BENTYPE06(s[2425]);
initE_FF_BENTYPE07(s[2426]);
initE_FF_BENTYPE08(s[2427]);
initE_FF_BENTYPE09(s[2428]);
initE_FF_BENTYPE10(s[2429]);
initE_FF_BENTYPE11(s[2430]);
initE_FF_BENTYPE12(s[2431]);
initE_FF_BENTYPE13(s[2432]);
initE_FF_BENTYPE14(s[2433]);
initE_FF_BENTYPE15(s[2434]);
initE_FF_BENTYPE16(s[2435]);
initE_FF_BENTYPE17(s[2436]);
initE_FF_BENTYPE18(s[2437]);
initE_FF_BENTYPE19(s[2438]);
initE_FF_BENTYPE20(s[2439]);
initE_FF_BENTYPE21(s[2440]);
initE_FF_BENTYPE22(s[2441]);
initE_FF_BENTYPE23(s[2442]);
initE_FF_BENTYPE24(s[2443]);
initE_FF_BENTYPE25(s[2444]);
initE_FF_BENTYPE26(s[2445]);
initE_FF_BENTYPE27(s[2446]);
initE_FF_BENTYPE28(s[2447]);
initE_FF_BENTYPE29(s[2448]);
initE_FF_BENTYPE30(s[2449]);
initE_FF_BENTYPE31(s[2450]);
initE_FF_BENTYPE32(s[2451]);
initE_FF_BENTYPE33(s[2452]);
initE_FF_BENTYPE34(s[2453]);
initE_FF_BENTYPE35(s[2454]);
initE_FF_BENTYPE36(s[2455]);
initE_FF_BENTYPE37(s[2456]);
initE_FF_BENTYPE38(s[2457]);
initE_FF_BENTYPE39(s[2458]);
initE_FF_BENTYPE40(s[2459]);
initE_FF_BENTYPE41(s[2460]);
initE_FF_IVINTLANG(s[2461]);
initE_SEX_DV(s[2462]);
initE_AGE_DV(s[2463]);
initE_INTDATD_DV(s[2464]);
initE_INTDATM_DV(s[2465]);
initE_INTDATY_DV(s[2466]);
initE_DOBY_DV(s[2467]);
initE_PENSIONER_DV(s[2468]);
initE_NPN_DV(s[2469]);
initE_NPNS_DV(s[2470]);
initE_NGRP_DV(s[2471]);
initE_NNSIB_DV(s[2472]);
initE_NNSSIB_DV(s[2473]);
initE_NPENSIONER_DV(s[2474]);
initE_JBSOCGR_DV(s[2475]);
initE_SCDASSAT_DV(s[2476]);
initE_SCDASCOH_DV(s[2477]);
initE_ETHN_DV(s[2478]);
initE_FIMNMISC_DV(s[2479]);
initE_FIMNPRBEN_DV(s[2480]);
initE_FIMNINVNET_DV(s[2481]);
initE_FIMNPEN_DV(s[2482]);
initE_FIMNSBEN_DV(s[2483]);
initE_FIMNNET_DV(s[2484]);
initE_COUNTRY(s[2485]);
initE_GOR_DV(s[2486]);
initE_URBAN_DV(s[2487]);
initE_HHRESP_DV(s[2488]);
initE_XTRA5MIN_DV(s[2489]);
initE_XTRA5MINOSM_DV(s[2490]);
initE_AGEGR5_DV(s[2491]);
initE_AGEGR10_DV(s[2492]);
initE_AGEGR13_DV(s[2493]);
initE_LIVESP_DV(s[2494]);
initE_COHAB_DV(s[2495]);
initE_SINGLE_DV(s[2496]);
initE_MASTAT_DV(s[2497]);
initE_HHTYPE_DV(s[2498]);
initE_BUNO_DV(s[2499]);
initE_DEPCHL_DV(s[2500]);
initE_NCHILD_DV(s[2501]);
initE_NDEPCHL_DV(s[2502]);
initE_RESPM16_DV(s[2503]);
initE_RESPF16_DV(s[2504]);
initE_RACH16_DV(s[2505]);
initE_HRPID(s[2506]);
initE_HRPNO(s[2507]);
initE_PPID(s[2508]);
initE_PPNO(s[2509]);
initE_SPPID(s[2510]);
initE_SPPNO(s[2511]);
initE_FNPNO(s[2512]);
initE_FNSPID(s[2513]);
initE_FNSPNO(s[2514]);
initE_MNPNO(s[2515]);
initE_MNSPID(s[2516]);
initE_MNSPNO(s[2517]);
initE_GRFPNO(s[2518]);
initE_GRMPNO(s[2519]);
initE_QFHIGH_DV(s[2520]);
initE_NQFHIGH_DV(s[2521]);
initE_QFHIGHFL_DV(s[2522]);
initE_HIQUAL_DV(s[2523]);
initE_NHIQUAL_DV(s[2524]);
initE_NNMPSP_DV(s[2525]);
initE_NMPSP_DV(s[2526]);
initE_NUNMPSP_DV(s[2527]);
initE_JBFT_DV(s[2528]);
initE_JBSOC00_CC(s[2529]);
initE_JBSOC10_CC(s[2530]);
initE_JBSIC07_CC(s[2531]);
initE_JBIINDB_DV(s[2532]);
initE_JBES2000(s[2533]);
initE_JBSEG_DV(s[2534]);
initE_JBRGSC_DV(s[2535]);
initE_JBNSSEC_DV(s[2536]);
initE_JBNSSEC8_DV(s[2537]);
initE_JBNSSEC5_DV(s[2538]);
initE_JBNSSEC3_DV(s[2539]);
initE_JBISCO88_CC(s[2540]);
initE_JLSOC00_CC(s[2541]);
initE_JLSOC10_CC(s[2542]);
initE_JLSIC07_CC(s[2543]);
initE_JLIINDB_DV(s[2544]);
initE_JLES2000(s[2545]);
initE_JLSEG_DV(s[2546]);
initE_JLRGSC_DV(s[2547]);
initE_JLNSSEC_DV(s[2548]);
initE_JLNSSEC8_DV(s[2549]);
initE_JLNSSEC5_DV(s[2550]);
initE_JLNSSEC3_DV(s[2551]);
initE_JLISCO88_CC(s[2552]);
initE_PASOC90_CC(s[2553]);
initE_PASOC00_CC(s[2554]);
initE_PASOC10_CC(s[2555]);
initE_PANSSEC5_DV(s[2556]);
initE_MASOC90_CC(s[2557]);
initE_MASOC00_CC(s[2558]);
initE_MASOC10_CC(s[2559]);
initE_MANSSEC5_DV(s[2560]);
initE_J1SOC90_CC(s[2561]);
initE_J1SOC00_CC(s[2562]);
initE_J1SOC10_CC(s[2563]);
initE_J1NSSEC5_DV(s[2564]);
initE_J2SOC90_CC(s[2565]);
initE_J2SOC00_CC(s[2566]);
initE_J2SOC10_CC(s[2567]);
initE_J2NSSEC5_DV(s[2568]);
initE_YASOC90_CC(s[2569]);
initE_YASOC00_CC(s[2570]);
initE_YASOC10_CC(s[2571]);
initE_YANSSEC5_DV(s[2572]);
initE_SCGHQ1_DV(s[2573]);
initE_SCGHQ2_DV(s[2574]);
initE_SF12PCS_DV(s[2575]);
initE_SF12MCS_DV(s[2576]);
initE_PSDQA_DV(s[2577]);
initE_PSDQB_DV(s[2578]);
initE_PSDQC_DV(s[2579]);
initE_SCFLAG_DV(s[2580]);
initE_ATTACKED_DV(s[2581]);
initE_AVOIDED_DV(s[2582]);
initE_INSULTED_DV(s[2583]);
initE_UNSAFE_DV(s[2584]);
initE_PAYU_DV(s[2585]);
initE_PAYGU_IF(s[2586]);
initE_PAYNU_IF(s[2587]);
initE_SEEARNGRS_IF(s[2588]);
initE_FIYRINVINC_IF(s[2589]);
initE_FIBENOTHR_IF(s[2590]);
initE_FIMNLABGRS_IF(s[2591]);
initE_FIMNGRS_IF(s[2592]);
initE_INDIN91_LW(s[2593]);
initE_INDIN01_LW(s[2594]);
initE_INDPXUS_LW(s[2595]);
initE_INDINUS_LW(s[2596]);
initE_INDSCUS_LW(s[2597]);
initE_IND5MUS_LW(s[2598]);
initE_INDPXUB_LW(s[2599]);
initE_INDINUB_LW(s[2600]);
initE_INDSCUB_LW(s[2601]);
initE_INDNS91_LW(s[2602]);
initE_INDBD91_LW(s[2603]);
initE_INDNSUB_LW(s[2604]);
initE_INDBDUB_LW(s[2605]);
initE_INDPXUB_XW(s[2606]);
initE_INDINUB_XW(s[2607]);
initE_INDSCUB_XW(s[2608]);
initE_IND5MUS_XW(s[2609]);
initE_RACEL_DV(s[2610]);
}
}
