/**
 * Source code generated by uk.ac.leeds.ccg.andyt.generic.data.us.process.US_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.generic.data.us.data.hhold;
public class US_Wave3_HHOLD_Record extends US_Wave3Or4Or5_HHOLD_Record {
protected byte C_ADCTS;
protected byte C_ADOPTCH01;
protected byte C_ADOPTCH02;
protected byte C_ADOPTCH03;
protected byte C_ADOPTCH04;
protected byte C_ADOPTCH05;
protected boolean C_ADOPTCH06;
protected boolean C_ADOPTCH07;
protected boolean C_ADOPTCH08;
protected boolean C_ADOPTCH09;
protected boolean C_ADOPTCH10;
protected boolean C_ADOPTCH11;
protected boolean C_ADOPTCH12;
protected boolean C_ADOPTCH13;
protected boolean C_ADOPTCH14;
protected boolean C_ADOPTCH15;
protected boolean C_ADOPTCH16;
protected byte C_ADSTATUS;
protected byte C_AEDROF1;
protected byte C_AEDROF2;
protected boolean C_AEDROF3;
protected double C_AEPUDA1;
protected byte C_AEPUDA2;
protected boolean C_AEPUDA3;
protected byte C_AEPUWK1;
protected boolean C_AEPUWK2;
protected boolean C_AEPUWK3;
protected byte C_AGEGR10_DV;
protected byte C_AGEGR13_DV;
protected byte C_AGEGR5_DV;
protected byte C_AGERET;
protected byte C_AGE_DV;
protected byte C_AHVWELL;
protected byte C_AIDEFT;
protected byte C_AIDHH;
protected byte C_AIDHRS;
protected byte C_AIDHU1;
protected byte C_AIDHU2;
protected byte C_AIDHUA1;
protected byte C_AIDHUA10;
protected byte C_AIDHUA11;
protected byte C_AIDHUA12;
protected byte C_AIDHUA13;
protected byte C_AIDHUA14;
protected byte C_AIDHUA15;
protected byte C_AIDHUA16;
protected byte C_AIDHUA2;
protected byte C_AIDHUA3;
protected byte C_AIDHUA4;
protected byte C_AIDHUA5;
protected byte C_AIDHUA6;
protected byte C_AIDHUA7;
protected byte C_AIDHUA8;
protected byte C_AIDHUA9;
protected byte C_AIDXHH;
protected byte C_ALLCH01;
protected byte C_ALLCH02;
protected byte C_ALLCH03;
protected byte C_ALLCH04;
protected byte C_ALLCH05;
protected byte C_ALLCH06;
protected byte C_ALLCH07;
protected byte C_ALLCH08;
protected boolean C_ALLCH09;
protected boolean C_ALLCH10;
protected boolean C_ALLCH11;
protected boolean C_ALLCH12;
protected boolean C_ALLCH13;
protected boolean C_ALLCH14;
protected boolean C_ALLCH15;
protected boolean C_ALLCH16;
protected byte C_APVOCIMP;
protected byte C_AREA;
protected byte C_ARGF;
protected byte C_ARGM;
protected byte C_ATTACKED1;
protected byte C_ATTACKED10;
protected byte C_ATTACKED11;
protected byte C_ATTACKED2;
protected byte C_ATTACKED3;
protected byte C_ATTACKED4;
protected byte C_ATTACKED5;
protected byte C_ATTACKED6;
protected byte C_ATTACKED7;
protected byte C_ATTACKED8;
protected byte C_ATTACKED9;
protected byte C_ATTACKED96;
protected byte C_ATTACKED97;
protected byte C_ATTACKEDO_CODE;
protected byte C_ATTACKED_DV;
protected byte C_AVOIDANCE1;
protected byte C_AVOIDANCE10;
protected byte C_AVOIDANCE11;
protected byte C_AVOIDANCE2;
protected byte C_AVOIDANCE3;
protected byte C_AVOIDANCE4;
protected byte C_AVOIDANCE5;
protected byte C_AVOIDANCE6;
protected byte C_AVOIDANCE7;
protected byte C_AVOIDANCE8;
protected byte C_AVOIDANCE9;
protected byte C_AVOIDANCE96;
protected byte C_AVOIDANCE97;
protected byte C_AVOIDANCEO_CODE;
protected byte C_AVOIDED_DV;
protected byte C_BASNSA;
protected double C_BASRATE;
protected byte C_BASREST;
protected byte C_BENCB;
protected byte C_BENCTC;
protected byte C_BENDIS1;
protected byte C_BENDIS10;
protected byte C_BENDIS12;
protected byte C_BENDIS13;
protected byte C_BENDIS14;
protected byte C_BENDIS15;
protected byte C_BENDIS16;
protected byte C_BENDIS2;
protected byte C_BENDIS3;
protected byte C_BENDIS4;
protected byte C_BENDIS5;
protected byte C_BENDIS6;
protected byte C_BENDIS7;
protected byte C_BENDIS8;
protected byte C_BENDIS9;
protected byte C_BENDIS96;
protected byte C_BENDIS97;
protected byte C_BENFAM1;
protected byte C_BENFAM10;
protected byte C_BENFAM2;
protected byte C_BENFAM3;
protected byte C_BENFAM4;
protected byte C_BENFAM5;
protected byte C_BENFAM6;
protected byte C_BENFAM7;
protected byte C_BENFAM8;
protected byte C_BENFAM9;
protected byte C_BENFAM96;
protected byte C_BENHOU1;
protected byte C_BENHOU2;
protected byte C_BENHOU3;
protected byte C_BENHOU4;
protected byte C_BENHOU5;
protected byte C_BENHOU6;
protected byte C_BENHOU7;
protected byte C_BENHOU8;
protected byte C_BENHOU9;
protected byte C_BENHOU96;
protected byte C_BENPEN1;
protected byte C_BENPEN10;
protected byte C_BENPEN11;
protected byte C_BENPEN12;
protected byte C_BENPEN13;
protected byte C_BENPEN2;
protected byte C_BENPEN3;
protected byte C_BENPEN4;
protected byte C_BENPEN5;
protected byte C_BENPEN6;
protected byte C_BENPEN7;
protected byte C_BENPEN8;
protected byte C_BENPEN9;
protected byte C_BENPEN96;
protected byte C_BENSTA1;
protected byte C_BENSTA10;
protected byte C_BENSTA11;
protected byte C_BENSTA12;
protected byte C_BENSTA13;
protected byte C_BENSTA2;
protected byte C_BENSTA3;
protected byte C_BENSTA4;
protected byte C_BENSTA5;
protected byte C_BENSTA6;
protected byte C_BENSTA7;
protected byte C_BENSTA9;
protected byte C_BENSTA96;
protected byte C_BENSTA97;
protected byte C_BENTAX1;
protected byte C_BENTAX10;
protected byte C_BENTAX2;
protected byte C_BENTAX3;
protected byte C_BENTAX4;
protected byte C_BENTAX5;
protected byte C_BENTAX6;
protected byte C_BENTAX7;
protected byte C_BENTAX8;
protected byte C_BENTAX9;
protected byte C_BENTAX96;
protected byte C_BENUNEMP1;
protected byte C_BENUNEMP2;
protected byte C_BENUNEMP3;
protected byte C_BENUNEMP4;
protected byte C_BENUNEMP5;
protected byte C_BENUNEMP6;
protected byte C_BENUNEMP7;
protected byte C_BENUNEMP96;
protected byte C_BIG5A_DV;
protected byte C_BIG5C_DV;
protected byte C_BIG5E_DV;
protected byte C_BIG5N_DV;
protected byte C_BIG5O_DV;
protected short C_BIRTHY;
protected byte C_BRITID;
protected byte C_BTYPE1;
protected byte C_BTYPE10;
protected byte C_BTYPE11;
protected byte C_BTYPE12;
protected byte C_BTYPE13;
protected byte C_BTYPE14;
protected byte C_BTYPE2;
protected byte C_BTYPE3;
protected byte C_BTYPE4;
protected byte C_BTYPE5;
protected byte C_BTYPE6;
protected byte C_BTYPE7;
protected byte C_BTYPE8;
protected byte C_BTYPE9;
protected byte C_BTYPE96;
protected byte C_BUNO_DV;
protected byte C_CAIDU1;
protected byte C_CAIDU2;
protected byte C_CAIDU3;
protected byte C_CAIDU4;
protected byte C_CAIDU5;
protected byte C_CAIDU6;
protected byte C_CAIDU7;
protected byte C_CAIDU8;
protected byte C_CAIDU96;
protected byte C_CAIDU97;
protected byte C_CARUSE;
protected byte C_CASIEND;
protected byte C_CCARE;
protected byte C_CCWORK;
protected byte C_CGIVNA1_DV;
protected byte C_CGIVNS1_DV;
protected byte C_CGIVS71_DV;
protected byte C_CGIVVF1_DV;
protected byte C_CGIVWRD1_DV;
protected byte C_CGIVWRI1_DV;
protected byte C_CGNA_DV;
protected byte C_CGNS1A_DV;
protected byte C_CGNS1B_DV;
protected short C_CGNS1SC10_DV;
protected byte C_CGNS1SC6_DV;
protected byte C_CGNS2A_DV;
protected byte C_CGNS2B_DV;
protected short C_CGNS2SC10_DV;
protected byte C_CGNS2SC6_DV;
protected byte C_CGS7CA_DV;
protected byte C_CGS7CS_DV;
protected byte C_CGS7N_DV;
protected byte C_CGSRMEM2_DV;
protected byte C_CGSRMEM_DV;
protected byte C_CGVFC_DV;
protected byte C_CGVFW_DV;
protected byte C_CGWRD_DV;
protected byte C_CGWRI1_DV;
protected byte C_CGWRI2_DV;
protected byte C_CGWRI3_DV;
protected byte C_CGWRI4_DV;
protected byte C_CGWRI_DV;
protected short C_CH1BY4;
protected byte C_CHAID1;
protected byte C_CHAID2;
protected byte C_CHAID3;
protected byte C_CHAID4;
protected byte C_CHAID5;
protected byte C_CHAID6;
protected byte C_CHAID7;
protected byte C_CHAID8;
protected byte C_CHAID96;
protected byte C_CHAID97;
protected byte C_CHCON;
protected byte C_CHFAR;
protected byte C_CHILDPNO;
protected boolean C_CHKRESP;
protected byte C_CHSEE;
protected int C_CINDTIME;
protected byte C_CITZN1;
protected byte C_CITZN2;
protected byte C_CITZN3;
protected byte C_CIVICDUTY;
protected byte C_CJBATT;
protected byte C_CJOB;
protected byte C_CLANGAB;
protected byte C_CLOSENUM;
protected byte C_CMCORD;
protected byte C_CMCORDALL;
protected double C_CMCORDAM;
protected byte C_CMCORDPER;
protected short C_CMCORDRCAM;
protected byte C_CMCORDRCPR;
protected byte C_CMCORDREC;
protected byte C_CMCORDTM;
protected byte C_CMCSAACT;
protected byte C_CMCSAALL;
protected short C_CMCSAAM;
protected byte C_CMCSANIL1;
protected byte C_CMCSANIL2;
protected byte C_CMCSANIL3;
protected byte C_CMCSANIL4;
protected byte C_CMCSANIL5;
protected byte C_CMCSANIL97;
protected byte C_CMCSAPER;
protected byte C_CMCSAPR;
protected byte C_CMKNDEVR1;
protected byte C_CMKNDEVR2;
protected byte C_CMKNDEVR3;
protected byte C_CMKNDEVR4;
protected byte C_CMKNDEVR96;
protected byte C_CMKNDEVR97;
protected byte C_CMLSTAT1;
protected byte C_CMLSTAT2;
protected byte C_CMNIL1;
protected byte C_CMNIL2;
protected byte C_CMNIL3;
protected byte C_CMNIL4;
protected byte C_CMNIL5;
protected byte C_CMNIL6;
protected byte C_CMNIL7;
protected byte C_CMNIL8;
protected byte C_CMNIL9;
protected byte C_CMNIL97;
protected byte C_CMOTHPAY1;
protected byte C_CMOTHPAY10;
protected byte C_CMOTHPAY11;
protected byte C_CMOTHPAY2;
protected byte C_CMOTHPAY3;
protected byte C_CMOTHPAY4;
protected byte C_CMOTHPAY5;
protected byte C_CMOTHPAY6;
protected byte C_CMOTHPAY7;
protected byte C_CMOTHPAY8;
protected byte C_CMOTHPAY9;
protected byte C_CMOTHPAY96;
protected byte C_CMOTHPAY97;
protected byte C_CMROUTE;
protected byte C_CMSAMEA;
protected byte C_CMSAMEB;
protected byte C_CMSAMEC;
protected byte C_CMVOL;
protected byte C_CMVOLALL;
protected double C_CMVOLAM;
protected byte C_CMVOLPER;
protected short C_CMVOLRCAM;
protected byte C_CMVOLRCPR;
protected byte C_CMVOLREC;
protected byte C_CMVOLTM;
protected byte C_COGDIST;
protected byte C_COGEND;
protected byte C_COH1BM;
protected short C_COH1BY;
protected byte C_COH1EM;
protected short C_COH1EY;
protected byte C_COH1MR;
protected byte C_COHAB;
protected byte C_COHABN;
protected boolean C_COHAB_DV;
protected byte C_COLBENS1;
protected byte C_COLBENS2;
protected byte C_COLBENS3;
protected byte C_COLBENS4;
protected byte C_COMIMMLS11;
protected byte C_COMIMMLS110;
protected byte C_COMIMMLS12;
protected byte C_COMIMMLS13;
protected byte C_COMIMMLS14;
protected byte C_COMIMMLS15;
protected byte C_COMIMMLS16;
protected byte C_COMIMMLS17;
protected byte C_COMIMMLS18;
protected byte C_COMIMMLS19;
protected byte C_COMIMMLS196;
protected byte C_COMIMMLS21;
protected byte C_COMIMMLS210;
protected byte C_COMIMMLS22;
protected byte C_COMIMMLS23;
protected byte C_COMIMMLS24;
protected byte C_COMIMMLS25;
protected byte C_COMIMMLS26;
protected byte C_COMIMMLS27;
protected byte C_COMIMMLS28;
protected byte C_COMIMMLS29;
protected byte C_COMIMMLS296;
protected byte C_COMIMMLS31;
protected byte C_COMIMMLS310;
protected byte C_COMIMMLS32;
protected byte C_COMIMMLS33;
protected byte C_COMIMMLS34;
protected byte C_COMIMMLS35;
protected byte C_COMIMMLS36;
protected byte C_COMIMMLS37;
protected byte C_COMIMMLS38;
protected byte C_COMIMMLS39;
protected byte C_COMIMMLS396;
protected byte C_COMIMMLS41;
protected byte C_COMIMMLS410;
protected byte C_COMIMMLS42;
protected byte C_COMIMMLS43;
protected byte C_COMIMMLS44;
protected byte C_COMIMMLS45;
protected byte C_COMIMMLS46;
protected byte C_COMIMMLS47;
protected byte C_COMIMMLS48;
protected byte C_COMIMMLS49;
protected byte C_COMIMMLS496;
protected byte C_CONTFT;
protected byte C_CORDRECPER;
protected byte C_COUNTRY;
protected byte C_CRDARK;
protected byte C_CRWORA;
protected byte C_CRWORB;
protected byte C_CSACALC;
protected double C_CSACALCAM;
protected byte C_CSAPAYTO;
protected byte C_CSARECPER;
protected byte C_CSTAT;
protected byte C_CTADD1_CODE;
protected byte C_CTADD2_CODE;
protected byte C_CTCNTY_CODE;
protected byte C_CTEMAIL_CODE;
protected byte C_CTPCODE_CODE;
protected byte C_CTTEL1_CODE;
protected byte C_CTTEL2_CODE;
protected byte C_CTTOWN_CODE;
protected byte C_CUDDLEKID;
protected byte C_CURRJOB1;
protected byte C_CURRJOB2;
protected byte C_CURRJOB3;
protected byte C_CURRJOB4;
protected byte C_CURRJOB5;
protected byte C_CURRJOB6;
protected byte C_CURRJOB7;
protected boolean C_CURRJOB8;
protected byte C_CURRJOB9;
protected byte C_CURRPART1;
protected byte C_CURRPART2;
protected boolean C_CURRPART3;
protected byte C_CURRSTAT1;
protected byte C_CURRSTAT2;
protected byte C_CURRSTAT3;
protected byte C_CURRSTAT4;
protected byte C_CURRSTAT5;
protected byte C_CURRSTAT6;
protected byte C_CURRSTAT7;
protected byte C_CURRSTAT8;
protected boolean C_CURRSTAT9;
protected byte C_DCSATM;
protected byte C_DELAYLS11;
protected byte C_DELAYLS110;
protected byte C_DELAYLS12;
protected byte C_DELAYLS13;
protected byte C_DELAYLS14;
protected byte C_DELAYLS15;
protected byte C_DELAYLS16;
protected byte C_DELAYLS17;
protected byte C_DELAYLS18;
protected byte C_DELAYLS19;
protected byte C_DELAYLS196;
protected byte C_DELAYLS21;
protected byte C_DELAYLS210;
protected byte C_DELAYLS22;
protected byte C_DELAYLS23;
protected byte C_DELAYLS24;
protected byte C_DELAYLS25;
protected byte C_DELAYLS26;
protected byte C_DELAYLS27;
protected byte C_DELAYLS28;
protected byte C_DELAYLS29;
protected byte C_DELAYLS296;
protected byte C_DELAYLS31;
protected byte C_DELAYLS310;
protected byte C_DELAYLS32;
protected byte C_DELAYLS33;
protected byte C_DELAYLS34;
protected byte C_DELAYLS35;
protected byte C_DELAYLS36;
protected byte C_DELAYLS37;
protected byte C_DELAYLS38;
protected byte C_DELAYLS39;
protected byte C_DELAYLS396;
protected byte C_DELAYLS41;
protected byte C_DELAYLS410;
protected byte C_DELAYLS42;
protected byte C_DELAYLS43;
protected byte C_DELAYLS44;
protected byte C_DELAYLS45;
protected byte C_DELAYLS46;
protected byte C_DELAYLS47;
protected byte C_DELAYLS48;
protected byte C_DELAYLS49;
protected byte C_DELAYLS496;
protected byte C_DELAYSTOP1;
protected byte C_DELAYSTOP2;
protected byte C_DELAYSTOP3;
protected byte C_DELAYSTOP4;
protected byte C_DELAYSTOP5;
protected byte C_DELAYSTOP6;
protected byte C_DELAYSTOP7;
protected byte C_DELAYSTOP8;
protected byte C_DELAYSTOP97;
protected byte C_DEMORIENT;
protected boolean C_DEPCHL_DV;
protected byte C_DINNER;
protected byte C_DISDIF1;
protected byte C_DISDIF10;
protected byte C_DISDIF11;
protected byte C_DISDIF12;
protected byte C_DISDIF2;
protected byte C_DISDIF3;
protected byte C_DISDIF4;
protected byte C_DISDIF5;
protected byte C_DISDIF6;
protected byte C_DISDIF7;
protected byte C_DISDIF8;
protected byte C_DISDIF9;
protected byte C_DISDIF96;
protected byte C_DISEFFECTS1;
protected byte C_DISEFFECTS2;
protected byte C_DISEFFECTS3;
protected byte C_DISEFFECTS4;
protected byte C_DISEFFECTS5;
protected byte C_DIVCHK1;
protected byte C_DIVCHK2;
protected byte C_DIVFIN1;
protected boolean C_DIVFIN2;
protected byte C_DKLM;
protected byte C_DMEMCONT11;
protected byte C_DMEMCONT12;
protected byte C_DMEMCONT13;
protected byte C_DMEMCONT21;
protected byte C_DMEMCONT210;
protected byte C_DMEMCONT211;
protected byte C_DMEMCONT212;
protected byte C_DMEMCONT213;
protected byte C_DMEMCONT214;
protected byte C_DMEMCONT215;
protected byte C_DMEMCONT216;
protected byte C_DMEMCONT22;
protected byte C_DMEMCONT23;
protected byte C_DMEMCONT24;
protected byte C_DMEMCONT25;
protected byte C_DMEMCONT26;
protected byte C_DMEMCONT27;
protected byte C_DMEMCONT28;
protected byte C_DMEMCONT29;
protected byte C_DMEMCONT3;
protected short C_DOBY_DV;
protected byte C_DRGMJ;
protected byte C_DRGOTH;
protected byte C_DRGSOL;
protected byte C_DRIVE;
protected byte C_DRNK4W;
protected byte C_DVAGE;
protected byte C_DVM1;
protected boolean C_DVM2;
protected short C_DVY41;
protected boolean C_DVY42;
protected byte C_EATLIVU;
protected byte C_EDASP;
protected byte C_EDTYPE;
protected byte C_EDUCATION;
protected byte C_EED12;
protected byte C_EMPCHK;
protected byte C_EMPLOY;
protected byte C_EMPSTENDD;
protected byte C_EMPSTENDM;
protected short C_EMPSTENDY4;
protected byte C_ENDMNTH1;
protected byte C_ENDMNTH2;
protected byte C_ENDMNTH3;
protected byte C_EPROSH;
protected byte C_ETHN_DV;
protected byte C_EVRALC;
protected byte C_EVRSMO;
protected byte C_EXPREAM;
protected byte C_EXSAME;
protected byte C_EXTNSA;
protected double C_EXTRATE;
protected byte C_EXTREST;
protected byte C_FAMILY;
protected byte C_FAMSUP;
protected byte C_FARKID;
protected byte C_FATHER;
protected byte C_FEDLIK;
protected byte C_FEDNT;
protected byte C_FEDNTO_CODE;
protected byte C_FEEND;
protected byte C_FENOW;
protected byte C_FFBRFEDLW;
protected byte C_FF_BENTYPE01;
protected byte C_FF_BENTYPE02;
protected byte C_FF_BENTYPE03;
protected byte C_FF_BENTYPE04;
protected byte C_FF_BENTYPE05;
protected byte C_FF_BENTYPE06;
protected byte C_FF_BENTYPE07;
protected byte C_FF_BENTYPE08;
protected byte C_FF_BENTYPE09;
protected byte C_FF_BENTYPE10;
protected byte C_FF_BENTYPE11;
protected byte C_FF_BENTYPE12;
protected byte C_FF_BENTYPE13;
protected byte C_FF_BENTYPE14;
protected byte C_FF_BENTYPE15;
protected byte C_FF_BENTYPE16;
protected byte C_FF_BENTYPE17;
protected byte C_FF_BENTYPE18;
protected byte C_FF_BENTYPE19;
protected byte C_FF_BENTYPE20;
protected byte C_FF_BENTYPE21;
protected byte C_FF_BENTYPE22;
protected byte C_FF_BENTYPE23;
protected byte C_FF_BENTYPE24;
protected byte C_FF_BENTYPE25;
protected byte C_FF_BENTYPE26;
protected byte C_FF_BENTYPE27;
protected byte C_FF_BENTYPE28;
protected byte C_FF_BENTYPE29;
protected byte C_FF_BENTYPE30;
protected byte C_FF_BENTYPE31;
protected byte C_FF_BENTYPE32;
protected byte C_FF_BENTYPE33;
protected byte C_FF_BENTYPE34;
protected byte C_FF_BENTYPE35;
protected byte C_FF_BENTYPE36;
protected byte C_FF_BENTYPE37;
protected byte C_FF_BENTYPE38;
protected byte C_FF_BENTYPE39;
protected byte C_FF_EMPLW;
protected byte C_FF_EVERINT;
protected byte C_FF_IVINTLANG;
protected byte C_FF_IVLOLW;
protected byte C_FF_JBMNGR;
protected byte C_FF_JBSEMP;
protected byte C_FF_JBSIZE;
protected byte C_FF_JBSTAT;
protected byte C_FF_OPRLG;
protected byte C_FF_OPRLG0;
protected byte C_FF_OPRLG0NI;
protected byte C_FF_TEL;
protected byte C_FF_UKBORN;
protected short C_FF_YR2UK4;
protected double C_FIBENOTHR_DV;
protected double C_FIBENOTHR_IF;
protected boolean C_FIBENOTHR_TC;
protected double C_FIMNGRS_DV;
protected double C_FIMNGRS_IF;
protected boolean C_FIMNGRS_TC;
protected double C_FIMNINVNET_DV;
protected double C_FIMNLABGRS_DV;
protected double C_FIMNLABGRS_IF;
protected boolean C_FIMNLABGRS_TC;
protected double C_FIMNLABNET_DV;
protected boolean C_FIMNLABNET_TC;
protected double C_FIMNMISC_DV;
protected double C_FIMNNET_DV;
protected double C_FIMNPEN_DV;
protected double C_FIMNPRBEN_DV;
protected double C_FIMNSBEN_DV;
protected byte C_FINFUT;
protected byte C_FINNOW;
protected byte C_FIVEALCDR;
protected byte C_FIYRDB1;
protected byte C_FIYRDB2;
protected byte C_FIYRDB3;
protected byte C_FIYRDB4;
protected byte C_FIYRDB5;
protected byte C_FIYRDB6;
protected int C_FIYRDIA;
protected double C_FIYRINVINC_DV;
protected byte C_FIYRINVINC_IF;
protected boolean C_FIYRINVINC_TC;
protected int C_FNPID;
protected byte C_FNPNO;
protected int C_FNSPID;
protected byte C_FNSPNO;
protected byte C_FRDRG;
protected byte C_FROBULLI;
protected byte C_FROBULLY;
protected byte C_FRPBULLI;
protected byte C_FRPBULLY;
protected byte C_FT2ENDM1;
protected byte C_FT2ENDM2;
protected byte C_FT2ENDM3;
protected byte C_FT2ENDM4;
protected short C_FT2ENDY41;
protected short C_FT2ENDY42;
protected short C_FT2ENDY43;
protected short C_FT2ENDY44;
protected byte C_FTEDANY;
protected byte C_FTEDEND1;
protected byte C_FTEDEND2;
protected byte C_FTEDEND3;
protected byte C_FTEDEND4;
protected byte C_FTEDMOR1;
protected byte C_FTEDMOR2;
protected byte C_FTEDMOR3;
protected byte C_FTEDMOR4;
protected byte C_FTEDSTARTM1;
protected byte C_FTEDSTARTM2;
protected byte C_FTEDSTARTM3;
protected byte C_FTEDSTARTM4;
protected short C_FTEDSTARTY41;
protected short C_FTEDSTARTY42;
protected short C_FTEDSTARTY43;
protected short C_FTEDSTARTY44;
protected byte C_FTENDM;
protected short C_FTENDY4;
protected short C_FTEXV;
protected byte C_FTEXW;
protected byte C_FTQUALS;
protected short C_FUTRA;
protected short C_FUTRB;
protected short C_FUTRC;
protected short C_FUTRD;
protected short C_FUTRE;
protected short C_FUTRF;
protected short C_FUTRG;
protected short C_FUTRH;
protected short C_FUTRI;
protected short C_FUTRJ;
protected short C_FUTRK;
protected short C_FUTRL;
protected byte C_FUTUREINT;
protected byte C_GOR_DV;
protected int C_GRFPID;
protected byte C_GRFPNO;
protected int C_GRMPID;
protected byte C_GRMPNO;
protected byte C_GRPBFTS;
protected byte C_HASSTEP;
protected byte C_HCOND1;
protected byte C_HCOND10;
protected byte C_HCOND11;
protected byte C_HCOND12;
protected byte C_HCOND13;
protected byte C_HCOND14;
protected byte C_HCOND15;
protected byte C_HCOND16;
protected byte C_HCOND17;
protected byte C_HCOND2;
protected byte C_HCOND3;
protected byte C_HCOND4;
protected byte C_HCOND5;
protected byte C_HCOND6;
protected byte C_HCOND7;
protected byte C_HCOND8;
protected byte C_HCOND9;
protected byte C_HCOND96;
protected byte C_HCONDA01;
protected byte C_HCONDA02;
protected byte C_HCONDA03;
protected byte C_HCONDA04;
protected byte C_HCONDA05;
protected byte C_HCONDA06;
protected byte C_HCONDA07;
protected byte C_HCONDA08;
protected byte C_HCONDA09;
protected byte C_HCONDA10;
protected byte C_HCONDA11;
protected byte C_HCONDA12;
protected byte C_HCONDA13;
protected byte C_HCONDA14;
protected byte C_HCONDA15;
protected byte C_HCONDA16;
protected byte C_HCONDA17;
protected byte C_HCONDE6;
protected byte C_HCONDE7;
protected byte C_HCONDE96;
protected byte C_HCONDEA6;
protected byte C_HCONDEA7;
protected byte C_HCONDN1;
protected byte C_HCONDN10;
protected byte C_HCONDN11;
protected byte C_HCONDN12;
protected byte C_HCONDN13;
protected byte C_HCONDN14;
protected byte C_HCONDN15;
protected byte C_HCONDN16;
protected byte C_HCONDN17;
protected byte C_HCONDN2;
protected byte C_HCONDN3;
protected byte C_HCONDN4;
protected byte C_HCONDN5;
protected byte C_HCONDN6;
protected byte C_HCONDN7;
protected byte C_HCONDN8;
protected byte C_HCONDN9;
protected byte C_HCONDN96;
protected byte C_HCONDNO1;
protected byte C_HCONDNO2;
protected byte C_HCONDNO3;
protected byte C_HCONDNO4;
protected byte C_HCONDNO5;
protected byte C_HCONDNO6;
protected byte C_HCONDNO7;
protected byte C_HCONDNO8;
protected byte C_HCONDNS1;
protected byte C_HCONDNS2;
protected byte C_HCONDNS3;
protected byte C_HCONDNS4;
protected byte C_HCONDNS5;
protected byte C_HCONDNS6;
protected byte C_HCONDNS7;
protected byte C_HCONDNS8;
protected byte C_HCONDS01;
protected byte C_HCONDS02;
protected byte C_HCONDS03;
protected byte C_HCONDS04;
protected byte C_HCONDS05;
protected byte C_HCONDS08;
protected byte C_HCONDS09;
protected byte C_HCONDS10;
protected byte C_HCONDS11;
protected byte C_HCONDS12;
protected byte C_HCONDS13;
protected byte C_HCONDS14;
protected byte C_HCONDS15;
protected byte C_HCONDS16;
protected byte C_HCONDS17;
protected byte C_HEALTH;
protected byte C_HEARCOMPUTER;
protected byte C_HGADOPTF;
protected byte C_HGADOPTM;
protected byte C_HGBIOF;
protected byte C_HGBIOM;
protected byte C_HGPART;
protected byte C_HHORIG;
protected byte C_HHRESP_DV;
protected byte C_HHTYPE_DV;
protected int C_HIDP;
protected byte C_HIQUAL_DV;
protected byte C_HITSIB;
protected byte C_HLPHMWK;
protected byte C_HOOD15;
protected byte C_HOSPC1;
protected byte C_HOSPC2;
protected byte C_HOSPC3;
protected byte C_HOSPC4;
protected byte C_HOSPC5;
protected byte C_HOSPC6;
protected byte C_HOSPC7;
protected byte C_HOSPC8;
protected short C_HOSPDC1;
protected short C_HOSPDC2;
protected short C_HOSPDC3;
protected byte C_HOSPDC4;
protected byte C_HOSPDC5;
protected byte C_HOSPDC6;
protected byte C_HOSPDC7;
protected boolean C_HOSPDC8;
protected byte C_HOUSING;
protected int C_HRPID;
protected byte C_HRPNO;
protected byte C_IENDDATHH;
protected byte C_IENDDATMM;
protected byte C_IENDDATSS;
protected byte C_IMMSTOP1;
protected byte C_IMMSTOP2;
protected byte C_IMMSTOP3;
protected byte C_IMMSTOP4;
protected byte C_IMMSTOP5;
protected byte C_IMMSTOP6;
protected byte C_IMMSTOP7;
protected byte C_IMMSTOP8;
protected byte C_IMMSTOP97;
protected double C_IND5MUS_LW;
protected double C_IND5MUS_XW;
protected double C_INDBD91_LW;
protected double C_INDBDUB_LW;
protected double C_INDIN01_LW;
protected double C_INDIN91_LW;
protected double C_INDINUB_LW;
protected double C_INDINUB_XW;
protected double C_INDINUS_LW;
protected boolean C_INDMODE;
protected double C_INDNS91_LW;
protected double C_INDNSUB_LW;
protected double C_INDPXUB_LW;
protected double C_INDPXUB_XW;
protected double C_INDPXUS_LW;
protected double C_INDSCUB_LW;
protected double C_INDSCUB_XW;
protected double C_INDSCUS_LW;
protected byte C_INSULTED1;
protected byte C_INSULTED10;
protected byte C_INSULTED11;
protected byte C_INSULTED2;
protected byte C_INSULTED3;
protected byte C_INSULTED4;
protected byte C_INSULTED5;
protected byte C_INSULTED6;
protected byte C_INSULTED7;
protected byte C_INSULTED8;
protected byte C_INSULTED9;
protected byte C_INSULTED96;
protected byte C_INSULTED97;
protected byte C_INSULTEDO_CODE;
protected byte C_INSULTED_DV;
protected byte C_INTDATD_DV;
protected byte C_INTDATM_DV;
protected short C_INTDATY_DV;
protected byte C_INTIMMLS11;
protected byte C_INTIMMLS110;
protected byte C_INTIMMLS12;
protected byte C_INTIMMLS13;
protected byte C_INTIMMLS14;
protected byte C_INTIMMLS15;
protected byte C_INTIMMLS16;
protected byte C_INTIMMLS17;
protected byte C_INTIMMLS18;
protected byte C_INTIMMLS19;
protected byte C_INTIMMLS196;
protected byte C_INTIMMLS21;
protected byte C_INTIMMLS210;
protected byte C_INTIMMLS22;
protected byte C_INTIMMLS23;
protected byte C_INTIMMLS24;
protected byte C_INTIMMLS25;
protected byte C_INTIMMLS26;
protected byte C_INTIMMLS27;
protected byte C_INTIMMLS28;
protected byte C_INTIMMLS29;
protected byte C_INTIMMLS296;
protected byte C_INTIMMLS31;
protected byte C_INTIMMLS310;
protected byte C_INTIMMLS32;
protected byte C_INTIMMLS33;
protected byte C_INTIMMLS34;
protected byte C_INTIMMLS35;
protected byte C_INTIMMLS36;
protected byte C_INTIMMLS37;
protected byte C_INTIMMLS38;
protected byte C_INTIMMLS39;
protected byte C_INTIMMLS396;
protected byte C_INTIMMLS41;
protected byte C_INTIMMLS410;
protected byte C_INTIMMLS42;
protected byte C_INTIMMLS43;
protected byte C_INTIMMLS44;
protected byte C_INTIMMLS45;
protected byte C_INTIMMLS46;
protected byte C_INTIMMLS47;
protected byte C_INTIMMLS48;
protected byte C_INTIMMLS49;
protected byte C_INTIMMLS496;
protected byte C_INVITRO1;
protected byte C_INVITRO2;
protected boolean C_INVITRO3;
protected byte C_IOUTCOME;
protected byte C_ISTRTDATD;
protected byte C_ISTRTDATHH;
protected byte C_ISTRTDATM;
protected byte C_ISTRTDATMM;
protected byte C_ISTRTDATSS;
protected short C_ISTRTDATY;
protected short C_ISYEAR;
protected byte C_IVAFFCT11;
protected byte C_IVAFFCT12;
protected byte C_IVAFFCT13;
protected byte C_IVAFFCT14;
protected byte C_IVAFFCT15;
protected byte C_IVAFFCT17;
protected byte C_IVAFFCT21;
protected byte C_IVAFFCT22;
protected byte C_IVAFFCT23;
protected byte C_IVAFFCT27;
protected byte C_IVAFFCT30;
protected byte C_IVAFFCT97;
protected byte C_IVCOOP;
protected boolean C_IVFIO;
protected byte C_IVINFNCE;
protected byte C_IVLIBAL;
protected byte C_IVLIENG;
protected byte C_IVLITRANS;
protected byte C_IVLIWHO;
protected byte C_IVPRSNT;
protected byte C_J1BOSS;
protected byte C_J1MNGR;
protected byte C_J1NONE;
protected byte C_J1NSSEC5_DV;
protected byte C_J1SEMP;
protected short C_J1SOC00_CC;
protected short C_J1SOC10_CC;
protected byte C_J1SOC90_CC;
protected byte C_J2HAS;
protected short C_J2HRS;
protected byte C_J2NSSEC5_DV;
protected short C_J2PAY;
protected double C_J2PAYNET_DV;
protected double C_J2PAY_DV;
protected byte C_J2PAY_IF;
protected byte C_J2SEMP;
protected short C_J2SOC00_CC;
protected short C_J2SOC10_CC;
protected byte C_J2SOC90_CC;
protected byte C_JBATT1;
protected byte C_JBATT2;
protected byte C_JBATT3;
protected byte C_JBATT4;
protected byte C_JBATT5;
protected byte C_JBATT6;
protected boolean C_JBATT7;
protected boolean C_JBATT8;
protected byte C_JBATT9;
protected byte C_JBBGD;
protected byte C_JBBGDATD;
protected byte C_JBBGDATM;
protected short C_JBBGDATY;
protected byte C_JBBGM;
protected short C_JBBGY;
protected byte C_JBENDD;
protected byte C_JBENDM;
protected byte C_JBENDREAS;
protected short C_JBENDY4;
protected byte C_JBES2000;
protected byte C_JBFT_DV;
protected byte C_JBHAD;
protected byte C_JBHAS;
protected double C_JBHRS;
protected byte C_JBIINDB_DV;
protected short C_JBISCO88_CC;
protected byte C_JBMNGR;
protected byte C_JBMNGRCHK;
protected byte C_JBNSSEC3_DV;
protected byte C_JBNSSEC5_DV;
protected byte C_JBNSSEC8_DV;
protected byte C_JBNSSEC_DV;
protected byte C_JBOFF;
protected byte C_JBOFFY;
protected byte C_JBOT;
protected byte C_JBOTPD;
protected byte C_JBPL;
protected byte C_JBRGSC_DV;
protected byte C_JBSAMR;
protected byte C_JBSAT;
protected byte C_JBSECT;
protected byte C_JBSECTPUB;
protected byte C_JBSEG_DV;
protected byte C_JBSEMP;
protected byte C_JBSEMPCHK;
protected byte C_JBSIC07CHK;
protected byte C_JBSIC07_CC;
protected byte C_JBSIZE;
protected byte C_JBSIZECHK;
protected byte C_JBSOC00CHK;
protected short C_JBSOC00_CC;
protected short C_JBSOC10_CC;
protected byte C_JBSOCGR_DV;
protected byte C_JBSTAT;
protected byte C_JBTERM1;
protected byte C_JBTERM2;
protected short C_JBTTWT;
protected byte C_JLBOSS;
protected byte C_JLENDM;
protected short C_JLENDY;
protected byte C_JLES2000;
protected byte C_JLIINDB_DV;
protected short C_JLISCO88_CC;
protected byte C_JLMNGR;
protected byte C_JLNSSEC3_DV;
protected byte C_JLNSSEC5_DV;
protected byte C_JLNSSEC8_DV;
protected byte C_JLNSSEC_DV;
protected byte C_JLRGSC_DV;
protected byte C_JLSEG_DV;
protected byte C_JLSEMP;
protected byte C_JLSIC07_CC;
protected byte C_JLSIZE;
protected short C_JLSOC00_CC;
protected short C_JLSOC10_CC;
protected byte C_JOBDENY;
protected byte C_JOBHOURS1;
protected byte C_JOBHOURS2;
protected byte C_JOBHOURS3;
protected byte C_JOBHOURS4;
protected byte C_JOBHOURS5;
protected byte C_JOBHOURS6;
protected byte C_JOBHOURS7;
protected boolean C_JOBHOURS8;
protected boolean C_JOBHOURS9;
protected byte C_JOBLOOK;
protected byte C_JSACCS;
protected byte C_JSBOSS;
protected byte C_JSHRS;
protected byte C_JSPART;
protected int C_JSPAYU;
protected byte C_JSPAYW;
protected byte C_JSPL;
protected byte C_JSPRBM;
protected short C_JSPRBY4;
protected byte C_JSPREM;
protected short C_JSPREY4;
protected int C_JSPRF;
protected byte C_JSPRLS;
protected byte C_JSPRNI;
protected byte C_JSPRTX;
protected byte C_JSPYNI;
protected byte C_JSPYTX;
protected byte C_JSSIZE;
protected byte C_JSTTWT;
protected short C_JSTTWTB;
protected byte C_JSTYPEB;
protected byte C_JSWORKTRAV;
protected byte C_JUBGN;
protected byte C_JULK4WK;
protected byte C_JULK4X1;
protected byte C_JULK4X2;
protected byte C_JULK4X3;
protected byte C_JULK4X4;
protected byte C_JULK4X5;
protected byte C_JULK4X6;
protected byte C_JULK4X96;
protected byte C_JULKJB;
protected byte C_KID2UNI01;
protected byte C_KID2UNI02;
protected byte C_KID2UNI03;
protected byte C_KID2UNI04;
protected byte C_KID2UNI05;
protected byte C_KID2UNI06;
protected byte C_KID2UNI07;
protected byte C_KID2UNI08;
protected byte C_KID2UNI09;
protected byte C_KID2UNI10;
protected byte C_KID2UNI11;
protected byte C_KID2UNI12;
protected byte C_KID2UNI13;
protected byte C_KID2UNI14;
protected byte C_KID2UNI15;
protected byte C_KID2UNI16;
protected byte C_KIDSPT;
protected byte C_LADOPT;
protected byte C_LATE;
protected byte C_LCHMULTI1;
protected byte C_LCHMULTI2;
protected boolean C_LCHMULTI3;
protected byte C_LCOHNPI;
protected double C_LENINDINTV;
protected byte C_LEVELIMP;
protected byte C_LICENG;
protected byte C_LICTRANS;
protected byte C_LICWHO;
protected byte C_LIENG;
protected byte C_LIHOW;
protected byte C_LINGUA;
protected byte C_LITRANS;
protected byte C_LIVESP;
protected boolean C_LIVESP_DV;
protected byte C_LIVEWITH;
protected byte C_LIWHO;
protected byte C_LKMOVE;
protected byte C_LLKNBRD;
protected byte C_LMAR1M;
protected short C_LMAR1Y;
protected byte C_LMCBM1;
protected byte C_LMCBM2;
protected byte C_LMCBM3;
protected short C_LMCBY41;
protected short C_LMCBY42;
protected short C_LMCBY43;
protected byte C_LMSPM1;
protected byte C_LMSPM2;
protected byte C_LMSPM3;
protected short C_LMSPY41;
protected short C_LMSPY42;
protected short C_LMSPY43;
protected byte C_LNADOPT;
protected byte C_LNPRNT;
protected byte C_LOCSERAP;
protected byte C_LOCSERAS;
protected byte C_LOCSERB;
protected byte C_LOCSERC;
protected byte C_LOCSERD;
protected byte C_LOCSERE;
protected byte C_LPRNT;
protected byte C_LVHM;
protected byte C_LVMTHP;
protected byte C_LVREL1;
protected byte C_LVREL10;
protected byte C_LVREL2;
protected byte C_LVREL3;
protected byte C_LVREL4;
protected byte C_LVREL5;
protected byte C_LVREL6;
protected byte C_LVREL7;
protected byte C_LVREL8;
protected byte C_LVREL9;
protected byte C_LVREL96;
protected byte C_LVSCDO;
protected byte C_LVWHY;
protected short C_LVYRP;
protected byte C_LWWRONG;
protected byte C_MAAGE;
protected byte C_MACOB;
protected byte C_MACON;
protected byte C_MAFAR;
protected byte C_MAJU;
protected byte C_MALONE;
protected byte C_MAMOSTCON;
protected byte C_MANSSEC5_DV;
protected byte C_MARSTAT;
protected byte C_MASEE;
protected short C_MASOC00_CC;
protected short C_MASOC10_CC;
protected byte C_MASOC90_CC;
protected byte C_MASTAT_DV;
protected byte C_MATLEAVE;
protected byte C_MATLV;
protected byte C_MATLVENDD;
protected byte C_MATLVENDM;
protected short C_MATLVENDY4;
protected byte C_MATLVSTD;
protected byte C_MATLVSTM;
protected short C_MATLVSTY4;
protected byte C_MAYRUK;
protected byte C_MEMAID;
protected byte C_MEMCONT11;
protected byte C_MEMCONT12;
protected byte C_MEMCONT13;
protected byte C_MEMCONT21;
protected byte C_MEMCONT210;
protected byte C_MEMCONT211;
protected byte C_MEMCONT212;
protected byte C_MEMCONT213;
protected byte C_MEMCONT214;
protected byte C_MEMCONT215;
protected byte C_MEMCONT216;
protected byte C_MEMCONT22;
protected byte C_MEMCONT23;
protected byte C_MEMCONT24;
protected byte C_MEMCONT25;
protected byte C_MEMCONT26;
protected byte C_MEMCONT27;
protected byte C_MEMCONT28;
protected byte C_MEMCONT29;
protected byte C_MEMCONT3;
protected byte C_MEMORIG;
protected byte C_MEMPER;
protected byte C_MEMPLOY;
protected byte C_MEMPROB1;
protected byte C_MEMPROB2;
protected byte C_MEMPROB3;
protected byte C_MEMPROB4;
protected byte C_MIGCNTRY;
protected byte C_MIGPLNS;
protected byte C_MLAGST;
protected byte C_MLAGSTU;
protected byte C_MLFUTR;
protected byte C_MLRNOT1;
protected byte C_MLRNOT10;
protected byte C_MLRNOT11;
protected byte C_MLRNOT12;
protected byte C_MLRNOT13;
protected byte C_MLRNOT2;
protected byte C_MLRNOT3;
protected byte C_MLRNOT4;
protected byte C_MLRNOT5;
protected byte C_MLRNOT6;
protected byte C_MLRNOT7;
protected byte C_MLRNOT8;
protected byte C_MLRNOT9;
protected byte C_MLRNOT97;
protected byte C_MLSTAT;
protected byte C_MLSTATCHK;
protected byte C_MLWKFPT;
protected int C_MNPID;
protected byte C_MNPNO;
protected int C_MNSPID;
protected byte C_MNSPNO;
protected byte C_MOBUSE;
protected byte C_MONTH;
protected byte C_MOVDIR;
protected byte C_MOVEOTH_CODE;
protected byte C_MOVY11;
protected byte C_MOVY12;
protected byte C_MOVY13;
protected byte C_MOVY14;
protected byte C_MOVY15;
protected byte C_MOVY16;
protected byte C_MSTATCH1;
protected byte C_MSTATCH2;
protected byte C_MSTATSAM;
protected byte C_MSTATSAMN;
protected byte C_MVEVER;
protected byte C_MVMNTH;
protected short C_MVYR;
protected byte C_NACAR;
protected byte C_NACONT11;
protected byte C_NACONT12;
protected byte C_NACONT13;
protected byte C_NACONT21;
protected byte C_NACONT210;
protected byte C_NACONT211;
protected byte C_NACONT212;
protected byte C_NACONT213;
protected byte C_NACONT214;
protected byte C_NACONT215;
protected byte C_NACONT216;
protected byte C_NACONT22;
protected byte C_NACONT23;
protected byte C_NACONT24;
protected byte C_NACONT25;
protected byte C_NACONT26;
protected byte C_NACONT27;
protected byte C_NACONT28;
protected byte C_NACONT29;
protected byte C_NACONT3;
protected byte C_NADISEASE;
protected byte C_NADOPTCH;
protected byte C_NADRINK;
protected byte C_NAIDXHH;
protected byte C_NAINTEREST;
protected byte C_NALOTTERY;
protected byte C_NASOFA;
protected byte C_NASTOP1;
protected byte C_NASTOP2;
protected byte C_NASTOP3;
protected byte C_NASTOP4;
protected byte C_NASTOP5;
protected byte C_NASTOP6;
protected byte C_NASTOP7;
protected byte C_NASTOP8;
protected byte C_NASTOP97;
protected byte C_NATCH01;
protected byte C_NATCH02;
protected byte C_NATCH03;
protected byte C_NATCH04;
protected byte C_NATCH05;
protected byte C_NATCH06;
protected byte C_NATCH07;
protected byte C_NATCH08;
protected byte C_NATCH09;
protected byte C_NATCH10;
protected byte C_NATCH11;
protected boolean C_NATCH12;
protected boolean C_NATCH13;
protected boolean C_NATCH14;
protected boolean C_NATCH15;
protected boolean C_NATCH16;
protected byte C_NATID1;
protected byte C_NATID2;
protected byte C_NATID3;
protected byte C_NATID4;
protected byte C_NATID5;
protected byte C_NATID6;
protected byte C_NATID97;
protected byte C_NBRCOH1;
protected byte C_NBRCOH2;
protected byte C_NBRCOH3;
protected byte C_NBRCOH4;
protected byte C_NBRCOHDK_DV;
protected byte C_NBRCOH_DV;
protected double C_NBRSNCI_DV;
protected byte C_NCH10;
protected byte C_NCH10TO15;
protected byte C_NCH14RESP;
protected byte C_NCH3RESP;
protected byte C_NCH415RESP;
protected byte C_NCH5RESP;
protected byte C_NCH5TO15;
protected byte C_NCH8RESP;
protected byte C_NCHILD;
protected byte C_NCHILD_DV;
protected byte C_NCHRESP;
protected byte C_NCHUND18RESP;
protected byte C_NCHUNDER16;
protected byte C_NCRR1;
protected byte C_NCRR11;
protected byte C_NCRR12;
protected byte C_NCRR3;
protected byte C_NCRR4;
protected byte C_NCRR5;
protected byte C_NCRR6;
protected byte C_NCRR8;
protected byte C_NCRR9;
protected byte C_NCRRM;
protected short C_NCRRY4;
protected byte C_NDEPCHL_DV;
protected byte C_NETAG_1;
protected byte C_NETAG_2;
protected byte C_NETAG_3;
protected byte C_NETCHT;
protected byte C_NETDO10_1;
protected byte C_NETDO10_2;
protected byte C_NETDO10_3;
protected byte C_NETDO1_1;
protected byte C_NETDO1_2;
protected byte C_NETDO1_3;
protected byte C_NETDO2_1;
protected byte C_NETDO2_2;
protected byte C_NETDO2_3;
protected byte C_NETDO3_1;
protected byte C_NETDO3_2;
protected byte C_NETDO3_3;
protected byte C_NETDO4_1;
protected byte C_NETDO4_2;
protected byte C_NETDO4_3;
protected byte C_NETDO5_1;
protected byte C_NETDO5_2;
protected byte C_NETDO5_3;
protected byte C_NETDO6_1;
protected byte C_NETDO6_2;
protected byte C_NETDO6_3;
protected byte C_NETDO7_1;
protected byte C_NETDO7_2;
protected byte C_NETDO7_3;
protected byte C_NETDO8_1;
protected byte C_NETDO8_2;
protected byte C_NETDO8_3;
protected byte C_NETDO96_1;
protected byte C_NETDO96_2;
protected byte C_NETDO96_3;
protected byte C_NETDO97_1;
protected byte C_NETDO97_2;
protected byte C_NETDO97_3;
protected byte C_NETDO9_1;
protected byte C_NETDO9_2;
protected byte C_NETDO9_3;
protected byte C_NETET_1;
protected byte C_NETET_2;
protected byte C_NETET_3;
protected byte C_NETJB_1;
protected byte C_NETJB_2;
protected byte C_NETJB_3;
protected byte C_NETKN_1;
protected byte C_NETKN_2;
protected byte C_NETKN_3;
protected byte C_NETLV_1;
protected byte C_NETLV_2;
protected byte C_NETLV_3;
protected byte C_NETM2;
protected byte C_NETM2O_CODE;
protected byte C_NETMET_1;
protected byte C_NETMET_2;
protected byte C_NETMET_3;
protected byte C_NETPH_1;
protected byte C_NETPH_2;
protected byte C_NETPH_3;
protected byte C_NETPUSE;
protected byte C_NETRL_1;
protected byte C_NETRL_2;
protected byte C_NETRL_3;
protected byte C_NETSX_1;
protected byte C_NETSX_2;
protected byte C_NETSX_3;
protected byte C_NETTALK10_1;
protected byte C_NETTALK10_2;
protected byte C_NETTALK10_3;
protected byte C_NETTALK11_1;
protected byte C_NETTALK11_2;
protected byte C_NETTALK11_3;
protected byte C_NETTALK12_1;
protected byte C_NETTALK12_2;
protected byte C_NETTALK12_3;
protected byte C_NETTALK13_1;
protected byte C_NETTALK13_2;
protected byte C_NETTALK13_3;
protected byte C_NETTALK1_1;
protected byte C_NETTALK1_2;
protected byte C_NETTALK1_3;
protected byte C_NETTALK2_1;
protected byte C_NETTALK2_2;
protected byte C_NETTALK2_3;
protected byte C_NETTALK3_1;
protected byte C_NETTALK3_2;
protected byte C_NETTALK3_3;
protected byte C_NETTALK4_1;
protected byte C_NETTALK4_2;
protected byte C_NETTALK4_3;
protected byte C_NETTALK5_1;
protected byte C_NETTALK5_2;
protected byte C_NETTALK5_3;
protected byte C_NETTALK6_1;
protected byte C_NETTALK6_2;
protected byte C_NETTALK6_3;
protected byte C_NETTALK7_1;
protected byte C_NETTALK7_2;
protected byte C_NETTALK7_3;
protected byte C_NETTALK8_1;
protected byte C_NETTALK8_2;
protected byte C_NETTALK8_3;
protected byte C_NETTALK96_1;
protected byte C_NETTALK96_2;
protected byte C_NETTALK96_3;
protected byte C_NETTALK97_1;
protected byte C_NETTALK97_2;
protected byte C_NETTALK97_3;
protected byte C_NETTALK9_1;
protected byte C_NETTALK9_2;
protected byte C_NETTALK9_3;
protected byte C_NETUSE;
protected byte C_NETWEB_1;
protected byte C_NETWEB_2;
protected byte C_NETWEB_3;
protected byte C_NETWR_1;
protected byte C_NETWR_2;
protected byte C_NETWR_3;
protected byte C_NEWSMAIN;
protected byte C_NEWSOURCE1;
protected byte C_NEWSOURCE10;
protected byte C_NEWSOURCE11;
protected byte C_NEWSOURCE12;
protected byte C_NEWSOURCE2;
protected byte C_NEWSOURCE3;
protected byte C_NEWSOURCE4;
protected byte C_NEWSOURCE5;
protected byte C_NEWSOURCE6;
protected byte C_NEWSOURCE7;
protected byte C_NEWSOURCE8;
protected byte C_NEWSOURCE9;
protected byte C_NEWSOURCE96;
protected byte C_NEXT1;
protected byte C_NEXT2;
protected byte C_NEXT3;
protected byte C_NEXT4;
protected byte C_NEXT5;
protected byte C_NEXT6;
protected byte C_NEXT7;
protected byte C_NEXT8;
protected byte C_NEXT9;
protected byte C_NEXTELSE1;
protected byte C_NEXTELSE2;
protected byte C_NEXTELSE3;
protected byte C_NEXTELSE4;
protected byte C_NEXTELSE5;
protected byte C_NEXTELSE6;
protected byte C_NEXTELSE7;
protected byte C_NEXTELSE8;
protected boolean C_NEXTELSE9;
protected byte C_NEXTJOB1;
protected byte C_NEXTJOB2;
protected byte C_NEXTJOB3;
protected byte C_NEXTJOB4;
protected byte C_NEXTJOB5;
protected byte C_NEXTJOB6;
protected byte C_NEXTJOB7;
protected boolean C_NEXTJOB8;
protected byte C_NEXTJOB9;
protected byte C_NEXTSTAT1;
protected byte C_NEXTSTAT2;
protected byte C_NEXTSTAT3;
protected byte C_NEXTSTAT4;
protected byte C_NEXTSTAT5;
protected byte C_NEXTSTAT6;
protected byte C_NEXTSTAT7;
protected byte C_NEXTSTAT8;
protected byte C_NEXTSTAT9;
protected byte C_NFH01;
protected byte C_NFH02;
protected byte C_NFH03;
protected byte C_NFH04;
protected byte C_NFH05;
protected byte C_NFH06;
protected byte C_NFH07;
protected byte C_NFH08;
protected byte C_NFH09;
protected byte C_NFH10;
protected byte C_NFH11;
protected byte C_NFH12;
protected byte C_NFH13;
protected byte C_NFH14;
protected byte C_NFH15;
protected byte C_NFH16;
protected byte C_NFH17;
protected byte C_NFH18;
protected byte C_NFH19;
protected byte C_NFH20;
protected byte C_NFH21;
protected byte C_NFH22;
protected byte C_NFH23;
protected byte C_NFH24;
protected byte C_NFH25;
protected byte C_NFH26;
protected byte C_NFH27;
protected byte C_NFH28;
protected byte C_NFH29;
protected byte C_NFH30;
protected byte C_NFH31;
protected byte C_NFH32;
protected byte C_NFH33;
protected byte C_NFH34;
protected byte C_NFH35;
protected byte C_NFH36;
protected byte C_NFH37;
protected byte C_NFH38;
protected byte C_NFH39;
protected byte C_NGRP_DV;
protected byte C_NHIQUAL_DV;
protected byte C_NIACT;
protected byte C_NICLBNS1;
protected byte C_NICLBNS2;
protected byte C_NICLBNS3;
protected byte C_NICLBNS4;
protected byte C_NIREL;
protected byte C_NISERPS;
protected byte C_NMAR;
protected byte C_NMPSP_DV;
protected byte C_NNATCH;
protected byte C_NNEWBORN;
protected byte C_NNMPSP_DV;
protected byte C_NNSIB_DV;
protected byte C_NNSSIB_DV;
protected byte C_NOTEMPCHK;
protected byte C_NPENSIONER_DV;
protected byte C_NPNS_DV;
protected byte C_NPN_DV;
protected byte C_NQFHIGH_DV;
protected byte C_NRELS1;
protected byte C_NRELS2;
protected byte C_NRELS3;
protected byte C_NRELS4;
protected byte C_NRELS5;
protected byte C_NRELS6;
protected byte C_NS200PRE;
protected byte C_NS201G1;
protected byte C_NS202H1;
protected byte C_NS203I1;
protected byte C_NS204A1;
protected byte C_NS205B1;
protected byte C_NS206C1;
protected byte C_NS207D1;
protected byte C_NS208E1;
protected byte C_NS209F1;
protected byte C_NS210J1;
protected byte C_NS211K1;
protected byte C_NS212L1;
protected byte C_NS213M1;
protected byte C_NS214N1;
protected byte C_NS215O1;
protected byte C_NS216C;
protected byte C_NS221G2;
protected byte C_NS222H2;
protected byte C_NS223I2;
protected byte C_NS224A2;
protected byte C_NS225B2;
protected byte C_NS226C;
protected byte C_NS226C2;
protected byte C_NS227D2;
protected byte C_NS228E2;
protected byte C_NS229F2;
protected byte C_NS230J2;
protected byte C_NS231K2;
protected byte C_NS232L2;
protected byte C_NS233M2;
protected byte C_NS234N2;
protected byte C_NS235O2;
protected byte C_NS240;
protected byte C_NS241;
protected byte C_NS242;
protected byte C_NSCONT11;
protected byte C_NSCONT12;
protected byte C_NSCONT13;
protected byte C_NSCONT21;
protected byte C_NSCONT210;
protected byte C_NSCONT211;
protected byte C_NSCONT212;
protected byte C_NSCONT213;
protected byte C_NSCONT214;
protected byte C_NSCONT215;
protected byte C_NSCONT216;
protected byte C_NSCONT22;
protected byte C_NSCONT23;
protected byte C_NSCONT24;
protected byte C_NSCONT25;
protected byte C_NSCONT26;
protected byte C_NSCONT27;
protected byte C_NSCONT28;
protected byte C_NSCONT29;
protected byte C_NSCONT3;
protected byte C_NSRAN;
protected byte C_NSSTOP1;
protected byte C_NSSTOP2;
protected byte C_NSSTOP3;
protected byte C_NSSTOP4;
protected byte C_NSSTOP5;
protected byte C_NSSTOP6;
protected byte C_NSSTOP7;
protected byte C_NSSTOP8;
protected byte C_NSSTOP97;
protected byte C_NUABPRE;
protected byte C_NUNMPSP_DV;
protected byte C_NXTJBENDD;
protected byte C_NXTJBENDM;
protected short C_NXTJBENDY4;
protected byte C_NXTJBES;
protected byte C_NXTJBHRS;
protected byte C_NXTST;
protected byte C_NXTSTELSE;
protected byte C_NXTSTENDD;
protected byte C_NXTSTENDM;
protected short C_NXTSTENDY4;
protected byte C_OCIMPA;
protected byte C_OCIMPB;
protected byte C_OCIMPE;
protected byte C_OCIMPF;
protected byte C_OCIMPI;
protected byte C_OCIMPK;
protected byte C_OCIMPL;
protected byte C_OHCH16;
protected byte C_OPRLG;
protected byte C_OPRLG0;
protected byte C_OPRLG0NI;
protected byte C_OPRLG1;
protected byte C_ORG;
protected byte C_ORGA1;
protected byte C_ORGA10;
protected byte C_ORGA11;
protected byte C_ORGA12;
protected byte C_ORGA13;
protected byte C_ORGA14;
protected byte C_ORGA15;
protected byte C_ORGA16;
protected byte C_ORGA2;
protected byte C_ORGA3;
protected byte C_ORGA4;
protected byte C_ORGA5;
protected byte C_ORGA6;
protected byte C_ORGA7;
protected byte C_ORGA8;
protected byte C_ORGA9;
protected byte C_ORGA96;
protected byte C_ORGAT1;
protected byte C_ORGAT10;
protected byte C_ORGAT11;
protected byte C_ORGAT12;
protected byte C_ORGAT13;
protected byte C_ORGAT14;
protected byte C_ORGAT15;
protected byte C_ORGAT16;
protected byte C_ORGAT2;
protected byte C_ORGAT3;
protected byte C_ORGAT4;
protected byte C_ORGAT5;
protected byte C_ORGAT6;
protected byte C_ORGAT7;
protected byte C_ORGAT8;
protected byte C_ORGAT9;
protected byte C_ORGAT96;
protected byte C_ORGM1;
protected byte C_ORGM10;
protected byte C_ORGM11;
protected byte C_ORGM12;
protected byte C_ORGM13;
protected byte C_ORGM14;
protected byte C_ORGM15;
protected byte C_ORGM16;
protected byte C_ORGM2;
protected byte C_ORGM3;
protected byte C_ORGM4;
protected byte C_ORGM5;
protected byte C_ORGM6;
protected byte C_ORGM7;
protected byte C_ORGM8;
protected byte C_ORGM9;
protected byte C_ORGM96;
protected byte C_ORGMT1;
protected byte C_ORGMT10;
protected byte C_ORGMT11;
protected byte C_ORGMT12;
protected byte C_ORGMT13;
protected byte C_ORGMT14;
protected byte C_ORGMT15;
protected byte C_ORGMT16;
protected byte C_ORGMT2;
protected byte C_ORGMT3;
protected byte C_ORGMT4;
protected byte C_ORGMT5;
protected byte C_ORGMT6;
protected byte C_ORGMT7;
protected byte C_ORGMT8;
protected byte C_ORGMT9;
protected byte C_ORGMT96;
protected byte C_ORIGADD;
protected byte C_OVTNSA;
protected byte C_OVTPAY;
protected double C_OVTRATE;
protected byte C_OVTREST;
protected byte C_PAAGE;
protected byte C_PAAID1;
protected byte C_PAAID2;
protected byte C_PAAID3;
protected byte C_PAAID4;
protected byte C_PAAID5;
protected byte C_PAAID6;
protected byte C_PAAID7;
protected byte C_PAAID8;
protected byte C_PAAID96;
protected byte C_PAAID97;
protected byte C_PACOB;
protected byte C_PACON;
protected byte C_PAFAR;
protected byte C_PAIDU1;
protected byte C_PAIDU2;
protected byte C_PAIDU3;
protected byte C_PAIDU4;
protected byte C_PAIDU5;
protected byte C_PAIDU6;
protected byte C_PAIDU7;
protected byte C_PAIDU8;
protected byte C_PAIDU96;
protected byte C_PAIDU97;
protected byte C_PAJU;
protected byte C_PALONE;
protected byte C_PAMOSTCON;
protected byte C_PANSSEC5_DV;
protected byte C_PAPERM2;
protected byte C_PARCHILD;
protected byte C_PAREVE;
protected byte C_PARMAR;
protected byte C_PARSCH;
protected byte C_PASEE;
protected short C_PASOC00_CC;
protected short C_PASOC10_CC;
protected byte C_PASOC90_CC;
protected int C_PAYGL;
protected double C_PAYGU_DV;
protected byte C_PAYGU_IF;
protected byte C_PAYGWC;
protected double C_PAYG_DV;
protected int C_PAYNL;
protected double C_PAYNU_DV;
protected byte C_PAYNU_IF;
protected byte C_PAYNWC;
protected double C_PAYN_DV;
protected byte C_PAYRUK;
protected byte C_PAYTYP;
protected int C_PAYU;
protected byte C_PAYUG;
protected byte C_PAYUSL;
protected byte C_PAYUWC;
protected double C_PAYU_DV;
protected byte C_PBNFT1;
protected byte C_PBNFT10;
protected byte C_PBNFT11;
protected byte C_PBNFT12;
protected byte C_PBNFT2;
protected byte C_PBNFT3;
protected byte C_PBNFT4;
protected byte C_PBNFT5;
protected byte C_PBNFT6;
protected byte C_PBNFT7;
protected byte C_PBNFT8;
protected byte C_PBNFT9;
protected byte C_PBNFT96;
protected byte C_PENMEX;
protected byte C_PENSIONER_DV;
protected byte C_PERBFTS;
protected byte C_PERPOLINF;
protected byte C_PJBPTFT;
protected byte C_PJSPTFT;
protected byte C_PJULK4WK;
protected byte C_PLBORNC;
protected byte C_PLIVPAR;
protected byte C_PLNOWM;
protected short C_PLNOWY4;
protected int C_PN1PID;
protected byte C_PN1PNO;
protected byte C_PN1SEX;
protected int C_PN2PID;
protected byte C_PN2PNO;
protected byte C_PN2SEX;
protected byte C_PNO;
protected int C_PNS1PID;
protected byte C_PNS1PNO;
protected byte C_PNS1SEX;
protected int C_PNS2PID;
protected byte C_PNS2PNO;
protected byte C_PNS2SEX;
protected byte C_POLCOST;
protected byte C_POLEFF1;
protected byte C_POLEFF2;
protected byte C_POLEFF3;
protected byte C_POLEFF4;
protected int C_PPID;
protected byte C_PPNO;
protected byte C_PPPEX;
protected byte C_PPPEXM;
protected byte C_PPSEX;
protected byte C_PRAISEKID;
protected byte C_PREARN;
protected byte C_PREARNA;
protected byte C_PREARNW;
protected byte C_PREASON;
protected byte C_PRECOG;
protected byte C_PREG;
protected byte C_PREGEND1;
protected byte C_PREGEND2;
protected byte C_PREGEND3;
protected byte C_PREGFERT1;
protected byte C_PREGFERT2;
protected byte C_PREGFERT3;
protected byte C_PREGM1;
protected byte C_PREGM2;
protected byte C_PREGM3;
protected byte C_PREGOUT1;
protected byte C_PREGOUT2;
protected byte C_PREGOUT3;
protected byte C_PREGSMK11;
protected boolean C_PREGSMK12;
protected boolean C_PREGSMK13;
protected byte C_PREGSMK21;
protected boolean C_PREGSMK22;
protected boolean C_PREGSMK23;
protected byte C_PREGSMK31;
protected byte C_PREGSMK32;
protected boolean C_PREGSMK33;
protected byte C_PREGSMOKE1;
protected byte C_PREGSMOKE2;
protected boolean C_PREGSMOKE3;
protected short C_PREGY41;
protected short C_PREGY42;
protected short C_PREGY43;
protected byte C_PREL;
protected byte C_PRFITB;
protected byte C_PRFITBA;
protected byte C_PRFITBW;
protected byte C_PRIPN;
protected byte C_PROMODENY;
protected byte C_PS1;
protected byte C_PS10;
protected byte C_PS11;
protected byte C_PS12;
protected byte C_PS13;
protected byte C_PS14;
protected byte C_PS15;
protected byte C_PS16;
protected byte C_PS17;
protected byte C_PS18;
protected byte C_PS19;
protected byte C_PS2;
protected byte C_PS20;
protected byte C_PS21;
protected byte C_PS22;
protected byte C_PS23;
protected byte C_PS24;
protected byte C_PS25;
protected byte C_PS26;
protected byte C_PS27;
protected byte C_PS28;
protected byte C_PS29;
protected byte C_PS3;
protected byte C_PS30;
protected byte C_PS31;
protected byte C_PS32;
protected byte C_PS4;
protected byte C_PS5;
protected byte C_PS6;
protected byte C_PS7;
protected byte C_PS8;
protected byte C_PS9;
protected byte C_PSDQA_DV;
protected byte C_PSDQB_DV;
protected byte C_PSDQC_DV;
protected byte C_PSIBLINGS;
protected byte C_PSNUMCH;
protected int C_PSU;
protected byte C_PYENRL;
protected byte C_QFHIGH;
protected boolean C_QFHIGHFL_DV;
protected byte C_QFHIGH_DV;
protected byte C_QFVOC1;
protected byte C_QFVOC10;
protected byte C_QFVOC11;
protected byte C_QFVOC12;
protected byte C_QFVOC13;
protected byte C_QFVOC14;
protected byte C_QFVOC15;
protected byte C_QFVOC2;
protected byte C_QFVOC3;
protected byte C_QFVOC4;
protected byte C_QFVOC5;
protected byte C_QFVOC6;
protected byte C_QFVOC7;
protected byte C_QFVOC8;
protected byte C_QFVOC9;
protected byte C_QFVOC96;
protected byte C_QUALNE;
protected byte C_QUALNEW1;
protected byte C_QUALNEW10;
protected byte C_QUALNEW11;
protected byte C_QUALNEW13;
protected byte C_QUALNEW15;
protected byte C_QUALNEW16;
protected byte C_QUALNEW17;
protected byte C_QUALNEW18;
protected byte C_QUALNEW19;
protected byte C_QUALNEW2;
protected byte C_QUALNEW20;
protected byte C_QUALNEW21;
protected byte C_QUALNEW22;
protected byte C_QUALNEW23;
protected byte C_QUALNEW24;
protected byte C_QUALNEW25;
protected byte C_QUALNEW26;
protected byte C_QUALNEW27;
protected byte C_QUALNEW28;
protected byte C_QUALNEW29;
protected byte C_QUALNEW30;
protected byte C_QUALNEW31;
protected byte C_QUALNEW4;
protected byte C_QUALNEW5;
protected byte C_QUALNEW6;
protected byte C_QUALNEW7;
protected byte C_QUALNEW8;
protected byte C_QUALNEW9;
protected byte C_QUALOC;
protected byte C_QUARREL;
protected byte C_RACEL;
protected byte C_RACELAT;
protected byte C_RACELBT;
protected boolean C_RACELMT;
protected byte C_RACELOT_CODE;
protected byte C_RACELO_CODE;
protected byte C_RACELT;
protected byte C_RACELWT;
protected byte C_RACEL_DV;
protected byte C_RACH16_DV;
protected byte C_READTEST;
protected byte C_REASEND1;
protected byte C_REASEND2;
protected byte C_REASEND3;
protected byte C_REASEND4;
protected byte C_REASEND5;
protected byte C_REASEND6;
protected byte C_REASEND7;
protected boolean C_REASEND8;
protected boolean C_REASEND9;
protected byte C_RELKID;
protected byte C_RELUP;
protected byte C_REMAIL_CODE;
protected byte C_RESATTACKED1_1;
protected byte C_RESATTACKED1_10;
protected byte C_RESATTACKED1_11;
protected byte C_RESATTACKED1_12;
protected byte C_RESATTACKED1_2;
protected byte C_RESATTACKED1_3;
protected byte C_RESATTACKED1_4;
protected byte C_RESATTACKED1_5;
protected byte C_RESATTACKED1_6;
protected byte C_RESATTACKED1_7;
protected byte C_RESATTACKED1_8;
protected byte C_RESATTACKED1_9;
protected byte C_RESATTACKED2_1;
protected byte C_RESATTACKED2_10;
protected byte C_RESATTACKED2_11;
protected byte C_RESATTACKED2_12;
protected byte C_RESATTACKED2_2;
protected byte C_RESATTACKED2_3;
protected byte C_RESATTACKED2_4;
protected byte C_RESATTACKED2_5;
protected byte C_RESATTACKED2_6;
protected byte C_RESATTACKED2_7;
protected byte C_RESATTACKED2_8;
protected byte C_RESATTACKED2_9;
protected byte C_RESATTACKED3_1;
protected byte C_RESATTACKED3_10;
protected byte C_RESATTACKED3_11;
protected byte C_RESATTACKED3_12;
protected byte C_RESATTACKED3_2;
protected byte C_RESATTACKED3_3;
protected byte C_RESATTACKED3_4;
protected byte C_RESATTACKED3_5;
protected byte C_RESATTACKED3_6;
protected byte C_RESATTACKED3_7;
protected byte C_RESATTACKED3_8;
protected byte C_RESATTACKED3_9;
protected byte C_RESATTACKED4_1;
protected byte C_RESATTACKED4_10;
protected byte C_RESATTACKED4_11;
protected byte C_RESATTACKED4_12;
protected byte C_RESATTACKED4_2;
protected byte C_RESATTACKED4_3;
protected byte C_RESATTACKED4_4;
protected byte C_RESATTACKED4_5;
protected byte C_RESATTACKED4_6;
protected byte C_RESATTACKED4_7;
protected byte C_RESATTACKED4_8;
protected byte C_RESATTACKED4_9;
protected byte C_RESATTACKED5_1;
protected byte C_RESATTACKED5_10;
protected byte C_RESATTACKED5_11;
protected byte C_RESATTACKED5_12;
protected byte C_RESATTACKED5_2;
protected byte C_RESATTACKED5_3;
protected byte C_RESATTACKED5_4;
protected byte C_RESATTACKED5_5;
protected byte C_RESATTACKED5_6;
protected byte C_RESATTACKED5_7;
protected byte C_RESATTACKED5_8;
protected byte C_RESATTACKED5_9;
protected byte C_RESATTACKED6_1;
protected byte C_RESATTACKED6_10;
protected byte C_RESATTACKED6_11;
protected byte C_RESATTACKED6_12;
protected byte C_RESATTACKED6_2;
protected byte C_RESATTACKED6_3;
protected byte C_RESATTACKED6_4;
protected byte C_RESATTACKED6_5;
protected byte C_RESATTACKED6_6;
protected byte C_RESATTACKED6_7;
protected byte C_RESATTACKED6_8;
protected byte C_RESATTACKED6_9;
protected byte C_RESATTACKED7_1;
protected byte C_RESATTACKED7_10;
protected byte C_RESATTACKED7_11;
protected byte C_RESATTACKED7_12;
protected byte C_RESATTACKED7_2;
protected byte C_RESATTACKED7_3;
protected byte C_RESATTACKED7_4;
protected byte C_RESATTACKED7_5;
protected byte C_RESATTACKED7_6;
protected byte C_RESATTACKED7_7;
protected byte C_RESATTACKED7_8;
protected byte C_RESATTACKED7_9;
protected byte C_RESATTACKED8_1;
protected byte C_RESATTACKED8_10;
protected byte C_RESATTACKED8_11;
protected byte C_RESATTACKED8_12;
protected byte C_RESATTACKED8_2;
protected byte C_RESATTACKED8_3;
protected byte C_RESATTACKED8_4;
protected byte C_RESATTACKED8_5;
protected byte C_RESATTACKED8_6;
protected byte C_RESATTACKED8_7;
protected byte C_RESATTACKED8_8;
protected byte C_RESATTACKED8_9;
protected byte C_RESATTACKED96_1;
protected byte C_RESATTACKED96_10;
protected byte C_RESATTACKED96_11;
protected byte C_RESATTACKED96_12;
protected byte C_RESATTACKED96_2;
protected byte C_RESATTACKED96_3;
protected byte C_RESATTACKED96_4;
protected byte C_RESATTACKED96_5;
protected byte C_RESATTACKED96_6;
protected byte C_RESATTACKED96_7;
protected byte C_RESATTACKED96_8;
protected byte C_RESATTACKED96_9;
protected byte C_RESATTACKED97_1;
protected byte C_RESATTACKED97_10;
protected byte C_RESATTACKED97_11;
protected byte C_RESATTACKED97_12;
protected byte C_RESATTACKED97_2;
protected byte C_RESATTACKED97_3;
protected byte C_RESATTACKED97_4;
protected byte C_RESATTACKED97_5;
protected byte C_RESATTACKED97_6;
protected byte C_RESATTACKED97_7;
protected byte C_RESATTACKED97_8;
protected byte C_RESATTACKED97_9;
protected byte C_RESATTACKED9_1;
protected byte C_RESATTACKED9_10;
protected byte C_RESATTACKED9_11;
protected byte C_RESATTACKED9_12;
protected byte C_RESATTACKED9_2;
protected byte C_RESATTACKED9_3;
protected byte C_RESATTACKED9_4;
protected byte C_RESATTACKED9_5;
protected byte C_RESATTACKED9_6;
protected byte C_RESATTACKED9_7;
protected byte C_RESATTACKED9_8;
protected byte C_RESATTACKED9_9;
protected byte C_RESAVOID1_1;
protected byte C_RESAVOID1_10;
protected byte C_RESAVOID1_11;
protected byte C_RESAVOID1_12;
protected byte C_RESAVOID1_2;
protected byte C_RESAVOID1_3;
protected byte C_RESAVOID1_4;
protected byte C_RESAVOID1_5;
protected byte C_RESAVOID1_6;
protected byte C_RESAVOID1_7;
protected byte C_RESAVOID1_8;
protected byte C_RESAVOID1_9;
protected byte C_RESAVOID2_1;
protected byte C_RESAVOID2_10;
protected byte C_RESAVOID2_11;
protected byte C_RESAVOID2_12;
protected byte C_RESAVOID2_2;
protected byte C_RESAVOID2_3;
protected byte C_RESAVOID2_4;
protected byte C_RESAVOID2_5;
protected byte C_RESAVOID2_6;
protected byte C_RESAVOID2_7;
protected byte C_RESAVOID2_8;
protected byte C_RESAVOID2_9;
protected byte C_RESAVOID3_1;
protected byte C_RESAVOID3_10;
protected byte C_RESAVOID3_11;
protected byte C_RESAVOID3_12;
protected byte C_RESAVOID3_2;
protected byte C_RESAVOID3_3;
protected byte C_RESAVOID3_4;
protected byte C_RESAVOID3_5;
protected byte C_RESAVOID3_6;
protected byte C_RESAVOID3_7;
protected byte C_RESAVOID3_8;
protected byte C_RESAVOID3_9;
protected byte C_RESAVOID4_1;
protected byte C_RESAVOID4_10;
protected byte C_RESAVOID4_11;
protected byte C_RESAVOID4_12;
protected byte C_RESAVOID4_2;
protected byte C_RESAVOID4_3;
protected byte C_RESAVOID4_4;
protected byte C_RESAVOID4_5;
protected byte C_RESAVOID4_6;
protected byte C_RESAVOID4_7;
protected byte C_RESAVOID4_8;
protected byte C_RESAVOID4_9;
protected byte C_RESAVOID5_1;
protected byte C_RESAVOID5_10;
protected byte C_RESAVOID5_11;
protected byte C_RESAVOID5_12;
protected byte C_RESAVOID5_2;
protected byte C_RESAVOID5_3;
protected byte C_RESAVOID5_4;
protected byte C_RESAVOID5_5;
protected byte C_RESAVOID5_6;
protected byte C_RESAVOID5_7;
protected byte C_RESAVOID5_8;
protected byte C_RESAVOID5_9;
protected byte C_RESAVOID6_1;
protected byte C_RESAVOID6_10;
protected byte C_RESAVOID6_11;
protected byte C_RESAVOID6_12;
protected byte C_RESAVOID6_2;
protected byte C_RESAVOID6_3;
protected byte C_RESAVOID6_4;
protected byte C_RESAVOID6_5;
protected byte C_RESAVOID6_6;
protected byte C_RESAVOID6_7;
protected byte C_RESAVOID6_8;
protected byte C_RESAVOID6_9;
protected byte C_RESAVOID7_1;
protected byte C_RESAVOID7_10;
protected byte C_RESAVOID7_11;
protected byte C_RESAVOID7_12;
protected byte C_RESAVOID7_2;
protected byte C_RESAVOID7_3;
protected byte C_RESAVOID7_4;
protected byte C_RESAVOID7_5;
protected byte C_RESAVOID7_6;
protected byte C_RESAVOID7_7;
protected byte C_RESAVOID7_8;
protected byte C_RESAVOID7_9;
protected byte C_RESAVOID8_1;
protected byte C_RESAVOID8_10;
protected byte C_RESAVOID8_11;
protected byte C_RESAVOID8_12;
protected byte C_RESAVOID8_2;
protected byte C_RESAVOID8_3;
protected byte C_RESAVOID8_4;
protected byte C_RESAVOID8_5;
protected byte C_RESAVOID8_6;
protected byte C_RESAVOID8_7;
protected byte C_RESAVOID8_8;
protected byte C_RESAVOID8_9;
protected byte C_RESAVOID96_1;
protected byte C_RESAVOID96_10;
protected byte C_RESAVOID96_11;
protected byte C_RESAVOID96_12;
protected byte C_RESAVOID96_2;
protected byte C_RESAVOID96_3;
protected byte C_RESAVOID96_4;
protected byte C_RESAVOID96_5;
protected byte C_RESAVOID96_6;
protected byte C_RESAVOID96_7;
protected byte C_RESAVOID96_8;
protected byte C_RESAVOID96_9;
protected byte C_RESAVOID97_1;
protected byte C_RESAVOID97_10;
protected byte C_RESAVOID97_11;
protected byte C_RESAVOID97_12;
protected byte C_RESAVOID97_2;
protected byte C_RESAVOID97_3;
protected byte C_RESAVOID97_4;
protected byte C_RESAVOID97_5;
protected byte C_RESAVOID97_6;
protected byte C_RESAVOID97_7;
protected byte C_RESAVOID97_8;
protected byte C_RESAVOID97_9;
protected byte C_RESAVOID9_1;
protected byte C_RESAVOID9_10;
protected byte C_RESAVOID9_11;
protected byte C_RESAVOID9_12;
protected byte C_RESAVOID9_2;
protected byte C_RESAVOID9_3;
protected byte C_RESAVOID9_4;
protected byte C_RESAVOID9_5;
protected byte C_RESAVOID9_6;
protected byte C_RESAVOID9_7;
protected byte C_RESAVOID9_8;
protected byte C_RESAVOID9_9;
protected byte C_RESINSULTED1_1;
protected byte C_RESINSULTED1_10;
protected byte C_RESINSULTED1_11;
protected byte C_RESINSULTED1_12;
protected byte C_RESINSULTED1_2;
protected byte C_RESINSULTED1_3;
protected byte C_RESINSULTED1_4;
protected byte C_RESINSULTED1_5;
protected byte C_RESINSULTED1_6;
protected byte C_RESINSULTED1_7;
protected byte C_RESINSULTED1_8;
protected byte C_RESINSULTED1_9;
protected byte C_RESINSULTED2_1;
protected byte C_RESINSULTED2_10;
protected byte C_RESINSULTED2_11;
protected byte C_RESINSULTED2_12;
protected byte C_RESINSULTED2_2;
protected byte C_RESINSULTED2_3;
protected byte C_RESINSULTED2_4;
protected byte C_RESINSULTED2_5;
protected byte C_RESINSULTED2_6;
protected byte C_RESINSULTED2_7;
protected byte C_RESINSULTED2_8;
protected byte C_RESINSULTED2_9;
protected byte C_RESINSULTED3_1;
protected byte C_RESINSULTED3_10;
protected byte C_RESINSULTED3_11;
protected byte C_RESINSULTED3_12;
protected byte C_RESINSULTED3_2;
protected byte C_RESINSULTED3_3;
protected byte C_RESINSULTED3_4;
protected byte C_RESINSULTED3_5;
protected byte C_RESINSULTED3_6;
protected byte C_RESINSULTED3_7;
protected byte C_RESINSULTED3_8;
protected byte C_RESINSULTED3_9;
protected byte C_RESINSULTED4_1;
protected byte C_RESINSULTED4_10;
protected byte C_RESINSULTED4_11;
protected byte C_RESINSULTED4_12;
protected byte C_RESINSULTED4_2;
protected byte C_RESINSULTED4_3;
protected byte C_RESINSULTED4_4;
protected byte C_RESINSULTED4_5;
protected byte C_RESINSULTED4_6;
protected byte C_RESINSULTED4_7;
protected byte C_RESINSULTED4_8;
protected byte C_RESINSULTED4_9;
protected byte C_RESINSULTED5_1;
protected byte C_RESINSULTED5_10;
protected byte C_RESINSULTED5_11;
protected byte C_RESINSULTED5_12;
protected byte C_RESINSULTED5_2;
protected byte C_RESINSULTED5_3;
protected byte C_RESINSULTED5_4;
protected byte C_RESINSULTED5_5;
protected byte C_RESINSULTED5_6;
protected byte C_RESINSULTED5_7;
protected byte C_RESINSULTED5_8;
protected byte C_RESINSULTED5_9;
protected byte C_RESINSULTED6_1;
protected byte C_RESINSULTED6_10;
protected byte C_RESINSULTED6_11;
protected byte C_RESINSULTED6_12;
protected byte C_RESINSULTED6_2;
protected byte C_RESINSULTED6_3;
protected byte C_RESINSULTED6_4;
protected byte C_RESINSULTED6_5;
protected byte C_RESINSULTED6_6;
protected byte C_RESINSULTED6_7;
protected byte C_RESINSULTED6_8;
protected byte C_RESINSULTED6_9;
protected byte C_RESINSULTED7_1;
protected byte C_RESINSULTED7_10;
protected byte C_RESINSULTED7_11;
protected byte C_RESINSULTED7_12;
protected byte C_RESINSULTED7_2;
protected byte C_RESINSULTED7_3;
protected byte C_RESINSULTED7_4;
protected byte C_RESINSULTED7_5;
protected byte C_RESINSULTED7_6;
protected byte C_RESINSULTED7_7;
protected byte C_RESINSULTED7_8;
protected byte C_RESINSULTED7_9;
protected byte C_RESINSULTED8_1;
protected byte C_RESINSULTED8_10;
protected byte C_RESINSULTED8_11;
protected byte C_RESINSULTED8_12;
protected byte C_RESINSULTED8_2;
protected byte C_RESINSULTED8_3;
protected byte C_RESINSULTED8_4;
protected byte C_RESINSULTED8_5;
protected byte C_RESINSULTED8_6;
protected byte C_RESINSULTED8_7;
protected byte C_RESINSULTED8_8;
protected byte C_RESINSULTED8_9;
protected byte C_RESINSULTED96_1;
protected byte C_RESINSULTED96_10;
protected byte C_RESINSULTED96_11;
protected byte C_RESINSULTED96_12;
protected byte C_RESINSULTED96_2;
protected byte C_RESINSULTED96_3;
protected byte C_RESINSULTED96_4;
protected byte C_RESINSULTED96_5;
protected byte C_RESINSULTED96_6;
protected byte C_RESINSULTED96_7;
protected byte C_RESINSULTED96_8;
protected byte C_RESINSULTED96_9;
protected byte C_RESINSULTED97_1;
protected byte C_RESINSULTED97_10;
protected byte C_RESINSULTED97_11;
protected byte C_RESINSULTED97_12;
protected byte C_RESINSULTED97_2;
protected byte C_RESINSULTED97_3;
protected byte C_RESINSULTED97_4;
protected byte C_RESINSULTED97_5;
protected byte C_RESINSULTED97_6;
protected byte C_RESINSULTED97_7;
protected byte C_RESINSULTED97_8;
protected byte C_RESINSULTED97_9;
protected byte C_RESINSULTED9_1;
protected byte C_RESINSULTED9_10;
protected byte C_RESINSULTED9_11;
protected byte C_RESINSULTED9_12;
protected byte C_RESINSULTED9_2;
protected byte C_RESINSULTED9_3;
protected byte C_RESINSULTED9_4;
protected byte C_RESINSULTED9_5;
protected byte C_RESINSULTED9_6;
protected byte C_RESINSULTED9_7;
protected byte C_RESINSULTED9_8;
protected byte C_RESINSULTED9_9;
protected byte C_RESJOBDENY1;
protected byte C_RESJOBDENY2;
protected byte C_RESJOBDENY3;
protected byte C_RESJOBDENY4;
protected byte C_RESJOBDENY5;
protected byte C_RESJOBDENY6;
protected byte C_RESJOBDENY7;
protected byte C_RESJOBDENY8;
protected byte C_RESJOBDENY9;
protected byte C_RESJOBDENY96;
protected byte C_RESJOBDENY97;
protected boolean C_RESPF16;
protected boolean C_RESPF16_DV;
protected boolean C_RESPM16;
protected boolean C_RESPM16_DV;
protected byte C_RESPROMDENY1;
protected byte C_RESPROMDENY2;
protected byte C_RESPROMDENY3;
protected byte C_RESPROMDENY4;
protected byte C_RESPROMDENY5;
protected byte C_RESPROMDENY6;
protected byte C_RESPROMDENY7;
protected byte C_RESPROMDENY8;
protected byte C_RESPROMDENY9;
protected byte C_RESPROMDENY96;
protected byte C_RESPROMDENY97;
protected byte C_RESTRAINDENY1;
protected byte C_RESTRAINDENY2;
protected byte C_RESTRAINDENY3;
protected byte C_RESTRAINDENY4;
protected byte C_RESTRAINDENY5;
protected byte C_RESTRAINDENY6;
protected byte C_RESTRAINDENY7;
protected byte C_RESTRAINDENY8;
protected byte C_RESTRAINDENY9;
protected byte C_RESTRAINDENY96;
protected byte C_RESTRAINDENY97;
protected byte C_RESUNSAFE1_1;
protected byte C_RESUNSAFE1_10;
protected byte C_RESUNSAFE1_11;
protected byte C_RESUNSAFE1_12;
protected byte C_RESUNSAFE1_2;
protected byte C_RESUNSAFE1_3;
protected byte C_RESUNSAFE1_4;
protected byte C_RESUNSAFE1_5;
protected byte C_RESUNSAFE1_6;
protected byte C_RESUNSAFE1_7;
protected byte C_RESUNSAFE1_8;
protected byte C_RESUNSAFE1_9;
protected byte C_RESUNSAFE2_1;
protected byte C_RESUNSAFE2_10;
protected byte C_RESUNSAFE2_11;
protected byte C_RESUNSAFE2_12;
protected byte C_RESUNSAFE2_2;
protected byte C_RESUNSAFE2_3;
protected byte C_RESUNSAFE2_4;
protected byte C_RESUNSAFE2_5;
protected byte C_RESUNSAFE2_6;
protected byte C_RESUNSAFE2_7;
protected byte C_RESUNSAFE2_8;
protected byte C_RESUNSAFE2_9;
protected byte C_RESUNSAFE3_1;
protected byte C_RESUNSAFE3_10;
protected byte C_RESUNSAFE3_11;
protected byte C_RESUNSAFE3_12;
protected byte C_RESUNSAFE3_2;
protected byte C_RESUNSAFE3_3;
protected byte C_RESUNSAFE3_4;
protected byte C_RESUNSAFE3_5;
protected byte C_RESUNSAFE3_6;
protected byte C_RESUNSAFE3_7;
protected byte C_RESUNSAFE3_8;
protected byte C_RESUNSAFE3_9;
protected byte C_RESUNSAFE4_1;
protected byte C_RESUNSAFE4_10;
protected byte C_RESUNSAFE4_11;
protected byte C_RESUNSAFE4_12;
protected byte C_RESUNSAFE4_2;
protected byte C_RESUNSAFE4_3;
protected byte C_RESUNSAFE4_4;
protected byte C_RESUNSAFE4_5;
protected byte C_RESUNSAFE4_6;
protected byte C_RESUNSAFE4_7;
protected byte C_RESUNSAFE4_8;
protected byte C_RESUNSAFE4_9;
protected byte C_RESUNSAFE5_1;
protected byte C_RESUNSAFE5_10;
protected byte C_RESUNSAFE5_11;
protected byte C_RESUNSAFE5_12;
protected byte C_RESUNSAFE5_2;
protected byte C_RESUNSAFE5_3;
protected byte C_RESUNSAFE5_4;
protected byte C_RESUNSAFE5_5;
protected byte C_RESUNSAFE5_6;
protected byte C_RESUNSAFE5_7;
protected byte C_RESUNSAFE5_8;
protected byte C_RESUNSAFE5_9;
protected byte C_RESUNSAFE6_1;
protected byte C_RESUNSAFE6_10;
protected byte C_RESUNSAFE6_11;
protected byte C_RESUNSAFE6_12;
protected byte C_RESUNSAFE6_2;
protected byte C_RESUNSAFE6_3;
protected byte C_RESUNSAFE6_4;
protected byte C_RESUNSAFE6_5;
protected byte C_RESUNSAFE6_6;
protected byte C_RESUNSAFE6_7;
protected byte C_RESUNSAFE6_8;
protected byte C_RESUNSAFE6_9;
protected byte C_RESUNSAFE7_1;
protected byte C_RESUNSAFE7_10;
protected byte C_RESUNSAFE7_11;
protected byte C_RESUNSAFE7_12;
protected byte C_RESUNSAFE7_2;
protected byte C_RESUNSAFE7_3;
protected byte C_RESUNSAFE7_4;
protected byte C_RESUNSAFE7_5;
protected byte C_RESUNSAFE7_6;
protected byte C_RESUNSAFE7_7;
protected byte C_RESUNSAFE7_8;
protected byte C_RESUNSAFE7_9;
protected byte C_RESUNSAFE8_1;
protected byte C_RESUNSAFE8_10;
protected byte C_RESUNSAFE8_11;
protected byte C_RESUNSAFE8_12;
protected byte C_RESUNSAFE8_2;
protected byte C_RESUNSAFE8_3;
protected byte C_RESUNSAFE8_4;
protected byte C_RESUNSAFE8_5;
protected byte C_RESUNSAFE8_6;
protected byte C_RESUNSAFE8_7;
protected byte C_RESUNSAFE8_8;
protected byte C_RESUNSAFE8_9;
protected byte C_RESUNSAFE96_1;
protected byte C_RESUNSAFE96_10;
protected byte C_RESUNSAFE96_11;
protected byte C_RESUNSAFE96_12;
protected byte C_RESUNSAFE96_2;
protected byte C_RESUNSAFE96_3;
protected byte C_RESUNSAFE96_4;
protected byte C_RESUNSAFE96_5;
protected byte C_RESUNSAFE96_6;
protected byte C_RESUNSAFE96_7;
protected byte C_RESUNSAFE96_8;
protected byte C_RESUNSAFE96_9;
protected byte C_RESUNSAFE97_1;
protected byte C_RESUNSAFE97_10;
protected byte C_RESUNSAFE97_11;
protected byte C_RESUNSAFE97_12;
protected byte C_RESUNSAFE97_2;
protected byte C_RESUNSAFE97_3;
protected byte C_RESUNSAFE97_4;
protected byte C_RESUNSAFE97_5;
protected byte C_RESUNSAFE97_6;
protected byte C_RESUNSAFE97_7;
protected byte C_RESUNSAFE97_8;
protected byte C_RESUNSAFE97_9;
protected byte C_RESUNSAFE9_1;
protected byte C_RESUNSAFE9_10;
protected byte C_RESUNSAFE9_11;
protected byte C_RESUNSAFE9_12;
protected byte C_RESUNSAFE9_2;
protected byte C_RESUNSAFE9_3;
protected byte C_RESUNSAFE9_4;
protected byte C_RESUNSAFE9_5;
protected byte C_RESUNSAFE9_6;
protected byte C_RESUNSAFE9_7;
protected byte C_RESUNSAFE9_8;
protected byte C_RESUNSAFE9_9;
protected byte C_RETAMT;
protected byte C_RETCHK;
protected byte C_RETSUF;
protected byte C_RHLAND_CODE;
protected byte C_RPHMOB_CODE;
protected byte C_RPHWRK_CODE;
protected byte C_RTCON1;
protected byte C_RTCON2;
protected byte C_RTCON3;
protected byte C_RTCON4;
protected byte C_RTEXPJB;
protected byte C_RTFND1;
protected byte C_RTFND10;
protected byte C_RTFND2;
protected byte C_RTFND3;
protected byte C_RTFND4;
protected byte C_RTFND5;
protected byte C_RTFND6;
protected byte C_RTFND7;
protected byte C_RTFND8;
protected byte C_RTFND9;
protected byte C_RTFND96;
protected byte C_RTPRO1;
protected byte C_RTPRO2;
protected byte C_RTPRO3;
protected byte C_RTPRO4;
protected byte C_RTPRO5;
protected byte C_RTPRO6;
protected byte C_RULESKID;
protected byte C_SAMEJOB;
protected byte C_SAMPST;
protected byte C_SATTRANSY1;
protected byte C_SATTRANSY10;
protected byte C_SATTRANSY2;
protected byte C_SATTRANSY3;
protected byte C_SATTRANSY4;
protected byte C_SATTRANSY5;
protected byte C_SATTRANSY6;
protected byte C_SATTRANSY7;
protected byte C_SATTRANSY8;
protected byte C_SATTRANSY9;
protected byte C_SATTRANSY97;
protected byte C_SCAC;
protected byte C_SCDASSAT_DV;
protected byte C_SCEND;
protected boolean C_SCFLAG_DV;
protected byte C_SCGHQ1_DV;
protected byte C_SCGHQ2_DV;
protected byte C_SCGHQA;
protected byte C_SCGHQB;
protected byte C_SCGHQC;
protected byte C_SCGHQD;
protected byte C_SCGHQE;
protected byte C_SCGHQF;
protected byte C_SCGHQG;
protected byte C_SCGHQH;
protected byte C_SCGHQI;
protected byte C_SCGHQJ;
protected byte C_SCGHQK;
protected byte C_SCGHQL;
protected byte C_SCHLLOC;
protected byte C_SCHOK;
protected byte C_SCHOOL;
protected byte C_SCLFSAT1;
protected byte C_SCLFSAT2;
protected byte C_SCLFSAT7;
protected byte C_SCLFSATO;
protected byte C_SCOPNGBHA;
protected byte C_SCOPNGBHB;
protected byte C_SCOPNGBHC;
protected byte C_SCOPNGBHD;
protected byte C_SCOPNGBHE;
protected byte C_SCOPNGBHF;
protected byte C_SCOPNGBHG;
protected byte C_SCOPNGBHH;
protected byte C_SCPAROUTINT;
protected byte C_SCPTRT5A1;
protected byte C_SCPTRT5A2;
protected byte C_SCPTRT5A3;
protected byte C_SCPTRT5C1;
protected byte C_SCPTRT5C2;
protected byte C_SCPTRT5C3;
protected byte C_SCPTRT5E1;
protected byte C_SCPTRT5E2;
protected byte C_SCPTRT5E3;
protected byte C_SCPTRT5N1;
protected byte C_SCPTRT5N2;
protected byte C_SCPTRT5N3;
protected byte C_SCPTRT5O1;
protected byte C_SCPTRT5O2;
protected byte C_SCPTRT5O3;
protected byte C_SCRELHAPPY;
protected byte C_SCRELPARAR;
protected byte C_SCRELPARCD;
protected byte C_SCRELPARDS;
protected byte C_SCRELPAREI;
protected byte C_SCRELPARIR;
protected byte C_SCRELPARKS;
protected byte C_SCRELPARRG;
protected byte C_SCRELPARWT;
protected byte C_SCRF1;
protected byte C_SCRF2;
protected byte C_SCRF3;
protected byte C_SCRF4;
protected byte C_SCRF5;
protected byte C_SCRF6;
protected byte C_SCRF97;
protected byte C_SCRX_CODE;
protected byte C_SCSF1;
protected byte C_SCSF2A;
protected byte C_SCSF2B;
protected byte C_SCSF3A;
protected byte C_SCSF3B;
protected byte C_SCSF4A;
protected byte C_SCSF4B;
protected byte C_SCSF5;
protected byte C_SCSF6A;
protected byte C_SCSF6B;
protected byte C_SCSF6C;
protected byte C_SCSF7;
protected byte C_SCUN1;
protected byte C_SCUN2;
protected byte C_SCUN3;
protected byte C_SCUN97;
protected byte C_SCUX_CODE;
protected double C_SEEARNGRS_DV;
protected byte C_SEEARNGRS_IF;
protected double C_SEEARNNET_DV;
protected byte C_SEEKID;
protected byte C_SERVACC;
protected byte C_SERVACCY1;
protected byte C_SERVACCY10;
protected byte C_SERVACCY11;
protected byte C_SERVACCY12;
protected byte C_SERVACCY13;
protected byte C_SERVACCY14;
protected byte C_SERVACCY15;
protected byte C_SERVACCY2;
protected byte C_SERVACCY3;
protected byte C_SERVACCY4;
protected byte C_SERVACCY5;
protected byte C_SERVACCY6;
protected byte C_SERVACCY7;
protected byte C_SERVACCY8;
protected byte C_SERVACCY9;
protected byte C_SERVACCY97;
protected byte C_SEVENSPAP;
protected boolean C_SEX;
protected byte C_SEXUOR;
protected byte C_SEX_DV;
protected byte C_SF1;
protected double C_SF12MCS_DV;
protected double C_SF12PCS_DV;
protected byte C_SIBHIT;
protected byte C_SIBSTEAL;
protected byte C_SIBTEASE;
protected byte C_SIBVERAB;
protected byte C_SIMAGE;
protected byte C_SIMAREA;
protected byte C_SIMEDUC;
protected byte C_SIMFAM;
protected byte C_SIMINC;
protected byte C_SIMJOB;
protected byte C_SIMRACE;
protected boolean C_SINGLE_DV;
protected byte C_SLAPKID;
protected byte C_SMKMNTH11;
protected byte C_SMKMNTH12;
protected boolean C_SMKMNTH13;
protected byte C_SMKMNTH21;
protected byte C_SMKMNTH22;
protected boolean C_SMKMNTH23;
protected byte C_SMKMNTH31;
protected byte C_SMKMNTH32;
protected boolean C_SMKMNTH33;
protected byte C_SMOFRQ;
protected byte C_SOCIALKID;
protected byte C_SOCWEB;
protected byte C_SPPEN;
protected int C_SPPID;
protected byte C_SPPNO;
protected byte C_STATCM1;
protected byte C_STATCM2;
protected short C_STATCY41;
protected short C_STATCY42;
protected byte C_STATENDD1;
protected byte C_STATENDD2;
protected byte C_STATENDD3;
protected byte C_STATENDD4;
protected byte C_STATENDD5;
protected byte C_STATENDD6;
protected byte C_STATENDD7;
protected byte C_STATENDD8;
protected boolean C_STATENDD9;
protected byte C_STATENDM1;
protected byte C_STATENDM2;
protected byte C_STATENDM3;
protected byte C_STATENDM4;
protected byte C_STATENDM5;
protected byte C_STATENDM6;
protected byte C_STATENDM7;
protected byte C_STATENDM8;
protected boolean C_STATENDM9;
protected short C_STATENDY41;
protected short C_STATENDY42;
protected short C_STATENDY43;
protected short C_STATENDY44;
protected short C_STATENDY45;
protected short C_STATENDY46;
protected short C_STATENDY47;
protected short C_STATENDY48;
protected boolean C_STATENDY49;
protected byte C_STEALSIB;
protected byte C_STENDREAS;
protected byte C_STEPREL;
protected short C_STRATA;
protected byte C_SUB7STOP1;
protected byte C_SUB7STOP2;
protected byte C_SUB7STOP3;
protected byte C_SUB7STOP4;
protected byte C_SUB7STOP5;
protected byte C_SUB7STOP6;
protected byte C_SUB7STOP7;
protected byte C_SUB7STOP8;
protected byte C_SUB7STOP97;
protected byte C_SUB7_1;
protected byte C_SUB7_2;
protected byte C_SUB7_3;
protected byte C_SUB7_4;
protected byte C_SUB7_5;
protected byte C_SUBCONT11;
protected byte C_SUBCONT12;
protected byte C_SUBCONT13;
protected byte C_SUBCONT21;
protected byte C_SUBCONT210;
protected byte C_SUBCONT211;
protected byte C_SUBCONT212;
protected byte C_SUBCONT213;
protected byte C_SUBCONT214;
protected byte C_SUBCONT215;
protected byte C_SUBCONT216;
protected byte C_SUBCONT22;
protected byte C_SUBCONT23;
protected byte C_SUBCONT24;
protected byte C_SUBCONT25;
protected byte C_SUBCONT26;
protected byte C_SUBCONT27;
protected byte C_SUBCONT28;
protected byte C_SUBCONT29;
protected byte C_SUBCONT3;
protected byte C_SUSP;
protected byte C_TALKMATTER;
protected byte C_TEASESIB;
protected byte C_TLKF;
protected byte C_TLKM;
protected byte C_TRAINANY;
protected short C_TRAINDAYS1;
protected short C_TRAINDAYS2;
protected short C_TRAINDAYS3;
protected byte C_TRAINDENY;
protected byte C_TRAINEND1;
protected byte C_TRAINEND2;
protected byte C_TRAINEND3;
protected byte C_TRAINHRS1;
protected byte C_TRAINHRS2;
protected byte C_TRAINHRS3;
protected byte C_TRAINN;
protected byte C_TRAINPURP11;
protected byte C_TRAINPURP12;
protected byte C_TRAINPURP13;
protected byte C_TRAINPURP21;
protected byte C_TRAINPURP22;
protected byte C_TRAINPURP23;
protected byte C_TRAINPURP31;
protected byte C_TRAINPURP32;
protected byte C_TRAINPURP33;
protected byte C_TRAINPURP41;
protected byte C_TRAINPURP42;
protected byte C_TRAINPURP43;
protected byte C_TRAINPURP51;
protected byte C_TRAINPURP52;
protected byte C_TRAINPURP53;
protected byte C_TRAINPURP61;
protected byte C_TRAINPURP62;
protected byte C_TRAINPURP63;
protected byte C_TRAINPURP71;
protected byte C_TRAINPURP72;
protected byte C_TRAINPURP73;
protected byte C_TRAINQUAL1;
protected byte C_TRAINQUAL2;
protected byte C_TRAINQUAL3;
protected byte C_TRQUAL1;
protected byte C_TRQUAL10;
protected byte C_TRQUAL11;
protected byte C_TRQUAL13;
protected byte C_TRQUAL15;
protected byte C_TRQUAL16;
protected byte C_TRQUAL17;
protected byte C_TRQUAL18;
protected byte C_TRQUAL19;
protected byte C_TRQUAL2;
protected byte C_TRQUAL20;
protected byte C_TRQUAL21;
protected byte C_TRQUAL22;
protected byte C_TRQUAL23;
protected byte C_TRQUAL24;
protected byte C_TRQUAL25;
protected byte C_TRQUAL26;
protected byte C_TRQUAL27;
protected byte C_TRQUAL28;
protected byte C_TRQUAL29;
protected byte C_TRQUAL3;
protected byte C_TRQUAL30;
protected byte C_TRQUAL31;
protected byte C_TRQUAL4;
protected byte C_TRQUAL5;
protected byte C_TRQUAL6;
protected byte C_TRQUAL7;
protected byte C_TRQUAL8;
protected byte C_TRQUAL9;
protected byte C_TRWHO1;
protected byte C_TRWHO2;
protected byte C_TRWHO3;
protected double C_TVHOURS;
protected byte C_TVM2;
protected byte C_UKBORN;
protected byte C_UNDQUS;
protected byte C_UNSAFE1;
protected byte C_UNSAFE10;
protected byte C_UNSAFE11;
protected byte C_UNSAFE2;
protected byte C_UNSAFE3;
protected byte C_UNSAFE4;
protected byte C_UNSAFE5;
protected byte C_UNSAFE6;
protected byte C_UNSAFE7;
protected byte C_UNSAFE8;
protected byte C_UNSAFE9;
protected byte C_UNSAFE96;
protected byte C_UNSAFE97;
protected byte C_UNSAFEO_CODE;
protected byte C_UNSAFE_DV;
protected byte C_UPSET;
protected byte C_URBAN_DV;
protected byte C_VERABSIB;
protected byte C_VFCONT11;
protected byte C_VFCONT12;
protected byte C_VFCONT13;
protected byte C_VFCONT21;
protected byte C_VFCONT210;
protected byte C_VFCONT211;
protected byte C_VFCONT212;
protected byte C_VFCONT213;
protected byte C_VFCONT214;
protected byte C_VFCONT215;
protected byte C_VFCONT216;
protected byte C_VFCONT22;
protected byte C_VFCONT23;
protected byte C_VFCONT24;
protected byte C_VFCONT25;
protected byte C_VFCONT26;
protected byte C_VFCONT27;
protected byte C_VFCONT28;
protected byte C_VFCONT29;
protected byte C_VFCONT3;
protected byte C_VFCT;
protected byte C_VFPRE;
protected byte C_VFSTOP1;
protected byte C_VFSTOP2;
protected byte C_VFSTOP3;
protected byte C_VFSTOP4;
protected byte C_VFSTOP5;
protected byte C_VFSTOP6;
protected byte C_VFSTOP7;
protected byte C_VFSTOP8;
protected byte C_VFSTOP97;
protected byte C_VFTCTW;
protected byte C_VISFAM;
protected byte C_VISFAMY1;
protected byte C_VISFAMY10;
protected byte C_VISFAMY11;
protected byte C_VISFAMY12;
protected byte C_VISFAMY13;
protected byte C_VISFAMY14;
protected byte C_VISFAMY15;
protected byte C_VISFAMY2;
protected byte C_VISFAMY3;
protected byte C_VISFAMY4;
protected byte C_VISFAMY5;
protected byte C_VISFAMY6;
protected byte C_VISFAMY7;
protected byte C_VISFAMY8;
protected byte C_VISFAMY9;
protected byte C_VISFAMY97;
protected byte C_VISFRNDS;
protected byte C_VISFRNDSY1;
protected byte C_VISFRNDSY10;
protected byte C_VISFRNDSY11;
protected byte C_VISFRNDSY12;
protected byte C_VISFRNDSY13;
protected byte C_VISFRNDSY14;
protected byte C_VISFRNDSY2;
protected byte C_VISFRNDSY3;
protected byte C_VISFRNDSY4;
protected byte C_VISFRNDSY5;
protected byte C_VISFRNDSY6;
protected byte C_VISFRNDSY7;
protected byte C_VISFRNDSY8;
protected byte C_VISFRNDSY9;
protected byte C_VISFRNDSY97;
protected byte C_VOLRECPER;
protected byte C_VOTE1;
protected byte C_VOTE2;
protected byte C_VOTE3;
protected byte C_VOTE4;
protected byte C_VOTE5;
protected byte C_VOTE6;
protected byte C_VOTEINTENT;
protected byte C_VOTENORM;
protected byte C_WEKID;
protected byte C_WHORUAGE;
protected byte C_WHORUEDU;
protected byte C_WHORUFAM;
protected byte C_WHORUPOL;
protected byte C_WHORUPRO;
protected byte C_WHORURAC;
protected byte C_WHORUSEX;
protected byte C_WKPLSAM;
protected byte C_WORDS1;
protected byte C_WORDS2;
protected byte C_WORDS3;
protected byte C_WORDS4;
protected byte C_WORKTRAV;
protected byte C_WRCOMPPRE;
protected byte C_WRDRCL;
protected byte C_WRDRECPRE;
protected byte C_WRINTPRE;
protected byte C_XPMOVE;
protected byte C_XTRA5MINOSM_DV;
protected byte C_XTRA5MIN_DV;
protected byte C_YAJBSRV1;
protected byte C_YAJBSRV2;
protected byte C_YAJBSRV3;
protected byte C_YAJBSRV4;
protected byte C_YAJBSRV5;
protected byte C_YAJBSRV6;
protected byte C_YAJBSRV7;
protected byte C_YAJBSRV96;
protected byte C_YANSSEC5_DV;
protected short C_YASOC00_CC;
protected short C_YASOC10_CC;
protected byte C_YASOC90_CC;
protected byte C_YELLKID;
protected short C_YR2UK4;
protected final void initC_ADCTS(String s) {
if (!s.trim().isEmpty()) {
C_ADCTS = Byte.parseByte(s);
} else {
C_ADCTS = Byte.MIN_VALUE;
}
}

protected final void initC_ADOPTCH01(String s) {
if (!s.trim().isEmpty()) {
C_ADOPTCH01 = Byte.parseByte(s);
} else {
C_ADOPTCH01 = Byte.MIN_VALUE;
}
}

protected final void initC_ADOPTCH02(String s) {
if (!s.trim().isEmpty()) {
C_ADOPTCH02 = Byte.parseByte(s);
} else {
C_ADOPTCH02 = Byte.MIN_VALUE;
}
}

protected final void initC_ADOPTCH03(String s) {
if (!s.trim().isEmpty()) {
C_ADOPTCH03 = Byte.parseByte(s);
} else {
C_ADOPTCH03 = Byte.MIN_VALUE;
}
}

protected final void initC_ADOPTCH04(String s) {
if (!s.trim().isEmpty()) {
C_ADOPTCH04 = Byte.parseByte(s);
} else {
C_ADOPTCH04 = Byte.MIN_VALUE;
}
}

protected final void initC_ADOPTCH05(String s) {
if (!s.trim().isEmpty()) {
C_ADOPTCH05 = Byte.parseByte(s);
} else {
C_ADOPTCH05 = Byte.MIN_VALUE;
}
}

protected final void initC_ADOPTCH06(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH06 = false;
} else {
C_ADOPTCH06 = true;
}
}
}

protected final void initC_ADOPTCH07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH07 = false;
} else {
C_ADOPTCH07 = true;
}
}
}

protected final void initC_ADOPTCH08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH08 = false;
} else {
C_ADOPTCH08 = true;
}
}
}

protected final void initC_ADOPTCH09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH09 = false;
} else {
C_ADOPTCH09 = true;
}
}
}

protected final void initC_ADOPTCH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH10 = false;
} else {
C_ADOPTCH10 = true;
}
}
}

protected final void initC_ADOPTCH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH11 = false;
} else {
C_ADOPTCH11 = true;
}
}
}

protected final void initC_ADOPTCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH12 = false;
} else {
C_ADOPTCH12 = true;
}
}
}

protected final void initC_ADOPTCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH13 = false;
} else {
C_ADOPTCH13 = true;
}
}
}

protected final void initC_ADOPTCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH14 = false;
} else {
C_ADOPTCH14 = true;
}
}
}

protected final void initC_ADOPTCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH15 = false;
} else {
C_ADOPTCH15 = true;
}
}
}

protected final void initC_ADOPTCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ADOPTCH16 = false;
} else {
C_ADOPTCH16 = true;
}
}
}

protected final void initC_ADSTATUS(String s) {
if (!s.trim().isEmpty()) {
C_ADSTATUS = Byte.parseByte(s);
} else {
C_ADSTATUS = Byte.MIN_VALUE;
}
}

protected final void initC_AEDROF1(String s) {
if (!s.trim().isEmpty()) {
C_AEDROF1 = Byte.parseByte(s);
} else {
C_AEDROF1 = Byte.MIN_VALUE;
}
}

protected final void initC_AEDROF2(String s) {
if (!s.trim().isEmpty()) {
C_AEDROF2 = Byte.parseByte(s);
} else {
C_AEDROF2 = Byte.MIN_VALUE;
}
}

protected final void initC_AEDROF3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_AEDROF3 = false;
} else {
C_AEDROF3 = true;
}
}
}

protected final void initC_AEPUDA1(String s) {
if (!s.trim().isEmpty()) {
C_AEPUDA1 = Double.parseDouble(s);
} else {
C_AEPUDA1 = Double.NaN;
}
}

protected final void initC_AEPUDA2(String s) {
if (!s.trim().isEmpty()) {
C_AEPUDA2 = Byte.parseByte(s);
} else {
C_AEPUDA2 = Byte.MIN_VALUE;
}
}

protected final void initC_AEPUDA3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_AEPUDA3 = false;
} else {
C_AEPUDA3 = true;
}
}
}

protected final void initC_AEPUWK1(String s) {
if (!s.trim().isEmpty()) {
C_AEPUWK1 = Byte.parseByte(s);
} else {
C_AEPUWK1 = Byte.MIN_VALUE;
}
}

protected final void initC_AEPUWK2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_AEPUWK2 = false;
} else {
C_AEPUWK2 = true;
}
}
}

protected final void initC_AEPUWK3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_AEPUWK3 = false;
} else {
C_AEPUWK3 = true;
}
}
}

protected final void initC_AGEGR10_DV(String s) {
if (!s.trim().isEmpty()) {
C_AGEGR10_DV = Byte.parseByte(s);
} else {
C_AGEGR10_DV = Byte.MIN_VALUE;
}
}

protected final void initC_AGEGR13_DV(String s) {
if (!s.trim().isEmpty()) {
C_AGEGR13_DV = Byte.parseByte(s);
} else {
C_AGEGR13_DV = Byte.MIN_VALUE;
}
}

protected final void initC_AGEGR5_DV(String s) {
if (!s.trim().isEmpty()) {
C_AGEGR5_DV = Byte.parseByte(s);
} else {
C_AGEGR5_DV = Byte.MIN_VALUE;
}
}

protected final void initC_AGERET(String s) {
if (!s.trim().isEmpty()) {
C_AGERET = Byte.parseByte(s);
} else {
C_AGERET = Byte.MIN_VALUE;
}
}

protected final void initC_AGE_DV(String s) {
if (!s.trim().isEmpty()) {
C_AGE_DV = Byte.parseByte(s);
} else {
C_AGE_DV = Byte.MIN_VALUE;
}
}

protected final void initC_AHVWELL(String s) {
if (!s.trim().isEmpty()) {
C_AHVWELL = Byte.parseByte(s);
} else {
C_AHVWELL = Byte.MIN_VALUE;
}
}

protected final void initC_AIDEFT(String s) {
if (!s.trim().isEmpty()) {
C_AIDEFT = Byte.parseByte(s);
} else {
C_AIDEFT = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHH(String s) {
if (!s.trim().isEmpty()) {
C_AIDHH = Byte.parseByte(s);
} else {
C_AIDHH = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHRS(String s) {
if (!s.trim().isEmpty()) {
C_AIDHRS = Byte.parseByte(s);
} else {
C_AIDHRS = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHU1(String s) {
if (!s.trim().isEmpty()) {
C_AIDHU1 = Byte.parseByte(s);
} else {
C_AIDHU1 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHU2(String s) {
if (!s.trim().isEmpty()) {
C_AIDHU2 = Byte.parseByte(s);
} else {
C_AIDHU2 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA1(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA1 = Byte.parseByte(s);
} else {
C_AIDHUA1 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA10(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA10 = Byte.parseByte(s);
} else {
C_AIDHUA10 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA11(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA11 = Byte.parseByte(s);
} else {
C_AIDHUA11 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA12(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA12 = Byte.parseByte(s);
} else {
C_AIDHUA12 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA13(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA13 = Byte.parseByte(s);
} else {
C_AIDHUA13 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA14(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA14 = Byte.parseByte(s);
} else {
C_AIDHUA14 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA15(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA15 = Byte.parseByte(s);
} else {
C_AIDHUA15 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA16(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA16 = Byte.parseByte(s);
} else {
C_AIDHUA16 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA2(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA2 = Byte.parseByte(s);
} else {
C_AIDHUA2 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA3(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA3 = Byte.parseByte(s);
} else {
C_AIDHUA3 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA4(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA4 = Byte.parseByte(s);
} else {
C_AIDHUA4 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA5(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA5 = Byte.parseByte(s);
} else {
C_AIDHUA5 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA6(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA6 = Byte.parseByte(s);
} else {
C_AIDHUA6 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA7(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA7 = Byte.parseByte(s);
} else {
C_AIDHUA7 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA8(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA8 = Byte.parseByte(s);
} else {
C_AIDHUA8 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDHUA9(String s) {
if (!s.trim().isEmpty()) {
C_AIDHUA9 = Byte.parseByte(s);
} else {
C_AIDHUA9 = Byte.MIN_VALUE;
}
}

protected final void initC_AIDXHH(String s) {
if (!s.trim().isEmpty()) {
C_AIDXHH = Byte.parseByte(s);
} else {
C_AIDXHH = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH01(String s) {
if (!s.trim().isEmpty()) {
C_ALLCH01 = Byte.parseByte(s);
} else {
C_ALLCH01 = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH02(String s) {
if (!s.trim().isEmpty()) {
C_ALLCH02 = Byte.parseByte(s);
} else {
C_ALLCH02 = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH03(String s) {
if (!s.trim().isEmpty()) {
C_ALLCH03 = Byte.parseByte(s);
} else {
C_ALLCH03 = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH04(String s) {
if (!s.trim().isEmpty()) {
C_ALLCH04 = Byte.parseByte(s);
} else {
C_ALLCH04 = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH05(String s) {
if (!s.trim().isEmpty()) {
C_ALLCH05 = Byte.parseByte(s);
} else {
C_ALLCH05 = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH06(String s) {
if (!s.trim().isEmpty()) {
C_ALLCH06 = Byte.parseByte(s);
} else {
C_ALLCH06 = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH07(String s) {
if (!s.trim().isEmpty()) {
C_ALLCH07 = Byte.parseByte(s);
} else {
C_ALLCH07 = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH08(String s) {
if (!s.trim().isEmpty()) {
C_ALLCH08 = Byte.parseByte(s);
} else {
C_ALLCH08 = Byte.MIN_VALUE;
}
}

protected final void initC_ALLCH09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ALLCH09 = false;
} else {
C_ALLCH09 = true;
}
}
}

protected final void initC_ALLCH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ALLCH10 = false;
} else {
C_ALLCH10 = true;
}
}
}

protected final void initC_ALLCH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ALLCH11 = false;
} else {
C_ALLCH11 = true;
}
}
}

protected final void initC_ALLCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ALLCH12 = false;
} else {
C_ALLCH12 = true;
}
}
}

protected final void initC_ALLCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ALLCH13 = false;
} else {
C_ALLCH13 = true;
}
}
}

protected final void initC_ALLCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ALLCH14 = false;
} else {
C_ALLCH14 = true;
}
}
}

protected final void initC_ALLCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ALLCH15 = false;
} else {
C_ALLCH15 = true;
}
}
}

protected final void initC_ALLCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_ALLCH16 = false;
} else {
C_ALLCH16 = true;
}
}
}

protected final void initC_APVOCIMP(String s) {
if (!s.trim().isEmpty()) {
C_APVOCIMP = Byte.parseByte(s);
} else {
C_APVOCIMP = Byte.MIN_VALUE;
}
}

protected final void initC_AREA(String s) {
if (!s.trim().isEmpty()) {
C_AREA = Byte.parseByte(s);
} else {
C_AREA = Byte.MIN_VALUE;
}
}

protected final void initC_ARGF(String s) {
if (!s.trim().isEmpty()) {
C_ARGF = Byte.parseByte(s);
} else {
C_ARGF = Byte.MIN_VALUE;
}
}

protected final void initC_ARGM(String s) {
if (!s.trim().isEmpty()) {
C_ARGM = Byte.parseByte(s);
} else {
C_ARGM = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED1(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED1 = Byte.parseByte(s);
} else {
C_ATTACKED1 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED10(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED10 = Byte.parseByte(s);
} else {
C_ATTACKED10 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED11(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED11 = Byte.parseByte(s);
} else {
C_ATTACKED11 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED2(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED2 = Byte.parseByte(s);
} else {
C_ATTACKED2 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED3(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED3 = Byte.parseByte(s);
} else {
C_ATTACKED3 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED4(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED4 = Byte.parseByte(s);
} else {
C_ATTACKED4 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED5(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED5 = Byte.parseByte(s);
} else {
C_ATTACKED5 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED6(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED6 = Byte.parseByte(s);
} else {
C_ATTACKED6 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED7(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED7 = Byte.parseByte(s);
} else {
C_ATTACKED7 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED8(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED8 = Byte.parseByte(s);
} else {
C_ATTACKED8 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED9(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED9 = Byte.parseByte(s);
} else {
C_ATTACKED9 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED96(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED96 = Byte.parseByte(s);
} else {
C_ATTACKED96 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED97(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED97 = Byte.parseByte(s);
} else {
C_ATTACKED97 = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKEDO_CODE(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKEDO_CODE = Byte.parseByte(s);
} else {
C_ATTACKEDO_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_ATTACKED_DV(String s) {
if (!s.trim().isEmpty()) {
C_ATTACKED_DV = Byte.parseByte(s);
} else {
C_ATTACKED_DV = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE1(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE1 = Byte.parseByte(s);
} else {
C_AVOIDANCE1 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE10(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE10 = Byte.parseByte(s);
} else {
C_AVOIDANCE10 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE11(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE11 = Byte.parseByte(s);
} else {
C_AVOIDANCE11 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE2(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE2 = Byte.parseByte(s);
} else {
C_AVOIDANCE2 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE3(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE3 = Byte.parseByte(s);
} else {
C_AVOIDANCE3 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE4(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE4 = Byte.parseByte(s);
} else {
C_AVOIDANCE4 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE5(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE5 = Byte.parseByte(s);
} else {
C_AVOIDANCE5 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE6(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE6 = Byte.parseByte(s);
} else {
C_AVOIDANCE6 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE7(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE7 = Byte.parseByte(s);
} else {
C_AVOIDANCE7 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE8(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE8 = Byte.parseByte(s);
} else {
C_AVOIDANCE8 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE9(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE9 = Byte.parseByte(s);
} else {
C_AVOIDANCE9 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE96(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE96 = Byte.parseByte(s);
} else {
C_AVOIDANCE96 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCE97(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCE97 = Byte.parseByte(s);
} else {
C_AVOIDANCE97 = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDANCEO_CODE(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDANCEO_CODE = Byte.parseByte(s);
} else {
C_AVOIDANCEO_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_AVOIDED_DV(String s) {
if (!s.trim().isEmpty()) {
C_AVOIDED_DV = Byte.parseByte(s);
} else {
C_AVOIDED_DV = Byte.MIN_VALUE;
}
}

protected final void initC_BASNSA(String s) {
if (!s.trim().isEmpty()) {
C_BASNSA = Byte.parseByte(s);
} else {
C_BASNSA = Byte.MIN_VALUE;
}
}

protected final void initC_BASRATE(String s) {
if (!s.trim().isEmpty()) {
C_BASRATE = Double.parseDouble(s);
} else {
C_BASRATE = Double.NaN;
}
}

protected final void initC_BASREST(String s) {
if (!s.trim().isEmpty()) {
C_BASREST = Byte.parseByte(s);
} else {
C_BASREST = Byte.MIN_VALUE;
}
}

protected final void initC_BENCB(String s) {
if (!s.trim().isEmpty()) {
C_BENCB = Byte.parseByte(s);
} else {
C_BENCB = Byte.MIN_VALUE;
}
}

protected final void initC_BENCTC(String s) {
if (!s.trim().isEmpty()) {
C_BENCTC = Byte.parseByte(s);
} else {
C_BENCTC = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS1(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS1 = Byte.parseByte(s);
} else {
C_BENDIS1 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS10(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS10 = Byte.parseByte(s);
} else {
C_BENDIS10 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS12(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS12 = Byte.parseByte(s);
} else {
C_BENDIS12 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS13(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS13 = Byte.parseByte(s);
} else {
C_BENDIS13 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS14(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS14 = Byte.parseByte(s);
} else {
C_BENDIS14 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS15(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS15 = Byte.parseByte(s);
} else {
C_BENDIS15 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS16(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS16 = Byte.parseByte(s);
} else {
C_BENDIS16 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS2(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS2 = Byte.parseByte(s);
} else {
C_BENDIS2 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS3(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS3 = Byte.parseByte(s);
} else {
C_BENDIS3 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS4(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS4 = Byte.parseByte(s);
} else {
C_BENDIS4 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS5(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS5 = Byte.parseByte(s);
} else {
C_BENDIS5 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS6(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS6 = Byte.parseByte(s);
} else {
C_BENDIS6 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS7(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS7 = Byte.parseByte(s);
} else {
C_BENDIS7 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS8(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS8 = Byte.parseByte(s);
} else {
C_BENDIS8 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS9(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS9 = Byte.parseByte(s);
} else {
C_BENDIS9 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS96(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS96 = Byte.parseByte(s);
} else {
C_BENDIS96 = Byte.MIN_VALUE;
}
}

protected final void initC_BENDIS97(String s) {
if (!s.trim().isEmpty()) {
C_BENDIS97 = Byte.parseByte(s);
} else {
C_BENDIS97 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM1(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM1 = Byte.parseByte(s);
} else {
C_BENFAM1 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM10(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM10 = Byte.parseByte(s);
} else {
C_BENFAM10 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM2(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM2 = Byte.parseByte(s);
} else {
C_BENFAM2 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM3(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM3 = Byte.parseByte(s);
} else {
C_BENFAM3 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM4(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM4 = Byte.parseByte(s);
} else {
C_BENFAM4 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM5(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM5 = Byte.parseByte(s);
} else {
C_BENFAM5 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM6(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM6 = Byte.parseByte(s);
} else {
C_BENFAM6 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM7(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM7 = Byte.parseByte(s);
} else {
C_BENFAM7 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM8(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM8 = Byte.parseByte(s);
} else {
C_BENFAM8 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM9(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM9 = Byte.parseByte(s);
} else {
C_BENFAM9 = Byte.MIN_VALUE;
}
}

protected final void initC_BENFAM96(String s) {
if (!s.trim().isEmpty()) {
C_BENFAM96 = Byte.parseByte(s);
} else {
C_BENFAM96 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU1(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU1 = Byte.parseByte(s);
} else {
C_BENHOU1 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU2(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU2 = Byte.parseByte(s);
} else {
C_BENHOU2 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU3(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU3 = Byte.parseByte(s);
} else {
C_BENHOU3 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU4(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU4 = Byte.parseByte(s);
} else {
C_BENHOU4 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU5(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU5 = Byte.parseByte(s);
} else {
C_BENHOU5 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU6(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU6 = Byte.parseByte(s);
} else {
C_BENHOU6 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU7(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU7 = Byte.parseByte(s);
} else {
C_BENHOU7 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU8(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU8 = Byte.parseByte(s);
} else {
C_BENHOU8 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU9(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU9 = Byte.parseByte(s);
} else {
C_BENHOU9 = Byte.MIN_VALUE;
}
}

protected final void initC_BENHOU96(String s) {
if (!s.trim().isEmpty()) {
C_BENHOU96 = Byte.parseByte(s);
} else {
C_BENHOU96 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN1(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN1 = Byte.parseByte(s);
} else {
C_BENPEN1 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN10(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN10 = Byte.parseByte(s);
} else {
C_BENPEN10 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN11(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN11 = Byte.parseByte(s);
} else {
C_BENPEN11 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN12(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN12 = Byte.parseByte(s);
} else {
C_BENPEN12 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN13(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN13 = Byte.parseByte(s);
} else {
C_BENPEN13 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN2(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN2 = Byte.parseByte(s);
} else {
C_BENPEN2 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN3(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN3 = Byte.parseByte(s);
} else {
C_BENPEN3 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN4(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN4 = Byte.parseByte(s);
} else {
C_BENPEN4 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN5(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN5 = Byte.parseByte(s);
} else {
C_BENPEN5 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN6(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN6 = Byte.parseByte(s);
} else {
C_BENPEN6 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN7(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN7 = Byte.parseByte(s);
} else {
C_BENPEN7 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN8(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN8 = Byte.parseByte(s);
} else {
C_BENPEN8 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN9(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN9 = Byte.parseByte(s);
} else {
C_BENPEN9 = Byte.MIN_VALUE;
}
}

protected final void initC_BENPEN96(String s) {
if (!s.trim().isEmpty()) {
C_BENPEN96 = Byte.parseByte(s);
} else {
C_BENPEN96 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA1(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA1 = Byte.parseByte(s);
} else {
C_BENSTA1 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA10(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA10 = Byte.parseByte(s);
} else {
C_BENSTA10 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA11(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA11 = Byte.parseByte(s);
} else {
C_BENSTA11 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA12(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA12 = Byte.parseByte(s);
} else {
C_BENSTA12 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA13(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA13 = Byte.parseByte(s);
} else {
C_BENSTA13 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA2(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA2 = Byte.parseByte(s);
} else {
C_BENSTA2 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA3(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA3 = Byte.parseByte(s);
} else {
C_BENSTA3 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA4(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA4 = Byte.parseByte(s);
} else {
C_BENSTA4 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA5(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA5 = Byte.parseByte(s);
} else {
C_BENSTA5 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA6(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA6 = Byte.parseByte(s);
} else {
C_BENSTA6 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA7(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA7 = Byte.parseByte(s);
} else {
C_BENSTA7 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA9(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA9 = Byte.parseByte(s);
} else {
C_BENSTA9 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA96(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA96 = Byte.parseByte(s);
} else {
C_BENSTA96 = Byte.MIN_VALUE;
}
}

protected final void initC_BENSTA97(String s) {
if (!s.trim().isEmpty()) {
C_BENSTA97 = Byte.parseByte(s);
} else {
C_BENSTA97 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX1(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX1 = Byte.parseByte(s);
} else {
C_BENTAX1 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX10(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX10 = Byte.parseByte(s);
} else {
C_BENTAX10 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX2(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX2 = Byte.parseByte(s);
} else {
C_BENTAX2 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX3(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX3 = Byte.parseByte(s);
} else {
C_BENTAX3 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX4(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX4 = Byte.parseByte(s);
} else {
C_BENTAX4 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX5(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX5 = Byte.parseByte(s);
} else {
C_BENTAX5 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX6(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX6 = Byte.parseByte(s);
} else {
C_BENTAX6 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX7(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX7 = Byte.parseByte(s);
} else {
C_BENTAX7 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX8(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX8 = Byte.parseByte(s);
} else {
C_BENTAX8 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX9(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX9 = Byte.parseByte(s);
} else {
C_BENTAX9 = Byte.MIN_VALUE;
}
}

protected final void initC_BENTAX96(String s) {
if (!s.trim().isEmpty()) {
C_BENTAX96 = Byte.parseByte(s);
} else {
C_BENTAX96 = Byte.MIN_VALUE;
}
}

protected final void initC_BENUNEMP1(String s) {
if (!s.trim().isEmpty()) {
C_BENUNEMP1 = Byte.parseByte(s);
} else {
C_BENUNEMP1 = Byte.MIN_VALUE;
}
}

protected final void initC_BENUNEMP2(String s) {
if (!s.trim().isEmpty()) {
C_BENUNEMP2 = Byte.parseByte(s);
} else {
C_BENUNEMP2 = Byte.MIN_VALUE;
}
}

protected final void initC_BENUNEMP3(String s) {
if (!s.trim().isEmpty()) {
C_BENUNEMP3 = Byte.parseByte(s);
} else {
C_BENUNEMP3 = Byte.MIN_VALUE;
}
}

protected final void initC_BENUNEMP4(String s) {
if (!s.trim().isEmpty()) {
C_BENUNEMP4 = Byte.parseByte(s);
} else {
C_BENUNEMP4 = Byte.MIN_VALUE;
}
}

protected final void initC_BENUNEMP5(String s) {
if (!s.trim().isEmpty()) {
C_BENUNEMP5 = Byte.parseByte(s);
} else {
C_BENUNEMP5 = Byte.MIN_VALUE;
}
}

protected final void initC_BENUNEMP6(String s) {
if (!s.trim().isEmpty()) {
C_BENUNEMP6 = Byte.parseByte(s);
} else {
C_BENUNEMP6 = Byte.MIN_VALUE;
}
}

protected final void initC_BENUNEMP7(String s) {
if (!s.trim().isEmpty()) {
C_BENUNEMP7 = Byte.parseByte(s);
} else {
C_BENUNEMP7 = Byte.MIN_VALUE;
}
}

protected final void initC_BENUNEMP96(String s) {
if (!s.trim().isEmpty()) {
C_BENUNEMP96 = Byte.parseByte(s);
} else {
C_BENUNEMP96 = Byte.MIN_VALUE;
}
}

protected final void initC_BIG5A_DV(String s) {
if (!s.trim().isEmpty()) {
C_BIG5A_DV = Byte.parseByte(s);
} else {
C_BIG5A_DV = Byte.MIN_VALUE;
}
}

protected final void initC_BIG5C_DV(String s) {
if (!s.trim().isEmpty()) {
C_BIG5C_DV = Byte.parseByte(s);
} else {
C_BIG5C_DV = Byte.MIN_VALUE;
}
}

protected final void initC_BIG5E_DV(String s) {
if (!s.trim().isEmpty()) {
C_BIG5E_DV = Byte.parseByte(s);
} else {
C_BIG5E_DV = Byte.MIN_VALUE;
}
}

protected final void initC_BIG5N_DV(String s) {
if (!s.trim().isEmpty()) {
C_BIG5N_DV = Byte.parseByte(s);
} else {
C_BIG5N_DV = Byte.MIN_VALUE;
}
}

protected final void initC_BIG5O_DV(String s) {
if (!s.trim().isEmpty()) {
C_BIG5O_DV = Byte.parseByte(s);
} else {
C_BIG5O_DV = Byte.MIN_VALUE;
}
}

protected final void initC_BIRTHY(String s) {
if (!s.trim().isEmpty()) {
C_BIRTHY = Short.parseShort(s);
} else {
C_BIRTHY = Short.MIN_VALUE;
}
}

protected final void initC_BRITID(String s) {
if (!s.trim().isEmpty()) {
C_BRITID = Byte.parseByte(s);
} else {
C_BRITID = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE1(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE1 = Byte.parseByte(s);
} else {
C_BTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE10(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE10 = Byte.parseByte(s);
} else {
C_BTYPE10 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE11(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE11 = Byte.parseByte(s);
} else {
C_BTYPE11 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE12(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE12 = Byte.parseByte(s);
} else {
C_BTYPE12 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE13(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE13 = Byte.parseByte(s);
} else {
C_BTYPE13 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE14(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE14 = Byte.parseByte(s);
} else {
C_BTYPE14 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE2(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE2 = Byte.parseByte(s);
} else {
C_BTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE3(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE3 = Byte.parseByte(s);
} else {
C_BTYPE3 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE4(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE4 = Byte.parseByte(s);
} else {
C_BTYPE4 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE5(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE5 = Byte.parseByte(s);
} else {
C_BTYPE5 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE6(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE6 = Byte.parseByte(s);
} else {
C_BTYPE6 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE7(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE7 = Byte.parseByte(s);
} else {
C_BTYPE7 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE8(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE8 = Byte.parseByte(s);
} else {
C_BTYPE8 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE9(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE9 = Byte.parseByte(s);
} else {
C_BTYPE9 = Byte.MIN_VALUE;
}
}

protected final void initC_BTYPE96(String s) {
if (!s.trim().isEmpty()) {
C_BTYPE96 = Byte.parseByte(s);
} else {
C_BTYPE96 = Byte.MIN_VALUE;
}
}

protected final void initC_BUNO_DV(String s) {
if (!s.trim().isEmpty()) {
C_BUNO_DV = Byte.parseByte(s);
} else {
C_BUNO_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU1(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU1 = Byte.parseByte(s);
} else {
C_CAIDU1 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU2(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU2 = Byte.parseByte(s);
} else {
C_CAIDU2 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU3(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU3 = Byte.parseByte(s);
} else {
C_CAIDU3 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU4(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU4 = Byte.parseByte(s);
} else {
C_CAIDU4 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU5(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU5 = Byte.parseByte(s);
} else {
C_CAIDU5 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU6(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU6 = Byte.parseByte(s);
} else {
C_CAIDU6 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU7(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU7 = Byte.parseByte(s);
} else {
C_CAIDU7 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU8(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU8 = Byte.parseByte(s);
} else {
C_CAIDU8 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU96(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU96 = Byte.parseByte(s);
} else {
C_CAIDU96 = Byte.MIN_VALUE;
}
}

protected final void initC_CAIDU97(String s) {
if (!s.trim().isEmpty()) {
C_CAIDU97 = Byte.parseByte(s);
} else {
C_CAIDU97 = Byte.MIN_VALUE;
}
}

protected final void initC_CARUSE(String s) {
if (!s.trim().isEmpty()) {
C_CARUSE = Byte.parseByte(s);
} else {
C_CARUSE = Byte.MIN_VALUE;
}
}

protected final void initC_CASIEND(String s) {
if (!s.trim().isEmpty()) {
C_CASIEND = Byte.parseByte(s);
} else {
C_CASIEND = Byte.MIN_VALUE;
}
}

protected final void initC_CCARE(String s) {
if (!s.trim().isEmpty()) {
C_CCARE = Byte.parseByte(s);
} else {
C_CCARE = Byte.MIN_VALUE;
}
}

protected final void initC_CCWORK(String s) {
if (!s.trim().isEmpty()) {
C_CCWORK = Byte.parseByte(s);
} else {
C_CCWORK = Byte.MIN_VALUE;
}
}

protected final void initC_CGIVNA1_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGIVNA1_DV = Byte.parseByte(s);
} else {
C_CGIVNA1_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGIVNS1_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGIVNS1_DV = Byte.parseByte(s);
} else {
C_CGIVNS1_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGIVS71_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGIVS71_DV = Byte.parseByte(s);
} else {
C_CGIVS71_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGIVVF1_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGIVVF1_DV = Byte.parseByte(s);
} else {
C_CGIVVF1_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGIVWRD1_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGIVWRD1_DV = Byte.parseByte(s);
} else {
C_CGIVWRD1_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGIVWRI1_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGIVWRI1_DV = Byte.parseByte(s);
} else {
C_CGIVWRI1_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGNA_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNA_DV = Byte.parseByte(s);
} else {
C_CGNA_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGNS1A_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNS1A_DV = Byte.parseByte(s);
} else {
C_CGNS1A_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGNS1B_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNS1B_DV = Byte.parseByte(s);
} else {
C_CGNS1B_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGNS1SC10_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNS1SC10_DV = Short.parseShort(s);
} else {
C_CGNS1SC10_DV = Short.MIN_VALUE;
}
}

protected final void initC_CGNS1SC6_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNS1SC6_DV = Byte.parseByte(s);
} else {
C_CGNS1SC6_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGNS2A_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNS2A_DV = Byte.parseByte(s);
} else {
C_CGNS2A_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGNS2B_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNS2B_DV = Byte.parseByte(s);
} else {
C_CGNS2B_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGNS2SC10_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNS2SC10_DV = Short.parseShort(s);
} else {
C_CGNS2SC10_DV = Short.MIN_VALUE;
}
}

protected final void initC_CGNS2SC6_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGNS2SC6_DV = Byte.parseByte(s);
} else {
C_CGNS2SC6_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGS7CA_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGS7CA_DV = Byte.parseByte(s);
} else {
C_CGS7CA_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGS7CS_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGS7CS_DV = Byte.parseByte(s);
} else {
C_CGS7CS_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGS7N_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGS7N_DV = Byte.parseByte(s);
} else {
C_CGS7N_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGSRMEM2_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGSRMEM2_DV = Byte.parseByte(s);
} else {
C_CGSRMEM2_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGSRMEM_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGSRMEM_DV = Byte.parseByte(s);
} else {
C_CGSRMEM_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGVFC_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGVFC_DV = Byte.parseByte(s);
} else {
C_CGVFC_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGVFW_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGVFW_DV = Byte.parseByte(s);
} else {
C_CGVFW_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGWRD_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGWRD_DV = Byte.parseByte(s);
} else {
C_CGWRD_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGWRI1_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGWRI1_DV = Byte.parseByte(s);
} else {
C_CGWRI1_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGWRI2_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGWRI2_DV = Byte.parseByte(s);
} else {
C_CGWRI2_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGWRI3_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGWRI3_DV = Byte.parseByte(s);
} else {
C_CGWRI3_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGWRI4_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGWRI4_DV = Byte.parseByte(s);
} else {
C_CGWRI4_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CGWRI_DV(String s) {
if (!s.trim().isEmpty()) {
C_CGWRI_DV = Byte.parseByte(s);
} else {
C_CGWRI_DV = Byte.MIN_VALUE;
}
}

protected final void initC_CH1BY4(String s) {
if (!s.trim().isEmpty()) {
C_CH1BY4 = Short.parseShort(s);
} else {
C_CH1BY4 = Short.MIN_VALUE;
}
}

protected final void initC_CHAID1(String s) {
if (!s.trim().isEmpty()) {
C_CHAID1 = Byte.parseByte(s);
} else {
C_CHAID1 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID2(String s) {
if (!s.trim().isEmpty()) {
C_CHAID2 = Byte.parseByte(s);
} else {
C_CHAID2 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID3(String s) {
if (!s.trim().isEmpty()) {
C_CHAID3 = Byte.parseByte(s);
} else {
C_CHAID3 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID4(String s) {
if (!s.trim().isEmpty()) {
C_CHAID4 = Byte.parseByte(s);
} else {
C_CHAID4 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID5(String s) {
if (!s.trim().isEmpty()) {
C_CHAID5 = Byte.parseByte(s);
} else {
C_CHAID5 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID6(String s) {
if (!s.trim().isEmpty()) {
C_CHAID6 = Byte.parseByte(s);
} else {
C_CHAID6 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID7(String s) {
if (!s.trim().isEmpty()) {
C_CHAID7 = Byte.parseByte(s);
} else {
C_CHAID7 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID8(String s) {
if (!s.trim().isEmpty()) {
C_CHAID8 = Byte.parseByte(s);
} else {
C_CHAID8 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID96(String s) {
if (!s.trim().isEmpty()) {
C_CHAID96 = Byte.parseByte(s);
} else {
C_CHAID96 = Byte.MIN_VALUE;
}
}

protected final void initC_CHAID97(String s) {
if (!s.trim().isEmpty()) {
C_CHAID97 = Byte.parseByte(s);
} else {
C_CHAID97 = Byte.MIN_VALUE;
}
}

protected final void initC_CHCON(String s) {
if (!s.trim().isEmpty()) {
C_CHCON = Byte.parseByte(s);
} else {
C_CHCON = Byte.MIN_VALUE;
}
}

protected final void initC_CHFAR(String s) {
if (!s.trim().isEmpty()) {
C_CHFAR = Byte.parseByte(s);
} else {
C_CHFAR = Byte.MIN_VALUE;
}
}

protected final void initC_CHILDPNO(String s) {
if (!s.trim().isEmpty()) {
C_CHILDPNO = Byte.parseByte(s);
} else {
C_CHILDPNO = Byte.MIN_VALUE;
}
}

protected final void initC_CHKRESP(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_CHKRESP = false;
} else {
C_CHKRESP = true;
}
}
}

protected final void initC_CHSEE(String s) {
if (!s.trim().isEmpty()) {
C_CHSEE = Byte.parseByte(s);
} else {
C_CHSEE = Byte.MIN_VALUE;
}
}

protected final void initC_CINDTIME(String s) {
if (!s.trim().isEmpty()) {
C_CINDTIME = Integer.parseInt(s);
} else {
C_CINDTIME = Integer.MIN_VALUE;
}
}

protected final void initC_CITZN1(String s) {
if (!s.trim().isEmpty()) {
C_CITZN1 = Byte.parseByte(s);
} else {
C_CITZN1 = Byte.MIN_VALUE;
}
}

protected final void initC_CITZN2(String s) {
if (!s.trim().isEmpty()) {
C_CITZN2 = Byte.parseByte(s);
} else {
C_CITZN2 = Byte.MIN_VALUE;
}
}

protected final void initC_CITZN3(String s) {
if (!s.trim().isEmpty()) {
C_CITZN3 = Byte.parseByte(s);
} else {
C_CITZN3 = Byte.MIN_VALUE;
}
}

protected final void initC_CIVICDUTY(String s) {
if (!s.trim().isEmpty()) {
C_CIVICDUTY = Byte.parseByte(s);
} else {
C_CIVICDUTY = Byte.MIN_VALUE;
}
}

protected final void initC_CJBATT(String s) {
if (!s.trim().isEmpty()) {
C_CJBATT = Byte.parseByte(s);
} else {
C_CJBATT = Byte.MIN_VALUE;
}
}

protected final void initC_CJOB(String s) {
if (!s.trim().isEmpty()) {
C_CJOB = Byte.parseByte(s);
} else {
C_CJOB = Byte.MIN_VALUE;
}
}

protected final void initC_CLANGAB(String s) {
if (!s.trim().isEmpty()) {
C_CLANGAB = Byte.parseByte(s);
} else {
C_CLANGAB = Byte.MIN_VALUE;
}
}

protected final void initC_CLOSENUM(String s) {
if (!s.trim().isEmpty()) {
C_CLOSENUM = Byte.parseByte(s);
} else {
C_CLOSENUM = Byte.MIN_VALUE;
}
}

protected final void initC_CMCORD(String s) {
if (!s.trim().isEmpty()) {
C_CMCORD = Byte.parseByte(s);
} else {
C_CMCORD = Byte.MIN_VALUE;
}
}

protected final void initC_CMCORDALL(String s) {
if (!s.trim().isEmpty()) {
C_CMCORDALL = Byte.parseByte(s);
} else {
C_CMCORDALL = Byte.MIN_VALUE;
}
}

protected final void initC_CMCORDAM(String s) {
if (!s.trim().isEmpty()) {
C_CMCORDAM = Double.parseDouble(s);
} else {
C_CMCORDAM = Double.NaN;
}
}

protected final void initC_CMCORDPER(String s) {
if (!s.trim().isEmpty()) {
C_CMCORDPER = Byte.parseByte(s);
} else {
C_CMCORDPER = Byte.MIN_VALUE;
}
}

protected final void initC_CMCORDRCAM(String s) {
if (!s.trim().isEmpty()) {
C_CMCORDRCAM = Short.parseShort(s);
} else {
C_CMCORDRCAM = Short.MIN_VALUE;
}
}

protected final void initC_CMCORDRCPR(String s) {
if (!s.trim().isEmpty()) {
C_CMCORDRCPR = Byte.parseByte(s);
} else {
C_CMCORDRCPR = Byte.MIN_VALUE;
}
}

protected final void initC_CMCORDREC(String s) {
if (!s.trim().isEmpty()) {
C_CMCORDREC = Byte.parseByte(s);
} else {
C_CMCORDREC = Byte.MIN_VALUE;
}
}

protected final void initC_CMCORDTM(String s) {
if (!s.trim().isEmpty()) {
C_CMCORDTM = Byte.parseByte(s);
} else {
C_CMCORDTM = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSAACT(String s) {
if (!s.trim().isEmpty()) {
C_CMCSAACT = Byte.parseByte(s);
} else {
C_CMCSAACT = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSAALL(String s) {
if (!s.trim().isEmpty()) {
C_CMCSAALL = Byte.parseByte(s);
} else {
C_CMCSAALL = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSAAM(String s) {
if (!s.trim().isEmpty()) {
C_CMCSAAM = Short.parseShort(s);
} else {
C_CMCSAAM = Short.MIN_VALUE;
}
}

protected final void initC_CMCSANIL1(String s) {
if (!s.trim().isEmpty()) {
C_CMCSANIL1 = Byte.parseByte(s);
} else {
C_CMCSANIL1 = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSANIL2(String s) {
if (!s.trim().isEmpty()) {
C_CMCSANIL2 = Byte.parseByte(s);
} else {
C_CMCSANIL2 = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSANIL3(String s) {
if (!s.trim().isEmpty()) {
C_CMCSANIL3 = Byte.parseByte(s);
} else {
C_CMCSANIL3 = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSANIL4(String s) {
if (!s.trim().isEmpty()) {
C_CMCSANIL4 = Byte.parseByte(s);
} else {
C_CMCSANIL4 = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSANIL5(String s) {
if (!s.trim().isEmpty()) {
C_CMCSANIL5 = Byte.parseByte(s);
} else {
C_CMCSANIL5 = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSANIL97(String s) {
if (!s.trim().isEmpty()) {
C_CMCSANIL97 = Byte.parseByte(s);
} else {
C_CMCSANIL97 = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSAPER(String s) {
if (!s.trim().isEmpty()) {
C_CMCSAPER = Byte.parseByte(s);
} else {
C_CMCSAPER = Byte.MIN_VALUE;
}
}

protected final void initC_CMCSAPR(String s) {
if (!s.trim().isEmpty()) {
C_CMCSAPR = Byte.parseByte(s);
} else {
C_CMCSAPR = Byte.MIN_VALUE;
}
}

protected final void initC_CMKNDEVR1(String s) {
if (!s.trim().isEmpty()) {
C_CMKNDEVR1 = Byte.parseByte(s);
} else {
C_CMKNDEVR1 = Byte.MIN_VALUE;
}
}

protected final void initC_CMKNDEVR2(String s) {
if (!s.trim().isEmpty()) {
C_CMKNDEVR2 = Byte.parseByte(s);
} else {
C_CMKNDEVR2 = Byte.MIN_VALUE;
}
}

protected final void initC_CMKNDEVR3(String s) {
if (!s.trim().isEmpty()) {
C_CMKNDEVR3 = Byte.parseByte(s);
} else {
C_CMKNDEVR3 = Byte.MIN_VALUE;
}
}

protected final void initC_CMKNDEVR4(String s) {
if (!s.trim().isEmpty()) {
C_CMKNDEVR4 = Byte.parseByte(s);
} else {
C_CMKNDEVR4 = Byte.MIN_VALUE;
}
}

protected final void initC_CMKNDEVR96(String s) {
if (!s.trim().isEmpty()) {
C_CMKNDEVR96 = Byte.parseByte(s);
} else {
C_CMKNDEVR96 = Byte.MIN_VALUE;
}
}

protected final void initC_CMKNDEVR97(String s) {
if (!s.trim().isEmpty()) {
C_CMKNDEVR97 = Byte.parseByte(s);
} else {
C_CMKNDEVR97 = Byte.MIN_VALUE;
}
}

protected final void initC_CMLSTAT1(String s) {
if (!s.trim().isEmpty()) {
C_CMLSTAT1 = Byte.parseByte(s);
} else {
C_CMLSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initC_CMLSTAT2(String s) {
if (!s.trim().isEmpty()) {
C_CMLSTAT2 = Byte.parseByte(s);
} else {
C_CMLSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL1(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL1 = Byte.parseByte(s);
} else {
C_CMNIL1 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL2(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL2 = Byte.parseByte(s);
} else {
C_CMNIL2 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL3(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL3 = Byte.parseByte(s);
} else {
C_CMNIL3 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL4(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL4 = Byte.parseByte(s);
} else {
C_CMNIL4 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL5(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL5 = Byte.parseByte(s);
} else {
C_CMNIL5 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL6(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL6 = Byte.parseByte(s);
} else {
C_CMNIL6 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL7(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL7 = Byte.parseByte(s);
} else {
C_CMNIL7 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL8(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL8 = Byte.parseByte(s);
} else {
C_CMNIL8 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL9(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL9 = Byte.parseByte(s);
} else {
C_CMNIL9 = Byte.MIN_VALUE;
}
}

protected final void initC_CMNIL97(String s) {
if (!s.trim().isEmpty()) {
C_CMNIL97 = Byte.parseByte(s);
} else {
C_CMNIL97 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY1(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY1 = Byte.parseByte(s);
} else {
C_CMOTHPAY1 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY10(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY10 = Byte.parseByte(s);
} else {
C_CMOTHPAY10 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY11(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY11 = Byte.parseByte(s);
} else {
C_CMOTHPAY11 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY2(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY2 = Byte.parseByte(s);
} else {
C_CMOTHPAY2 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY3(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY3 = Byte.parseByte(s);
} else {
C_CMOTHPAY3 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY4(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY4 = Byte.parseByte(s);
} else {
C_CMOTHPAY4 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY5(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY5 = Byte.parseByte(s);
} else {
C_CMOTHPAY5 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY6(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY6 = Byte.parseByte(s);
} else {
C_CMOTHPAY6 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY7(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY7 = Byte.parseByte(s);
} else {
C_CMOTHPAY7 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY8(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY8 = Byte.parseByte(s);
} else {
C_CMOTHPAY8 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY9(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY9 = Byte.parseByte(s);
} else {
C_CMOTHPAY9 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY96(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY96 = Byte.parseByte(s);
} else {
C_CMOTHPAY96 = Byte.MIN_VALUE;
}
}

protected final void initC_CMOTHPAY97(String s) {
if (!s.trim().isEmpty()) {
C_CMOTHPAY97 = Byte.parseByte(s);
} else {
C_CMOTHPAY97 = Byte.MIN_VALUE;
}
}

protected final void initC_CMROUTE(String s) {
if (!s.trim().isEmpty()) {
C_CMROUTE = Byte.parseByte(s);
} else {
C_CMROUTE = Byte.MIN_VALUE;
}
}

protected final void initC_CMSAMEA(String s) {
if (!s.trim().isEmpty()) {
C_CMSAMEA = Byte.parseByte(s);
} else {
C_CMSAMEA = Byte.MIN_VALUE;
}
}

protected final void initC_CMSAMEB(String s) {
if (!s.trim().isEmpty()) {
C_CMSAMEB = Byte.parseByte(s);
} else {
C_CMSAMEB = Byte.MIN_VALUE;
}
}

protected final void initC_CMSAMEC(String s) {
if (!s.trim().isEmpty()) {
C_CMSAMEC = Byte.parseByte(s);
} else {
C_CMSAMEC = Byte.MIN_VALUE;
}
}

protected final void initC_CMVOL(String s) {
if (!s.trim().isEmpty()) {
C_CMVOL = Byte.parseByte(s);
} else {
C_CMVOL = Byte.MIN_VALUE;
}
}

protected final void initC_CMVOLALL(String s) {
if (!s.trim().isEmpty()) {
C_CMVOLALL = Byte.parseByte(s);
} else {
C_CMVOLALL = Byte.MIN_VALUE;
}
}

protected final void initC_CMVOLAM(String s) {
if (!s.trim().isEmpty()) {
C_CMVOLAM = Double.parseDouble(s);
} else {
C_CMVOLAM = Double.NaN;
}
}

protected final void initC_CMVOLPER(String s) {
if (!s.trim().isEmpty()) {
C_CMVOLPER = Byte.parseByte(s);
} else {
C_CMVOLPER = Byte.MIN_VALUE;
}
}

protected final void initC_CMVOLRCAM(String s) {
if (!s.trim().isEmpty()) {
C_CMVOLRCAM = Short.parseShort(s);
} else {
C_CMVOLRCAM = Short.MIN_VALUE;
}
}

protected final void initC_CMVOLRCPR(String s) {
if (!s.trim().isEmpty()) {
C_CMVOLRCPR = Byte.parseByte(s);
} else {
C_CMVOLRCPR = Byte.MIN_VALUE;
}
}

protected final void initC_CMVOLREC(String s) {
if (!s.trim().isEmpty()) {
C_CMVOLREC = Byte.parseByte(s);
} else {
C_CMVOLREC = Byte.MIN_VALUE;
}
}

protected final void initC_CMVOLTM(String s) {
if (!s.trim().isEmpty()) {
C_CMVOLTM = Byte.parseByte(s);
} else {
C_CMVOLTM = Byte.MIN_VALUE;
}
}

protected final void initC_COGDIST(String s) {
if (!s.trim().isEmpty()) {
C_COGDIST = Byte.parseByte(s);
} else {
C_COGDIST = Byte.MIN_VALUE;
}
}

protected final void initC_COGEND(String s) {
if (!s.trim().isEmpty()) {
C_COGEND = Byte.parseByte(s);
} else {
C_COGEND = Byte.MIN_VALUE;
}
}

protected final void initC_COH1BM(String s) {
if (!s.trim().isEmpty()) {
C_COH1BM = Byte.parseByte(s);
} else {
C_COH1BM = Byte.MIN_VALUE;
}
}

protected final void initC_COH1BY(String s) {
if (!s.trim().isEmpty()) {
C_COH1BY = Short.parseShort(s);
} else {
C_COH1BY = Short.MIN_VALUE;
}
}

protected final void initC_COH1EM(String s) {
if (!s.trim().isEmpty()) {
C_COH1EM = Byte.parseByte(s);
} else {
C_COH1EM = Byte.MIN_VALUE;
}
}

protected final void initC_COH1EY(String s) {
if (!s.trim().isEmpty()) {
C_COH1EY = Short.parseShort(s);
} else {
C_COH1EY = Short.MIN_VALUE;
}
}

protected final void initC_COH1MR(String s) {
if (!s.trim().isEmpty()) {
C_COH1MR = Byte.parseByte(s);
} else {
C_COH1MR = Byte.MIN_VALUE;
}
}

protected final void initC_COHAB(String s) {
if (!s.trim().isEmpty()) {
C_COHAB = Byte.parseByte(s);
} else {
C_COHAB = Byte.MIN_VALUE;
}
}

protected final void initC_COHABN(String s) {
if (!s.trim().isEmpty()) {
C_COHABN = Byte.parseByte(s);
} else {
C_COHABN = Byte.MIN_VALUE;
}
}

protected final void initC_COHAB_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_COHAB_DV = false;
} else {
C_COHAB_DV = true;
}
}
}

protected final void initC_COLBENS1(String s) {
if (!s.trim().isEmpty()) {
C_COLBENS1 = Byte.parseByte(s);
} else {
C_COLBENS1 = Byte.MIN_VALUE;
}
}

protected final void initC_COLBENS2(String s) {
if (!s.trim().isEmpty()) {
C_COLBENS2 = Byte.parseByte(s);
} else {
C_COLBENS2 = Byte.MIN_VALUE;
}
}

protected final void initC_COLBENS3(String s) {
if (!s.trim().isEmpty()) {
C_COLBENS3 = Byte.parseByte(s);
} else {
C_COLBENS3 = Byte.MIN_VALUE;
}
}

protected final void initC_COLBENS4(String s) {
if (!s.trim().isEmpty()) {
C_COLBENS4 = Byte.parseByte(s);
} else {
C_COLBENS4 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS11(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS11 = Byte.parseByte(s);
} else {
C_COMIMMLS11 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS110(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS110 = Byte.parseByte(s);
} else {
C_COMIMMLS110 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS12(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS12 = Byte.parseByte(s);
} else {
C_COMIMMLS12 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS13(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS13 = Byte.parseByte(s);
} else {
C_COMIMMLS13 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS14(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS14 = Byte.parseByte(s);
} else {
C_COMIMMLS14 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS15(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS15 = Byte.parseByte(s);
} else {
C_COMIMMLS15 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS16(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS16 = Byte.parseByte(s);
} else {
C_COMIMMLS16 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS17(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS17 = Byte.parseByte(s);
} else {
C_COMIMMLS17 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS18(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS18 = Byte.parseByte(s);
} else {
C_COMIMMLS18 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS19(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS19 = Byte.parseByte(s);
} else {
C_COMIMMLS19 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS196(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS196 = Byte.parseByte(s);
} else {
C_COMIMMLS196 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS21(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS21 = Byte.parseByte(s);
} else {
C_COMIMMLS21 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS210(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS210 = Byte.parseByte(s);
} else {
C_COMIMMLS210 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS22(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS22 = Byte.parseByte(s);
} else {
C_COMIMMLS22 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS23(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS23 = Byte.parseByte(s);
} else {
C_COMIMMLS23 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS24(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS24 = Byte.parseByte(s);
} else {
C_COMIMMLS24 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS25(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS25 = Byte.parseByte(s);
} else {
C_COMIMMLS25 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS26(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS26 = Byte.parseByte(s);
} else {
C_COMIMMLS26 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS27(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS27 = Byte.parseByte(s);
} else {
C_COMIMMLS27 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS28(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS28 = Byte.parseByte(s);
} else {
C_COMIMMLS28 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS29(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS29 = Byte.parseByte(s);
} else {
C_COMIMMLS29 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS296(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS296 = Byte.parseByte(s);
} else {
C_COMIMMLS296 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS31(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS31 = Byte.parseByte(s);
} else {
C_COMIMMLS31 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS310(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS310 = Byte.parseByte(s);
} else {
C_COMIMMLS310 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS32(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS32 = Byte.parseByte(s);
} else {
C_COMIMMLS32 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS33(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS33 = Byte.parseByte(s);
} else {
C_COMIMMLS33 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS34(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS34 = Byte.parseByte(s);
} else {
C_COMIMMLS34 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS35(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS35 = Byte.parseByte(s);
} else {
C_COMIMMLS35 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS36(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS36 = Byte.parseByte(s);
} else {
C_COMIMMLS36 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS37(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS37 = Byte.parseByte(s);
} else {
C_COMIMMLS37 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS38(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS38 = Byte.parseByte(s);
} else {
C_COMIMMLS38 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS39(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS39 = Byte.parseByte(s);
} else {
C_COMIMMLS39 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS396(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS396 = Byte.parseByte(s);
} else {
C_COMIMMLS396 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS41(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS41 = Byte.parseByte(s);
} else {
C_COMIMMLS41 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS410(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS410 = Byte.parseByte(s);
} else {
C_COMIMMLS410 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS42(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS42 = Byte.parseByte(s);
} else {
C_COMIMMLS42 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS43(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS43 = Byte.parseByte(s);
} else {
C_COMIMMLS43 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS44(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS44 = Byte.parseByte(s);
} else {
C_COMIMMLS44 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS45(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS45 = Byte.parseByte(s);
} else {
C_COMIMMLS45 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS46(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS46 = Byte.parseByte(s);
} else {
C_COMIMMLS46 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS47(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS47 = Byte.parseByte(s);
} else {
C_COMIMMLS47 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS48(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS48 = Byte.parseByte(s);
} else {
C_COMIMMLS48 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS49(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS49 = Byte.parseByte(s);
} else {
C_COMIMMLS49 = Byte.MIN_VALUE;
}
}

protected final void initC_COMIMMLS496(String s) {
if (!s.trim().isEmpty()) {
C_COMIMMLS496 = Byte.parseByte(s);
} else {
C_COMIMMLS496 = Byte.MIN_VALUE;
}
}

protected final void initC_CONTFT(String s) {
if (!s.trim().isEmpty()) {
C_CONTFT = Byte.parseByte(s);
} else {
C_CONTFT = Byte.MIN_VALUE;
}
}

protected final void initC_CORDRECPER(String s) {
if (!s.trim().isEmpty()) {
C_CORDRECPER = Byte.parseByte(s);
} else {
C_CORDRECPER = Byte.MIN_VALUE;
}
}

protected final void initC_COUNTRY(String s) {
if (!s.trim().isEmpty()) {
C_COUNTRY = Byte.parseByte(s);
} else {
C_COUNTRY = Byte.MIN_VALUE;
}
}

protected final void initC_CRDARK(String s) {
if (!s.trim().isEmpty()) {
C_CRDARK = Byte.parseByte(s);
} else {
C_CRDARK = Byte.MIN_VALUE;
}
}

protected final void initC_CRWORA(String s) {
if (!s.trim().isEmpty()) {
C_CRWORA = Byte.parseByte(s);
} else {
C_CRWORA = Byte.MIN_VALUE;
}
}

protected final void initC_CRWORB(String s) {
if (!s.trim().isEmpty()) {
C_CRWORB = Byte.parseByte(s);
} else {
C_CRWORB = Byte.MIN_VALUE;
}
}

protected final void initC_CSACALC(String s) {
if (!s.trim().isEmpty()) {
C_CSACALC = Byte.parseByte(s);
} else {
C_CSACALC = Byte.MIN_VALUE;
}
}

protected final void initC_CSACALCAM(String s) {
if (!s.trim().isEmpty()) {
C_CSACALCAM = Double.parseDouble(s);
} else {
C_CSACALCAM = Double.NaN;
}
}

protected final void initC_CSAPAYTO(String s) {
if (!s.trim().isEmpty()) {
C_CSAPAYTO = Byte.parseByte(s);
} else {
C_CSAPAYTO = Byte.MIN_VALUE;
}
}

protected final void initC_CSARECPER(String s) {
if (!s.trim().isEmpty()) {
C_CSARECPER = Byte.parseByte(s);
} else {
C_CSARECPER = Byte.MIN_VALUE;
}
}

protected final void initC_CSTAT(String s) {
if (!s.trim().isEmpty()) {
C_CSTAT = Byte.parseByte(s);
} else {
C_CSTAT = Byte.MIN_VALUE;
}
}

protected final void initC_CTADD1_CODE(String s) {
if (!s.trim().isEmpty()) {
C_CTADD1_CODE = Byte.parseByte(s);
} else {
C_CTADD1_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_CTADD2_CODE(String s) {
if (!s.trim().isEmpty()) {
C_CTADD2_CODE = Byte.parseByte(s);
} else {
C_CTADD2_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_CTCNTY_CODE(String s) {
if (!s.trim().isEmpty()) {
C_CTCNTY_CODE = Byte.parseByte(s);
} else {
C_CTCNTY_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_CTEMAIL_CODE(String s) {
if (!s.trim().isEmpty()) {
C_CTEMAIL_CODE = Byte.parseByte(s);
} else {
C_CTEMAIL_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_CTPCODE_CODE(String s) {
if (!s.trim().isEmpty()) {
C_CTPCODE_CODE = Byte.parseByte(s);
} else {
C_CTPCODE_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_CTTEL1_CODE(String s) {
if (!s.trim().isEmpty()) {
C_CTTEL1_CODE = Byte.parseByte(s);
} else {
C_CTTEL1_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_CTTEL2_CODE(String s) {
if (!s.trim().isEmpty()) {
C_CTTEL2_CODE = Byte.parseByte(s);
} else {
C_CTTEL2_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_CTTOWN_CODE(String s) {
if (!s.trim().isEmpty()) {
C_CTTOWN_CODE = Byte.parseByte(s);
} else {
C_CTTOWN_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_CUDDLEKID(String s) {
if (!s.trim().isEmpty()) {
C_CUDDLEKID = Byte.parseByte(s);
} else {
C_CUDDLEKID = Byte.MIN_VALUE;
}
}

protected final void initC_CURRJOB1(String s) {
if (!s.trim().isEmpty()) {
C_CURRJOB1 = Byte.parseByte(s);
} else {
C_CURRJOB1 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRJOB2(String s) {
if (!s.trim().isEmpty()) {
C_CURRJOB2 = Byte.parseByte(s);
} else {
C_CURRJOB2 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRJOB3(String s) {
if (!s.trim().isEmpty()) {
C_CURRJOB3 = Byte.parseByte(s);
} else {
C_CURRJOB3 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRJOB4(String s) {
if (!s.trim().isEmpty()) {
C_CURRJOB4 = Byte.parseByte(s);
} else {
C_CURRJOB4 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRJOB5(String s) {
if (!s.trim().isEmpty()) {
C_CURRJOB5 = Byte.parseByte(s);
} else {
C_CURRJOB5 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRJOB6(String s) {
if (!s.trim().isEmpty()) {
C_CURRJOB6 = Byte.parseByte(s);
} else {
C_CURRJOB6 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRJOB7(String s) {
if (!s.trim().isEmpty()) {
C_CURRJOB7 = Byte.parseByte(s);
} else {
C_CURRJOB7 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRJOB8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_CURRJOB8 = false;
} else {
C_CURRJOB8 = true;
}
}
}

protected final void initC_CURRJOB9(String s) {
if (!s.trim().isEmpty()) {
C_CURRJOB9 = Byte.parseByte(s);
} else {
C_CURRJOB9 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRPART1(String s) {
if (!s.trim().isEmpty()) {
C_CURRPART1 = Byte.parseByte(s);
} else {
C_CURRPART1 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRPART2(String s) {
if (!s.trim().isEmpty()) {
C_CURRPART2 = Byte.parseByte(s);
} else {
C_CURRPART2 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRPART3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_CURRPART3 = false;
} else {
C_CURRPART3 = true;
}
}
}

protected final void initC_CURRSTAT1(String s) {
if (!s.trim().isEmpty()) {
C_CURRSTAT1 = Byte.parseByte(s);
} else {
C_CURRSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRSTAT2(String s) {
if (!s.trim().isEmpty()) {
C_CURRSTAT2 = Byte.parseByte(s);
} else {
C_CURRSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRSTAT3(String s) {
if (!s.trim().isEmpty()) {
C_CURRSTAT3 = Byte.parseByte(s);
} else {
C_CURRSTAT3 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRSTAT4(String s) {
if (!s.trim().isEmpty()) {
C_CURRSTAT4 = Byte.parseByte(s);
} else {
C_CURRSTAT4 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRSTAT5(String s) {
if (!s.trim().isEmpty()) {
C_CURRSTAT5 = Byte.parseByte(s);
} else {
C_CURRSTAT5 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRSTAT6(String s) {
if (!s.trim().isEmpty()) {
C_CURRSTAT6 = Byte.parseByte(s);
} else {
C_CURRSTAT6 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRSTAT7(String s) {
if (!s.trim().isEmpty()) {
C_CURRSTAT7 = Byte.parseByte(s);
} else {
C_CURRSTAT7 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRSTAT8(String s) {
if (!s.trim().isEmpty()) {
C_CURRSTAT8 = Byte.parseByte(s);
} else {
C_CURRSTAT8 = Byte.MIN_VALUE;
}
}

protected final void initC_CURRSTAT9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_CURRSTAT9 = false;
} else {
C_CURRSTAT9 = true;
}
}
}

protected final void initC_DCSATM(String s) {
if (!s.trim().isEmpty()) {
C_DCSATM = Byte.parseByte(s);
} else {
C_DCSATM = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS11(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS11 = Byte.parseByte(s);
} else {
C_DELAYLS11 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS110(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS110 = Byte.parseByte(s);
} else {
C_DELAYLS110 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS12(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS12 = Byte.parseByte(s);
} else {
C_DELAYLS12 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS13(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS13 = Byte.parseByte(s);
} else {
C_DELAYLS13 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS14(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS14 = Byte.parseByte(s);
} else {
C_DELAYLS14 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS15(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS15 = Byte.parseByte(s);
} else {
C_DELAYLS15 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS16(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS16 = Byte.parseByte(s);
} else {
C_DELAYLS16 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS17(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS17 = Byte.parseByte(s);
} else {
C_DELAYLS17 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS18(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS18 = Byte.parseByte(s);
} else {
C_DELAYLS18 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS19(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS19 = Byte.parseByte(s);
} else {
C_DELAYLS19 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS196(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS196 = Byte.parseByte(s);
} else {
C_DELAYLS196 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS21(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS21 = Byte.parseByte(s);
} else {
C_DELAYLS21 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS210(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS210 = Byte.parseByte(s);
} else {
C_DELAYLS210 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS22(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS22 = Byte.parseByte(s);
} else {
C_DELAYLS22 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS23(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS23 = Byte.parseByte(s);
} else {
C_DELAYLS23 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS24(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS24 = Byte.parseByte(s);
} else {
C_DELAYLS24 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS25(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS25 = Byte.parseByte(s);
} else {
C_DELAYLS25 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS26(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS26 = Byte.parseByte(s);
} else {
C_DELAYLS26 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS27(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS27 = Byte.parseByte(s);
} else {
C_DELAYLS27 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS28(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS28 = Byte.parseByte(s);
} else {
C_DELAYLS28 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS29(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS29 = Byte.parseByte(s);
} else {
C_DELAYLS29 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS296(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS296 = Byte.parseByte(s);
} else {
C_DELAYLS296 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS31(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS31 = Byte.parseByte(s);
} else {
C_DELAYLS31 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS310(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS310 = Byte.parseByte(s);
} else {
C_DELAYLS310 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS32(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS32 = Byte.parseByte(s);
} else {
C_DELAYLS32 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS33(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS33 = Byte.parseByte(s);
} else {
C_DELAYLS33 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS34(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS34 = Byte.parseByte(s);
} else {
C_DELAYLS34 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS35(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS35 = Byte.parseByte(s);
} else {
C_DELAYLS35 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS36(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS36 = Byte.parseByte(s);
} else {
C_DELAYLS36 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS37(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS37 = Byte.parseByte(s);
} else {
C_DELAYLS37 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS38(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS38 = Byte.parseByte(s);
} else {
C_DELAYLS38 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS39(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS39 = Byte.parseByte(s);
} else {
C_DELAYLS39 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS396(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS396 = Byte.parseByte(s);
} else {
C_DELAYLS396 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS41(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS41 = Byte.parseByte(s);
} else {
C_DELAYLS41 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS410(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS410 = Byte.parseByte(s);
} else {
C_DELAYLS410 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS42(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS42 = Byte.parseByte(s);
} else {
C_DELAYLS42 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS43(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS43 = Byte.parseByte(s);
} else {
C_DELAYLS43 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS44(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS44 = Byte.parseByte(s);
} else {
C_DELAYLS44 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS45(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS45 = Byte.parseByte(s);
} else {
C_DELAYLS45 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS46(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS46 = Byte.parseByte(s);
} else {
C_DELAYLS46 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS47(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS47 = Byte.parseByte(s);
} else {
C_DELAYLS47 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS48(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS48 = Byte.parseByte(s);
} else {
C_DELAYLS48 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS49(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS49 = Byte.parseByte(s);
} else {
C_DELAYLS49 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYLS496(String s) {
if (!s.trim().isEmpty()) {
C_DELAYLS496 = Byte.parseByte(s);
} else {
C_DELAYLS496 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP1(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP1 = Byte.parseByte(s);
} else {
C_DELAYSTOP1 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP2(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP2 = Byte.parseByte(s);
} else {
C_DELAYSTOP2 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP3(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP3 = Byte.parseByte(s);
} else {
C_DELAYSTOP3 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP4(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP4 = Byte.parseByte(s);
} else {
C_DELAYSTOP4 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP5(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP5 = Byte.parseByte(s);
} else {
C_DELAYSTOP5 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP6(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP6 = Byte.parseByte(s);
} else {
C_DELAYSTOP6 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP7(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP7 = Byte.parseByte(s);
} else {
C_DELAYSTOP7 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP8(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP8 = Byte.parseByte(s);
} else {
C_DELAYSTOP8 = Byte.MIN_VALUE;
}
}

protected final void initC_DELAYSTOP97(String s) {
if (!s.trim().isEmpty()) {
C_DELAYSTOP97 = Byte.parseByte(s);
} else {
C_DELAYSTOP97 = Byte.MIN_VALUE;
}
}

protected final void initC_DEMORIENT(String s) {
if (!s.trim().isEmpty()) {
C_DEMORIENT = Byte.parseByte(s);
} else {
C_DEMORIENT = Byte.MIN_VALUE;
}
}

protected final void initC_DEPCHL_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
C_DEPCHL_DV = false;
} else {
C_DEPCHL_DV = true;
}
}
}

protected final void initC_DINNER(String s) {
if (!s.trim().isEmpty()) {
C_DINNER = Byte.parseByte(s);
} else {
C_DINNER = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF1(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF1 = Byte.parseByte(s);
} else {
C_DISDIF1 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF10(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF10 = Byte.parseByte(s);
} else {
C_DISDIF10 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF11(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF11 = Byte.parseByte(s);
} else {
C_DISDIF11 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF12(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF12 = Byte.parseByte(s);
} else {
C_DISDIF12 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF2(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF2 = Byte.parseByte(s);
} else {
C_DISDIF2 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF3(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF3 = Byte.parseByte(s);
} else {
C_DISDIF3 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF4(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF4 = Byte.parseByte(s);
} else {
C_DISDIF4 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF5(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF5 = Byte.parseByte(s);
} else {
C_DISDIF5 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF6(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF6 = Byte.parseByte(s);
} else {
C_DISDIF6 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF7(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF7 = Byte.parseByte(s);
} else {
C_DISDIF7 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF8(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF8 = Byte.parseByte(s);
} else {
C_DISDIF8 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF9(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF9 = Byte.parseByte(s);
} else {
C_DISDIF9 = Byte.MIN_VALUE;
}
}

protected final void initC_DISDIF96(String s) {
if (!s.trim().isEmpty()) {
C_DISDIF96 = Byte.parseByte(s);
} else {
C_DISDIF96 = Byte.MIN_VALUE;
}
}

protected final void initC_DISEFFECTS1(String s) {
if (!s.trim().isEmpty()) {
C_DISEFFECTS1 = Byte.parseByte(s);
} else {
C_DISEFFECTS1 = Byte.MIN_VALUE;
}
}

protected final void initC_DISEFFECTS2(String s) {
if (!s.trim().isEmpty()) {
C_DISEFFECTS2 = Byte.parseByte(s);
} else {
C_DISEFFECTS2 = Byte.MIN_VALUE;
}
}

protected final void initC_DISEFFECTS3(String s) {
if (!s.trim().isEmpty()) {
C_DISEFFECTS3 = Byte.parseByte(s);
} else {
C_DISEFFECTS3 = Byte.MIN_VALUE;
}
}

protected final void initC_DISEFFECTS4(String s) {
if (!s.trim().isEmpty()) {
C_DISEFFECTS4 = Byte.parseByte(s);
} else {
C_DISEFFECTS4 = Byte.MIN_VALUE;
}
}

protected final void initC_DISEFFECTS5(String s) {
if (!s.trim().isEmpty()) {
C_DISEFFECTS5 = Byte.parseByte(s);
} else {
C_DISEFFECTS5 = Byte.MIN_VALUE;
}
}

protected final void initC_DIVCHK1(String s) {
if (!s.trim().isEmpty()) {
C_DIVCHK1 = Byte.parseByte(s);
} else {
C_DIVCHK1 = Byte.MIN_VALUE;
}
}

protected final void initC_DIVCHK2(String s) {
if (!s.trim().isEmpty()) {
C_DIVCHK2 = Byte.parseByte(s);
} else {
C_DIVCHK2 = Byte.MIN_VALUE;
}
}

protected final void initC_DIVFIN1(String s) {
if (!s.trim().isEmpty()) {
C_DIVFIN1 = Byte.parseByte(s);
} else {
C_DIVFIN1 = Byte.MIN_VALUE;
}
}

protected final void initC_DIVFIN2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_DIVFIN2 = false;
} else {
C_DIVFIN2 = true;
}
}
}

protected final void initC_DKLM(String s) {
if (!s.trim().isEmpty()) {
C_DKLM = Byte.parseByte(s);
} else {
C_DKLM = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT11(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT11 = Byte.parseByte(s);
} else {
C_DMEMCONT11 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT12(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT12 = Byte.parseByte(s);
} else {
C_DMEMCONT12 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT13(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT13 = Byte.parseByte(s);
} else {
C_DMEMCONT13 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT21(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT21 = Byte.parseByte(s);
} else {
C_DMEMCONT21 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT210(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT210 = Byte.parseByte(s);
} else {
C_DMEMCONT210 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT211(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT211 = Byte.parseByte(s);
} else {
C_DMEMCONT211 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT212(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT212 = Byte.parseByte(s);
} else {
C_DMEMCONT212 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT213(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT213 = Byte.parseByte(s);
} else {
C_DMEMCONT213 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT214(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT214 = Byte.parseByte(s);
} else {
C_DMEMCONT214 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT215(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT215 = Byte.parseByte(s);
} else {
C_DMEMCONT215 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT216(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT216 = Byte.parseByte(s);
} else {
C_DMEMCONT216 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT22(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT22 = Byte.parseByte(s);
} else {
C_DMEMCONT22 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT23(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT23 = Byte.parseByte(s);
} else {
C_DMEMCONT23 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT24(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT24 = Byte.parseByte(s);
} else {
C_DMEMCONT24 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT25(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT25 = Byte.parseByte(s);
} else {
C_DMEMCONT25 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT26(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT26 = Byte.parseByte(s);
} else {
C_DMEMCONT26 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT27(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT27 = Byte.parseByte(s);
} else {
C_DMEMCONT27 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT28(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT28 = Byte.parseByte(s);
} else {
C_DMEMCONT28 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT29(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT29 = Byte.parseByte(s);
} else {
C_DMEMCONT29 = Byte.MIN_VALUE;
}
}

protected final void initC_DMEMCONT3(String s) {
if (!s.trim().isEmpty()) {
C_DMEMCONT3 = Byte.parseByte(s);
} else {
C_DMEMCONT3 = Byte.MIN_VALUE;
}
}

protected final void initC_DOBY_DV(String s) {
if (!s.trim().isEmpty()) {
C_DOBY_DV = Short.parseShort(s);
} else {
C_DOBY_DV = Short.MIN_VALUE;
}
}

protected final void initC_DRGMJ(String s) {
if (!s.trim().isEmpty()) {
C_DRGMJ = Byte.parseByte(s);
} else {
C_DRGMJ = Byte.MIN_VALUE;
}
}

protected final void initC_DRGOTH(String s) {
if (!s.trim().isEmpty()) {
C_DRGOTH = Byte.parseByte(s);
} else {
C_DRGOTH = Byte.MIN_VALUE;
}
}

protected final void initC_DRGSOL(String s) {
if (!s.trim().isEmpty()) {
C_DRGSOL = Byte.parseByte(s);
} else {
C_DRGSOL = Byte.MIN_VALUE;
}
}

protected final void initC_DRIVE(String s) {
if (!s.trim().isEmpty()) {
C_DRIVE = Byte.parseByte(s);
} else {
C_DRIVE = Byte.MIN_VALUE;
}
}

protected final void initC_DRNK4W(String s) {
if (!s.trim().isEmpty()) {
C_DRNK4W = Byte.parseByte(s);
} else {
C_DRNK4W = Byte.MIN_VALUE;
}
}

protected final void initC_DVAGE(String s) {
if (!s.trim().isEmpty()) {
C_DVAGE = Byte.parseByte(s);
} else {
C_DVAGE = Byte.MIN_VALUE;
}
}

protected final void initC_DVM1(String s) {
if (!s.trim().isEmpty()) {
C_DVM1 = Byte.parseByte(s);
} else {
C_DVM1 = Byte.MIN_VALUE;
}
}

protected final void initC_DVM2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_DVM2 = false;
} else {
C_DVM2 = true;
}
}
}

protected final void initC_DVY41(String s) {
if (!s.trim().isEmpty()) {
C_DVY41 = Short.parseShort(s);
} else {
C_DVY41 = Short.MIN_VALUE;
}
}

protected final void initC_DVY42(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_DVY42 = false;
} else {
C_DVY42 = true;
}
}
}

protected final void initC_EATLIVU(String s) {
if (!s.trim().isEmpty()) {
C_EATLIVU = Byte.parseByte(s);
} else {
C_EATLIVU = Byte.MIN_VALUE;
}
}

protected final void initC_EDASP(String s) {
if (!s.trim().isEmpty()) {
C_EDASP = Byte.parseByte(s);
} else {
C_EDASP = Byte.MIN_VALUE;
}
}

protected final void initC_EDTYPE(String s) {
if (!s.trim().isEmpty()) {
C_EDTYPE = Byte.parseByte(s);
} else {
C_EDTYPE = Byte.MIN_VALUE;
}
}

protected final void initC_EDUCATION(String s) {
if (!s.trim().isEmpty()) {
C_EDUCATION = Byte.parseByte(s);
} else {
C_EDUCATION = Byte.MIN_VALUE;
}
}

protected final void initC_EED12(String s) {
if (!s.trim().isEmpty()) {
C_EED12 = Byte.parseByte(s);
} else {
C_EED12 = Byte.MIN_VALUE;
}
}

protected final void initC_EMPCHK(String s) {
if (!s.trim().isEmpty()) {
C_EMPCHK = Byte.parseByte(s);
} else {
C_EMPCHK = Byte.MIN_VALUE;
}
}

protected final void initC_EMPLOY(String s) {
if (!s.trim().isEmpty()) {
C_EMPLOY = Byte.parseByte(s);
} else {
C_EMPLOY = Byte.MIN_VALUE;
}
}

protected final void initC_EMPSTENDD(String s) {
if (!s.trim().isEmpty()) {
C_EMPSTENDD = Byte.parseByte(s);
} else {
C_EMPSTENDD = Byte.MIN_VALUE;
}
}

protected final void initC_EMPSTENDM(String s) {
if (!s.trim().isEmpty()) {
C_EMPSTENDM = Byte.parseByte(s);
} else {
C_EMPSTENDM = Byte.MIN_VALUE;
}
}

protected final void initC_EMPSTENDY4(String s) {
if (!s.trim().isEmpty()) {
C_EMPSTENDY4 = Short.parseShort(s);
} else {
C_EMPSTENDY4 = Short.MIN_VALUE;
}
}

protected final void initC_ENDMNTH1(String s) {
if (!s.trim().isEmpty()) {
C_ENDMNTH1 = Byte.parseByte(s);
} else {
C_ENDMNTH1 = Byte.MIN_VALUE;
}
}

protected final void initC_ENDMNTH2(String s) {
if (!s.trim().isEmpty()) {
C_ENDMNTH2 = Byte.parseByte(s);
} else {
C_ENDMNTH2 = Byte.MIN_VALUE;
}
}

protected final void initC_ENDMNTH3(String s) {
if (!s.trim().isEmpty()) {
C_ENDMNTH3 = Byte.parseByte(s);
} else {
C_ENDMNTH3 = Byte.MIN_VALUE;
}
}

protected final void initC_EPROSH(String s) {
if (!s.trim().isEmpty()) {
C_EPROSH = Byte.parseByte(s);
} else {
C_EPROSH = Byte.MIN_VALUE;
}
}

protected final void initC_ETHN_DV(String s) {
if (!s.trim().isEmpty()) {
C_ETHN_DV = Byte.parseByte(s);
} else {
C_ETHN_DV = Byte.MIN_VALUE;
}
}

protected final void initC_EVRALC(String s) {
if (!s.trim().isEmpty()) {
C_EVRALC = Byte.parseByte(s);
} else {
C_EVRALC = Byte.MIN_VALUE;
}
}

protected final void initC_EVRSMO(String s) {
if (!s.trim().isEmpty()) {
C_EVRSMO = Byte.parseByte(s);
} else {
C_EVRSMO = Byte.MIN_VALUE;
}
}

protected final void initC_EXPREAM(String s) {
if (!s.trim().isEmpty()) {
C_EXPREAM = Byte.parseByte(s);
} else {
C_EXPREAM = Byte.MIN_VALUE;
}
}

protected final void initC_EXSAME(String s) {
if (!s.trim().isEmpty()) {
C_EXSAME = Byte.parseByte(s);
} else {
C_EXSAME = Byte.MIN_VALUE;
}
}

protected final void initC_EXTNSA(String s) {
if (!s.trim().isEmpty()) {
C_EXTNSA = Byte.parseByte(s);
} else {
C_EXTNSA = Byte.MIN_VALUE;
}
}

protected final void initC_EXTRATE(String s) {
if (!s.trim().isEmpty()) {
C_EXTRATE = Double.parseDouble(s);
} else {
C_EXTRATE = Double.NaN;
}
}

protected final void initC_EXTREST(String s) {
if (!s.trim().isEmpty()) {
C_EXTREST = Byte.parseByte(s);
} else {
C_EXTREST = Byte.MIN_VALUE;
}
}

protected final void initC_FAMILY(String s) {
if (!s.trim().isEmpty()) {
C_FAMILY = Byte.parseByte(s);
} else {
C_FAMILY = Byte.MIN_VALUE;
}
}

protected final void initC_FAMSUP(String s) {
if (!s.trim().isEmpty()) {
C_FAMSUP = Byte.parseByte(s);
} else {
C_FAMSUP = Byte.MIN_VALUE;
}
}

protected final void initC_FARKID(String s) {
if (!s.trim().isEmpty()) {
C_FARKID = Byte.parseByte(s);
} else {
C_FARKID = Byte.MIN_VALUE;
}
}

protected final void initC_FATHER(String s) {
if (!s.trim().isEmpty()) {
C_FATHER = Byte.parseByte(s);
} else {
C_FATHER = Byte.MIN_VALUE;
}
}

protected final void initC_FEDLIK(String s) {
if (!s.trim().isEmpty()) {
C_FEDLIK = Byte.parseByte(s);
} else {
C_FEDLIK = Byte.MIN_VALUE;
}
}

protected final void initC_FEDNT(String s) {
if (!s.trim().isEmpty()) {
C_FEDNT = Byte.parseByte(s);
} else {
C_FEDNT = Byte.MIN_VALUE;
}
}

protected final void initC_FEDNTO_CODE(String s) {
if (!s.trim().isEmpty()) {
C_FEDNTO_CODE = Byte.parseByte(s);
} else {
C_FEDNTO_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_FEEND(String s) {
if (!s.trim().isEmpty()) {
C_FEEND = Byte.parseByte(s);
} else {
C_FEEND = Byte.MIN_VALUE;
}
}

protected final void initC_FENOW(String s) {
if (!s.trim().isEmpty()) {
C_FENOW = Byte.parseByte(s);
} else {
C_FENOW = Byte.MIN_VALUE;
}
}

protected final void initC_FFBRFEDLW(String s) {
if (!s.trim().isEmpty()) {
C_FFBRFEDLW = Byte.parseByte(s);
} else {
C_FFBRFEDLW = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE01(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE01 = Byte.parseByte(s);
} else {
C_FF_BENTYPE01 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE02(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE02 = Byte.parseByte(s);
} else {
C_FF_BENTYPE02 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE03(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE03 = Byte.parseByte(s);
} else {
C_FF_BENTYPE03 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE04(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE04 = Byte.parseByte(s);
} else {
C_FF_BENTYPE04 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE05(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE05 = Byte.parseByte(s);
} else {
C_FF_BENTYPE05 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE06(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE06 = Byte.parseByte(s);
} else {
C_FF_BENTYPE06 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE07(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE07 = Byte.parseByte(s);
} else {
C_FF_BENTYPE07 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE08(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE08 = Byte.parseByte(s);
} else {
C_FF_BENTYPE08 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE09(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE09 = Byte.parseByte(s);
} else {
C_FF_BENTYPE09 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE10(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE10 = Byte.parseByte(s);
} else {
C_FF_BENTYPE10 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE11(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE11 = Byte.parseByte(s);
} else {
C_FF_BENTYPE11 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE12(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE12 = Byte.parseByte(s);
} else {
C_FF_BENTYPE12 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE13(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE13 = Byte.parseByte(s);
} else {
C_FF_BENTYPE13 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE14(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE14 = Byte.parseByte(s);
} else {
C_FF_BENTYPE14 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE15(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE15 = Byte.parseByte(s);
} else {
C_FF_BENTYPE15 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE16(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE16 = Byte.parseByte(s);
} else {
C_FF_BENTYPE16 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE17(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE17 = Byte.parseByte(s);
} else {
C_FF_BENTYPE17 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE18(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE18 = Byte.parseByte(s);
} else {
C_FF_BENTYPE18 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE19(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE19 = Byte.parseByte(s);
} else {
C_FF_BENTYPE19 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE20(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE20 = Byte.parseByte(s);
} else {
C_FF_BENTYPE20 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE21(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE21 = Byte.parseByte(s);
} else {
C_FF_BENTYPE21 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE22(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE22 = Byte.parseByte(s);
} else {
C_FF_BENTYPE22 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE23(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE23 = Byte.parseByte(s);
} else {
C_FF_BENTYPE23 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE24(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE24 = Byte.parseByte(s);
} else {
C_FF_BENTYPE24 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE25(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE25 = Byte.parseByte(s);
} else {
C_FF_BENTYPE25 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE26(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE26 = Byte.parseByte(s);
} else {
C_FF_BENTYPE26 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE27(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE27 = Byte.parseByte(s);
} else {
C_FF_BENTYPE27 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE28(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE28 = Byte.parseByte(s);
} else {
C_FF_BENTYPE28 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE29(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE29 = Byte.parseByte(s);
} else {
C_FF_BENTYPE29 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE30(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE30 = Byte.parseByte(s);
} else {
C_FF_BENTYPE30 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE31(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE31 = Byte.parseByte(s);
} else {
C_FF_BENTYPE31 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE32(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE32 = Byte.parseByte(s);
} else {
C_FF_BENTYPE32 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE33(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE33 = Byte.parseByte(s);
} else {
C_FF_BENTYPE33 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE34(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE34 = Byte.parseByte(s);
} else {
C_FF_BENTYPE34 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE35(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE35 = Byte.parseByte(s);
} else {
C_FF_BENTYPE35 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE36(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE36 = Byte.parseByte(s);
} else {
C_FF_BENTYPE36 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE37(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE37 = Byte.parseByte(s);
} else {
C_FF_BENTYPE37 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE38(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE38 = Byte.parseByte(s);
} else {
C_FF_BENTYPE38 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_BENTYPE39(String s) {
if (!s.trim().isEmpty()) {
C_FF_BENTYPE39 = Byte.parseByte(s);
} else {
C_FF_BENTYPE39 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_EMPLW(String s) {
if (!s.trim().isEmpty()) {
C_FF_EMPLW = Byte.parseByte(s);
} else {
C_FF_EMPLW = Byte.MIN_VALUE;
}
}

protected final void initC_FF_EVERINT(String s) {
if (!s.trim().isEmpty()) {
C_FF_EVERINT = Byte.parseByte(s);
} else {
C_FF_EVERINT = Byte.MIN_VALUE;
}
}

protected final void initC_FF_IVINTLANG(String s) {
if (!s.trim().isEmpty()) {
C_FF_IVINTLANG = Byte.parseByte(s);
} else {
C_FF_IVINTLANG = Byte.MIN_VALUE;
}
}

protected final void initC_FF_IVLOLW(String s) {
if (!s.trim().isEmpty()) {
C_FF_IVLOLW = Byte.parseByte(s);
} else {
C_FF_IVLOLW = Byte.MIN_VALUE;
}
}

protected final void initC_FF_JBMNGR(String s) {
if (!s.trim().isEmpty()) {
C_FF_JBMNGR = Byte.parseByte(s);
} else {
C_FF_JBMNGR = Byte.MIN_VALUE;
}
}

protected final void initC_FF_JBSEMP(String s) {
if (!s.trim().isEmpty()) {
C_FF_JBSEMP = Byte.parseByte(s);
} else {
C_FF_JBSEMP = Byte.MIN_VALUE;
}
}

protected final void initC_FF_JBSIZE(String s) {
if (!s.trim().isEmpty()) {
C_FF_JBSIZE = Byte.parseByte(s);
} else {
C_FF_JBSIZE = Byte.MIN_VALUE;
}
}

protected final void initC_FF_JBSTAT(String s) {
if (!s.trim().isEmpty()) {
C_FF_JBSTAT = Byte.parseByte(s);
} else {
C_FF_JBSTAT = Byte.MIN_VALUE;
}
}

protected final void initC_FF_OPRLG(String s) {
if (!s.trim().isEmpty()) {
C_FF_OPRLG = Byte.parseByte(s);
} else {
C_FF_OPRLG = Byte.MIN_VALUE;
}
}

protected final void initC_FF_OPRLG0(String s) {
if (!s.trim().isEmpty()) {
C_FF_OPRLG0 = Byte.parseByte(s);
} else {
C_FF_OPRLG0 = Byte.MIN_VALUE;
}
}

protected final void initC_FF_OPRLG0NI(String s) {
if (!s.trim().isEmpty()) {
C_FF_OPRLG0NI = Byte.parseByte(s);
} else {
C_FF_OPRLG0NI = Byte.MIN_VALUE;
}
}

protected final void initC_FF_TEL(String s) {
if (!s.trim().isEmpty()) {
C_FF_TEL = Byte.parseByte(s);
} else {
C_FF_TEL = Byte.MIN_VALUE;
}
}

protected final void initC_FF_UKBORN(String s) {
if (!s.trim().isEmpty()) {
C_FF_UKBORN = Byte.parseByte(s);
} else {
C_FF_UKBORN = Byte.MIN_VALUE;
}
}

protected final void initC_FF_YR2UK4(String s) {
if (!s.trim().isEmpty()) {
C_FF_YR2UK4 = Short.parseShort(s);
} else {
C_FF_YR2UK4 = Short.MIN_VALUE;
}
}

protected final void initC_FIBENOTHR_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIBENOTHR_DV = Double.parseDouble(s);
} else {
C_FIBENOTHR_DV = Double.NaN;
}
}

protected final void initC_FIBENOTHR_IF(String s) {
if (!s.trim().isEmpty()) {
C_FIBENOTHR_IF = Double.parseDouble(s);
} else {
C_FIBENOTHR_IF = Double.NaN;
}
}

protected final void initC_FIBENOTHR_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_FIBENOTHR_TC = false;
} else {
C_FIBENOTHR_TC = true;
}
}
}

protected final void initC_FIMNGRS_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNGRS_DV = Double.parseDouble(s);
} else {
C_FIMNGRS_DV = Double.NaN;
}
}

protected final void initC_FIMNGRS_IF(String s) {
if (!s.trim().isEmpty()) {
C_FIMNGRS_IF = Double.parseDouble(s);
} else {
C_FIMNGRS_IF = Double.NaN;
}
}

protected final void initC_FIMNGRS_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_FIMNGRS_TC = false;
} else {
C_FIMNGRS_TC = true;
}
}
}

protected final void initC_FIMNINVNET_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNINVNET_DV = Double.parseDouble(s);
} else {
C_FIMNINVNET_DV = Double.NaN;
}
}

protected final void initC_FIMNLABGRS_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNLABGRS_DV = Double.parseDouble(s);
} else {
C_FIMNLABGRS_DV = Double.NaN;
}
}

protected final void initC_FIMNLABGRS_IF(String s) {
if (!s.trim().isEmpty()) {
C_FIMNLABGRS_IF = Double.parseDouble(s);
} else {
C_FIMNLABGRS_IF = Double.NaN;
}
}

protected final void initC_FIMNLABGRS_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_FIMNLABGRS_TC = false;
} else {
C_FIMNLABGRS_TC = true;
}
}
}

protected final void initC_FIMNLABNET_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNLABNET_DV = Double.parseDouble(s);
} else {
C_FIMNLABNET_DV = Double.NaN;
}
}

protected final void initC_FIMNLABNET_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_FIMNLABNET_TC = false;
} else {
C_FIMNLABNET_TC = true;
}
}
}

protected final void initC_FIMNMISC_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNMISC_DV = Double.parseDouble(s);
} else {
C_FIMNMISC_DV = Double.NaN;
}
}

protected final void initC_FIMNNET_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNNET_DV = Double.parseDouble(s);
} else {
C_FIMNNET_DV = Double.NaN;
}
}

protected final void initC_FIMNPEN_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNPEN_DV = Double.parseDouble(s);
} else {
C_FIMNPEN_DV = Double.NaN;
}
}

protected final void initC_FIMNPRBEN_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNPRBEN_DV = Double.parseDouble(s);
} else {
C_FIMNPRBEN_DV = Double.NaN;
}
}

protected final void initC_FIMNSBEN_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIMNSBEN_DV = Double.parseDouble(s);
} else {
C_FIMNSBEN_DV = Double.NaN;
}
}

protected final void initC_FINFUT(String s) {
if (!s.trim().isEmpty()) {
C_FINFUT = Byte.parseByte(s);
} else {
C_FINFUT = Byte.MIN_VALUE;
}
}

protected final void initC_FINNOW(String s) {
if (!s.trim().isEmpty()) {
C_FINNOW = Byte.parseByte(s);
} else {
C_FINNOW = Byte.MIN_VALUE;
}
}

protected final void initC_FIVEALCDR(String s) {
if (!s.trim().isEmpty()) {
C_FIVEALCDR = Byte.parseByte(s);
} else {
C_FIVEALCDR = Byte.MIN_VALUE;
}
}

protected final void initC_FIYRDB1(String s) {
if (!s.trim().isEmpty()) {
C_FIYRDB1 = Byte.parseByte(s);
} else {
C_FIYRDB1 = Byte.MIN_VALUE;
}
}

protected final void initC_FIYRDB2(String s) {
if (!s.trim().isEmpty()) {
C_FIYRDB2 = Byte.parseByte(s);
} else {
C_FIYRDB2 = Byte.MIN_VALUE;
}
}

protected final void initC_FIYRDB3(String s) {
if (!s.trim().isEmpty()) {
C_FIYRDB3 = Byte.parseByte(s);
} else {
C_FIYRDB3 = Byte.MIN_VALUE;
}
}

protected final void initC_FIYRDB4(String s) {
if (!s.trim().isEmpty()) {
C_FIYRDB4 = Byte.parseByte(s);
} else {
C_FIYRDB4 = Byte.MIN_VALUE;
}
}

protected final void initC_FIYRDB5(String s) {
if (!s.trim().isEmpty()) {
C_FIYRDB5 = Byte.parseByte(s);
} else {
C_FIYRDB5 = Byte.MIN_VALUE;
}
}

protected final void initC_FIYRDB6(String s) {
if (!s.trim().isEmpty()) {
C_FIYRDB6 = Byte.parseByte(s);
} else {
C_FIYRDB6 = Byte.MIN_VALUE;
}
}

protected final void initC_FIYRDIA(String s) {
if (!s.trim().isEmpty()) {
C_FIYRDIA = Integer.parseInt(s);
} else {
C_FIYRDIA = Integer.MIN_VALUE;
}
}

protected final void initC_FIYRINVINC_DV(String s) {
if (!s.trim().isEmpty()) {
C_FIYRINVINC_DV = Double.parseDouble(s);
} else {
C_FIYRINVINC_DV = Double.NaN;
}
}

protected final void initC_FIYRINVINC_IF(String s) {
if (!s.trim().isEmpty()) {
C_FIYRINVINC_IF = Byte.parseByte(s);
} else {
C_FIYRINVINC_IF = Byte.MIN_VALUE;
}
}

protected final void initC_FIYRINVINC_TC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_FIYRINVINC_TC = false;
} else {
C_FIYRINVINC_TC = true;
}
}
}

protected final void initC_FNPID(String s) {
if (!s.trim().isEmpty()) {
C_FNPID = Integer.parseInt(s);
} else {
C_FNPID = Integer.MIN_VALUE;
}
}

protected final void initC_FNPNO(String s) {
if (!s.trim().isEmpty()) {
C_FNPNO = Byte.parseByte(s);
} else {
C_FNPNO = Byte.MIN_VALUE;
}
}

protected final void initC_FNSPID(String s) {
if (!s.trim().isEmpty()) {
C_FNSPID = Integer.parseInt(s);
} else {
C_FNSPID = Integer.MIN_VALUE;
}
}

protected final void initC_FNSPNO(String s) {
if (!s.trim().isEmpty()) {
C_FNSPNO = Byte.parseByte(s);
} else {
C_FNSPNO = Byte.MIN_VALUE;
}
}

protected final void initC_FRDRG(String s) {
if (!s.trim().isEmpty()) {
C_FRDRG = Byte.parseByte(s);
} else {
C_FRDRG = Byte.MIN_VALUE;
}
}

protected final void initC_FROBULLI(String s) {
if (!s.trim().isEmpty()) {
C_FROBULLI = Byte.parseByte(s);
} else {
C_FROBULLI = Byte.MIN_VALUE;
}
}

protected final void initC_FROBULLY(String s) {
if (!s.trim().isEmpty()) {
C_FROBULLY = Byte.parseByte(s);
} else {
C_FROBULLY = Byte.MIN_VALUE;
}
}

protected final void initC_FRPBULLI(String s) {
if (!s.trim().isEmpty()) {
C_FRPBULLI = Byte.parseByte(s);
} else {
C_FRPBULLI = Byte.MIN_VALUE;
}
}

protected final void initC_FRPBULLY(String s) {
if (!s.trim().isEmpty()) {
C_FRPBULLY = Byte.parseByte(s);
} else {
C_FRPBULLY = Byte.MIN_VALUE;
}
}

protected final void initC_FT2ENDM1(String s) {
if (!s.trim().isEmpty()) {
C_FT2ENDM1 = Byte.parseByte(s);
} else {
C_FT2ENDM1 = Byte.MIN_VALUE;
}
}

protected final void initC_FT2ENDM2(String s) {
if (!s.trim().isEmpty()) {
C_FT2ENDM2 = Byte.parseByte(s);
} else {
C_FT2ENDM2 = Byte.MIN_VALUE;
}
}

protected final void initC_FT2ENDM3(String s) {
if (!s.trim().isEmpty()) {
C_FT2ENDM3 = Byte.parseByte(s);
} else {
C_FT2ENDM3 = Byte.MIN_VALUE;
}
}

protected final void initC_FT2ENDM4(String s) {
if (!s.trim().isEmpty()) {
C_FT2ENDM4 = Byte.parseByte(s);
} else {
C_FT2ENDM4 = Byte.MIN_VALUE;
}
}

protected final void initC_FT2ENDY41(String s) {
if (!s.trim().isEmpty()) {
C_FT2ENDY41 = Short.parseShort(s);
} else {
C_FT2ENDY41 = Short.MIN_VALUE;
}
}

protected final void initC_FT2ENDY42(String s) {
if (!s.trim().isEmpty()) {
C_FT2ENDY42 = Short.parseShort(s);
} else {
C_FT2ENDY42 = Short.MIN_VALUE;
}
}

protected final void initC_FT2ENDY43(String s) {
if (!s.trim().isEmpty()) {
C_FT2ENDY43 = Short.parseShort(s);
} else {
C_FT2ENDY43 = Short.MIN_VALUE;
}
}

protected final void initC_FT2ENDY44(String s) {
if (!s.trim().isEmpty()) {
C_FT2ENDY44 = Short.parseShort(s);
} else {
C_FT2ENDY44 = Short.MIN_VALUE;
}
}

protected final void initC_FTEDANY(String s) {
if (!s.trim().isEmpty()) {
C_FTEDANY = Byte.parseByte(s);
} else {
C_FTEDANY = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDEND1(String s) {
if (!s.trim().isEmpty()) {
C_FTEDEND1 = Byte.parseByte(s);
} else {
C_FTEDEND1 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDEND2(String s) {
if (!s.trim().isEmpty()) {
C_FTEDEND2 = Byte.parseByte(s);
} else {
C_FTEDEND2 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDEND3(String s) {
if (!s.trim().isEmpty()) {
C_FTEDEND3 = Byte.parseByte(s);
} else {
C_FTEDEND3 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDEND4(String s) {
if (!s.trim().isEmpty()) {
C_FTEDEND4 = Byte.parseByte(s);
} else {
C_FTEDEND4 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDMOR1(String s) {
if (!s.trim().isEmpty()) {
C_FTEDMOR1 = Byte.parseByte(s);
} else {
C_FTEDMOR1 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDMOR2(String s) {
if (!s.trim().isEmpty()) {
C_FTEDMOR2 = Byte.parseByte(s);
} else {
C_FTEDMOR2 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDMOR3(String s) {
if (!s.trim().isEmpty()) {
C_FTEDMOR3 = Byte.parseByte(s);
} else {
C_FTEDMOR3 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDMOR4(String s) {
if (!s.trim().isEmpty()) {
C_FTEDMOR4 = Byte.parseByte(s);
} else {
C_FTEDMOR4 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDSTARTM1(String s) {
if (!s.trim().isEmpty()) {
C_FTEDSTARTM1 = Byte.parseByte(s);
} else {
C_FTEDSTARTM1 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDSTARTM2(String s) {
if (!s.trim().isEmpty()) {
C_FTEDSTARTM2 = Byte.parseByte(s);
} else {
C_FTEDSTARTM2 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDSTARTM3(String s) {
if (!s.trim().isEmpty()) {
C_FTEDSTARTM3 = Byte.parseByte(s);
} else {
C_FTEDSTARTM3 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDSTARTM4(String s) {
if (!s.trim().isEmpty()) {
C_FTEDSTARTM4 = Byte.parseByte(s);
} else {
C_FTEDSTARTM4 = Byte.MIN_VALUE;
}
}

protected final void initC_FTEDSTARTY41(String s) {
if (!s.trim().isEmpty()) {
C_FTEDSTARTY41 = Short.parseShort(s);
} else {
C_FTEDSTARTY41 = Short.MIN_VALUE;
}
}

protected final void initC_FTEDSTARTY42(String s) {
if (!s.trim().isEmpty()) {
C_FTEDSTARTY42 = Short.parseShort(s);
} else {
C_FTEDSTARTY42 = Short.MIN_VALUE;
}
}

protected final void initC_FTEDSTARTY43(String s) {
if (!s.trim().isEmpty()) {
C_FTEDSTARTY43 = Short.parseShort(s);
} else {
C_FTEDSTARTY43 = Short.MIN_VALUE;
}
}

protected final void initC_FTEDSTARTY44(String s) {
if (!s.trim().isEmpty()) {
C_FTEDSTARTY44 = Short.parseShort(s);
} else {
C_FTEDSTARTY44 = Short.MIN_VALUE;
}
}

protected final void initC_FTENDM(String s) {
if (!s.trim().isEmpty()) {
C_FTENDM = Byte.parseByte(s);
} else {
C_FTENDM = Byte.MIN_VALUE;
}
}

protected final void initC_FTENDY4(String s) {
if (!s.trim().isEmpty()) {
C_FTENDY4 = Short.parseShort(s);
} else {
C_FTENDY4 = Short.MIN_VALUE;
}
}

protected final void initC_FTEXV(String s) {
if (!s.trim().isEmpty()) {
C_FTEXV = Short.parseShort(s);
} else {
C_FTEXV = Short.MIN_VALUE;
}
}

protected final void initC_FTEXW(String s) {
if (!s.trim().isEmpty()) {
C_FTEXW = Byte.parseByte(s);
} else {
C_FTEXW = Byte.MIN_VALUE;
}
}

protected final void initC_FTQUALS(String s) {
if (!s.trim().isEmpty()) {
C_FTQUALS = Byte.parseByte(s);
} else {
C_FTQUALS = Byte.MIN_VALUE;
}
}

protected final void initC_FUTRA(String s) {
if (!s.trim().isEmpty()) {
C_FUTRA = Short.parseShort(s);
} else {
C_FUTRA = Short.MIN_VALUE;
}
}

protected final void initC_FUTRB(String s) {
if (!s.trim().isEmpty()) {
C_FUTRB = Short.parseShort(s);
} else {
C_FUTRB = Short.MIN_VALUE;
}
}

protected final void initC_FUTRC(String s) {
if (!s.trim().isEmpty()) {
C_FUTRC = Short.parseShort(s);
} else {
C_FUTRC = Short.MIN_VALUE;
}
}

protected final void initC_FUTRD(String s) {
if (!s.trim().isEmpty()) {
C_FUTRD = Short.parseShort(s);
} else {
C_FUTRD = Short.MIN_VALUE;
}
}

protected final void initC_FUTRE(String s) {
if (!s.trim().isEmpty()) {
C_FUTRE = Short.parseShort(s);
} else {
C_FUTRE = Short.MIN_VALUE;
}
}

protected final void initC_FUTRF(String s) {
if (!s.trim().isEmpty()) {
C_FUTRF = Short.parseShort(s);
} else {
C_FUTRF = Short.MIN_VALUE;
}
}

protected final void initC_FUTRG(String s) {
if (!s.trim().isEmpty()) {
C_FUTRG = Short.parseShort(s);
} else {
C_FUTRG = Short.MIN_VALUE;
}
}

protected final void initC_FUTRH(String s) {
if (!s.trim().isEmpty()) {
C_FUTRH = Short.parseShort(s);
} else {
C_FUTRH = Short.MIN_VALUE;
}
}

protected final void initC_FUTRI(String s) {
if (!s.trim().isEmpty()) {
C_FUTRI = Short.parseShort(s);
} else {
C_FUTRI = Short.MIN_VALUE;
}
}

protected final void initC_FUTRJ(String s) {
if (!s.trim().isEmpty()) {
C_FUTRJ = Short.parseShort(s);
} else {
C_FUTRJ = Short.MIN_VALUE;
}
}

protected final void initC_FUTRK(String s) {
if (!s.trim().isEmpty()) {
C_FUTRK = Short.parseShort(s);
} else {
C_FUTRK = Short.MIN_VALUE;
}
}

protected final void initC_FUTRL(String s) {
if (!s.trim().isEmpty()) {
C_FUTRL = Short.parseShort(s);
} else {
C_FUTRL = Short.MIN_VALUE;
}
}

protected final void initC_FUTUREINT(String s) {
if (!s.trim().isEmpty()) {
C_FUTUREINT = Byte.parseByte(s);
} else {
C_FUTUREINT = Byte.MIN_VALUE;
}
}

protected final void initC_GOR_DV(String s) {
if (!s.trim().isEmpty()) {
C_GOR_DV = Byte.parseByte(s);
} else {
C_GOR_DV = Byte.MIN_VALUE;
}
}

protected final void initC_GRFPID(String s) {
if (!s.trim().isEmpty()) {
C_GRFPID = Integer.parseInt(s);
} else {
C_GRFPID = Integer.MIN_VALUE;
}
}

protected final void initC_GRFPNO(String s) {
if (!s.trim().isEmpty()) {
C_GRFPNO = Byte.parseByte(s);
} else {
C_GRFPNO = Byte.MIN_VALUE;
}
}

protected final void initC_GRMPID(String s) {
if (!s.trim().isEmpty()) {
C_GRMPID = Integer.parseInt(s);
} else {
C_GRMPID = Integer.MIN_VALUE;
}
}

protected final void initC_GRMPNO(String s) {
if (!s.trim().isEmpty()) {
C_GRMPNO = Byte.parseByte(s);
} else {
C_GRMPNO = Byte.MIN_VALUE;
}
}

protected final void initC_GRPBFTS(String s) {
if (!s.trim().isEmpty()) {
C_GRPBFTS = Byte.parseByte(s);
} else {
C_GRPBFTS = Byte.MIN_VALUE;
}
}

protected final void initC_HASSTEP(String s) {
if (!s.trim().isEmpty()) {
C_HASSTEP = Byte.parseByte(s);
} else {
C_HASSTEP = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND1(String s) {
if (!s.trim().isEmpty()) {
C_HCOND1 = Byte.parseByte(s);
} else {
C_HCOND1 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND10(String s) {
if (!s.trim().isEmpty()) {
C_HCOND10 = Byte.parseByte(s);
} else {
C_HCOND10 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND11(String s) {
if (!s.trim().isEmpty()) {
C_HCOND11 = Byte.parseByte(s);
} else {
C_HCOND11 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND12(String s) {
if (!s.trim().isEmpty()) {
C_HCOND12 = Byte.parseByte(s);
} else {
C_HCOND12 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND13(String s) {
if (!s.trim().isEmpty()) {
C_HCOND13 = Byte.parseByte(s);
} else {
C_HCOND13 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND14(String s) {
if (!s.trim().isEmpty()) {
C_HCOND14 = Byte.parseByte(s);
} else {
C_HCOND14 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND15(String s) {
if (!s.trim().isEmpty()) {
C_HCOND15 = Byte.parseByte(s);
} else {
C_HCOND15 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND16(String s) {
if (!s.trim().isEmpty()) {
C_HCOND16 = Byte.parseByte(s);
} else {
C_HCOND16 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND17(String s) {
if (!s.trim().isEmpty()) {
C_HCOND17 = Byte.parseByte(s);
} else {
C_HCOND17 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND2(String s) {
if (!s.trim().isEmpty()) {
C_HCOND2 = Byte.parseByte(s);
} else {
C_HCOND2 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND3(String s) {
if (!s.trim().isEmpty()) {
C_HCOND3 = Byte.parseByte(s);
} else {
C_HCOND3 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND4(String s) {
if (!s.trim().isEmpty()) {
C_HCOND4 = Byte.parseByte(s);
} else {
C_HCOND4 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND5(String s) {
if (!s.trim().isEmpty()) {
C_HCOND5 = Byte.parseByte(s);
} else {
C_HCOND5 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND6(String s) {
if (!s.trim().isEmpty()) {
C_HCOND6 = Byte.parseByte(s);
} else {
C_HCOND6 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND7(String s) {
if (!s.trim().isEmpty()) {
C_HCOND7 = Byte.parseByte(s);
} else {
C_HCOND7 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND8(String s) {
if (!s.trim().isEmpty()) {
C_HCOND8 = Byte.parseByte(s);
} else {
C_HCOND8 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND9(String s) {
if (!s.trim().isEmpty()) {
C_HCOND9 = Byte.parseByte(s);
} else {
C_HCOND9 = Byte.MIN_VALUE;
}
}

protected final void initC_HCOND96(String s) {
if (!s.trim().isEmpty()) {
C_HCOND96 = Byte.parseByte(s);
} else {
C_HCOND96 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA01(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA01 = Byte.parseByte(s);
} else {
C_HCONDA01 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA02(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA02 = Byte.parseByte(s);
} else {
C_HCONDA02 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA03(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA03 = Byte.parseByte(s);
} else {
C_HCONDA03 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA04(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA04 = Byte.parseByte(s);
} else {
C_HCONDA04 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA05(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA05 = Byte.parseByte(s);
} else {
C_HCONDA05 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA06(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA06 = Byte.parseByte(s);
} else {
C_HCONDA06 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA07(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA07 = Byte.parseByte(s);
} else {
C_HCONDA07 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA08(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA08 = Byte.parseByte(s);
} else {
C_HCONDA08 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA09(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA09 = Byte.parseByte(s);
} else {
C_HCONDA09 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA10(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA10 = Byte.parseByte(s);
} else {
C_HCONDA10 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA11(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA11 = Byte.parseByte(s);
} else {
C_HCONDA11 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA12(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA12 = Byte.parseByte(s);
} else {
C_HCONDA12 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA13(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA13 = Byte.parseByte(s);
} else {
C_HCONDA13 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA14(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA14 = Byte.parseByte(s);
} else {
C_HCONDA14 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA15(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA15 = Byte.parseByte(s);
} else {
C_HCONDA15 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA16(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA16 = Byte.parseByte(s);
} else {
C_HCONDA16 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDA17(String s) {
if (!s.trim().isEmpty()) {
C_HCONDA17 = Byte.parseByte(s);
} else {
C_HCONDA17 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDE6(String s) {
if (!s.trim().isEmpty()) {
C_HCONDE6 = Byte.parseByte(s);
} else {
C_HCONDE6 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDE7(String s) {
if (!s.trim().isEmpty()) {
C_HCONDE7 = Byte.parseByte(s);
} else {
C_HCONDE7 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDE96(String s) {
if (!s.trim().isEmpty()) {
C_HCONDE96 = Byte.parseByte(s);
} else {
C_HCONDE96 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDEA6(String s) {
if (!s.trim().isEmpty()) {
C_HCONDEA6 = Byte.parseByte(s);
} else {
C_HCONDEA6 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDEA7(String s) {
if (!s.trim().isEmpty()) {
C_HCONDEA7 = Byte.parseByte(s);
} else {
C_HCONDEA7 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN1(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN1 = Byte.parseByte(s);
} else {
C_HCONDN1 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN10(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN10 = Byte.parseByte(s);
} else {
C_HCONDN10 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN11(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN11 = Byte.parseByte(s);
} else {
C_HCONDN11 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN12(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN12 = Byte.parseByte(s);
} else {
C_HCONDN12 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN13(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN13 = Byte.parseByte(s);
} else {
C_HCONDN13 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN14(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN14 = Byte.parseByte(s);
} else {
C_HCONDN14 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN15(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN15 = Byte.parseByte(s);
} else {
C_HCONDN15 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN16(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN16 = Byte.parseByte(s);
} else {
C_HCONDN16 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN17(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN17 = Byte.parseByte(s);
} else {
C_HCONDN17 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN2(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN2 = Byte.parseByte(s);
} else {
C_HCONDN2 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN3(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN3 = Byte.parseByte(s);
} else {
C_HCONDN3 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN4(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN4 = Byte.parseByte(s);
} else {
C_HCONDN4 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN5(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN5 = Byte.parseByte(s);
} else {
C_HCONDN5 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN6(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN6 = Byte.parseByte(s);
} else {
C_HCONDN6 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN7(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN7 = Byte.parseByte(s);
} else {
C_HCONDN7 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN8(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN8 = Byte.parseByte(s);
} else {
C_HCONDN8 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN9(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN9 = Byte.parseByte(s);
} else {
C_HCONDN9 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDN96(String s) {
if (!s.trim().isEmpty()) {
C_HCONDN96 = Byte.parseByte(s);
} else {
C_HCONDN96 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNO1(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNO1 = Byte.parseByte(s);
} else {
C_HCONDNO1 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNO2(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNO2 = Byte.parseByte(s);
} else {
C_HCONDNO2 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNO3(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNO3 = Byte.parseByte(s);
} else {
C_HCONDNO3 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNO4(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNO4 = Byte.parseByte(s);
} else {
C_HCONDNO4 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNO5(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNO5 = Byte.parseByte(s);
} else {
C_HCONDNO5 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNO6(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNO6 = Byte.parseByte(s);
} else {
C_HCONDNO6 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNO7(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNO7 = Byte.parseByte(s);
} else {
C_HCONDNO7 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNO8(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNO8 = Byte.parseByte(s);
} else {
C_HCONDNO8 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNS1(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNS1 = Byte.parseByte(s);
} else {
C_HCONDNS1 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNS2(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNS2 = Byte.parseByte(s);
} else {
C_HCONDNS2 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNS3(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNS3 = Byte.parseByte(s);
} else {
C_HCONDNS3 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNS4(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNS4 = Byte.parseByte(s);
} else {
C_HCONDNS4 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNS5(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNS5 = Byte.parseByte(s);
} else {
C_HCONDNS5 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNS6(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNS6 = Byte.parseByte(s);
} else {
C_HCONDNS6 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNS7(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNS7 = Byte.parseByte(s);
} else {
C_HCONDNS7 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDNS8(String s) {
if (!s.trim().isEmpty()) {
C_HCONDNS8 = Byte.parseByte(s);
} else {
C_HCONDNS8 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS01(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS01 = Byte.parseByte(s);
} else {
C_HCONDS01 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS02(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS02 = Byte.parseByte(s);
} else {
C_HCONDS02 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS03(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS03 = Byte.parseByte(s);
} else {
C_HCONDS03 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS04(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS04 = Byte.parseByte(s);
} else {
C_HCONDS04 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS05(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS05 = Byte.parseByte(s);
} else {
C_HCONDS05 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS08(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS08 = Byte.parseByte(s);
} else {
C_HCONDS08 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS09(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS09 = Byte.parseByte(s);
} else {
C_HCONDS09 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS10(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS10 = Byte.parseByte(s);
} else {
C_HCONDS10 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS11(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS11 = Byte.parseByte(s);
} else {
C_HCONDS11 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS12(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS12 = Byte.parseByte(s);
} else {
C_HCONDS12 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS13(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS13 = Byte.parseByte(s);
} else {
C_HCONDS13 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS14(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS14 = Byte.parseByte(s);
} else {
C_HCONDS14 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS15(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS15 = Byte.parseByte(s);
} else {
C_HCONDS15 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS16(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS16 = Byte.parseByte(s);
} else {
C_HCONDS16 = Byte.MIN_VALUE;
}
}

protected final void initC_HCONDS17(String s) {
if (!s.trim().isEmpty()) {
C_HCONDS17 = Byte.parseByte(s);
} else {
C_HCONDS17 = Byte.MIN_VALUE;
}
}

protected final void initC_HEALTH(String s) {
if (!s.trim().isEmpty()) {
C_HEALTH = Byte.parseByte(s);
} else {
C_HEALTH = Byte.MIN_VALUE;
}
}

protected final void initC_HEARCOMPUTER(String s) {
if (!s.trim().isEmpty()) {
C_HEARCOMPUTER = Byte.parseByte(s);
} else {
C_HEARCOMPUTER = Byte.MIN_VALUE;
}
}

protected final void initC_HGADOPTF(String s) {
if (!s.trim().isEmpty()) {
C_HGADOPTF = Byte.parseByte(s);
} else {
C_HGADOPTF = Byte.MIN_VALUE;
}
}

protected final void initC_HGADOPTM(String s) {
if (!s.trim().isEmpty()) {
C_HGADOPTM = Byte.parseByte(s);
} else {
C_HGADOPTM = Byte.MIN_VALUE;
}
}

protected final void initC_HGBIOF(String s) {
if (!s.trim().isEmpty()) {
C_HGBIOF = Byte.parseByte(s);
} else {
C_HGBIOF = Byte.MIN_VALUE;
}
}

protected final void initC_HGBIOM(String s) {
if (!s.trim().isEmpty()) {
C_HGBIOM = Byte.parseByte(s);
} else {
C_HGBIOM = Byte.MIN_VALUE;
}
}

protected final void initC_HGPART(String s) {
if (!s.trim().isEmpty()) {
C_HGPART = Byte.parseByte(s);
} else {
C_HGPART = Byte.MIN_VALUE;
}
}

protected final void initC_HHORIG(String s) {
if (!s.trim().isEmpty()) {
C_HHORIG = Byte.parseByte(s);
} else {
C_HHORIG = Byte.MIN_VALUE;
}
}

protected final void initC_HHRESP_DV(String s) {
if (!s.trim().isEmpty()) {
C_HHRESP_DV = Byte.parseByte(s);
} else {
C_HHRESP_DV = Byte.MIN_VALUE;
}
}

protected final void initC_HHTYPE_DV(String s) {
if (!s.trim().isEmpty()) {
C_HHTYPE_DV = Byte.parseByte(s);
} else {
C_HHTYPE_DV = Byte.MIN_VALUE;
}
}

protected final void initC_HIDP(String s) {
if (!s.trim().isEmpty()) {
C_HIDP = Integer.parseInt(s);
} else {
C_HIDP = Integer.MIN_VALUE;
}
}

protected final void initC_HIQUAL_DV(String s) {
if (!s.trim().isEmpty()) {
C_HIQUAL_DV = Byte.parseByte(s);
} else {
C_HIQUAL_DV = Byte.MIN_VALUE;
}
}

protected final void initC_HITSIB(String s) {
if (!s.trim().isEmpty()) {
C_HITSIB = Byte.parseByte(s);
} else {
C_HITSIB = Byte.MIN_VALUE;
}
}

protected final void initC_HLPHMWK(String s) {
if (!s.trim().isEmpty()) {
C_HLPHMWK = Byte.parseByte(s);
} else {
C_HLPHMWK = Byte.MIN_VALUE;
}
}

protected final void initC_HOOD15(String s) {
if (!s.trim().isEmpty()) {
C_HOOD15 = Byte.parseByte(s);
} else {
C_HOOD15 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPC1(String s) {
if (!s.trim().isEmpty()) {
C_HOSPC1 = Byte.parseByte(s);
} else {
C_HOSPC1 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPC2(String s) {
if (!s.trim().isEmpty()) {
C_HOSPC2 = Byte.parseByte(s);
} else {
C_HOSPC2 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPC3(String s) {
if (!s.trim().isEmpty()) {
C_HOSPC3 = Byte.parseByte(s);
} else {
C_HOSPC3 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPC4(String s) {
if (!s.trim().isEmpty()) {
C_HOSPC4 = Byte.parseByte(s);
} else {
C_HOSPC4 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPC5(String s) {
if (!s.trim().isEmpty()) {
C_HOSPC5 = Byte.parseByte(s);
} else {
C_HOSPC5 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPC6(String s) {
if (!s.trim().isEmpty()) {
C_HOSPC6 = Byte.parseByte(s);
} else {
C_HOSPC6 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPC7(String s) {
if (!s.trim().isEmpty()) {
C_HOSPC7 = Byte.parseByte(s);
} else {
C_HOSPC7 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPC8(String s) {
if (!s.trim().isEmpty()) {
C_HOSPC8 = Byte.parseByte(s);
} else {
C_HOSPC8 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPDC1(String s) {
if (!s.trim().isEmpty()) {
C_HOSPDC1 = Short.parseShort(s);
} else {
C_HOSPDC1 = Short.MIN_VALUE;
}
}

protected final void initC_HOSPDC2(String s) {
if (!s.trim().isEmpty()) {
C_HOSPDC2 = Short.parseShort(s);
} else {
C_HOSPDC2 = Short.MIN_VALUE;
}
}

protected final void initC_HOSPDC3(String s) {
if (!s.trim().isEmpty()) {
C_HOSPDC3 = Short.parseShort(s);
} else {
C_HOSPDC3 = Short.MIN_VALUE;
}
}

protected final void initC_HOSPDC4(String s) {
if (!s.trim().isEmpty()) {
C_HOSPDC4 = Byte.parseByte(s);
} else {
C_HOSPDC4 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPDC5(String s) {
if (!s.trim().isEmpty()) {
C_HOSPDC5 = Byte.parseByte(s);
} else {
C_HOSPDC5 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPDC6(String s) {
if (!s.trim().isEmpty()) {
C_HOSPDC6 = Byte.parseByte(s);
} else {
C_HOSPDC6 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPDC7(String s) {
if (!s.trim().isEmpty()) {
C_HOSPDC7 = Byte.parseByte(s);
} else {
C_HOSPDC7 = Byte.MIN_VALUE;
}
}

protected final void initC_HOSPDC8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_HOSPDC8 = false;
} else {
C_HOSPDC8 = true;
}
}
}

protected final void initC_HOUSING(String s) {
if (!s.trim().isEmpty()) {
C_HOUSING = Byte.parseByte(s);
} else {
C_HOUSING = Byte.MIN_VALUE;
}
}

protected final void initC_HRPID(String s) {
if (!s.trim().isEmpty()) {
C_HRPID = Integer.parseInt(s);
} else {
C_HRPID = Integer.MIN_VALUE;
}
}

protected final void initC_HRPNO(String s) {
if (!s.trim().isEmpty()) {
C_HRPNO = Byte.parseByte(s);
} else {
C_HRPNO = Byte.MIN_VALUE;
}
}

protected final void initC_IENDDATHH(String s) {
if (!s.trim().isEmpty()) {
C_IENDDATHH = Byte.parseByte(s);
} else {
C_IENDDATHH = Byte.MIN_VALUE;
}
}

protected final void initC_IENDDATMM(String s) {
if (!s.trim().isEmpty()) {
C_IENDDATMM = Byte.parseByte(s);
} else {
C_IENDDATMM = Byte.MIN_VALUE;
}
}

protected final void initC_IENDDATSS(String s) {
if (!s.trim().isEmpty()) {
C_IENDDATSS = Byte.parseByte(s);
} else {
C_IENDDATSS = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP1(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP1 = Byte.parseByte(s);
} else {
C_IMMSTOP1 = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP2(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP2 = Byte.parseByte(s);
} else {
C_IMMSTOP2 = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP3(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP3 = Byte.parseByte(s);
} else {
C_IMMSTOP3 = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP4(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP4 = Byte.parseByte(s);
} else {
C_IMMSTOP4 = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP5(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP5 = Byte.parseByte(s);
} else {
C_IMMSTOP5 = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP6(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP6 = Byte.parseByte(s);
} else {
C_IMMSTOP6 = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP7(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP7 = Byte.parseByte(s);
} else {
C_IMMSTOP7 = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP8(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP8 = Byte.parseByte(s);
} else {
C_IMMSTOP8 = Byte.MIN_VALUE;
}
}

protected final void initC_IMMSTOP97(String s) {
if (!s.trim().isEmpty()) {
C_IMMSTOP97 = Byte.parseByte(s);
} else {
C_IMMSTOP97 = Byte.MIN_VALUE;
}
}

protected final void initC_IND5MUS_LW(String s) {
if (!s.trim().isEmpty()) {
C_IND5MUS_LW = Double.parseDouble(s);
} else {
C_IND5MUS_LW = Double.NaN;
}
}

protected final void initC_IND5MUS_XW(String s) {
if (!s.trim().isEmpty()) {
C_IND5MUS_XW = Double.parseDouble(s);
} else {
C_IND5MUS_XW = Double.NaN;
}
}

protected final void initC_INDBD91_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDBD91_LW = Double.parseDouble(s);
} else {
C_INDBD91_LW = Double.NaN;
}
}

protected final void initC_INDBDUB_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDBDUB_LW = Double.parseDouble(s);
} else {
C_INDBDUB_LW = Double.NaN;
}
}

protected final void initC_INDIN01_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDIN01_LW = Double.parseDouble(s);
} else {
C_INDIN01_LW = Double.NaN;
}
}

protected final void initC_INDIN91_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDIN91_LW = Double.parseDouble(s);
} else {
C_INDIN91_LW = Double.NaN;
}
}

protected final void initC_INDINUB_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDINUB_LW = Double.parseDouble(s);
} else {
C_INDINUB_LW = Double.NaN;
}
}

protected final void initC_INDINUB_XW(String s) {
if (!s.trim().isEmpty()) {
C_INDINUB_XW = Double.parseDouble(s);
} else {
C_INDINUB_XW = Double.NaN;
}
}

protected final void initC_INDINUS_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDINUS_LW = Double.parseDouble(s);
} else {
C_INDINUS_LW = Double.NaN;
}
}

protected final void initC_INDMODE(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
C_INDMODE = false;
} else {
C_INDMODE = true;
}
}
}

protected final void initC_INDNS91_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDNS91_LW = Double.parseDouble(s);
} else {
C_INDNS91_LW = Double.NaN;
}
}

protected final void initC_INDNSUB_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDNSUB_LW = Double.parseDouble(s);
} else {
C_INDNSUB_LW = Double.NaN;
}
}

protected final void initC_INDPXUB_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDPXUB_LW = Double.parseDouble(s);
} else {
C_INDPXUB_LW = Double.NaN;
}
}

protected final void initC_INDPXUB_XW(String s) {
if (!s.trim().isEmpty()) {
C_INDPXUB_XW = Double.parseDouble(s);
} else {
C_INDPXUB_XW = Double.NaN;
}
}

protected final void initC_INDPXUS_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDPXUS_LW = Double.parseDouble(s);
} else {
C_INDPXUS_LW = Double.NaN;
}
}

protected final void initC_INDSCUB_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDSCUB_LW = Double.parseDouble(s);
} else {
C_INDSCUB_LW = Double.NaN;
}
}

protected final void initC_INDSCUB_XW(String s) {
if (!s.trim().isEmpty()) {
C_INDSCUB_XW = Double.parseDouble(s);
} else {
C_INDSCUB_XW = Double.NaN;
}
}

protected final void initC_INDSCUS_LW(String s) {
if (!s.trim().isEmpty()) {
C_INDSCUS_LW = Double.parseDouble(s);
} else {
C_INDSCUS_LW = Double.NaN;
}
}

protected final void initC_INSULTED1(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED1 = Byte.parseByte(s);
} else {
C_INSULTED1 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED10(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED10 = Byte.parseByte(s);
} else {
C_INSULTED10 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED11(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED11 = Byte.parseByte(s);
} else {
C_INSULTED11 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED2(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED2 = Byte.parseByte(s);
} else {
C_INSULTED2 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED3(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED3 = Byte.parseByte(s);
} else {
C_INSULTED3 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED4(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED4 = Byte.parseByte(s);
} else {
C_INSULTED4 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED5(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED5 = Byte.parseByte(s);
} else {
C_INSULTED5 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED6(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED6 = Byte.parseByte(s);
} else {
C_INSULTED6 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED7(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED7 = Byte.parseByte(s);
} else {
C_INSULTED7 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED8(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED8 = Byte.parseByte(s);
} else {
C_INSULTED8 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED9(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED9 = Byte.parseByte(s);
} else {
C_INSULTED9 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED96(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED96 = Byte.parseByte(s);
} else {
C_INSULTED96 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED97(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED97 = Byte.parseByte(s);
} else {
C_INSULTED97 = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTEDO_CODE(String s) {
if (!s.trim().isEmpty()) {
C_INSULTEDO_CODE = Byte.parseByte(s);
} else {
C_INSULTEDO_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_INSULTED_DV(String s) {
if (!s.trim().isEmpty()) {
C_INSULTED_DV = Byte.parseByte(s);
} else {
C_INSULTED_DV = Byte.MIN_VALUE;
}
}

protected final void initC_INTDATD_DV(String s) {
if (!s.trim().isEmpty()) {
C_INTDATD_DV = Byte.parseByte(s);
} else {
C_INTDATD_DV = Byte.MIN_VALUE;
}
}

protected final void initC_INTDATM_DV(String s) {
if (!s.trim().isEmpty()) {
C_INTDATM_DV = Byte.parseByte(s);
} else {
C_INTDATM_DV = Byte.MIN_VALUE;
}
}

protected final void initC_INTDATY_DV(String s) {
if (!s.trim().isEmpty()) {
C_INTDATY_DV = Short.parseShort(s);
} else {
C_INTDATY_DV = Short.MIN_VALUE;
}
}

protected final void initC_INTIMMLS11(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS11 = Byte.parseByte(s);
} else {
C_INTIMMLS11 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS110(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS110 = Byte.parseByte(s);
} else {
C_INTIMMLS110 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS12(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS12 = Byte.parseByte(s);
} else {
C_INTIMMLS12 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS13(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS13 = Byte.parseByte(s);
} else {
C_INTIMMLS13 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS14(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS14 = Byte.parseByte(s);
} else {
C_INTIMMLS14 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS15(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS15 = Byte.parseByte(s);
} else {
C_INTIMMLS15 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS16(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS16 = Byte.parseByte(s);
} else {
C_INTIMMLS16 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS17(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS17 = Byte.parseByte(s);
} else {
C_INTIMMLS17 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS18(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS18 = Byte.parseByte(s);
} else {
C_INTIMMLS18 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS19(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS19 = Byte.parseByte(s);
} else {
C_INTIMMLS19 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS196(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS196 = Byte.parseByte(s);
} else {
C_INTIMMLS196 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS21(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS21 = Byte.parseByte(s);
} else {
C_INTIMMLS21 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS210(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS210 = Byte.parseByte(s);
} else {
C_INTIMMLS210 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS22(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS22 = Byte.parseByte(s);
} else {
C_INTIMMLS22 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS23(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS23 = Byte.parseByte(s);
} else {
C_INTIMMLS23 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS24(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS24 = Byte.parseByte(s);
} else {
C_INTIMMLS24 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS25(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS25 = Byte.parseByte(s);
} else {
C_INTIMMLS25 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS26(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS26 = Byte.parseByte(s);
} else {
C_INTIMMLS26 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS27(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS27 = Byte.parseByte(s);
} else {
C_INTIMMLS27 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS28(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS28 = Byte.parseByte(s);
} else {
C_INTIMMLS28 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS29(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS29 = Byte.parseByte(s);
} else {
C_INTIMMLS29 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS296(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS296 = Byte.parseByte(s);
} else {
C_INTIMMLS296 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS31(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS31 = Byte.parseByte(s);
} else {
C_INTIMMLS31 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS310(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS310 = Byte.parseByte(s);
} else {
C_INTIMMLS310 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS32(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS32 = Byte.parseByte(s);
} else {
C_INTIMMLS32 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS33(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS33 = Byte.parseByte(s);
} else {
C_INTIMMLS33 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS34(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS34 = Byte.parseByte(s);
} else {
C_INTIMMLS34 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS35(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS35 = Byte.parseByte(s);
} else {
C_INTIMMLS35 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS36(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS36 = Byte.parseByte(s);
} else {
C_INTIMMLS36 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS37(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS37 = Byte.parseByte(s);
} else {
C_INTIMMLS37 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS38(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS38 = Byte.parseByte(s);
} else {
C_INTIMMLS38 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS39(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS39 = Byte.parseByte(s);
} else {
C_INTIMMLS39 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS396(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS396 = Byte.parseByte(s);
} else {
C_INTIMMLS396 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS41(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS41 = Byte.parseByte(s);
} else {
C_INTIMMLS41 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS410(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS410 = Byte.parseByte(s);
} else {
C_INTIMMLS410 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS42(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS42 = Byte.parseByte(s);
} else {
C_INTIMMLS42 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS43(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS43 = Byte.parseByte(s);
} else {
C_INTIMMLS43 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS44(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS44 = Byte.parseByte(s);
} else {
C_INTIMMLS44 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS45(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS45 = Byte.parseByte(s);
} else {
C_INTIMMLS45 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS46(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS46 = Byte.parseByte(s);
} else {
C_INTIMMLS46 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS47(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS47 = Byte.parseByte(s);
} else {
C_INTIMMLS47 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS48(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS48 = Byte.parseByte(s);
} else {
C_INTIMMLS48 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS49(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS49 = Byte.parseByte(s);
} else {
C_INTIMMLS49 = Byte.MIN_VALUE;
}
}

protected final void initC_INTIMMLS496(String s) {
if (!s.trim().isEmpty()) {
C_INTIMMLS496 = Byte.parseByte(s);
} else {
C_INTIMMLS496 = Byte.MIN_VALUE;
}
}

protected final void initC_INVITRO1(String s) {
if (!s.trim().isEmpty()) {
C_INVITRO1 = Byte.parseByte(s);
} else {
C_INVITRO1 = Byte.MIN_VALUE;
}
}

protected final void initC_INVITRO2(String s) {
if (!s.trim().isEmpty()) {
C_INVITRO2 = Byte.parseByte(s);
} else {
C_INVITRO2 = Byte.MIN_VALUE;
}
}

protected final void initC_INVITRO3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_INVITRO3 = false;
} else {
C_INVITRO3 = true;
}
}
}

protected final void initC_IOUTCOME(String s) {
if (!s.trim().isEmpty()) {
C_IOUTCOME = Byte.parseByte(s);
} else {
C_IOUTCOME = Byte.MIN_VALUE;
}
}

protected final void initC_ISTRTDATD(String s) {
if (!s.trim().isEmpty()) {
C_ISTRTDATD = Byte.parseByte(s);
} else {
C_ISTRTDATD = Byte.MIN_VALUE;
}
}

protected final void initC_ISTRTDATHH(String s) {
if (!s.trim().isEmpty()) {
C_ISTRTDATHH = Byte.parseByte(s);
} else {
C_ISTRTDATHH = Byte.MIN_VALUE;
}
}

protected final void initC_ISTRTDATM(String s) {
if (!s.trim().isEmpty()) {
C_ISTRTDATM = Byte.parseByte(s);
} else {
C_ISTRTDATM = Byte.MIN_VALUE;
}
}

protected final void initC_ISTRTDATMM(String s) {
if (!s.trim().isEmpty()) {
C_ISTRTDATMM = Byte.parseByte(s);
} else {
C_ISTRTDATMM = Byte.MIN_VALUE;
}
}

protected final void initC_ISTRTDATSS(String s) {
if (!s.trim().isEmpty()) {
C_ISTRTDATSS = Byte.parseByte(s);
} else {
C_ISTRTDATSS = Byte.MIN_VALUE;
}
}

protected final void initC_ISTRTDATY(String s) {
if (!s.trim().isEmpty()) {
C_ISTRTDATY = Short.parseShort(s);
} else {
C_ISTRTDATY = Short.MIN_VALUE;
}
}

protected final void initC_ISYEAR(String s) {
if (!s.trim().isEmpty()) {
C_ISYEAR = Short.parseShort(s);
} else {
C_ISYEAR = Short.MIN_VALUE;
}
}

protected final void initC_IVAFFCT11(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT11 = Byte.parseByte(s);
} else {
C_IVAFFCT11 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT12(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT12 = Byte.parseByte(s);
} else {
C_IVAFFCT12 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT13(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT13 = Byte.parseByte(s);
} else {
C_IVAFFCT13 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT14(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT14 = Byte.parseByte(s);
} else {
C_IVAFFCT14 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT15(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT15 = Byte.parseByte(s);
} else {
C_IVAFFCT15 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT17(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT17 = Byte.parseByte(s);
} else {
C_IVAFFCT17 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT21(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT21 = Byte.parseByte(s);
} else {
C_IVAFFCT21 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT22(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT22 = Byte.parseByte(s);
} else {
C_IVAFFCT22 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT23(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT23 = Byte.parseByte(s);
} else {
C_IVAFFCT23 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT27(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT27 = Byte.parseByte(s);
} else {
C_IVAFFCT27 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT30(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT30 = Byte.parseByte(s);
} else {
C_IVAFFCT30 = Byte.MIN_VALUE;
}
}

protected final void initC_IVAFFCT97(String s) {
if (!s.trim().isEmpty()) {
C_IVAFFCT97 = Byte.parseByte(s);
} else {
C_IVAFFCT97 = Byte.MIN_VALUE;
}
}

protected final void initC_IVCOOP(String s) {
if (!s.trim().isEmpty()) {
C_IVCOOP = Byte.parseByte(s);
} else {
C_IVCOOP = Byte.MIN_VALUE;
}
}

protected final void initC_IVFIO(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
C_IVFIO = false;
} else {
C_IVFIO = true;
}
}
}

protected final void initC_IVINFNCE(String s) {
if (!s.trim().isEmpty()) {
C_IVINFNCE = Byte.parseByte(s);
} else {
C_IVINFNCE = Byte.MIN_VALUE;
}
}

protected final void initC_IVLIBAL(String s) {
if (!s.trim().isEmpty()) {
C_IVLIBAL = Byte.parseByte(s);
} else {
C_IVLIBAL = Byte.MIN_VALUE;
}
}

protected final void initC_IVLIENG(String s) {
if (!s.trim().isEmpty()) {
C_IVLIENG = Byte.parseByte(s);
} else {
C_IVLIENG = Byte.MIN_VALUE;
}
}

protected final void initC_IVLITRANS(String s) {
if (!s.trim().isEmpty()) {
C_IVLITRANS = Byte.parseByte(s);
} else {
C_IVLITRANS = Byte.MIN_VALUE;
}
}

protected final void initC_IVLIWHO(String s) {
if (!s.trim().isEmpty()) {
C_IVLIWHO = Byte.parseByte(s);
} else {
C_IVLIWHO = Byte.MIN_VALUE;
}
}

protected final void initC_IVPRSNT(String s) {
if (!s.trim().isEmpty()) {
C_IVPRSNT = Byte.parseByte(s);
} else {
C_IVPRSNT = Byte.MIN_VALUE;
}
}

protected final void initC_J1BOSS(String s) {
if (!s.trim().isEmpty()) {
C_J1BOSS = Byte.parseByte(s);
} else {
C_J1BOSS = Byte.MIN_VALUE;
}
}

protected final void initC_J1MNGR(String s) {
if (!s.trim().isEmpty()) {
C_J1MNGR = Byte.parseByte(s);
} else {
C_J1MNGR = Byte.MIN_VALUE;
}
}

protected final void initC_J1NONE(String s) {
if (!s.trim().isEmpty()) {
C_J1NONE = Byte.parseByte(s);
} else {
C_J1NONE = Byte.MIN_VALUE;
}
}

protected final void initC_J1NSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
C_J1NSSEC5_DV = Byte.parseByte(s);
} else {
C_J1NSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initC_J1SEMP(String s) {
if (!s.trim().isEmpty()) {
C_J1SEMP = Byte.parseByte(s);
} else {
C_J1SEMP = Byte.MIN_VALUE;
}
}

protected final void initC_J1SOC00_CC(String s) {
if (!s.trim().isEmpty()) {
C_J1SOC00_CC = Short.parseShort(s);
} else {
C_J1SOC00_CC = Short.MIN_VALUE;
}
}

protected final void initC_J1SOC10_CC(String s) {
if (!s.trim().isEmpty()) {
C_J1SOC10_CC = Short.parseShort(s);
} else {
C_J1SOC10_CC = Short.MIN_VALUE;
}
}

protected final void initC_J1SOC90_CC(String s) {
if (!s.trim().isEmpty()) {
C_J1SOC90_CC = Byte.parseByte(s);
} else {
C_J1SOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initC_J2HAS(String s) {
if (!s.trim().isEmpty()) {
C_J2HAS = Byte.parseByte(s);
} else {
C_J2HAS = Byte.MIN_VALUE;
}
}

protected final void initC_J2HRS(String s) {
if (!s.trim().isEmpty()) {
C_J2HRS = Short.parseShort(s);
} else {
C_J2HRS = Short.MIN_VALUE;
}
}

protected final void initC_J2NSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
C_J2NSSEC5_DV = Byte.parseByte(s);
} else {
C_J2NSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initC_J2PAY(String s) {
if (!s.trim().isEmpty()) {
C_J2PAY = Short.parseShort(s);
} else {
C_J2PAY = Short.MIN_VALUE;
}
}

protected final void initC_J2PAYNET_DV(String s) {
if (!s.trim().isEmpty()) {
C_J2PAYNET_DV = Double.parseDouble(s);
} else {
C_J2PAYNET_DV = Double.NaN;
}
}

protected final void initC_J2PAY_DV(String s) {
if (!s.trim().isEmpty()) {
C_J2PAY_DV = Double.parseDouble(s);
} else {
C_J2PAY_DV = Double.NaN;
}
}

protected final void initC_J2PAY_IF(String s) {
if (!s.trim().isEmpty()) {
C_J2PAY_IF = Byte.parseByte(s);
} else {
C_J2PAY_IF = Byte.MIN_VALUE;
}
}

protected final void initC_J2SEMP(String s) {
if (!s.trim().isEmpty()) {
C_J2SEMP = Byte.parseByte(s);
} else {
C_J2SEMP = Byte.MIN_VALUE;
}
}

protected final void initC_J2SOC00_CC(String s) {
if (!s.trim().isEmpty()) {
C_J2SOC00_CC = Short.parseShort(s);
} else {
C_J2SOC00_CC = Short.MIN_VALUE;
}
}

protected final void initC_J2SOC10_CC(String s) {
if (!s.trim().isEmpty()) {
C_J2SOC10_CC = Short.parseShort(s);
} else {
C_J2SOC10_CC = Short.MIN_VALUE;
}
}

protected final void initC_J2SOC90_CC(String s) {
if (!s.trim().isEmpty()) {
C_J2SOC90_CC = Byte.parseByte(s);
} else {
C_J2SOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initC_JBATT1(String s) {
if (!s.trim().isEmpty()) {
C_JBATT1 = Byte.parseByte(s);
} else {
C_JBATT1 = Byte.MIN_VALUE;
}
}

protected final void initC_JBATT2(String s) {
if (!s.trim().isEmpty()) {
C_JBATT2 = Byte.parseByte(s);
} else {
C_JBATT2 = Byte.MIN_VALUE;
}
}

protected final void initC_JBATT3(String s) {
if (!s.trim().isEmpty()) {
C_JBATT3 = Byte.parseByte(s);
} else {
C_JBATT3 = Byte.MIN_VALUE;
}
}

protected final void initC_JBATT4(String s) {
if (!s.trim().isEmpty()) {
C_JBATT4 = Byte.parseByte(s);
} else {
C_JBATT4 = Byte.MIN_VALUE;
}
}

protected final void initC_JBATT5(String s) {
if (!s.trim().isEmpty()) {
C_JBATT5 = Byte.parseByte(s);
} else {
C_JBATT5 = Byte.MIN_VALUE;
}
}

protected final void initC_JBATT6(String s) {
if (!s.trim().isEmpty()) {
C_JBATT6 = Byte.parseByte(s);
} else {
C_JBATT6 = Byte.MIN_VALUE;
}
}

protected final void initC_JBATT7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_JBATT7 = false;
} else {
C_JBATT7 = true;
}
}
}

protected final void initC_JBATT8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_JBATT8 = false;
} else {
C_JBATT8 = true;
}
}
}

protected final void initC_JBATT9(String s) {
if (!s.trim().isEmpty()) {
C_JBATT9 = Byte.parseByte(s);
} else {
C_JBATT9 = Byte.MIN_VALUE;
}
}

protected final void initC_JBBGD(String s) {
if (!s.trim().isEmpty()) {
C_JBBGD = Byte.parseByte(s);
} else {
C_JBBGD = Byte.MIN_VALUE;
}
}

protected final void initC_JBBGDATD(String s) {
if (!s.trim().isEmpty()) {
C_JBBGDATD = Byte.parseByte(s);
} else {
C_JBBGDATD = Byte.MIN_VALUE;
}
}

protected final void initC_JBBGDATM(String s) {
if (!s.trim().isEmpty()) {
C_JBBGDATM = Byte.parseByte(s);
} else {
C_JBBGDATM = Byte.MIN_VALUE;
}
}

protected final void initC_JBBGDATY(String s) {
if (!s.trim().isEmpty()) {
C_JBBGDATY = Short.parseShort(s);
} else {
C_JBBGDATY = Short.MIN_VALUE;
}
}

protected final void initC_JBBGM(String s) {
if (!s.trim().isEmpty()) {
C_JBBGM = Byte.parseByte(s);
} else {
C_JBBGM = Byte.MIN_VALUE;
}
}

protected final void initC_JBBGY(String s) {
if (!s.trim().isEmpty()) {
C_JBBGY = Short.parseShort(s);
} else {
C_JBBGY = Short.MIN_VALUE;
}
}

protected final void initC_JBENDD(String s) {
if (!s.trim().isEmpty()) {
C_JBENDD = Byte.parseByte(s);
} else {
C_JBENDD = Byte.MIN_VALUE;
}
}

protected final void initC_JBENDM(String s) {
if (!s.trim().isEmpty()) {
C_JBENDM = Byte.parseByte(s);
} else {
C_JBENDM = Byte.MIN_VALUE;
}
}

protected final void initC_JBENDREAS(String s) {
if (!s.trim().isEmpty()) {
C_JBENDREAS = Byte.parseByte(s);
} else {
C_JBENDREAS = Byte.MIN_VALUE;
}
}

protected final void initC_JBENDY4(String s) {
if (!s.trim().isEmpty()) {
C_JBENDY4 = Short.parseShort(s);
} else {
C_JBENDY4 = Short.MIN_VALUE;
}
}

protected final void initC_JBES2000(String s) {
if (!s.trim().isEmpty()) {
C_JBES2000 = Byte.parseByte(s);
} else {
C_JBES2000 = Byte.MIN_VALUE;
}
}

protected final void initC_JBFT_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBFT_DV = Byte.parseByte(s);
} else {
C_JBFT_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBHAD(String s) {
if (!s.trim().isEmpty()) {
C_JBHAD = Byte.parseByte(s);
} else {
C_JBHAD = Byte.MIN_VALUE;
}
}

protected final void initC_JBHAS(String s) {
if (!s.trim().isEmpty()) {
C_JBHAS = Byte.parseByte(s);
} else {
C_JBHAS = Byte.MIN_VALUE;
}
}

protected final void initC_JBHRS(String s) {
if (!s.trim().isEmpty()) {
C_JBHRS = Double.parseDouble(s);
} else {
C_JBHRS = Double.NaN;
}
}

protected final void initC_JBIINDB_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBIINDB_DV = Byte.parseByte(s);
} else {
C_JBIINDB_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBISCO88_CC(String s) {
if (!s.trim().isEmpty()) {
C_JBISCO88_CC = Short.parseShort(s);
} else {
C_JBISCO88_CC = Short.MIN_VALUE;
}
}

protected final void initC_JBMNGR(String s) {
if (!s.trim().isEmpty()) {
C_JBMNGR = Byte.parseByte(s);
} else {
C_JBMNGR = Byte.MIN_VALUE;
}
}

protected final void initC_JBMNGRCHK(String s) {
if (!s.trim().isEmpty()) {
C_JBMNGRCHK = Byte.parseByte(s);
} else {
C_JBMNGRCHK = Byte.MIN_VALUE;
}
}

protected final void initC_JBNSSEC3_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBNSSEC3_DV = Byte.parseByte(s);
} else {
C_JBNSSEC3_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBNSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBNSSEC5_DV = Byte.parseByte(s);
} else {
C_JBNSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBNSSEC8_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBNSSEC8_DV = Byte.parseByte(s);
} else {
C_JBNSSEC8_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBNSSEC_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBNSSEC_DV = Byte.parseByte(s);
} else {
C_JBNSSEC_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBOFF(String s) {
if (!s.trim().isEmpty()) {
C_JBOFF = Byte.parseByte(s);
} else {
C_JBOFF = Byte.MIN_VALUE;
}
}

protected final void initC_JBOFFY(String s) {
if (!s.trim().isEmpty()) {
C_JBOFFY = Byte.parseByte(s);
} else {
C_JBOFFY = Byte.MIN_VALUE;
}
}

protected final void initC_JBOT(String s) {
if (!s.trim().isEmpty()) {
C_JBOT = Byte.parseByte(s);
} else {
C_JBOT = Byte.MIN_VALUE;
}
}

protected final void initC_JBOTPD(String s) {
if (!s.trim().isEmpty()) {
C_JBOTPD = Byte.parseByte(s);
} else {
C_JBOTPD = Byte.MIN_VALUE;
}
}

protected final void initC_JBPL(String s) {
if (!s.trim().isEmpty()) {
C_JBPL = Byte.parseByte(s);
} else {
C_JBPL = Byte.MIN_VALUE;
}
}

protected final void initC_JBRGSC_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBRGSC_DV = Byte.parseByte(s);
} else {
C_JBRGSC_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBSAMR(String s) {
if (!s.trim().isEmpty()) {
C_JBSAMR = Byte.parseByte(s);
} else {
C_JBSAMR = Byte.MIN_VALUE;
}
}

protected final void initC_JBSAT(String s) {
if (!s.trim().isEmpty()) {
C_JBSAT = Byte.parseByte(s);
} else {
C_JBSAT = Byte.MIN_VALUE;
}
}

protected final void initC_JBSECT(String s) {
if (!s.trim().isEmpty()) {
C_JBSECT = Byte.parseByte(s);
} else {
C_JBSECT = Byte.MIN_VALUE;
}
}

protected final void initC_JBSECTPUB(String s) {
if (!s.trim().isEmpty()) {
C_JBSECTPUB = Byte.parseByte(s);
} else {
C_JBSECTPUB = Byte.MIN_VALUE;
}
}

protected final void initC_JBSEG_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBSEG_DV = Byte.parseByte(s);
} else {
C_JBSEG_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBSEMP(String s) {
if (!s.trim().isEmpty()) {
C_JBSEMP = Byte.parseByte(s);
} else {
C_JBSEMP = Byte.MIN_VALUE;
}
}

protected final void initC_JBSEMPCHK(String s) {
if (!s.trim().isEmpty()) {
C_JBSEMPCHK = Byte.parseByte(s);
} else {
C_JBSEMPCHK = Byte.MIN_VALUE;
}
}

protected final void initC_JBSIC07CHK(String s) {
if (!s.trim().isEmpty()) {
C_JBSIC07CHK = Byte.parseByte(s);
} else {
C_JBSIC07CHK = Byte.MIN_VALUE;
}
}

protected final void initC_JBSIC07_CC(String s) {
if (!s.trim().isEmpty()) {
C_JBSIC07_CC = Byte.parseByte(s);
} else {
C_JBSIC07_CC = Byte.MIN_VALUE;
}
}

protected final void initC_JBSIZE(String s) {
if (!s.trim().isEmpty()) {
C_JBSIZE = Byte.parseByte(s);
} else {
C_JBSIZE = Byte.MIN_VALUE;
}
}

protected final void initC_JBSIZECHK(String s) {
if (!s.trim().isEmpty()) {
C_JBSIZECHK = Byte.parseByte(s);
} else {
C_JBSIZECHK = Byte.MIN_VALUE;
}
}

protected final void initC_JBSOC00CHK(String s) {
if (!s.trim().isEmpty()) {
C_JBSOC00CHK = Byte.parseByte(s);
} else {
C_JBSOC00CHK = Byte.MIN_VALUE;
}
}

protected final void initC_JBSOC00_CC(String s) {
if (!s.trim().isEmpty()) {
C_JBSOC00_CC = Short.parseShort(s);
} else {
C_JBSOC00_CC = Short.MIN_VALUE;
}
}

protected final void initC_JBSOC10_CC(String s) {
if (!s.trim().isEmpty()) {
C_JBSOC10_CC = Short.parseShort(s);
} else {
C_JBSOC10_CC = Short.MIN_VALUE;
}
}

protected final void initC_JBSOCGR_DV(String s) {
if (!s.trim().isEmpty()) {
C_JBSOCGR_DV = Byte.parseByte(s);
} else {
C_JBSOCGR_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JBSTAT(String s) {
if (!s.trim().isEmpty()) {
C_JBSTAT = Byte.parseByte(s);
} else {
C_JBSTAT = Byte.MIN_VALUE;
}
}

protected final void initC_JBTERM1(String s) {
if (!s.trim().isEmpty()) {
C_JBTERM1 = Byte.parseByte(s);
} else {
C_JBTERM1 = Byte.MIN_VALUE;
}
}

protected final void initC_JBTERM2(String s) {
if (!s.trim().isEmpty()) {
C_JBTERM2 = Byte.parseByte(s);
} else {
C_JBTERM2 = Byte.MIN_VALUE;
}
}

protected final void initC_JBTTWT(String s) {
if (!s.trim().isEmpty()) {
C_JBTTWT = Short.parseShort(s);
} else {
C_JBTTWT = Short.MIN_VALUE;
}
}

protected final void initC_JLBOSS(String s) {
if (!s.trim().isEmpty()) {
C_JLBOSS = Byte.parseByte(s);
} else {
C_JLBOSS = Byte.MIN_VALUE;
}
}

protected final void initC_JLENDM(String s) {
if (!s.trim().isEmpty()) {
C_JLENDM = Byte.parseByte(s);
} else {
C_JLENDM = Byte.MIN_VALUE;
}
}

protected final void initC_JLENDY(String s) {
if (!s.trim().isEmpty()) {
C_JLENDY = Short.parseShort(s);
} else {
C_JLENDY = Short.MIN_VALUE;
}
}

protected final void initC_JLES2000(String s) {
if (!s.trim().isEmpty()) {
C_JLES2000 = Byte.parseByte(s);
} else {
C_JLES2000 = Byte.MIN_VALUE;
}
}

protected final void initC_JLIINDB_DV(String s) {
if (!s.trim().isEmpty()) {
C_JLIINDB_DV = Byte.parseByte(s);
} else {
C_JLIINDB_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JLISCO88_CC(String s) {
if (!s.trim().isEmpty()) {
C_JLISCO88_CC = Short.parseShort(s);
} else {
C_JLISCO88_CC = Short.MIN_VALUE;
}
}

protected final void initC_JLMNGR(String s) {
if (!s.trim().isEmpty()) {
C_JLMNGR = Byte.parseByte(s);
} else {
C_JLMNGR = Byte.MIN_VALUE;
}
}

protected final void initC_JLNSSEC3_DV(String s) {
if (!s.trim().isEmpty()) {
C_JLNSSEC3_DV = Byte.parseByte(s);
} else {
C_JLNSSEC3_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JLNSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
C_JLNSSEC5_DV = Byte.parseByte(s);
} else {
C_JLNSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JLNSSEC8_DV(String s) {
if (!s.trim().isEmpty()) {
C_JLNSSEC8_DV = Byte.parseByte(s);
} else {
C_JLNSSEC8_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JLNSSEC_DV(String s) {
if (!s.trim().isEmpty()) {
C_JLNSSEC_DV = Byte.parseByte(s);
} else {
C_JLNSSEC_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JLRGSC_DV(String s) {
if (!s.trim().isEmpty()) {
C_JLRGSC_DV = Byte.parseByte(s);
} else {
C_JLRGSC_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JLSEG_DV(String s) {
if (!s.trim().isEmpty()) {
C_JLSEG_DV = Byte.parseByte(s);
} else {
C_JLSEG_DV = Byte.MIN_VALUE;
}
}

protected final void initC_JLSEMP(String s) {
if (!s.trim().isEmpty()) {
C_JLSEMP = Byte.parseByte(s);
} else {
C_JLSEMP = Byte.MIN_VALUE;
}
}

protected final void initC_JLSIC07_CC(String s) {
if (!s.trim().isEmpty()) {
C_JLSIC07_CC = Byte.parseByte(s);
} else {
C_JLSIC07_CC = Byte.MIN_VALUE;
}
}

protected final void initC_JLSIZE(String s) {
if (!s.trim().isEmpty()) {
C_JLSIZE = Byte.parseByte(s);
} else {
C_JLSIZE = Byte.MIN_VALUE;
}
}

protected final void initC_JLSOC00_CC(String s) {
if (!s.trim().isEmpty()) {
C_JLSOC00_CC = Short.parseShort(s);
} else {
C_JLSOC00_CC = Short.MIN_VALUE;
}
}

protected final void initC_JLSOC10_CC(String s) {
if (!s.trim().isEmpty()) {
C_JLSOC10_CC = Short.parseShort(s);
} else {
C_JLSOC10_CC = Short.MIN_VALUE;
}
}

protected final void initC_JOBDENY(String s) {
if (!s.trim().isEmpty()) {
C_JOBDENY = Byte.parseByte(s);
} else {
C_JOBDENY = Byte.MIN_VALUE;
}
}

protected final void initC_JOBHOURS1(String s) {
if (!s.trim().isEmpty()) {
C_JOBHOURS1 = Byte.parseByte(s);
} else {
C_JOBHOURS1 = Byte.MIN_VALUE;
}
}

protected final void initC_JOBHOURS2(String s) {
if (!s.trim().isEmpty()) {
C_JOBHOURS2 = Byte.parseByte(s);
} else {
C_JOBHOURS2 = Byte.MIN_VALUE;
}
}

protected final void initC_JOBHOURS3(String s) {
if (!s.trim().isEmpty()) {
C_JOBHOURS3 = Byte.parseByte(s);
} else {
C_JOBHOURS3 = Byte.MIN_VALUE;
}
}

protected final void initC_JOBHOURS4(String s) {
if (!s.trim().isEmpty()) {
C_JOBHOURS4 = Byte.parseByte(s);
} else {
C_JOBHOURS4 = Byte.MIN_VALUE;
}
}

protected final void initC_JOBHOURS5(String s) {
if (!s.trim().isEmpty()) {
C_JOBHOURS5 = Byte.parseByte(s);
} else {
C_JOBHOURS5 = Byte.MIN_VALUE;
}
}

protected final void initC_JOBHOURS6(String s) {
if (!s.trim().isEmpty()) {
C_JOBHOURS6 = Byte.parseByte(s);
} else {
C_JOBHOURS6 = Byte.MIN_VALUE;
}
}

protected final void initC_JOBHOURS7(String s) {
if (!s.trim().isEmpty()) {
C_JOBHOURS7 = Byte.parseByte(s);
} else {
C_JOBHOURS7 = Byte.MIN_VALUE;
}
}

protected final void initC_JOBHOURS8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_JOBHOURS8 = false;
} else {
C_JOBHOURS8 = true;
}
}
}

protected final void initC_JOBHOURS9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_JOBHOURS9 = false;
} else {
C_JOBHOURS9 = true;
}
}
}

protected final void initC_JOBLOOK(String s) {
if (!s.trim().isEmpty()) {
C_JOBLOOK = Byte.parseByte(s);
} else {
C_JOBLOOK = Byte.MIN_VALUE;
}
}

protected final void initC_JSACCS(String s) {
if (!s.trim().isEmpty()) {
C_JSACCS = Byte.parseByte(s);
} else {
C_JSACCS = Byte.MIN_VALUE;
}
}

protected final void initC_JSBOSS(String s) {
if (!s.trim().isEmpty()) {
C_JSBOSS = Byte.parseByte(s);
} else {
C_JSBOSS = Byte.MIN_VALUE;
}
}

protected final void initC_JSHRS(String s) {
if (!s.trim().isEmpty()) {
C_JSHRS = Byte.parseByte(s);
} else {
C_JSHRS = Byte.MIN_VALUE;
}
}

protected final void initC_JSPART(String s) {
if (!s.trim().isEmpty()) {
C_JSPART = Byte.parseByte(s);
} else {
C_JSPART = Byte.MIN_VALUE;
}
}

protected final void initC_JSPAYU(String s) {
if (!s.trim().isEmpty()) {
C_JSPAYU = Integer.parseInt(s);
} else {
C_JSPAYU = Integer.MIN_VALUE;
}
}

protected final void initC_JSPAYW(String s) {
if (!s.trim().isEmpty()) {
C_JSPAYW = Byte.parseByte(s);
} else {
C_JSPAYW = Byte.MIN_VALUE;
}
}

protected final void initC_JSPL(String s) {
if (!s.trim().isEmpty()) {
C_JSPL = Byte.parseByte(s);
} else {
C_JSPL = Byte.MIN_VALUE;
}
}

protected final void initC_JSPRBM(String s) {
if (!s.trim().isEmpty()) {
C_JSPRBM = Byte.parseByte(s);
} else {
C_JSPRBM = Byte.MIN_VALUE;
}
}

protected final void initC_JSPRBY4(String s) {
if (!s.trim().isEmpty()) {
C_JSPRBY4 = Short.parseShort(s);
} else {
C_JSPRBY4 = Short.MIN_VALUE;
}
}

protected final void initC_JSPREM(String s) {
if (!s.trim().isEmpty()) {
C_JSPREM = Byte.parseByte(s);
} else {
C_JSPREM = Byte.MIN_VALUE;
}
}

protected final void initC_JSPREY4(String s) {
if (!s.trim().isEmpty()) {
C_JSPREY4 = Short.parseShort(s);
} else {
C_JSPREY4 = Short.MIN_VALUE;
}
}

protected final void initC_JSPRF(String s) {
if (!s.trim().isEmpty()) {
C_JSPRF = Integer.parseInt(s);
} else {
C_JSPRF = Integer.MIN_VALUE;
}
}

protected final void initC_JSPRLS(String s) {
if (!s.trim().isEmpty()) {
C_JSPRLS = Byte.parseByte(s);
} else {
C_JSPRLS = Byte.MIN_VALUE;
}
}

protected final void initC_JSPRNI(String s) {
if (!s.trim().isEmpty()) {
C_JSPRNI = Byte.parseByte(s);
} else {
C_JSPRNI = Byte.MIN_VALUE;
}
}

protected final void initC_JSPRTX(String s) {
if (!s.trim().isEmpty()) {
C_JSPRTX = Byte.parseByte(s);
} else {
C_JSPRTX = Byte.MIN_VALUE;
}
}

protected final void initC_JSPYNI(String s) {
if (!s.trim().isEmpty()) {
C_JSPYNI = Byte.parseByte(s);
} else {
C_JSPYNI = Byte.MIN_VALUE;
}
}

protected final void initC_JSPYTX(String s) {
if (!s.trim().isEmpty()) {
C_JSPYTX = Byte.parseByte(s);
} else {
C_JSPYTX = Byte.MIN_VALUE;
}
}

protected final void initC_JSSIZE(String s) {
if (!s.trim().isEmpty()) {
C_JSSIZE = Byte.parseByte(s);
} else {
C_JSSIZE = Byte.MIN_VALUE;
}
}

protected final void initC_JSTTWT(String s) {
if (!s.trim().isEmpty()) {
C_JSTTWT = Byte.parseByte(s);
} else {
C_JSTTWT = Byte.MIN_VALUE;
}
}

protected final void initC_JSTTWTB(String s) {
if (!s.trim().isEmpty()) {
C_JSTTWTB = Short.parseShort(s);
} else {
C_JSTTWTB = Short.MIN_VALUE;
}
}

protected final void initC_JSTYPEB(String s) {
if (!s.trim().isEmpty()) {
C_JSTYPEB = Byte.parseByte(s);
} else {
C_JSTYPEB = Byte.MIN_VALUE;
}
}

protected final void initC_JSWORKTRAV(String s) {
if (!s.trim().isEmpty()) {
C_JSWORKTRAV = Byte.parseByte(s);
} else {
C_JSWORKTRAV = Byte.MIN_VALUE;
}
}

protected final void initC_JUBGN(String s) {
if (!s.trim().isEmpty()) {
C_JUBGN = Byte.parseByte(s);
} else {
C_JUBGN = Byte.MIN_VALUE;
}
}

protected final void initC_JULK4WK(String s) {
if (!s.trim().isEmpty()) {
C_JULK4WK = Byte.parseByte(s);
} else {
C_JULK4WK = Byte.MIN_VALUE;
}
}

protected final void initC_JULK4X1(String s) {
if (!s.trim().isEmpty()) {
C_JULK4X1 = Byte.parseByte(s);
} else {
C_JULK4X1 = Byte.MIN_VALUE;
}
}

protected final void initC_JULK4X2(String s) {
if (!s.trim().isEmpty()) {
C_JULK4X2 = Byte.parseByte(s);
} else {
C_JULK4X2 = Byte.MIN_VALUE;
}
}

protected final void initC_JULK4X3(String s) {
if (!s.trim().isEmpty()) {
C_JULK4X3 = Byte.parseByte(s);
} else {
C_JULK4X3 = Byte.MIN_VALUE;
}
}

protected final void initC_JULK4X4(String s) {
if (!s.trim().isEmpty()) {
C_JULK4X4 = Byte.parseByte(s);
} else {
C_JULK4X4 = Byte.MIN_VALUE;
}
}

protected final void initC_JULK4X5(String s) {
if (!s.trim().isEmpty()) {
C_JULK4X5 = Byte.parseByte(s);
} else {
C_JULK4X5 = Byte.MIN_VALUE;
}
}

protected final void initC_JULK4X6(String s) {
if (!s.trim().isEmpty()) {
C_JULK4X6 = Byte.parseByte(s);
} else {
C_JULK4X6 = Byte.MIN_VALUE;
}
}

protected final void initC_JULK4X96(String s) {
if (!s.trim().isEmpty()) {
C_JULK4X96 = Byte.parseByte(s);
} else {
C_JULK4X96 = Byte.MIN_VALUE;
}
}

protected final void initC_JULKJB(String s) {
if (!s.trim().isEmpty()) {
C_JULKJB = Byte.parseByte(s);
} else {
C_JULKJB = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI01(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI01 = Byte.parseByte(s);
} else {
C_KID2UNI01 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI02(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI02 = Byte.parseByte(s);
} else {
C_KID2UNI02 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI03(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI03 = Byte.parseByte(s);
} else {
C_KID2UNI03 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI04(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI04 = Byte.parseByte(s);
} else {
C_KID2UNI04 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI05(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI05 = Byte.parseByte(s);
} else {
C_KID2UNI05 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI06(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI06 = Byte.parseByte(s);
} else {
C_KID2UNI06 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI07(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI07 = Byte.parseByte(s);
} else {
C_KID2UNI07 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI08(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI08 = Byte.parseByte(s);
} else {
C_KID2UNI08 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI09(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI09 = Byte.parseByte(s);
} else {
C_KID2UNI09 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI10(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI10 = Byte.parseByte(s);
} else {
C_KID2UNI10 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI11(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI11 = Byte.parseByte(s);
} else {
C_KID2UNI11 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI12(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI12 = Byte.parseByte(s);
} else {
C_KID2UNI12 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI13(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI13 = Byte.parseByte(s);
} else {
C_KID2UNI13 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI14(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI14 = Byte.parseByte(s);
} else {
C_KID2UNI14 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI15(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI15 = Byte.parseByte(s);
} else {
C_KID2UNI15 = Byte.MIN_VALUE;
}
}

protected final void initC_KID2UNI16(String s) {
if (!s.trim().isEmpty()) {
C_KID2UNI16 = Byte.parseByte(s);
} else {
C_KID2UNI16 = Byte.MIN_VALUE;
}
}

protected final void initC_KIDSPT(String s) {
if (!s.trim().isEmpty()) {
C_KIDSPT = Byte.parseByte(s);
} else {
C_KIDSPT = Byte.MIN_VALUE;
}
}

protected final void initC_LADOPT(String s) {
if (!s.trim().isEmpty()) {
C_LADOPT = Byte.parseByte(s);
} else {
C_LADOPT = Byte.MIN_VALUE;
}
}

protected final void initC_LATE(String s) {
if (!s.trim().isEmpty()) {
C_LATE = Byte.parseByte(s);
} else {
C_LATE = Byte.MIN_VALUE;
}
}

protected final void initC_LCHMULTI1(String s) {
if (!s.trim().isEmpty()) {
C_LCHMULTI1 = Byte.parseByte(s);
} else {
C_LCHMULTI1 = Byte.MIN_VALUE;
}
}

protected final void initC_LCHMULTI2(String s) {
if (!s.trim().isEmpty()) {
C_LCHMULTI2 = Byte.parseByte(s);
} else {
C_LCHMULTI2 = Byte.MIN_VALUE;
}
}

protected final void initC_LCHMULTI3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_LCHMULTI3 = false;
} else {
C_LCHMULTI3 = true;
}
}
}

protected final void initC_LCOHNPI(String s) {
if (!s.trim().isEmpty()) {
C_LCOHNPI = Byte.parseByte(s);
} else {
C_LCOHNPI = Byte.MIN_VALUE;
}
}

protected final void initC_LENINDINTV(String s) {
if (!s.trim().isEmpty()) {
C_LENINDINTV = Double.parseDouble(s);
} else {
C_LENINDINTV = Double.NaN;
}
}

protected final void initC_LEVELIMP(String s) {
if (!s.trim().isEmpty()) {
C_LEVELIMP = Byte.parseByte(s);
} else {
C_LEVELIMP = Byte.MIN_VALUE;
}
}

protected final void initC_LICENG(String s) {
if (!s.trim().isEmpty()) {
C_LICENG = Byte.parseByte(s);
} else {
C_LICENG = Byte.MIN_VALUE;
}
}

protected final void initC_LICTRANS(String s) {
if (!s.trim().isEmpty()) {
C_LICTRANS = Byte.parseByte(s);
} else {
C_LICTRANS = Byte.MIN_VALUE;
}
}

protected final void initC_LICWHO(String s) {
if (!s.trim().isEmpty()) {
C_LICWHO = Byte.parseByte(s);
} else {
C_LICWHO = Byte.MIN_VALUE;
}
}

protected final void initC_LIENG(String s) {
if (!s.trim().isEmpty()) {
C_LIENG = Byte.parseByte(s);
} else {
C_LIENG = Byte.MIN_VALUE;
}
}

protected final void initC_LIHOW(String s) {
if (!s.trim().isEmpty()) {
C_LIHOW = Byte.parseByte(s);
} else {
C_LIHOW = Byte.MIN_VALUE;
}
}

protected final void initC_LINGUA(String s) {
if (!s.trim().isEmpty()) {
C_LINGUA = Byte.parseByte(s);
} else {
C_LINGUA = Byte.MIN_VALUE;
}
}

protected final void initC_LITRANS(String s) {
if (!s.trim().isEmpty()) {
C_LITRANS = Byte.parseByte(s);
} else {
C_LITRANS = Byte.MIN_VALUE;
}
}

protected final void initC_LIVESP(String s) {
if (!s.trim().isEmpty()) {
C_LIVESP = Byte.parseByte(s);
} else {
C_LIVESP = Byte.MIN_VALUE;
}
}

protected final void initC_LIVESP_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_LIVESP_DV = false;
} else {
C_LIVESP_DV = true;
}
}
}

protected final void initC_LIVEWITH(String s) {
if (!s.trim().isEmpty()) {
C_LIVEWITH = Byte.parseByte(s);
} else {
C_LIVEWITH = Byte.MIN_VALUE;
}
}

protected final void initC_LIWHO(String s) {
if (!s.trim().isEmpty()) {
C_LIWHO = Byte.parseByte(s);
} else {
C_LIWHO = Byte.MIN_VALUE;
}
}

protected final void initC_LKMOVE(String s) {
if (!s.trim().isEmpty()) {
C_LKMOVE = Byte.parseByte(s);
} else {
C_LKMOVE = Byte.MIN_VALUE;
}
}

protected final void initC_LLKNBRD(String s) {
if (!s.trim().isEmpty()) {
C_LLKNBRD = Byte.parseByte(s);
} else {
C_LLKNBRD = Byte.MIN_VALUE;
}
}

protected final void initC_LMAR1M(String s) {
if (!s.trim().isEmpty()) {
C_LMAR1M = Byte.parseByte(s);
} else {
C_LMAR1M = Byte.MIN_VALUE;
}
}

protected final void initC_LMAR1Y(String s) {
if (!s.trim().isEmpty()) {
C_LMAR1Y = Short.parseShort(s);
} else {
C_LMAR1Y = Short.MIN_VALUE;
}
}

protected final void initC_LMCBM1(String s) {
if (!s.trim().isEmpty()) {
C_LMCBM1 = Byte.parseByte(s);
} else {
C_LMCBM1 = Byte.MIN_VALUE;
}
}

protected final void initC_LMCBM2(String s) {
if (!s.trim().isEmpty()) {
C_LMCBM2 = Byte.parseByte(s);
} else {
C_LMCBM2 = Byte.MIN_VALUE;
}
}

protected final void initC_LMCBM3(String s) {
if (!s.trim().isEmpty()) {
C_LMCBM3 = Byte.parseByte(s);
} else {
C_LMCBM3 = Byte.MIN_VALUE;
}
}

protected final void initC_LMCBY41(String s) {
if (!s.trim().isEmpty()) {
C_LMCBY41 = Short.parseShort(s);
} else {
C_LMCBY41 = Short.MIN_VALUE;
}
}

protected final void initC_LMCBY42(String s) {
if (!s.trim().isEmpty()) {
C_LMCBY42 = Short.parseShort(s);
} else {
C_LMCBY42 = Short.MIN_VALUE;
}
}

protected final void initC_LMCBY43(String s) {
if (!s.trim().isEmpty()) {
C_LMCBY43 = Short.parseShort(s);
} else {
C_LMCBY43 = Short.MIN_VALUE;
}
}

protected final void initC_LMSPM1(String s) {
if (!s.trim().isEmpty()) {
C_LMSPM1 = Byte.parseByte(s);
} else {
C_LMSPM1 = Byte.MIN_VALUE;
}
}

protected final void initC_LMSPM2(String s) {
if (!s.trim().isEmpty()) {
C_LMSPM2 = Byte.parseByte(s);
} else {
C_LMSPM2 = Byte.MIN_VALUE;
}
}

protected final void initC_LMSPM3(String s) {
if (!s.trim().isEmpty()) {
C_LMSPM3 = Byte.parseByte(s);
} else {
C_LMSPM3 = Byte.MIN_VALUE;
}
}

protected final void initC_LMSPY41(String s) {
if (!s.trim().isEmpty()) {
C_LMSPY41 = Short.parseShort(s);
} else {
C_LMSPY41 = Short.MIN_VALUE;
}
}

protected final void initC_LMSPY42(String s) {
if (!s.trim().isEmpty()) {
C_LMSPY42 = Short.parseShort(s);
} else {
C_LMSPY42 = Short.MIN_VALUE;
}
}

protected final void initC_LMSPY43(String s) {
if (!s.trim().isEmpty()) {
C_LMSPY43 = Short.parseShort(s);
} else {
C_LMSPY43 = Short.MIN_VALUE;
}
}

protected final void initC_LNADOPT(String s) {
if (!s.trim().isEmpty()) {
C_LNADOPT = Byte.parseByte(s);
} else {
C_LNADOPT = Byte.MIN_VALUE;
}
}

protected final void initC_LNPRNT(String s) {
if (!s.trim().isEmpty()) {
C_LNPRNT = Byte.parseByte(s);
} else {
C_LNPRNT = Byte.MIN_VALUE;
}
}

protected final void initC_LOCSERAP(String s) {
if (!s.trim().isEmpty()) {
C_LOCSERAP = Byte.parseByte(s);
} else {
C_LOCSERAP = Byte.MIN_VALUE;
}
}

protected final void initC_LOCSERAS(String s) {
if (!s.trim().isEmpty()) {
C_LOCSERAS = Byte.parseByte(s);
} else {
C_LOCSERAS = Byte.MIN_VALUE;
}
}

protected final void initC_LOCSERB(String s) {
if (!s.trim().isEmpty()) {
C_LOCSERB = Byte.parseByte(s);
} else {
C_LOCSERB = Byte.MIN_VALUE;
}
}

protected final void initC_LOCSERC(String s) {
if (!s.trim().isEmpty()) {
C_LOCSERC = Byte.parseByte(s);
} else {
C_LOCSERC = Byte.MIN_VALUE;
}
}

protected final void initC_LOCSERD(String s) {
if (!s.trim().isEmpty()) {
C_LOCSERD = Byte.parseByte(s);
} else {
C_LOCSERD = Byte.MIN_VALUE;
}
}

protected final void initC_LOCSERE(String s) {
if (!s.trim().isEmpty()) {
C_LOCSERE = Byte.parseByte(s);
} else {
C_LOCSERE = Byte.MIN_VALUE;
}
}

protected final void initC_LPRNT(String s) {
if (!s.trim().isEmpty()) {
C_LPRNT = Byte.parseByte(s);
} else {
C_LPRNT = Byte.MIN_VALUE;
}
}

protected final void initC_LVHM(String s) {
if (!s.trim().isEmpty()) {
C_LVHM = Byte.parseByte(s);
} else {
C_LVHM = Byte.MIN_VALUE;
}
}

protected final void initC_LVMTHP(String s) {
if (!s.trim().isEmpty()) {
C_LVMTHP = Byte.parseByte(s);
} else {
C_LVMTHP = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL1(String s) {
if (!s.trim().isEmpty()) {
C_LVREL1 = Byte.parseByte(s);
} else {
C_LVREL1 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL10(String s) {
if (!s.trim().isEmpty()) {
C_LVREL10 = Byte.parseByte(s);
} else {
C_LVREL10 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL2(String s) {
if (!s.trim().isEmpty()) {
C_LVREL2 = Byte.parseByte(s);
} else {
C_LVREL2 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL3(String s) {
if (!s.trim().isEmpty()) {
C_LVREL3 = Byte.parseByte(s);
} else {
C_LVREL3 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL4(String s) {
if (!s.trim().isEmpty()) {
C_LVREL4 = Byte.parseByte(s);
} else {
C_LVREL4 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL5(String s) {
if (!s.trim().isEmpty()) {
C_LVREL5 = Byte.parseByte(s);
} else {
C_LVREL5 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL6(String s) {
if (!s.trim().isEmpty()) {
C_LVREL6 = Byte.parseByte(s);
} else {
C_LVREL6 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL7(String s) {
if (!s.trim().isEmpty()) {
C_LVREL7 = Byte.parseByte(s);
} else {
C_LVREL7 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL8(String s) {
if (!s.trim().isEmpty()) {
C_LVREL8 = Byte.parseByte(s);
} else {
C_LVREL8 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL9(String s) {
if (!s.trim().isEmpty()) {
C_LVREL9 = Byte.parseByte(s);
} else {
C_LVREL9 = Byte.MIN_VALUE;
}
}

protected final void initC_LVREL96(String s) {
if (!s.trim().isEmpty()) {
C_LVREL96 = Byte.parseByte(s);
} else {
C_LVREL96 = Byte.MIN_VALUE;
}
}

protected final void initC_LVSCDO(String s) {
if (!s.trim().isEmpty()) {
C_LVSCDO = Byte.parseByte(s);
} else {
C_LVSCDO = Byte.MIN_VALUE;
}
}

protected final void initC_LVWHY(String s) {
if (!s.trim().isEmpty()) {
C_LVWHY = Byte.parseByte(s);
} else {
C_LVWHY = Byte.MIN_VALUE;
}
}

protected final void initC_LVYRP(String s) {
if (!s.trim().isEmpty()) {
C_LVYRP = Short.parseShort(s);
} else {
C_LVYRP = Short.MIN_VALUE;
}
}

protected final void initC_LWWRONG(String s) {
if (!s.trim().isEmpty()) {
C_LWWRONG = Byte.parseByte(s);
} else {
C_LWWRONG = Byte.MIN_VALUE;
}
}

protected final void initC_MAAGE(String s) {
if (!s.trim().isEmpty()) {
C_MAAGE = Byte.parseByte(s);
} else {
C_MAAGE = Byte.MIN_VALUE;
}
}

protected final void initC_MACOB(String s) {
if (!s.trim().isEmpty()) {
C_MACOB = Byte.parseByte(s);
} else {
C_MACOB = Byte.MIN_VALUE;
}
}

protected final void initC_MACON(String s) {
if (!s.trim().isEmpty()) {
C_MACON = Byte.parseByte(s);
} else {
C_MACON = Byte.MIN_VALUE;
}
}

protected final void initC_MAFAR(String s) {
if (!s.trim().isEmpty()) {
C_MAFAR = Byte.parseByte(s);
} else {
C_MAFAR = Byte.MIN_VALUE;
}
}

protected final void initC_MAJU(String s) {
if (!s.trim().isEmpty()) {
C_MAJU = Byte.parseByte(s);
} else {
C_MAJU = Byte.MIN_VALUE;
}
}

protected final void initC_MALONE(String s) {
if (!s.trim().isEmpty()) {
C_MALONE = Byte.parseByte(s);
} else {
C_MALONE = Byte.MIN_VALUE;
}
}

protected final void initC_MAMOSTCON(String s) {
if (!s.trim().isEmpty()) {
C_MAMOSTCON = Byte.parseByte(s);
} else {
C_MAMOSTCON = Byte.MIN_VALUE;
}
}

protected final void initC_MANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
C_MANSSEC5_DV = Byte.parseByte(s);
} else {
C_MANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initC_MARSTAT(String s) {
if (!s.trim().isEmpty()) {
C_MARSTAT = Byte.parseByte(s);
} else {
C_MARSTAT = Byte.MIN_VALUE;
}
}

protected final void initC_MASEE(String s) {
if (!s.trim().isEmpty()) {
C_MASEE = Byte.parseByte(s);
} else {
C_MASEE = Byte.MIN_VALUE;
}
}

protected final void initC_MASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
C_MASOC00_CC = Short.parseShort(s);
} else {
C_MASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initC_MASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
C_MASOC10_CC = Short.parseShort(s);
} else {
C_MASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initC_MASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
C_MASOC90_CC = Byte.parseByte(s);
} else {
C_MASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initC_MASTAT_DV(String s) {
if (!s.trim().isEmpty()) {
C_MASTAT_DV = Byte.parseByte(s);
} else {
C_MASTAT_DV = Byte.MIN_VALUE;
}
}

protected final void initC_MATLEAVE(String s) {
if (!s.trim().isEmpty()) {
C_MATLEAVE = Byte.parseByte(s);
} else {
C_MATLEAVE = Byte.MIN_VALUE;
}
}

protected final void initC_MATLV(String s) {
if (!s.trim().isEmpty()) {
C_MATLV = Byte.parseByte(s);
} else {
C_MATLV = Byte.MIN_VALUE;
}
}

protected final void initC_MATLVENDD(String s) {
if (!s.trim().isEmpty()) {
C_MATLVENDD = Byte.parseByte(s);
} else {
C_MATLVENDD = Byte.MIN_VALUE;
}
}

protected final void initC_MATLVENDM(String s) {
if (!s.trim().isEmpty()) {
C_MATLVENDM = Byte.parseByte(s);
} else {
C_MATLVENDM = Byte.MIN_VALUE;
}
}

protected final void initC_MATLVENDY4(String s) {
if (!s.trim().isEmpty()) {
C_MATLVENDY4 = Short.parseShort(s);
} else {
C_MATLVENDY4 = Short.MIN_VALUE;
}
}

protected final void initC_MATLVSTD(String s) {
if (!s.trim().isEmpty()) {
C_MATLVSTD = Byte.parseByte(s);
} else {
C_MATLVSTD = Byte.MIN_VALUE;
}
}

protected final void initC_MATLVSTM(String s) {
if (!s.trim().isEmpty()) {
C_MATLVSTM = Byte.parseByte(s);
} else {
C_MATLVSTM = Byte.MIN_VALUE;
}
}

protected final void initC_MATLVSTY4(String s) {
if (!s.trim().isEmpty()) {
C_MATLVSTY4 = Short.parseShort(s);
} else {
C_MATLVSTY4 = Short.MIN_VALUE;
}
}

protected final void initC_MAYRUK(String s) {
if (!s.trim().isEmpty()) {
C_MAYRUK = Byte.parseByte(s);
} else {
C_MAYRUK = Byte.MIN_VALUE;
}
}

protected final void initC_MEMAID(String s) {
if (!s.trim().isEmpty()) {
C_MEMAID = Byte.parseByte(s);
} else {
C_MEMAID = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT11(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT11 = Byte.parseByte(s);
} else {
C_MEMCONT11 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT12(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT12 = Byte.parseByte(s);
} else {
C_MEMCONT12 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT13(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT13 = Byte.parseByte(s);
} else {
C_MEMCONT13 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT21(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT21 = Byte.parseByte(s);
} else {
C_MEMCONT21 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT210(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT210 = Byte.parseByte(s);
} else {
C_MEMCONT210 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT211(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT211 = Byte.parseByte(s);
} else {
C_MEMCONT211 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT212(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT212 = Byte.parseByte(s);
} else {
C_MEMCONT212 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT213(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT213 = Byte.parseByte(s);
} else {
C_MEMCONT213 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT214(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT214 = Byte.parseByte(s);
} else {
C_MEMCONT214 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT215(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT215 = Byte.parseByte(s);
} else {
C_MEMCONT215 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT216(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT216 = Byte.parseByte(s);
} else {
C_MEMCONT216 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT22(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT22 = Byte.parseByte(s);
} else {
C_MEMCONT22 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT23(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT23 = Byte.parseByte(s);
} else {
C_MEMCONT23 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT24(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT24 = Byte.parseByte(s);
} else {
C_MEMCONT24 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT25(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT25 = Byte.parseByte(s);
} else {
C_MEMCONT25 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT26(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT26 = Byte.parseByte(s);
} else {
C_MEMCONT26 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT27(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT27 = Byte.parseByte(s);
} else {
C_MEMCONT27 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT28(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT28 = Byte.parseByte(s);
} else {
C_MEMCONT28 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT29(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT29 = Byte.parseByte(s);
} else {
C_MEMCONT29 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMCONT3(String s) {
if (!s.trim().isEmpty()) {
C_MEMCONT3 = Byte.parseByte(s);
} else {
C_MEMCONT3 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMORIG(String s) {
if (!s.trim().isEmpty()) {
C_MEMORIG = Byte.parseByte(s);
} else {
C_MEMORIG = Byte.MIN_VALUE;
}
}

protected final void initC_MEMPER(String s) {
if (!s.trim().isEmpty()) {
C_MEMPER = Byte.parseByte(s);
} else {
C_MEMPER = Byte.MIN_VALUE;
}
}

protected final void initC_MEMPLOY(String s) {
if (!s.trim().isEmpty()) {
C_MEMPLOY = Byte.parseByte(s);
} else {
C_MEMPLOY = Byte.MIN_VALUE;
}
}

protected final void initC_MEMPROB1(String s) {
if (!s.trim().isEmpty()) {
C_MEMPROB1 = Byte.parseByte(s);
} else {
C_MEMPROB1 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMPROB2(String s) {
if (!s.trim().isEmpty()) {
C_MEMPROB2 = Byte.parseByte(s);
} else {
C_MEMPROB2 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMPROB3(String s) {
if (!s.trim().isEmpty()) {
C_MEMPROB3 = Byte.parseByte(s);
} else {
C_MEMPROB3 = Byte.MIN_VALUE;
}
}

protected final void initC_MEMPROB4(String s) {
if (!s.trim().isEmpty()) {
C_MEMPROB4 = Byte.parseByte(s);
} else {
C_MEMPROB4 = Byte.MIN_VALUE;
}
}

protected final void initC_MIGCNTRY(String s) {
if (!s.trim().isEmpty()) {
C_MIGCNTRY = Byte.parseByte(s);
} else {
C_MIGCNTRY = Byte.MIN_VALUE;
}
}

protected final void initC_MIGPLNS(String s) {
if (!s.trim().isEmpty()) {
C_MIGPLNS = Byte.parseByte(s);
} else {
C_MIGPLNS = Byte.MIN_VALUE;
}
}

protected final void initC_MLAGST(String s) {
if (!s.trim().isEmpty()) {
C_MLAGST = Byte.parseByte(s);
} else {
C_MLAGST = Byte.MIN_VALUE;
}
}

protected final void initC_MLAGSTU(String s) {
if (!s.trim().isEmpty()) {
C_MLAGSTU = Byte.parseByte(s);
} else {
C_MLAGSTU = Byte.MIN_VALUE;
}
}

protected final void initC_MLFUTR(String s) {
if (!s.trim().isEmpty()) {
C_MLFUTR = Byte.parseByte(s);
} else {
C_MLFUTR = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT1(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT1 = Byte.parseByte(s);
} else {
C_MLRNOT1 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT10(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT10 = Byte.parseByte(s);
} else {
C_MLRNOT10 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT11(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT11 = Byte.parseByte(s);
} else {
C_MLRNOT11 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT12(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT12 = Byte.parseByte(s);
} else {
C_MLRNOT12 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT13(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT13 = Byte.parseByte(s);
} else {
C_MLRNOT13 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT2(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT2 = Byte.parseByte(s);
} else {
C_MLRNOT2 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT3(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT3 = Byte.parseByte(s);
} else {
C_MLRNOT3 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT4(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT4 = Byte.parseByte(s);
} else {
C_MLRNOT4 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT5(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT5 = Byte.parseByte(s);
} else {
C_MLRNOT5 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT6(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT6 = Byte.parseByte(s);
} else {
C_MLRNOT6 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT7(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT7 = Byte.parseByte(s);
} else {
C_MLRNOT7 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT8(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT8 = Byte.parseByte(s);
} else {
C_MLRNOT8 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT9(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT9 = Byte.parseByte(s);
} else {
C_MLRNOT9 = Byte.MIN_VALUE;
}
}

protected final void initC_MLRNOT97(String s) {
if (!s.trim().isEmpty()) {
C_MLRNOT97 = Byte.parseByte(s);
} else {
C_MLRNOT97 = Byte.MIN_VALUE;
}
}

protected final void initC_MLSTAT(String s) {
if (!s.trim().isEmpty()) {
C_MLSTAT = Byte.parseByte(s);
} else {
C_MLSTAT = Byte.MIN_VALUE;
}
}

protected final void initC_MLSTATCHK(String s) {
if (!s.trim().isEmpty()) {
C_MLSTATCHK = Byte.parseByte(s);
} else {
C_MLSTATCHK = Byte.MIN_VALUE;
}
}

protected final void initC_MLWKFPT(String s) {
if (!s.trim().isEmpty()) {
C_MLWKFPT = Byte.parseByte(s);
} else {
C_MLWKFPT = Byte.MIN_VALUE;
}
}

protected final void initC_MNPID(String s) {
if (!s.trim().isEmpty()) {
C_MNPID = Integer.parseInt(s);
} else {
C_MNPID = Integer.MIN_VALUE;
}
}

protected final void initC_MNPNO(String s) {
if (!s.trim().isEmpty()) {
C_MNPNO = Byte.parseByte(s);
} else {
C_MNPNO = Byte.MIN_VALUE;
}
}

protected final void initC_MNSPID(String s) {
if (!s.trim().isEmpty()) {
C_MNSPID = Integer.parseInt(s);
} else {
C_MNSPID = Integer.MIN_VALUE;
}
}

protected final void initC_MNSPNO(String s) {
if (!s.trim().isEmpty()) {
C_MNSPNO = Byte.parseByte(s);
} else {
C_MNSPNO = Byte.MIN_VALUE;
}
}

protected final void initC_MOBUSE(String s) {
if (!s.trim().isEmpty()) {
C_MOBUSE = Byte.parseByte(s);
} else {
C_MOBUSE = Byte.MIN_VALUE;
}
}

protected final void initC_MONTH(String s) {
if (!s.trim().isEmpty()) {
C_MONTH = Byte.parseByte(s);
} else {
C_MONTH = Byte.MIN_VALUE;
}
}

protected final void initC_MOVDIR(String s) {
if (!s.trim().isEmpty()) {
C_MOVDIR = Byte.parseByte(s);
} else {
C_MOVDIR = Byte.MIN_VALUE;
}
}

protected final void initC_MOVEOTH_CODE(String s) {
if (!s.trim().isEmpty()) {
C_MOVEOTH_CODE = Byte.parseByte(s);
} else {
C_MOVEOTH_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_MOVY11(String s) {
if (!s.trim().isEmpty()) {
C_MOVY11 = Byte.parseByte(s);
} else {
C_MOVY11 = Byte.MIN_VALUE;
}
}

protected final void initC_MOVY12(String s) {
if (!s.trim().isEmpty()) {
C_MOVY12 = Byte.parseByte(s);
} else {
C_MOVY12 = Byte.MIN_VALUE;
}
}

protected final void initC_MOVY13(String s) {
if (!s.trim().isEmpty()) {
C_MOVY13 = Byte.parseByte(s);
} else {
C_MOVY13 = Byte.MIN_VALUE;
}
}

protected final void initC_MOVY14(String s) {
if (!s.trim().isEmpty()) {
C_MOVY14 = Byte.parseByte(s);
} else {
C_MOVY14 = Byte.MIN_VALUE;
}
}

protected final void initC_MOVY15(String s) {
if (!s.trim().isEmpty()) {
C_MOVY15 = Byte.parseByte(s);
} else {
C_MOVY15 = Byte.MIN_VALUE;
}
}

protected final void initC_MOVY16(String s) {
if (!s.trim().isEmpty()) {
C_MOVY16 = Byte.parseByte(s);
} else {
C_MOVY16 = Byte.MIN_VALUE;
}
}

protected final void initC_MSTATCH1(String s) {
if (!s.trim().isEmpty()) {
C_MSTATCH1 = Byte.parseByte(s);
} else {
C_MSTATCH1 = Byte.MIN_VALUE;
}
}

protected final void initC_MSTATCH2(String s) {
if (!s.trim().isEmpty()) {
C_MSTATCH2 = Byte.parseByte(s);
} else {
C_MSTATCH2 = Byte.MIN_VALUE;
}
}

protected final void initC_MSTATSAM(String s) {
if (!s.trim().isEmpty()) {
C_MSTATSAM = Byte.parseByte(s);
} else {
C_MSTATSAM = Byte.MIN_VALUE;
}
}

protected final void initC_MSTATSAMN(String s) {
if (!s.trim().isEmpty()) {
C_MSTATSAMN = Byte.parseByte(s);
} else {
C_MSTATSAMN = Byte.MIN_VALUE;
}
}

protected final void initC_MVEVER(String s) {
if (!s.trim().isEmpty()) {
C_MVEVER = Byte.parseByte(s);
} else {
C_MVEVER = Byte.MIN_VALUE;
}
}

protected final void initC_MVMNTH(String s) {
if (!s.trim().isEmpty()) {
C_MVMNTH = Byte.parseByte(s);
} else {
C_MVMNTH = Byte.MIN_VALUE;
}
}

protected final void initC_MVYR(String s) {
if (!s.trim().isEmpty()) {
C_MVYR = Short.parseShort(s);
} else {
C_MVYR = Short.MIN_VALUE;
}
}

protected final void initC_NACAR(String s) {
if (!s.trim().isEmpty()) {
C_NACAR = Byte.parseByte(s);
} else {
C_NACAR = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT11(String s) {
if (!s.trim().isEmpty()) {
C_NACONT11 = Byte.parseByte(s);
} else {
C_NACONT11 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT12(String s) {
if (!s.trim().isEmpty()) {
C_NACONT12 = Byte.parseByte(s);
} else {
C_NACONT12 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT13(String s) {
if (!s.trim().isEmpty()) {
C_NACONT13 = Byte.parseByte(s);
} else {
C_NACONT13 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT21(String s) {
if (!s.trim().isEmpty()) {
C_NACONT21 = Byte.parseByte(s);
} else {
C_NACONT21 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT210(String s) {
if (!s.trim().isEmpty()) {
C_NACONT210 = Byte.parseByte(s);
} else {
C_NACONT210 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT211(String s) {
if (!s.trim().isEmpty()) {
C_NACONT211 = Byte.parseByte(s);
} else {
C_NACONT211 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT212(String s) {
if (!s.trim().isEmpty()) {
C_NACONT212 = Byte.parseByte(s);
} else {
C_NACONT212 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT213(String s) {
if (!s.trim().isEmpty()) {
C_NACONT213 = Byte.parseByte(s);
} else {
C_NACONT213 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT214(String s) {
if (!s.trim().isEmpty()) {
C_NACONT214 = Byte.parseByte(s);
} else {
C_NACONT214 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT215(String s) {
if (!s.trim().isEmpty()) {
C_NACONT215 = Byte.parseByte(s);
} else {
C_NACONT215 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT216(String s) {
if (!s.trim().isEmpty()) {
C_NACONT216 = Byte.parseByte(s);
} else {
C_NACONT216 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT22(String s) {
if (!s.trim().isEmpty()) {
C_NACONT22 = Byte.parseByte(s);
} else {
C_NACONT22 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT23(String s) {
if (!s.trim().isEmpty()) {
C_NACONT23 = Byte.parseByte(s);
} else {
C_NACONT23 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT24(String s) {
if (!s.trim().isEmpty()) {
C_NACONT24 = Byte.parseByte(s);
} else {
C_NACONT24 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT25(String s) {
if (!s.trim().isEmpty()) {
C_NACONT25 = Byte.parseByte(s);
} else {
C_NACONT25 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT26(String s) {
if (!s.trim().isEmpty()) {
C_NACONT26 = Byte.parseByte(s);
} else {
C_NACONT26 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT27(String s) {
if (!s.trim().isEmpty()) {
C_NACONT27 = Byte.parseByte(s);
} else {
C_NACONT27 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT28(String s) {
if (!s.trim().isEmpty()) {
C_NACONT28 = Byte.parseByte(s);
} else {
C_NACONT28 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT29(String s) {
if (!s.trim().isEmpty()) {
C_NACONT29 = Byte.parseByte(s);
} else {
C_NACONT29 = Byte.MIN_VALUE;
}
}

protected final void initC_NACONT3(String s) {
if (!s.trim().isEmpty()) {
C_NACONT3 = Byte.parseByte(s);
} else {
C_NACONT3 = Byte.MIN_VALUE;
}
}

protected final void initC_NADISEASE(String s) {
if (!s.trim().isEmpty()) {
C_NADISEASE = Byte.parseByte(s);
} else {
C_NADISEASE = Byte.MIN_VALUE;
}
}

protected final void initC_NADOPTCH(String s) {
if (!s.trim().isEmpty()) {
C_NADOPTCH = Byte.parseByte(s);
} else {
C_NADOPTCH = Byte.MIN_VALUE;
}
}

protected final void initC_NADRINK(String s) {
if (!s.trim().isEmpty()) {
C_NADRINK = Byte.parseByte(s);
} else {
C_NADRINK = Byte.MIN_VALUE;
}
}

protected final void initC_NAIDXHH(String s) {
if (!s.trim().isEmpty()) {
C_NAIDXHH = Byte.parseByte(s);
} else {
C_NAIDXHH = Byte.MIN_VALUE;
}
}

protected final void initC_NAINTEREST(String s) {
if (!s.trim().isEmpty()) {
C_NAINTEREST = Byte.parseByte(s);
} else {
C_NAINTEREST = Byte.MIN_VALUE;
}
}

protected final void initC_NALOTTERY(String s) {
if (!s.trim().isEmpty()) {
C_NALOTTERY = Byte.parseByte(s);
} else {
C_NALOTTERY = Byte.MIN_VALUE;
}
}

protected final void initC_NASOFA(String s) {
if (!s.trim().isEmpty()) {
C_NASOFA = Byte.parseByte(s);
} else {
C_NASOFA = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP1(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP1 = Byte.parseByte(s);
} else {
C_NASTOP1 = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP2(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP2 = Byte.parseByte(s);
} else {
C_NASTOP2 = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP3(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP3 = Byte.parseByte(s);
} else {
C_NASTOP3 = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP4(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP4 = Byte.parseByte(s);
} else {
C_NASTOP4 = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP5(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP5 = Byte.parseByte(s);
} else {
C_NASTOP5 = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP6(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP6 = Byte.parseByte(s);
} else {
C_NASTOP6 = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP7(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP7 = Byte.parseByte(s);
} else {
C_NASTOP7 = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP8(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP8 = Byte.parseByte(s);
} else {
C_NASTOP8 = Byte.MIN_VALUE;
}
}

protected final void initC_NASTOP97(String s) {
if (!s.trim().isEmpty()) {
C_NASTOP97 = Byte.parseByte(s);
} else {
C_NASTOP97 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH01(String s) {
if (!s.trim().isEmpty()) {
C_NATCH01 = Byte.parseByte(s);
} else {
C_NATCH01 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH02(String s) {
if (!s.trim().isEmpty()) {
C_NATCH02 = Byte.parseByte(s);
} else {
C_NATCH02 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH03(String s) {
if (!s.trim().isEmpty()) {
C_NATCH03 = Byte.parseByte(s);
} else {
C_NATCH03 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH04(String s) {
if (!s.trim().isEmpty()) {
C_NATCH04 = Byte.parseByte(s);
} else {
C_NATCH04 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH05(String s) {
if (!s.trim().isEmpty()) {
C_NATCH05 = Byte.parseByte(s);
} else {
C_NATCH05 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH06(String s) {
if (!s.trim().isEmpty()) {
C_NATCH06 = Byte.parseByte(s);
} else {
C_NATCH06 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH07(String s) {
if (!s.trim().isEmpty()) {
C_NATCH07 = Byte.parseByte(s);
} else {
C_NATCH07 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH08(String s) {
if (!s.trim().isEmpty()) {
C_NATCH08 = Byte.parseByte(s);
} else {
C_NATCH08 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH09(String s) {
if (!s.trim().isEmpty()) {
C_NATCH09 = Byte.parseByte(s);
} else {
C_NATCH09 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH10(String s) {
if (!s.trim().isEmpty()) {
C_NATCH10 = Byte.parseByte(s);
} else {
C_NATCH10 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH11(String s) {
if (!s.trim().isEmpty()) {
C_NATCH11 = Byte.parseByte(s);
} else {
C_NATCH11 = Byte.MIN_VALUE;
}
}

protected final void initC_NATCH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_NATCH12 = false;
} else {
C_NATCH12 = true;
}
}
}

protected final void initC_NATCH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_NATCH13 = false;
} else {
C_NATCH13 = true;
}
}
}

protected final void initC_NATCH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_NATCH14 = false;
} else {
C_NATCH14 = true;
}
}
}

protected final void initC_NATCH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_NATCH15 = false;
} else {
C_NATCH15 = true;
}
}
}

protected final void initC_NATCH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
C_NATCH16 = false;
} else {
C_NATCH16 = true;
}
}
}

protected final void initC_NATID1(String s) {
if (!s.trim().isEmpty()) {
C_NATID1 = Byte.parseByte(s);
} else {
C_NATID1 = Byte.MIN_VALUE;
}
}

protected final void initC_NATID2(String s) {
if (!s.trim().isEmpty()) {
C_NATID2 = Byte.parseByte(s);
} else {
C_NATID2 = Byte.MIN_VALUE;
}
}

protected final void initC_NATID3(String s) {
if (!s.trim().isEmpty()) {
C_NATID3 = Byte.parseByte(s);
} else {
C_NATID3 = Byte.MIN_VALUE;
}
}

protected final void initC_NATID4(String s) {
if (!s.trim().isEmpty()) {
C_NATID4 = Byte.parseByte(s);
} else {
C_NATID4 = Byte.MIN_VALUE;
}
}

protected final void initC_NATID5(String s) {
if (!s.trim().isEmpty()) {
C_NATID5 = Byte.parseByte(s);
} else {
C_NATID5 = Byte.MIN_VALUE;
}
}

protected final void initC_NATID6(String s) {
if (!s.trim().isEmpty()) {
C_NATID6 = Byte.parseByte(s);
} else {
C_NATID6 = Byte.MIN_VALUE;
}
}

protected final void initC_NATID97(String s) {
if (!s.trim().isEmpty()) {
C_NATID97 = Byte.parseByte(s);
} else {
C_NATID97 = Byte.MIN_VALUE;
}
}

protected final void initC_NBRCOH1(String s) {
if (!s.trim().isEmpty()) {
C_NBRCOH1 = Byte.parseByte(s);
} else {
C_NBRCOH1 = Byte.MIN_VALUE;
}
}

protected final void initC_NBRCOH2(String s) {
if (!s.trim().isEmpty()) {
C_NBRCOH2 = Byte.parseByte(s);
} else {
C_NBRCOH2 = Byte.MIN_VALUE;
}
}

protected final void initC_NBRCOH3(String s) {
if (!s.trim().isEmpty()) {
C_NBRCOH3 = Byte.parseByte(s);
} else {
C_NBRCOH3 = Byte.MIN_VALUE;
}
}

protected final void initC_NBRCOH4(String s) {
if (!s.trim().isEmpty()) {
C_NBRCOH4 = Byte.parseByte(s);
} else {
C_NBRCOH4 = Byte.MIN_VALUE;
}
}

protected final void initC_NBRCOHDK_DV(String s) {
if (!s.trim().isEmpty()) {
C_NBRCOHDK_DV = Byte.parseByte(s);
} else {
C_NBRCOHDK_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NBRCOH_DV(String s) {
if (!s.trim().isEmpty()) {
C_NBRCOH_DV = Byte.parseByte(s);
} else {
C_NBRCOH_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NBRSNCI_DV(String s) {
if (!s.trim().isEmpty()) {
C_NBRSNCI_DV = Double.parseDouble(s);
} else {
C_NBRSNCI_DV = Double.NaN;
}
}

protected final void initC_NCH10(String s) {
if (!s.trim().isEmpty()) {
C_NCH10 = Byte.parseByte(s);
} else {
C_NCH10 = Byte.MIN_VALUE;
}
}

protected final void initC_NCH10TO15(String s) {
if (!s.trim().isEmpty()) {
C_NCH10TO15 = Byte.parseByte(s);
} else {
C_NCH10TO15 = Byte.MIN_VALUE;
}
}

protected final void initC_NCH14RESP(String s) {
if (!s.trim().isEmpty()) {
C_NCH14RESP = Byte.parseByte(s);
} else {
C_NCH14RESP = Byte.MIN_VALUE;
}
}

protected final void initC_NCH3RESP(String s) {
if (!s.trim().isEmpty()) {
C_NCH3RESP = Byte.parseByte(s);
} else {
C_NCH3RESP = Byte.MIN_VALUE;
}
}

protected final void initC_NCH415RESP(String s) {
if (!s.trim().isEmpty()) {
C_NCH415RESP = Byte.parseByte(s);
} else {
C_NCH415RESP = Byte.MIN_VALUE;
}
}

protected final void initC_NCH5RESP(String s) {
if (!s.trim().isEmpty()) {
C_NCH5RESP = Byte.parseByte(s);
} else {
C_NCH5RESP = Byte.MIN_VALUE;
}
}

protected final void initC_NCH5TO15(String s) {
if (!s.trim().isEmpty()) {
C_NCH5TO15 = Byte.parseByte(s);
} else {
C_NCH5TO15 = Byte.MIN_VALUE;
}
}

protected final void initC_NCH8RESP(String s) {
if (!s.trim().isEmpty()) {
C_NCH8RESP = Byte.parseByte(s);
} else {
C_NCH8RESP = Byte.MIN_VALUE;
}
}

protected final void initC_NCHILD(String s) {
if (!s.trim().isEmpty()) {
C_NCHILD = Byte.parseByte(s);
} else {
C_NCHILD = Byte.MIN_VALUE;
}
}

protected final void initC_NCHILD_DV(String s) {
if (!s.trim().isEmpty()) {
C_NCHILD_DV = Byte.parseByte(s);
} else {
C_NCHILD_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NCHRESP(String s) {
if (!s.trim().isEmpty()) {
C_NCHRESP = Byte.parseByte(s);
} else {
C_NCHRESP = Byte.MIN_VALUE;
}
}

protected final void initC_NCHUND18RESP(String s) {
if (!s.trim().isEmpty()) {
C_NCHUND18RESP = Byte.parseByte(s);
} else {
C_NCHUND18RESP = Byte.MIN_VALUE;
}
}

protected final void initC_NCHUNDER16(String s) {
if (!s.trim().isEmpty()) {
C_NCHUNDER16 = Byte.parseByte(s);
} else {
C_NCHUNDER16 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR1(String s) {
if (!s.trim().isEmpty()) {
C_NCRR1 = Byte.parseByte(s);
} else {
C_NCRR1 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR11(String s) {
if (!s.trim().isEmpty()) {
C_NCRR11 = Byte.parseByte(s);
} else {
C_NCRR11 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR12(String s) {
if (!s.trim().isEmpty()) {
C_NCRR12 = Byte.parseByte(s);
} else {
C_NCRR12 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR3(String s) {
if (!s.trim().isEmpty()) {
C_NCRR3 = Byte.parseByte(s);
} else {
C_NCRR3 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR4(String s) {
if (!s.trim().isEmpty()) {
C_NCRR4 = Byte.parseByte(s);
} else {
C_NCRR4 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR5(String s) {
if (!s.trim().isEmpty()) {
C_NCRR5 = Byte.parseByte(s);
} else {
C_NCRR5 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR6(String s) {
if (!s.trim().isEmpty()) {
C_NCRR6 = Byte.parseByte(s);
} else {
C_NCRR6 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR8(String s) {
if (!s.trim().isEmpty()) {
C_NCRR8 = Byte.parseByte(s);
} else {
C_NCRR8 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRR9(String s) {
if (!s.trim().isEmpty()) {
C_NCRR9 = Byte.parseByte(s);
} else {
C_NCRR9 = Byte.MIN_VALUE;
}
}

protected final void initC_NCRRM(String s) {
if (!s.trim().isEmpty()) {
C_NCRRM = Byte.parseByte(s);
} else {
C_NCRRM = Byte.MIN_VALUE;
}
}

protected final void initC_NCRRY4(String s) {
if (!s.trim().isEmpty()) {
C_NCRRY4 = Short.parseShort(s);
} else {
C_NCRRY4 = Short.MIN_VALUE;
}
}

protected final void initC_NDEPCHL_DV(String s) {
if (!s.trim().isEmpty()) {
C_NDEPCHL_DV = Byte.parseByte(s);
} else {
C_NDEPCHL_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NETAG_1(String s) {
if (!s.trim().isEmpty()) {
C_NETAG_1 = Byte.parseByte(s);
} else {
C_NETAG_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETAG_2(String s) {
if (!s.trim().isEmpty()) {
C_NETAG_2 = Byte.parseByte(s);
} else {
C_NETAG_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETAG_3(String s) {
if (!s.trim().isEmpty()) {
C_NETAG_3 = Byte.parseByte(s);
} else {
C_NETAG_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETCHT(String s) {
if (!s.trim().isEmpty()) {
C_NETCHT = Byte.parseByte(s);
} else {
C_NETCHT = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO10_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO10_1 = Byte.parseByte(s);
} else {
C_NETDO10_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO10_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO10_2 = Byte.parseByte(s);
} else {
C_NETDO10_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO10_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO10_3 = Byte.parseByte(s);
} else {
C_NETDO10_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO1_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO1_1 = Byte.parseByte(s);
} else {
C_NETDO1_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO1_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO1_2 = Byte.parseByte(s);
} else {
C_NETDO1_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO1_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO1_3 = Byte.parseByte(s);
} else {
C_NETDO1_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO2_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO2_1 = Byte.parseByte(s);
} else {
C_NETDO2_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO2_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO2_2 = Byte.parseByte(s);
} else {
C_NETDO2_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO2_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO2_3 = Byte.parseByte(s);
} else {
C_NETDO2_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO3_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO3_1 = Byte.parseByte(s);
} else {
C_NETDO3_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO3_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO3_2 = Byte.parseByte(s);
} else {
C_NETDO3_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO3_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO3_3 = Byte.parseByte(s);
} else {
C_NETDO3_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO4_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO4_1 = Byte.parseByte(s);
} else {
C_NETDO4_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO4_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO4_2 = Byte.parseByte(s);
} else {
C_NETDO4_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO4_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO4_3 = Byte.parseByte(s);
} else {
C_NETDO4_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO5_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO5_1 = Byte.parseByte(s);
} else {
C_NETDO5_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO5_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO5_2 = Byte.parseByte(s);
} else {
C_NETDO5_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO5_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO5_3 = Byte.parseByte(s);
} else {
C_NETDO5_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO6_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO6_1 = Byte.parseByte(s);
} else {
C_NETDO6_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO6_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO6_2 = Byte.parseByte(s);
} else {
C_NETDO6_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO6_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO6_3 = Byte.parseByte(s);
} else {
C_NETDO6_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO7_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO7_1 = Byte.parseByte(s);
} else {
C_NETDO7_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO7_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO7_2 = Byte.parseByte(s);
} else {
C_NETDO7_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO7_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO7_3 = Byte.parseByte(s);
} else {
C_NETDO7_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO8_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO8_1 = Byte.parseByte(s);
} else {
C_NETDO8_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO8_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO8_2 = Byte.parseByte(s);
} else {
C_NETDO8_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO8_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO8_3 = Byte.parseByte(s);
} else {
C_NETDO8_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO96_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO96_1 = Byte.parseByte(s);
} else {
C_NETDO96_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO96_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO96_2 = Byte.parseByte(s);
} else {
C_NETDO96_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO96_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO96_3 = Byte.parseByte(s);
} else {
C_NETDO96_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO97_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO97_1 = Byte.parseByte(s);
} else {
C_NETDO97_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO97_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO97_2 = Byte.parseByte(s);
} else {
C_NETDO97_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO97_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO97_3 = Byte.parseByte(s);
} else {
C_NETDO97_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO9_1(String s) {
if (!s.trim().isEmpty()) {
C_NETDO9_1 = Byte.parseByte(s);
} else {
C_NETDO9_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO9_2(String s) {
if (!s.trim().isEmpty()) {
C_NETDO9_2 = Byte.parseByte(s);
} else {
C_NETDO9_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETDO9_3(String s) {
if (!s.trim().isEmpty()) {
C_NETDO9_3 = Byte.parseByte(s);
} else {
C_NETDO9_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETET_1(String s) {
if (!s.trim().isEmpty()) {
C_NETET_1 = Byte.parseByte(s);
} else {
C_NETET_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETET_2(String s) {
if (!s.trim().isEmpty()) {
C_NETET_2 = Byte.parseByte(s);
} else {
C_NETET_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETET_3(String s) {
if (!s.trim().isEmpty()) {
C_NETET_3 = Byte.parseByte(s);
} else {
C_NETET_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETJB_1(String s) {
if (!s.trim().isEmpty()) {
C_NETJB_1 = Byte.parseByte(s);
} else {
C_NETJB_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETJB_2(String s) {
if (!s.trim().isEmpty()) {
C_NETJB_2 = Byte.parseByte(s);
} else {
C_NETJB_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETJB_3(String s) {
if (!s.trim().isEmpty()) {
C_NETJB_3 = Byte.parseByte(s);
} else {
C_NETJB_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETKN_1(String s) {
if (!s.trim().isEmpty()) {
C_NETKN_1 = Byte.parseByte(s);
} else {
C_NETKN_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETKN_2(String s) {
if (!s.trim().isEmpty()) {
C_NETKN_2 = Byte.parseByte(s);
} else {
C_NETKN_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETKN_3(String s) {
if (!s.trim().isEmpty()) {
C_NETKN_3 = Byte.parseByte(s);
} else {
C_NETKN_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETLV_1(String s) {
if (!s.trim().isEmpty()) {
C_NETLV_1 = Byte.parseByte(s);
} else {
C_NETLV_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETLV_2(String s) {
if (!s.trim().isEmpty()) {
C_NETLV_2 = Byte.parseByte(s);
} else {
C_NETLV_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETLV_3(String s) {
if (!s.trim().isEmpty()) {
C_NETLV_3 = Byte.parseByte(s);
} else {
C_NETLV_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETM2(String s) {
if (!s.trim().isEmpty()) {
C_NETM2 = Byte.parseByte(s);
} else {
C_NETM2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETM2O_CODE(String s) {
if (!s.trim().isEmpty()) {
C_NETM2O_CODE = Byte.parseByte(s);
} else {
C_NETM2O_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_NETMET_1(String s) {
if (!s.trim().isEmpty()) {
C_NETMET_1 = Byte.parseByte(s);
} else {
C_NETMET_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETMET_2(String s) {
if (!s.trim().isEmpty()) {
C_NETMET_2 = Byte.parseByte(s);
} else {
C_NETMET_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETMET_3(String s) {
if (!s.trim().isEmpty()) {
C_NETMET_3 = Byte.parseByte(s);
} else {
C_NETMET_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETPH_1(String s) {
if (!s.trim().isEmpty()) {
C_NETPH_1 = Byte.parseByte(s);
} else {
C_NETPH_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETPH_2(String s) {
if (!s.trim().isEmpty()) {
C_NETPH_2 = Byte.parseByte(s);
} else {
C_NETPH_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETPH_3(String s) {
if (!s.trim().isEmpty()) {
C_NETPH_3 = Byte.parseByte(s);
} else {
C_NETPH_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETPUSE(String s) {
if (!s.trim().isEmpty()) {
C_NETPUSE = Byte.parseByte(s);
} else {
C_NETPUSE = Byte.MIN_VALUE;
}
}

protected final void initC_NETRL_1(String s) {
if (!s.trim().isEmpty()) {
C_NETRL_1 = Byte.parseByte(s);
} else {
C_NETRL_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETRL_2(String s) {
if (!s.trim().isEmpty()) {
C_NETRL_2 = Byte.parseByte(s);
} else {
C_NETRL_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETRL_3(String s) {
if (!s.trim().isEmpty()) {
C_NETRL_3 = Byte.parseByte(s);
} else {
C_NETRL_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETSX_1(String s) {
if (!s.trim().isEmpty()) {
C_NETSX_1 = Byte.parseByte(s);
} else {
C_NETSX_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETSX_2(String s) {
if (!s.trim().isEmpty()) {
C_NETSX_2 = Byte.parseByte(s);
} else {
C_NETSX_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETSX_3(String s) {
if (!s.trim().isEmpty()) {
C_NETSX_3 = Byte.parseByte(s);
} else {
C_NETSX_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK10_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK10_1 = Byte.parseByte(s);
} else {
C_NETTALK10_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK10_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK10_2 = Byte.parseByte(s);
} else {
C_NETTALK10_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK10_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK10_3 = Byte.parseByte(s);
} else {
C_NETTALK10_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK11_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK11_1 = Byte.parseByte(s);
} else {
C_NETTALK11_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK11_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK11_2 = Byte.parseByte(s);
} else {
C_NETTALK11_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK11_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK11_3 = Byte.parseByte(s);
} else {
C_NETTALK11_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK12_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK12_1 = Byte.parseByte(s);
} else {
C_NETTALK12_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK12_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK12_2 = Byte.parseByte(s);
} else {
C_NETTALK12_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK12_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK12_3 = Byte.parseByte(s);
} else {
C_NETTALK12_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK13_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK13_1 = Byte.parseByte(s);
} else {
C_NETTALK13_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK13_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK13_2 = Byte.parseByte(s);
} else {
C_NETTALK13_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK13_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK13_3 = Byte.parseByte(s);
} else {
C_NETTALK13_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK1_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK1_1 = Byte.parseByte(s);
} else {
C_NETTALK1_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK1_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK1_2 = Byte.parseByte(s);
} else {
C_NETTALK1_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK1_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK1_3 = Byte.parseByte(s);
} else {
C_NETTALK1_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK2_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK2_1 = Byte.parseByte(s);
} else {
C_NETTALK2_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK2_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK2_2 = Byte.parseByte(s);
} else {
C_NETTALK2_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK2_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK2_3 = Byte.parseByte(s);
} else {
C_NETTALK2_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK3_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK3_1 = Byte.parseByte(s);
} else {
C_NETTALK3_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK3_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK3_2 = Byte.parseByte(s);
} else {
C_NETTALK3_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK3_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK3_3 = Byte.parseByte(s);
} else {
C_NETTALK3_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK4_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK4_1 = Byte.parseByte(s);
} else {
C_NETTALK4_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK4_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK4_2 = Byte.parseByte(s);
} else {
C_NETTALK4_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK4_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK4_3 = Byte.parseByte(s);
} else {
C_NETTALK4_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK5_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK5_1 = Byte.parseByte(s);
} else {
C_NETTALK5_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK5_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK5_2 = Byte.parseByte(s);
} else {
C_NETTALK5_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK5_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK5_3 = Byte.parseByte(s);
} else {
C_NETTALK5_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK6_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK6_1 = Byte.parseByte(s);
} else {
C_NETTALK6_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK6_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK6_2 = Byte.parseByte(s);
} else {
C_NETTALK6_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK6_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK6_3 = Byte.parseByte(s);
} else {
C_NETTALK6_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK7_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK7_1 = Byte.parseByte(s);
} else {
C_NETTALK7_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK7_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK7_2 = Byte.parseByte(s);
} else {
C_NETTALK7_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK7_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK7_3 = Byte.parseByte(s);
} else {
C_NETTALK7_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK8_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK8_1 = Byte.parseByte(s);
} else {
C_NETTALK8_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK8_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK8_2 = Byte.parseByte(s);
} else {
C_NETTALK8_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK8_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK8_3 = Byte.parseByte(s);
} else {
C_NETTALK8_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK96_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK96_1 = Byte.parseByte(s);
} else {
C_NETTALK96_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK96_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK96_2 = Byte.parseByte(s);
} else {
C_NETTALK96_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK96_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK96_3 = Byte.parseByte(s);
} else {
C_NETTALK96_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK97_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK97_1 = Byte.parseByte(s);
} else {
C_NETTALK97_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK97_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK97_2 = Byte.parseByte(s);
} else {
C_NETTALK97_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK97_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK97_3 = Byte.parseByte(s);
} else {
C_NETTALK97_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK9_1(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK9_1 = Byte.parseByte(s);
} else {
C_NETTALK9_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK9_2(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK9_2 = Byte.parseByte(s);
} else {
C_NETTALK9_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETTALK9_3(String s) {
if (!s.trim().isEmpty()) {
C_NETTALK9_3 = Byte.parseByte(s);
} else {
C_NETTALK9_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETUSE(String s) {
if (!s.trim().isEmpty()) {
C_NETUSE = Byte.parseByte(s);
} else {
C_NETUSE = Byte.MIN_VALUE;
}
}

protected final void initC_NETWEB_1(String s) {
if (!s.trim().isEmpty()) {
C_NETWEB_1 = Byte.parseByte(s);
} else {
C_NETWEB_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETWEB_2(String s) {
if (!s.trim().isEmpty()) {
C_NETWEB_2 = Byte.parseByte(s);
} else {
C_NETWEB_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETWEB_3(String s) {
if (!s.trim().isEmpty()) {
C_NETWEB_3 = Byte.parseByte(s);
} else {
C_NETWEB_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NETWR_1(String s) {
if (!s.trim().isEmpty()) {
C_NETWR_1 = Byte.parseByte(s);
} else {
C_NETWR_1 = Byte.MIN_VALUE;
}
}

protected final void initC_NETWR_2(String s) {
if (!s.trim().isEmpty()) {
C_NETWR_2 = Byte.parseByte(s);
} else {
C_NETWR_2 = Byte.MIN_VALUE;
}
}

protected final void initC_NETWR_3(String s) {
if (!s.trim().isEmpty()) {
C_NETWR_3 = Byte.parseByte(s);
} else {
C_NETWR_3 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSMAIN(String s) {
if (!s.trim().isEmpty()) {
C_NEWSMAIN = Byte.parseByte(s);
} else {
C_NEWSMAIN = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE1(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE1 = Byte.parseByte(s);
} else {
C_NEWSOURCE1 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE10(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE10 = Byte.parseByte(s);
} else {
C_NEWSOURCE10 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE11(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE11 = Byte.parseByte(s);
} else {
C_NEWSOURCE11 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE12(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE12 = Byte.parseByte(s);
} else {
C_NEWSOURCE12 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE2(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE2 = Byte.parseByte(s);
} else {
C_NEWSOURCE2 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE3(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE3 = Byte.parseByte(s);
} else {
C_NEWSOURCE3 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE4(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE4 = Byte.parseByte(s);
} else {
C_NEWSOURCE4 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE5(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE5 = Byte.parseByte(s);
} else {
C_NEWSOURCE5 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE6(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE6 = Byte.parseByte(s);
} else {
C_NEWSOURCE6 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE7(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE7 = Byte.parseByte(s);
} else {
C_NEWSOURCE7 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE8(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE8 = Byte.parseByte(s);
} else {
C_NEWSOURCE8 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE9(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE9 = Byte.parseByte(s);
} else {
C_NEWSOURCE9 = Byte.MIN_VALUE;
}
}

protected final void initC_NEWSOURCE96(String s) {
if (!s.trim().isEmpty()) {
C_NEWSOURCE96 = Byte.parseByte(s);
} else {
C_NEWSOURCE96 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT1(String s) {
if (!s.trim().isEmpty()) {
C_NEXT1 = Byte.parseByte(s);
} else {
C_NEXT1 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT2(String s) {
if (!s.trim().isEmpty()) {
C_NEXT2 = Byte.parseByte(s);
} else {
C_NEXT2 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT3(String s) {
if (!s.trim().isEmpty()) {
C_NEXT3 = Byte.parseByte(s);
} else {
C_NEXT3 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT4(String s) {
if (!s.trim().isEmpty()) {
C_NEXT4 = Byte.parseByte(s);
} else {
C_NEXT4 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT5(String s) {
if (!s.trim().isEmpty()) {
C_NEXT5 = Byte.parseByte(s);
} else {
C_NEXT5 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT6(String s) {
if (!s.trim().isEmpty()) {
C_NEXT6 = Byte.parseByte(s);
} else {
C_NEXT6 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT7(String s) {
if (!s.trim().isEmpty()) {
C_NEXT7 = Byte.parseByte(s);
} else {
C_NEXT7 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT8(String s) {
if (!s.trim().isEmpty()) {
C_NEXT8 = Byte.parseByte(s);
} else {
C_NEXT8 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXT9(String s) {
if (!s.trim().isEmpty()) {
C_NEXT9 = Byte.parseByte(s);
} else {
C_NEXT9 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE1(String s) {
if (!s.trim().isEmpty()) {
C_NEXTELSE1 = Byte.parseByte(s);
} else {
C_NEXTELSE1 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE2(String s) {
if (!s.trim().isEmpty()) {
C_NEXTELSE2 = Byte.parseByte(s);
} else {
C_NEXTELSE2 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE3(String s) {
if (!s.trim().isEmpty()) {
C_NEXTELSE3 = Byte.parseByte(s);
} else {
C_NEXTELSE3 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE4(String s) {
if (!s.trim().isEmpty()) {
C_NEXTELSE4 = Byte.parseByte(s);
} else {
C_NEXTELSE4 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE5(String s) {
if (!s.trim().isEmpty()) {
C_NEXTELSE5 = Byte.parseByte(s);
} else {
C_NEXTELSE5 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE6(String s) {
if (!s.trim().isEmpty()) {
C_NEXTELSE6 = Byte.parseByte(s);
} else {
C_NEXTELSE6 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE7(String s) {
if (!s.trim().isEmpty()) {
C_NEXTELSE7 = Byte.parseByte(s);
} else {
C_NEXTELSE7 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE8(String s) {
if (!s.trim().isEmpty()) {
C_NEXTELSE8 = Byte.parseByte(s);
} else {
C_NEXTELSE8 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTELSE9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_NEXTELSE9 = false;
} else {
C_NEXTELSE9 = true;
}
}
}

protected final void initC_NEXTJOB1(String s) {
if (!s.trim().isEmpty()) {
C_NEXTJOB1 = Byte.parseByte(s);
} else {
C_NEXTJOB1 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTJOB2(String s) {
if (!s.trim().isEmpty()) {
C_NEXTJOB2 = Byte.parseByte(s);
} else {
C_NEXTJOB2 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTJOB3(String s) {
if (!s.trim().isEmpty()) {
C_NEXTJOB3 = Byte.parseByte(s);
} else {
C_NEXTJOB3 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTJOB4(String s) {
if (!s.trim().isEmpty()) {
C_NEXTJOB4 = Byte.parseByte(s);
} else {
C_NEXTJOB4 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTJOB5(String s) {
if (!s.trim().isEmpty()) {
C_NEXTJOB5 = Byte.parseByte(s);
} else {
C_NEXTJOB5 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTJOB6(String s) {
if (!s.trim().isEmpty()) {
C_NEXTJOB6 = Byte.parseByte(s);
} else {
C_NEXTJOB6 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTJOB7(String s) {
if (!s.trim().isEmpty()) {
C_NEXTJOB7 = Byte.parseByte(s);
} else {
C_NEXTJOB7 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTJOB8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_NEXTJOB8 = false;
} else {
C_NEXTJOB8 = true;
}
}
}

protected final void initC_NEXTJOB9(String s) {
if (!s.trim().isEmpty()) {
C_NEXTJOB9 = Byte.parseByte(s);
} else {
C_NEXTJOB9 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT1(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT1 = Byte.parseByte(s);
} else {
C_NEXTSTAT1 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT2(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT2 = Byte.parseByte(s);
} else {
C_NEXTSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT3(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT3 = Byte.parseByte(s);
} else {
C_NEXTSTAT3 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT4(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT4 = Byte.parseByte(s);
} else {
C_NEXTSTAT4 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT5(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT5 = Byte.parseByte(s);
} else {
C_NEXTSTAT5 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT6(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT6 = Byte.parseByte(s);
} else {
C_NEXTSTAT6 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT7(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT7 = Byte.parseByte(s);
} else {
C_NEXTSTAT7 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT8(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT8 = Byte.parseByte(s);
} else {
C_NEXTSTAT8 = Byte.MIN_VALUE;
}
}

protected final void initC_NEXTSTAT9(String s) {
if (!s.trim().isEmpty()) {
C_NEXTSTAT9 = Byte.parseByte(s);
} else {
C_NEXTSTAT9 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH01(String s) {
if (!s.trim().isEmpty()) {
C_NFH01 = Byte.parseByte(s);
} else {
C_NFH01 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH02(String s) {
if (!s.trim().isEmpty()) {
C_NFH02 = Byte.parseByte(s);
} else {
C_NFH02 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH03(String s) {
if (!s.trim().isEmpty()) {
C_NFH03 = Byte.parseByte(s);
} else {
C_NFH03 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH04(String s) {
if (!s.trim().isEmpty()) {
C_NFH04 = Byte.parseByte(s);
} else {
C_NFH04 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH05(String s) {
if (!s.trim().isEmpty()) {
C_NFH05 = Byte.parseByte(s);
} else {
C_NFH05 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH06(String s) {
if (!s.trim().isEmpty()) {
C_NFH06 = Byte.parseByte(s);
} else {
C_NFH06 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH07(String s) {
if (!s.trim().isEmpty()) {
C_NFH07 = Byte.parseByte(s);
} else {
C_NFH07 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH08(String s) {
if (!s.trim().isEmpty()) {
C_NFH08 = Byte.parseByte(s);
} else {
C_NFH08 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH09(String s) {
if (!s.trim().isEmpty()) {
C_NFH09 = Byte.parseByte(s);
} else {
C_NFH09 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH10(String s) {
if (!s.trim().isEmpty()) {
C_NFH10 = Byte.parseByte(s);
} else {
C_NFH10 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH11(String s) {
if (!s.trim().isEmpty()) {
C_NFH11 = Byte.parseByte(s);
} else {
C_NFH11 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH12(String s) {
if (!s.trim().isEmpty()) {
C_NFH12 = Byte.parseByte(s);
} else {
C_NFH12 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH13(String s) {
if (!s.trim().isEmpty()) {
C_NFH13 = Byte.parseByte(s);
} else {
C_NFH13 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH14(String s) {
if (!s.trim().isEmpty()) {
C_NFH14 = Byte.parseByte(s);
} else {
C_NFH14 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH15(String s) {
if (!s.trim().isEmpty()) {
C_NFH15 = Byte.parseByte(s);
} else {
C_NFH15 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH16(String s) {
if (!s.trim().isEmpty()) {
C_NFH16 = Byte.parseByte(s);
} else {
C_NFH16 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH17(String s) {
if (!s.trim().isEmpty()) {
C_NFH17 = Byte.parseByte(s);
} else {
C_NFH17 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH18(String s) {
if (!s.trim().isEmpty()) {
C_NFH18 = Byte.parseByte(s);
} else {
C_NFH18 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH19(String s) {
if (!s.trim().isEmpty()) {
C_NFH19 = Byte.parseByte(s);
} else {
C_NFH19 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH20(String s) {
if (!s.trim().isEmpty()) {
C_NFH20 = Byte.parseByte(s);
} else {
C_NFH20 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH21(String s) {
if (!s.trim().isEmpty()) {
C_NFH21 = Byte.parseByte(s);
} else {
C_NFH21 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH22(String s) {
if (!s.trim().isEmpty()) {
C_NFH22 = Byte.parseByte(s);
} else {
C_NFH22 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH23(String s) {
if (!s.trim().isEmpty()) {
C_NFH23 = Byte.parseByte(s);
} else {
C_NFH23 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH24(String s) {
if (!s.trim().isEmpty()) {
C_NFH24 = Byte.parseByte(s);
} else {
C_NFH24 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH25(String s) {
if (!s.trim().isEmpty()) {
C_NFH25 = Byte.parseByte(s);
} else {
C_NFH25 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH26(String s) {
if (!s.trim().isEmpty()) {
C_NFH26 = Byte.parseByte(s);
} else {
C_NFH26 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH27(String s) {
if (!s.trim().isEmpty()) {
C_NFH27 = Byte.parseByte(s);
} else {
C_NFH27 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH28(String s) {
if (!s.trim().isEmpty()) {
C_NFH28 = Byte.parseByte(s);
} else {
C_NFH28 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH29(String s) {
if (!s.trim().isEmpty()) {
C_NFH29 = Byte.parseByte(s);
} else {
C_NFH29 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH30(String s) {
if (!s.trim().isEmpty()) {
C_NFH30 = Byte.parseByte(s);
} else {
C_NFH30 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH31(String s) {
if (!s.trim().isEmpty()) {
C_NFH31 = Byte.parseByte(s);
} else {
C_NFH31 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH32(String s) {
if (!s.trim().isEmpty()) {
C_NFH32 = Byte.parseByte(s);
} else {
C_NFH32 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH33(String s) {
if (!s.trim().isEmpty()) {
C_NFH33 = Byte.parseByte(s);
} else {
C_NFH33 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH34(String s) {
if (!s.trim().isEmpty()) {
C_NFH34 = Byte.parseByte(s);
} else {
C_NFH34 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH35(String s) {
if (!s.trim().isEmpty()) {
C_NFH35 = Byte.parseByte(s);
} else {
C_NFH35 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH36(String s) {
if (!s.trim().isEmpty()) {
C_NFH36 = Byte.parseByte(s);
} else {
C_NFH36 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH37(String s) {
if (!s.trim().isEmpty()) {
C_NFH37 = Byte.parseByte(s);
} else {
C_NFH37 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH38(String s) {
if (!s.trim().isEmpty()) {
C_NFH38 = Byte.parseByte(s);
} else {
C_NFH38 = Byte.MIN_VALUE;
}
}

protected final void initC_NFH39(String s) {
if (!s.trim().isEmpty()) {
C_NFH39 = Byte.parseByte(s);
} else {
C_NFH39 = Byte.MIN_VALUE;
}
}

protected final void initC_NGRP_DV(String s) {
if (!s.trim().isEmpty()) {
C_NGRP_DV = Byte.parseByte(s);
} else {
C_NGRP_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NHIQUAL_DV(String s) {
if (!s.trim().isEmpty()) {
C_NHIQUAL_DV = Byte.parseByte(s);
} else {
C_NHIQUAL_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NIACT(String s) {
if (!s.trim().isEmpty()) {
C_NIACT = Byte.parseByte(s);
} else {
C_NIACT = Byte.MIN_VALUE;
}
}

protected final void initC_NICLBNS1(String s) {
if (!s.trim().isEmpty()) {
C_NICLBNS1 = Byte.parseByte(s);
} else {
C_NICLBNS1 = Byte.MIN_VALUE;
}
}

protected final void initC_NICLBNS2(String s) {
if (!s.trim().isEmpty()) {
C_NICLBNS2 = Byte.parseByte(s);
} else {
C_NICLBNS2 = Byte.MIN_VALUE;
}
}

protected final void initC_NICLBNS3(String s) {
if (!s.trim().isEmpty()) {
C_NICLBNS3 = Byte.parseByte(s);
} else {
C_NICLBNS3 = Byte.MIN_VALUE;
}
}

protected final void initC_NICLBNS4(String s) {
if (!s.trim().isEmpty()) {
C_NICLBNS4 = Byte.parseByte(s);
} else {
C_NICLBNS4 = Byte.MIN_VALUE;
}
}

protected final void initC_NIREL(String s) {
if (!s.trim().isEmpty()) {
C_NIREL = Byte.parseByte(s);
} else {
C_NIREL = Byte.MIN_VALUE;
}
}

protected final void initC_NISERPS(String s) {
if (!s.trim().isEmpty()) {
C_NISERPS = Byte.parseByte(s);
} else {
C_NISERPS = Byte.MIN_VALUE;
}
}

protected final void initC_NMAR(String s) {
if (!s.trim().isEmpty()) {
C_NMAR = Byte.parseByte(s);
} else {
C_NMAR = Byte.MIN_VALUE;
}
}

protected final void initC_NMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
C_NMPSP_DV = Byte.parseByte(s);
} else {
C_NMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NNATCH(String s) {
if (!s.trim().isEmpty()) {
C_NNATCH = Byte.parseByte(s);
} else {
C_NNATCH = Byte.MIN_VALUE;
}
}

protected final void initC_NNEWBORN(String s) {
if (!s.trim().isEmpty()) {
C_NNEWBORN = Byte.parseByte(s);
} else {
C_NNEWBORN = Byte.MIN_VALUE;
}
}

protected final void initC_NNMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
C_NNMPSP_DV = Byte.parseByte(s);
} else {
C_NNMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NNSIB_DV(String s) {
if (!s.trim().isEmpty()) {
C_NNSIB_DV = Byte.parseByte(s);
} else {
C_NNSIB_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NNSSIB_DV(String s) {
if (!s.trim().isEmpty()) {
C_NNSSIB_DV = Byte.parseByte(s);
} else {
C_NNSSIB_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NOTEMPCHK(String s) {
if (!s.trim().isEmpty()) {
C_NOTEMPCHK = Byte.parseByte(s);
} else {
C_NOTEMPCHK = Byte.MIN_VALUE;
}
}

protected final void initC_NPENSIONER_DV(String s) {
if (!s.trim().isEmpty()) {
C_NPENSIONER_DV = Byte.parseByte(s);
} else {
C_NPENSIONER_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NPNS_DV(String s) {
if (!s.trim().isEmpty()) {
C_NPNS_DV = Byte.parseByte(s);
} else {
C_NPNS_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NPN_DV(String s) {
if (!s.trim().isEmpty()) {
C_NPN_DV = Byte.parseByte(s);
} else {
C_NPN_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NQFHIGH_DV(String s) {
if (!s.trim().isEmpty()) {
C_NQFHIGH_DV = Byte.parseByte(s);
} else {
C_NQFHIGH_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NRELS1(String s) {
if (!s.trim().isEmpty()) {
C_NRELS1 = Byte.parseByte(s);
} else {
C_NRELS1 = Byte.MIN_VALUE;
}
}

protected final void initC_NRELS2(String s) {
if (!s.trim().isEmpty()) {
C_NRELS2 = Byte.parseByte(s);
} else {
C_NRELS2 = Byte.MIN_VALUE;
}
}

protected final void initC_NRELS3(String s) {
if (!s.trim().isEmpty()) {
C_NRELS3 = Byte.parseByte(s);
} else {
C_NRELS3 = Byte.MIN_VALUE;
}
}

protected final void initC_NRELS4(String s) {
if (!s.trim().isEmpty()) {
C_NRELS4 = Byte.parseByte(s);
} else {
C_NRELS4 = Byte.MIN_VALUE;
}
}

protected final void initC_NRELS5(String s) {
if (!s.trim().isEmpty()) {
C_NRELS5 = Byte.parseByte(s);
} else {
C_NRELS5 = Byte.MIN_VALUE;
}
}

protected final void initC_NRELS6(String s) {
if (!s.trim().isEmpty()) {
C_NRELS6 = Byte.parseByte(s);
} else {
C_NRELS6 = Byte.MIN_VALUE;
}
}

protected final void initC_NS200PRE(String s) {
if (!s.trim().isEmpty()) {
C_NS200PRE = Byte.parseByte(s);
} else {
C_NS200PRE = Byte.MIN_VALUE;
}
}

protected final void initC_NS201G1(String s) {
if (!s.trim().isEmpty()) {
C_NS201G1 = Byte.parseByte(s);
} else {
C_NS201G1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS202H1(String s) {
if (!s.trim().isEmpty()) {
C_NS202H1 = Byte.parseByte(s);
} else {
C_NS202H1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS203I1(String s) {
if (!s.trim().isEmpty()) {
C_NS203I1 = Byte.parseByte(s);
} else {
C_NS203I1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS204A1(String s) {
if (!s.trim().isEmpty()) {
C_NS204A1 = Byte.parseByte(s);
} else {
C_NS204A1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS205B1(String s) {
if (!s.trim().isEmpty()) {
C_NS205B1 = Byte.parseByte(s);
} else {
C_NS205B1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS206C1(String s) {
if (!s.trim().isEmpty()) {
C_NS206C1 = Byte.parseByte(s);
} else {
C_NS206C1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS207D1(String s) {
if (!s.trim().isEmpty()) {
C_NS207D1 = Byte.parseByte(s);
} else {
C_NS207D1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS208E1(String s) {
if (!s.trim().isEmpty()) {
C_NS208E1 = Byte.parseByte(s);
} else {
C_NS208E1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS209F1(String s) {
if (!s.trim().isEmpty()) {
C_NS209F1 = Byte.parseByte(s);
} else {
C_NS209F1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS210J1(String s) {
if (!s.trim().isEmpty()) {
C_NS210J1 = Byte.parseByte(s);
} else {
C_NS210J1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS211K1(String s) {
if (!s.trim().isEmpty()) {
C_NS211K1 = Byte.parseByte(s);
} else {
C_NS211K1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS212L1(String s) {
if (!s.trim().isEmpty()) {
C_NS212L1 = Byte.parseByte(s);
} else {
C_NS212L1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS213M1(String s) {
if (!s.trim().isEmpty()) {
C_NS213M1 = Byte.parseByte(s);
} else {
C_NS213M1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS214N1(String s) {
if (!s.trim().isEmpty()) {
C_NS214N1 = Byte.parseByte(s);
} else {
C_NS214N1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS215O1(String s) {
if (!s.trim().isEmpty()) {
C_NS215O1 = Byte.parseByte(s);
} else {
C_NS215O1 = Byte.MIN_VALUE;
}
}

protected final void initC_NS216C(String s) {
if (!s.trim().isEmpty()) {
C_NS216C = Byte.parseByte(s);
} else {
C_NS216C = Byte.MIN_VALUE;
}
}

protected final void initC_NS221G2(String s) {
if (!s.trim().isEmpty()) {
C_NS221G2 = Byte.parseByte(s);
} else {
C_NS221G2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS222H2(String s) {
if (!s.trim().isEmpty()) {
C_NS222H2 = Byte.parseByte(s);
} else {
C_NS222H2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS223I2(String s) {
if (!s.trim().isEmpty()) {
C_NS223I2 = Byte.parseByte(s);
} else {
C_NS223I2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS224A2(String s) {
if (!s.trim().isEmpty()) {
C_NS224A2 = Byte.parseByte(s);
} else {
C_NS224A2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS225B2(String s) {
if (!s.trim().isEmpty()) {
C_NS225B2 = Byte.parseByte(s);
} else {
C_NS225B2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS226C(String s) {
if (!s.trim().isEmpty()) {
C_NS226C = Byte.parseByte(s);
} else {
C_NS226C = Byte.MIN_VALUE;
}
}

protected final void initC_NS226C2(String s) {
if (!s.trim().isEmpty()) {
C_NS226C2 = Byte.parseByte(s);
} else {
C_NS226C2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS227D2(String s) {
if (!s.trim().isEmpty()) {
C_NS227D2 = Byte.parseByte(s);
} else {
C_NS227D2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS228E2(String s) {
if (!s.trim().isEmpty()) {
C_NS228E2 = Byte.parseByte(s);
} else {
C_NS228E2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS229F2(String s) {
if (!s.trim().isEmpty()) {
C_NS229F2 = Byte.parseByte(s);
} else {
C_NS229F2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS230J2(String s) {
if (!s.trim().isEmpty()) {
C_NS230J2 = Byte.parseByte(s);
} else {
C_NS230J2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS231K2(String s) {
if (!s.trim().isEmpty()) {
C_NS231K2 = Byte.parseByte(s);
} else {
C_NS231K2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS232L2(String s) {
if (!s.trim().isEmpty()) {
C_NS232L2 = Byte.parseByte(s);
} else {
C_NS232L2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS233M2(String s) {
if (!s.trim().isEmpty()) {
C_NS233M2 = Byte.parseByte(s);
} else {
C_NS233M2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS234N2(String s) {
if (!s.trim().isEmpty()) {
C_NS234N2 = Byte.parseByte(s);
} else {
C_NS234N2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS235O2(String s) {
if (!s.trim().isEmpty()) {
C_NS235O2 = Byte.parseByte(s);
} else {
C_NS235O2 = Byte.MIN_VALUE;
}
}

protected final void initC_NS240(String s) {
if (!s.trim().isEmpty()) {
C_NS240 = Byte.parseByte(s);
} else {
C_NS240 = Byte.MIN_VALUE;
}
}

protected final void initC_NS241(String s) {
if (!s.trim().isEmpty()) {
C_NS241 = Byte.parseByte(s);
} else {
C_NS241 = Byte.MIN_VALUE;
}
}

protected final void initC_NS242(String s) {
if (!s.trim().isEmpty()) {
C_NS242 = Byte.parseByte(s);
} else {
C_NS242 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT11(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT11 = Byte.parseByte(s);
} else {
C_NSCONT11 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT12(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT12 = Byte.parseByte(s);
} else {
C_NSCONT12 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT13(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT13 = Byte.parseByte(s);
} else {
C_NSCONT13 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT21(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT21 = Byte.parseByte(s);
} else {
C_NSCONT21 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT210(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT210 = Byte.parseByte(s);
} else {
C_NSCONT210 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT211(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT211 = Byte.parseByte(s);
} else {
C_NSCONT211 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT212(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT212 = Byte.parseByte(s);
} else {
C_NSCONT212 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT213(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT213 = Byte.parseByte(s);
} else {
C_NSCONT213 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT214(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT214 = Byte.parseByte(s);
} else {
C_NSCONT214 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT215(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT215 = Byte.parseByte(s);
} else {
C_NSCONT215 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT216(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT216 = Byte.parseByte(s);
} else {
C_NSCONT216 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT22(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT22 = Byte.parseByte(s);
} else {
C_NSCONT22 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT23(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT23 = Byte.parseByte(s);
} else {
C_NSCONT23 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT24(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT24 = Byte.parseByte(s);
} else {
C_NSCONT24 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT25(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT25 = Byte.parseByte(s);
} else {
C_NSCONT25 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT26(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT26 = Byte.parseByte(s);
} else {
C_NSCONT26 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT27(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT27 = Byte.parseByte(s);
} else {
C_NSCONT27 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT28(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT28 = Byte.parseByte(s);
} else {
C_NSCONT28 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT29(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT29 = Byte.parseByte(s);
} else {
C_NSCONT29 = Byte.MIN_VALUE;
}
}

protected final void initC_NSCONT3(String s) {
if (!s.trim().isEmpty()) {
C_NSCONT3 = Byte.parseByte(s);
} else {
C_NSCONT3 = Byte.MIN_VALUE;
}
}

protected final void initC_NSRAN(String s) {
if (!s.trim().isEmpty()) {
C_NSRAN = Byte.parseByte(s);
} else {
C_NSRAN = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP1(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP1 = Byte.parseByte(s);
} else {
C_NSSTOP1 = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP2(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP2 = Byte.parseByte(s);
} else {
C_NSSTOP2 = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP3(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP3 = Byte.parseByte(s);
} else {
C_NSSTOP3 = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP4(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP4 = Byte.parseByte(s);
} else {
C_NSSTOP4 = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP5(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP5 = Byte.parseByte(s);
} else {
C_NSSTOP5 = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP6(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP6 = Byte.parseByte(s);
} else {
C_NSSTOP6 = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP7(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP7 = Byte.parseByte(s);
} else {
C_NSSTOP7 = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP8(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP8 = Byte.parseByte(s);
} else {
C_NSSTOP8 = Byte.MIN_VALUE;
}
}

protected final void initC_NSSTOP97(String s) {
if (!s.trim().isEmpty()) {
C_NSSTOP97 = Byte.parseByte(s);
} else {
C_NSSTOP97 = Byte.MIN_VALUE;
}
}

protected final void initC_NUABPRE(String s) {
if (!s.trim().isEmpty()) {
C_NUABPRE = Byte.parseByte(s);
} else {
C_NUABPRE = Byte.MIN_VALUE;
}
}

protected final void initC_NUNMPSP_DV(String s) {
if (!s.trim().isEmpty()) {
C_NUNMPSP_DV = Byte.parseByte(s);
} else {
C_NUNMPSP_DV = Byte.MIN_VALUE;
}
}

protected final void initC_NXTJBENDD(String s) {
if (!s.trim().isEmpty()) {
C_NXTJBENDD = Byte.parseByte(s);
} else {
C_NXTJBENDD = Byte.MIN_VALUE;
}
}

protected final void initC_NXTJBENDM(String s) {
if (!s.trim().isEmpty()) {
C_NXTJBENDM = Byte.parseByte(s);
} else {
C_NXTJBENDM = Byte.MIN_VALUE;
}
}

protected final void initC_NXTJBENDY4(String s) {
if (!s.trim().isEmpty()) {
C_NXTJBENDY4 = Short.parseShort(s);
} else {
C_NXTJBENDY4 = Short.MIN_VALUE;
}
}

protected final void initC_NXTJBES(String s) {
if (!s.trim().isEmpty()) {
C_NXTJBES = Byte.parseByte(s);
} else {
C_NXTJBES = Byte.MIN_VALUE;
}
}

protected final void initC_NXTJBHRS(String s) {
if (!s.trim().isEmpty()) {
C_NXTJBHRS = Byte.parseByte(s);
} else {
C_NXTJBHRS = Byte.MIN_VALUE;
}
}

protected final void initC_NXTST(String s) {
if (!s.trim().isEmpty()) {
C_NXTST = Byte.parseByte(s);
} else {
C_NXTST = Byte.MIN_VALUE;
}
}

protected final void initC_NXTSTELSE(String s) {
if (!s.trim().isEmpty()) {
C_NXTSTELSE = Byte.parseByte(s);
} else {
C_NXTSTELSE = Byte.MIN_VALUE;
}
}

protected final void initC_NXTSTENDD(String s) {
if (!s.trim().isEmpty()) {
C_NXTSTENDD = Byte.parseByte(s);
} else {
C_NXTSTENDD = Byte.MIN_VALUE;
}
}

protected final void initC_NXTSTENDM(String s) {
if (!s.trim().isEmpty()) {
C_NXTSTENDM = Byte.parseByte(s);
} else {
C_NXTSTENDM = Byte.MIN_VALUE;
}
}

protected final void initC_NXTSTENDY4(String s) {
if (!s.trim().isEmpty()) {
C_NXTSTENDY4 = Short.parseShort(s);
} else {
C_NXTSTENDY4 = Short.MIN_VALUE;
}
}

protected final void initC_OCIMPA(String s) {
if (!s.trim().isEmpty()) {
C_OCIMPA = Byte.parseByte(s);
} else {
C_OCIMPA = Byte.MIN_VALUE;
}
}

protected final void initC_OCIMPB(String s) {
if (!s.trim().isEmpty()) {
C_OCIMPB = Byte.parseByte(s);
} else {
C_OCIMPB = Byte.MIN_VALUE;
}
}

protected final void initC_OCIMPE(String s) {
if (!s.trim().isEmpty()) {
C_OCIMPE = Byte.parseByte(s);
} else {
C_OCIMPE = Byte.MIN_VALUE;
}
}

protected final void initC_OCIMPF(String s) {
if (!s.trim().isEmpty()) {
C_OCIMPF = Byte.parseByte(s);
} else {
C_OCIMPF = Byte.MIN_VALUE;
}
}

protected final void initC_OCIMPI(String s) {
if (!s.trim().isEmpty()) {
C_OCIMPI = Byte.parseByte(s);
} else {
C_OCIMPI = Byte.MIN_VALUE;
}
}

protected final void initC_OCIMPK(String s) {
if (!s.trim().isEmpty()) {
C_OCIMPK = Byte.parseByte(s);
} else {
C_OCIMPK = Byte.MIN_VALUE;
}
}

protected final void initC_OCIMPL(String s) {
if (!s.trim().isEmpty()) {
C_OCIMPL = Byte.parseByte(s);
} else {
C_OCIMPL = Byte.MIN_VALUE;
}
}

protected final void initC_OHCH16(String s) {
if (!s.trim().isEmpty()) {
C_OHCH16 = Byte.parseByte(s);
} else {
C_OHCH16 = Byte.MIN_VALUE;
}
}

protected final void initC_OPRLG(String s) {
if (!s.trim().isEmpty()) {
C_OPRLG = Byte.parseByte(s);
} else {
C_OPRLG = Byte.MIN_VALUE;
}
}

protected final void initC_OPRLG0(String s) {
if (!s.trim().isEmpty()) {
C_OPRLG0 = Byte.parseByte(s);
} else {
C_OPRLG0 = Byte.MIN_VALUE;
}
}

protected final void initC_OPRLG0NI(String s) {
if (!s.trim().isEmpty()) {
C_OPRLG0NI = Byte.parseByte(s);
} else {
C_OPRLG0NI = Byte.MIN_VALUE;
}
}

protected final void initC_OPRLG1(String s) {
if (!s.trim().isEmpty()) {
C_OPRLG1 = Byte.parseByte(s);
} else {
C_OPRLG1 = Byte.MIN_VALUE;
}
}

protected final void initC_ORG(String s) {
if (!s.trim().isEmpty()) {
C_ORG = Byte.parseByte(s);
} else {
C_ORG = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA1(String s) {
if (!s.trim().isEmpty()) {
C_ORGA1 = Byte.parseByte(s);
} else {
C_ORGA1 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA10(String s) {
if (!s.trim().isEmpty()) {
C_ORGA10 = Byte.parseByte(s);
} else {
C_ORGA10 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA11(String s) {
if (!s.trim().isEmpty()) {
C_ORGA11 = Byte.parseByte(s);
} else {
C_ORGA11 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA12(String s) {
if (!s.trim().isEmpty()) {
C_ORGA12 = Byte.parseByte(s);
} else {
C_ORGA12 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA13(String s) {
if (!s.trim().isEmpty()) {
C_ORGA13 = Byte.parseByte(s);
} else {
C_ORGA13 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA14(String s) {
if (!s.trim().isEmpty()) {
C_ORGA14 = Byte.parseByte(s);
} else {
C_ORGA14 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA15(String s) {
if (!s.trim().isEmpty()) {
C_ORGA15 = Byte.parseByte(s);
} else {
C_ORGA15 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA16(String s) {
if (!s.trim().isEmpty()) {
C_ORGA16 = Byte.parseByte(s);
} else {
C_ORGA16 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA2(String s) {
if (!s.trim().isEmpty()) {
C_ORGA2 = Byte.parseByte(s);
} else {
C_ORGA2 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA3(String s) {
if (!s.trim().isEmpty()) {
C_ORGA3 = Byte.parseByte(s);
} else {
C_ORGA3 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA4(String s) {
if (!s.trim().isEmpty()) {
C_ORGA4 = Byte.parseByte(s);
} else {
C_ORGA4 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA5(String s) {
if (!s.trim().isEmpty()) {
C_ORGA5 = Byte.parseByte(s);
} else {
C_ORGA5 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA6(String s) {
if (!s.trim().isEmpty()) {
C_ORGA6 = Byte.parseByte(s);
} else {
C_ORGA6 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA7(String s) {
if (!s.trim().isEmpty()) {
C_ORGA7 = Byte.parseByte(s);
} else {
C_ORGA7 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA8(String s) {
if (!s.trim().isEmpty()) {
C_ORGA8 = Byte.parseByte(s);
} else {
C_ORGA8 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA9(String s) {
if (!s.trim().isEmpty()) {
C_ORGA9 = Byte.parseByte(s);
} else {
C_ORGA9 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGA96(String s) {
if (!s.trim().isEmpty()) {
C_ORGA96 = Byte.parseByte(s);
} else {
C_ORGA96 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT1(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT1 = Byte.parseByte(s);
} else {
C_ORGAT1 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT10(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT10 = Byte.parseByte(s);
} else {
C_ORGAT10 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT11(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT11 = Byte.parseByte(s);
} else {
C_ORGAT11 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT12(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT12 = Byte.parseByte(s);
} else {
C_ORGAT12 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT13(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT13 = Byte.parseByte(s);
} else {
C_ORGAT13 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT14(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT14 = Byte.parseByte(s);
} else {
C_ORGAT14 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT15(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT15 = Byte.parseByte(s);
} else {
C_ORGAT15 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT16(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT16 = Byte.parseByte(s);
} else {
C_ORGAT16 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT2(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT2 = Byte.parseByte(s);
} else {
C_ORGAT2 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT3(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT3 = Byte.parseByte(s);
} else {
C_ORGAT3 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT4(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT4 = Byte.parseByte(s);
} else {
C_ORGAT4 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT5(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT5 = Byte.parseByte(s);
} else {
C_ORGAT5 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT6(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT6 = Byte.parseByte(s);
} else {
C_ORGAT6 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT7(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT7 = Byte.parseByte(s);
} else {
C_ORGAT7 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT8(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT8 = Byte.parseByte(s);
} else {
C_ORGAT8 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT9(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT9 = Byte.parseByte(s);
} else {
C_ORGAT9 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGAT96(String s) {
if (!s.trim().isEmpty()) {
C_ORGAT96 = Byte.parseByte(s);
} else {
C_ORGAT96 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM1(String s) {
if (!s.trim().isEmpty()) {
C_ORGM1 = Byte.parseByte(s);
} else {
C_ORGM1 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM10(String s) {
if (!s.trim().isEmpty()) {
C_ORGM10 = Byte.parseByte(s);
} else {
C_ORGM10 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM11(String s) {
if (!s.trim().isEmpty()) {
C_ORGM11 = Byte.parseByte(s);
} else {
C_ORGM11 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM12(String s) {
if (!s.trim().isEmpty()) {
C_ORGM12 = Byte.parseByte(s);
} else {
C_ORGM12 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM13(String s) {
if (!s.trim().isEmpty()) {
C_ORGM13 = Byte.parseByte(s);
} else {
C_ORGM13 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM14(String s) {
if (!s.trim().isEmpty()) {
C_ORGM14 = Byte.parseByte(s);
} else {
C_ORGM14 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM15(String s) {
if (!s.trim().isEmpty()) {
C_ORGM15 = Byte.parseByte(s);
} else {
C_ORGM15 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM16(String s) {
if (!s.trim().isEmpty()) {
C_ORGM16 = Byte.parseByte(s);
} else {
C_ORGM16 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM2(String s) {
if (!s.trim().isEmpty()) {
C_ORGM2 = Byte.parseByte(s);
} else {
C_ORGM2 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM3(String s) {
if (!s.trim().isEmpty()) {
C_ORGM3 = Byte.parseByte(s);
} else {
C_ORGM3 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM4(String s) {
if (!s.trim().isEmpty()) {
C_ORGM4 = Byte.parseByte(s);
} else {
C_ORGM4 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM5(String s) {
if (!s.trim().isEmpty()) {
C_ORGM5 = Byte.parseByte(s);
} else {
C_ORGM5 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM6(String s) {
if (!s.trim().isEmpty()) {
C_ORGM6 = Byte.parseByte(s);
} else {
C_ORGM6 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM7(String s) {
if (!s.trim().isEmpty()) {
C_ORGM7 = Byte.parseByte(s);
} else {
C_ORGM7 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM8(String s) {
if (!s.trim().isEmpty()) {
C_ORGM8 = Byte.parseByte(s);
} else {
C_ORGM8 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM9(String s) {
if (!s.trim().isEmpty()) {
C_ORGM9 = Byte.parseByte(s);
} else {
C_ORGM9 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGM96(String s) {
if (!s.trim().isEmpty()) {
C_ORGM96 = Byte.parseByte(s);
} else {
C_ORGM96 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT1(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT1 = Byte.parseByte(s);
} else {
C_ORGMT1 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT10(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT10 = Byte.parseByte(s);
} else {
C_ORGMT10 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT11(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT11 = Byte.parseByte(s);
} else {
C_ORGMT11 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT12(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT12 = Byte.parseByte(s);
} else {
C_ORGMT12 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT13(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT13 = Byte.parseByte(s);
} else {
C_ORGMT13 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT14(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT14 = Byte.parseByte(s);
} else {
C_ORGMT14 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT15(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT15 = Byte.parseByte(s);
} else {
C_ORGMT15 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT16(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT16 = Byte.parseByte(s);
} else {
C_ORGMT16 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT2(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT2 = Byte.parseByte(s);
} else {
C_ORGMT2 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT3(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT3 = Byte.parseByte(s);
} else {
C_ORGMT3 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT4(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT4 = Byte.parseByte(s);
} else {
C_ORGMT4 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT5(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT5 = Byte.parseByte(s);
} else {
C_ORGMT5 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT6(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT6 = Byte.parseByte(s);
} else {
C_ORGMT6 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT7(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT7 = Byte.parseByte(s);
} else {
C_ORGMT7 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT8(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT8 = Byte.parseByte(s);
} else {
C_ORGMT8 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT9(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT9 = Byte.parseByte(s);
} else {
C_ORGMT9 = Byte.MIN_VALUE;
}
}

protected final void initC_ORGMT96(String s) {
if (!s.trim().isEmpty()) {
C_ORGMT96 = Byte.parseByte(s);
} else {
C_ORGMT96 = Byte.MIN_VALUE;
}
}

protected final void initC_ORIGADD(String s) {
if (!s.trim().isEmpty()) {
C_ORIGADD = Byte.parseByte(s);
} else {
C_ORIGADD = Byte.MIN_VALUE;
}
}

protected final void initC_OVTNSA(String s) {
if (!s.trim().isEmpty()) {
C_OVTNSA = Byte.parseByte(s);
} else {
C_OVTNSA = Byte.MIN_VALUE;
}
}

protected final void initC_OVTPAY(String s) {
if (!s.trim().isEmpty()) {
C_OVTPAY = Byte.parseByte(s);
} else {
C_OVTPAY = Byte.MIN_VALUE;
}
}

protected final void initC_OVTRATE(String s) {
if (!s.trim().isEmpty()) {
C_OVTRATE = Double.parseDouble(s);
} else {
C_OVTRATE = Double.NaN;
}
}

protected final void initC_OVTREST(String s) {
if (!s.trim().isEmpty()) {
C_OVTREST = Byte.parseByte(s);
} else {
C_OVTREST = Byte.MIN_VALUE;
}
}

protected final void initC_PAAGE(String s) {
if (!s.trim().isEmpty()) {
C_PAAGE = Byte.parseByte(s);
} else {
C_PAAGE = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID1(String s) {
if (!s.trim().isEmpty()) {
C_PAAID1 = Byte.parseByte(s);
} else {
C_PAAID1 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID2(String s) {
if (!s.trim().isEmpty()) {
C_PAAID2 = Byte.parseByte(s);
} else {
C_PAAID2 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID3(String s) {
if (!s.trim().isEmpty()) {
C_PAAID3 = Byte.parseByte(s);
} else {
C_PAAID3 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID4(String s) {
if (!s.trim().isEmpty()) {
C_PAAID4 = Byte.parseByte(s);
} else {
C_PAAID4 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID5(String s) {
if (!s.trim().isEmpty()) {
C_PAAID5 = Byte.parseByte(s);
} else {
C_PAAID5 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID6(String s) {
if (!s.trim().isEmpty()) {
C_PAAID6 = Byte.parseByte(s);
} else {
C_PAAID6 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID7(String s) {
if (!s.trim().isEmpty()) {
C_PAAID7 = Byte.parseByte(s);
} else {
C_PAAID7 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID8(String s) {
if (!s.trim().isEmpty()) {
C_PAAID8 = Byte.parseByte(s);
} else {
C_PAAID8 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID96(String s) {
if (!s.trim().isEmpty()) {
C_PAAID96 = Byte.parseByte(s);
} else {
C_PAAID96 = Byte.MIN_VALUE;
}
}

protected final void initC_PAAID97(String s) {
if (!s.trim().isEmpty()) {
C_PAAID97 = Byte.parseByte(s);
} else {
C_PAAID97 = Byte.MIN_VALUE;
}
}

protected final void initC_PACOB(String s) {
if (!s.trim().isEmpty()) {
C_PACOB = Byte.parseByte(s);
} else {
C_PACOB = Byte.MIN_VALUE;
}
}

protected final void initC_PACON(String s) {
if (!s.trim().isEmpty()) {
C_PACON = Byte.parseByte(s);
} else {
C_PACON = Byte.MIN_VALUE;
}
}

protected final void initC_PAFAR(String s) {
if (!s.trim().isEmpty()) {
C_PAFAR = Byte.parseByte(s);
} else {
C_PAFAR = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU1(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU1 = Byte.parseByte(s);
} else {
C_PAIDU1 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU2(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU2 = Byte.parseByte(s);
} else {
C_PAIDU2 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU3(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU3 = Byte.parseByte(s);
} else {
C_PAIDU3 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU4(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU4 = Byte.parseByte(s);
} else {
C_PAIDU4 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU5(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU5 = Byte.parseByte(s);
} else {
C_PAIDU5 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU6(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU6 = Byte.parseByte(s);
} else {
C_PAIDU6 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU7(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU7 = Byte.parseByte(s);
} else {
C_PAIDU7 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU8(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU8 = Byte.parseByte(s);
} else {
C_PAIDU8 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU96(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU96 = Byte.parseByte(s);
} else {
C_PAIDU96 = Byte.MIN_VALUE;
}
}

protected final void initC_PAIDU97(String s) {
if (!s.trim().isEmpty()) {
C_PAIDU97 = Byte.parseByte(s);
} else {
C_PAIDU97 = Byte.MIN_VALUE;
}
}

protected final void initC_PAJU(String s) {
if (!s.trim().isEmpty()) {
C_PAJU = Byte.parseByte(s);
} else {
C_PAJU = Byte.MIN_VALUE;
}
}

protected final void initC_PALONE(String s) {
if (!s.trim().isEmpty()) {
C_PALONE = Byte.parseByte(s);
} else {
C_PALONE = Byte.MIN_VALUE;
}
}

protected final void initC_PAMOSTCON(String s) {
if (!s.trim().isEmpty()) {
C_PAMOSTCON = Byte.parseByte(s);
} else {
C_PAMOSTCON = Byte.MIN_VALUE;
}
}

protected final void initC_PANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
C_PANSSEC5_DV = Byte.parseByte(s);
} else {
C_PANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initC_PAPERM2(String s) {
if (!s.trim().isEmpty()) {
C_PAPERM2 = Byte.parseByte(s);
} else {
C_PAPERM2 = Byte.MIN_VALUE;
}
}

protected final void initC_PARCHILD(String s) {
if (!s.trim().isEmpty()) {
C_PARCHILD = Byte.parseByte(s);
} else {
C_PARCHILD = Byte.MIN_VALUE;
}
}

protected final void initC_PAREVE(String s) {
if (!s.trim().isEmpty()) {
C_PAREVE = Byte.parseByte(s);
} else {
C_PAREVE = Byte.MIN_VALUE;
}
}

protected final void initC_PARMAR(String s) {
if (!s.trim().isEmpty()) {
C_PARMAR = Byte.parseByte(s);
} else {
C_PARMAR = Byte.MIN_VALUE;
}
}

protected final void initC_PARSCH(String s) {
if (!s.trim().isEmpty()) {
C_PARSCH = Byte.parseByte(s);
} else {
C_PARSCH = Byte.MIN_VALUE;
}
}

protected final void initC_PASEE(String s) {
if (!s.trim().isEmpty()) {
C_PASEE = Byte.parseByte(s);
} else {
C_PASEE = Byte.MIN_VALUE;
}
}

protected final void initC_PASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
C_PASOC00_CC = Short.parseShort(s);
} else {
C_PASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initC_PASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
C_PASOC10_CC = Short.parseShort(s);
} else {
C_PASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initC_PASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
C_PASOC90_CC = Byte.parseByte(s);
} else {
C_PASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initC_PAYGL(String s) {
if (!s.trim().isEmpty()) {
C_PAYGL = Integer.parseInt(s);
} else {
C_PAYGL = Integer.MIN_VALUE;
}
}

protected final void initC_PAYGU_DV(String s) {
if (!s.trim().isEmpty()) {
C_PAYGU_DV = Double.parseDouble(s);
} else {
C_PAYGU_DV = Double.NaN;
}
}

protected final void initC_PAYGU_IF(String s) {
if (!s.trim().isEmpty()) {
C_PAYGU_IF = Byte.parseByte(s);
} else {
C_PAYGU_IF = Byte.MIN_VALUE;
}
}

protected final void initC_PAYGWC(String s) {
if (!s.trim().isEmpty()) {
C_PAYGWC = Byte.parseByte(s);
} else {
C_PAYGWC = Byte.MIN_VALUE;
}
}

protected final void initC_PAYG_DV(String s) {
if (!s.trim().isEmpty()) {
C_PAYG_DV = Double.parseDouble(s);
} else {
C_PAYG_DV = Double.NaN;
}
}

protected final void initC_PAYNL(String s) {
if (!s.trim().isEmpty()) {
C_PAYNL = Integer.parseInt(s);
} else {
C_PAYNL = Integer.MIN_VALUE;
}
}

protected final void initC_PAYNU_DV(String s) {
if (!s.trim().isEmpty()) {
C_PAYNU_DV = Double.parseDouble(s);
} else {
C_PAYNU_DV = Double.NaN;
}
}

protected final void initC_PAYNU_IF(String s) {
if (!s.trim().isEmpty()) {
C_PAYNU_IF = Byte.parseByte(s);
} else {
C_PAYNU_IF = Byte.MIN_VALUE;
}
}

protected final void initC_PAYNWC(String s) {
if (!s.trim().isEmpty()) {
C_PAYNWC = Byte.parseByte(s);
} else {
C_PAYNWC = Byte.MIN_VALUE;
}
}

protected final void initC_PAYN_DV(String s) {
if (!s.trim().isEmpty()) {
C_PAYN_DV = Double.parseDouble(s);
} else {
C_PAYN_DV = Double.NaN;
}
}

protected final void initC_PAYRUK(String s) {
if (!s.trim().isEmpty()) {
C_PAYRUK = Byte.parseByte(s);
} else {
C_PAYRUK = Byte.MIN_VALUE;
}
}

protected final void initC_PAYTYP(String s) {
if (!s.trim().isEmpty()) {
C_PAYTYP = Byte.parseByte(s);
} else {
C_PAYTYP = Byte.MIN_VALUE;
}
}

protected final void initC_PAYU(String s) {
if (!s.trim().isEmpty()) {
C_PAYU = Integer.parseInt(s);
} else {
C_PAYU = Integer.MIN_VALUE;
}
}

protected final void initC_PAYUG(String s) {
if (!s.trim().isEmpty()) {
C_PAYUG = Byte.parseByte(s);
} else {
C_PAYUG = Byte.MIN_VALUE;
}
}

protected final void initC_PAYUSL(String s) {
if (!s.trim().isEmpty()) {
C_PAYUSL = Byte.parseByte(s);
} else {
C_PAYUSL = Byte.MIN_VALUE;
}
}

protected final void initC_PAYUWC(String s) {
if (!s.trim().isEmpty()) {
C_PAYUWC = Byte.parseByte(s);
} else {
C_PAYUWC = Byte.MIN_VALUE;
}
}

protected final void initC_PAYU_DV(String s) {
if (!s.trim().isEmpty()) {
C_PAYU_DV = Double.parseDouble(s);
} else {
C_PAYU_DV = Double.NaN;
}
}

protected final void initC_PBNFT1(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT1 = Byte.parseByte(s);
} else {
C_PBNFT1 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT10(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT10 = Byte.parseByte(s);
} else {
C_PBNFT10 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT11(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT11 = Byte.parseByte(s);
} else {
C_PBNFT11 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT12(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT12 = Byte.parseByte(s);
} else {
C_PBNFT12 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT2(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT2 = Byte.parseByte(s);
} else {
C_PBNFT2 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT3(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT3 = Byte.parseByte(s);
} else {
C_PBNFT3 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT4(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT4 = Byte.parseByte(s);
} else {
C_PBNFT4 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT5(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT5 = Byte.parseByte(s);
} else {
C_PBNFT5 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT6(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT6 = Byte.parseByte(s);
} else {
C_PBNFT6 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT7(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT7 = Byte.parseByte(s);
} else {
C_PBNFT7 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT8(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT8 = Byte.parseByte(s);
} else {
C_PBNFT8 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT9(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT9 = Byte.parseByte(s);
} else {
C_PBNFT9 = Byte.MIN_VALUE;
}
}

protected final void initC_PBNFT96(String s) {
if (!s.trim().isEmpty()) {
C_PBNFT96 = Byte.parseByte(s);
} else {
C_PBNFT96 = Byte.MIN_VALUE;
}
}

protected final void initC_PENMEX(String s) {
if (!s.trim().isEmpty()) {
C_PENMEX = Byte.parseByte(s);
} else {
C_PENMEX = Byte.MIN_VALUE;
}
}

protected final void initC_PENSIONER_DV(String s) {
if (!s.trim().isEmpty()) {
C_PENSIONER_DV = Byte.parseByte(s);
} else {
C_PENSIONER_DV = Byte.MIN_VALUE;
}
}

protected final void initC_PERBFTS(String s) {
if (!s.trim().isEmpty()) {
C_PERBFTS = Byte.parseByte(s);
} else {
C_PERBFTS = Byte.MIN_VALUE;
}
}

protected final void initC_PERPOLINF(String s) {
if (!s.trim().isEmpty()) {
C_PERPOLINF = Byte.parseByte(s);
} else {
C_PERPOLINF = Byte.MIN_VALUE;
}
}

protected final void initC_PJBPTFT(String s) {
if (!s.trim().isEmpty()) {
C_PJBPTFT = Byte.parseByte(s);
} else {
C_PJBPTFT = Byte.MIN_VALUE;
}
}

protected final void initC_PJSPTFT(String s) {
if (!s.trim().isEmpty()) {
C_PJSPTFT = Byte.parseByte(s);
} else {
C_PJSPTFT = Byte.MIN_VALUE;
}
}

protected final void initC_PJULK4WK(String s) {
if (!s.trim().isEmpty()) {
C_PJULK4WK = Byte.parseByte(s);
} else {
C_PJULK4WK = Byte.MIN_VALUE;
}
}

protected final void initC_PLBORNC(String s) {
if (!s.trim().isEmpty()) {
C_PLBORNC = Byte.parseByte(s);
} else {
C_PLBORNC = Byte.MIN_VALUE;
}
}

protected final void initC_PLIVPAR(String s) {
if (!s.trim().isEmpty()) {
C_PLIVPAR = Byte.parseByte(s);
} else {
C_PLIVPAR = Byte.MIN_VALUE;
}
}

protected final void initC_PLNOWM(String s) {
if (!s.trim().isEmpty()) {
C_PLNOWM = Byte.parseByte(s);
} else {
C_PLNOWM = Byte.MIN_VALUE;
}
}

protected final void initC_PLNOWY4(String s) {
if (!s.trim().isEmpty()) {
C_PLNOWY4 = Short.parseShort(s);
} else {
C_PLNOWY4 = Short.MIN_VALUE;
}
}

protected final void initC_PN1PID(String s) {
if (!s.trim().isEmpty()) {
C_PN1PID = Integer.parseInt(s);
} else {
C_PN1PID = Integer.MIN_VALUE;
}
}

protected final void initC_PN1PNO(String s) {
if (!s.trim().isEmpty()) {
C_PN1PNO = Byte.parseByte(s);
} else {
C_PN1PNO = Byte.MIN_VALUE;
}
}

protected final void initC_PN1SEX(String s) {
if (!s.trim().isEmpty()) {
C_PN1SEX = Byte.parseByte(s);
} else {
C_PN1SEX = Byte.MIN_VALUE;
}
}

protected final void initC_PN2PID(String s) {
if (!s.trim().isEmpty()) {
C_PN2PID = Integer.parseInt(s);
} else {
C_PN2PID = Integer.MIN_VALUE;
}
}

protected final void initC_PN2PNO(String s) {
if (!s.trim().isEmpty()) {
C_PN2PNO = Byte.parseByte(s);
} else {
C_PN2PNO = Byte.MIN_VALUE;
}
}

protected final void initC_PN2SEX(String s) {
if (!s.trim().isEmpty()) {
C_PN2SEX = Byte.parseByte(s);
} else {
C_PN2SEX = Byte.MIN_VALUE;
}
}

protected final void initC_PNO(String s) {
if (!s.trim().isEmpty()) {
C_PNO = Byte.parseByte(s);
} else {
C_PNO = Byte.MIN_VALUE;
}
}

protected final void initC_PNS1PID(String s) {
if (!s.trim().isEmpty()) {
C_PNS1PID = Integer.parseInt(s);
} else {
C_PNS1PID = Integer.MIN_VALUE;
}
}

protected final void initC_PNS1PNO(String s) {
if (!s.trim().isEmpty()) {
C_PNS1PNO = Byte.parseByte(s);
} else {
C_PNS1PNO = Byte.MIN_VALUE;
}
}

protected final void initC_PNS1SEX(String s) {
if (!s.trim().isEmpty()) {
C_PNS1SEX = Byte.parseByte(s);
} else {
C_PNS1SEX = Byte.MIN_VALUE;
}
}

protected final void initC_PNS2PID(String s) {
if (!s.trim().isEmpty()) {
C_PNS2PID = Integer.parseInt(s);
} else {
C_PNS2PID = Integer.MIN_VALUE;
}
}

protected final void initC_PNS2PNO(String s) {
if (!s.trim().isEmpty()) {
C_PNS2PNO = Byte.parseByte(s);
} else {
C_PNS2PNO = Byte.MIN_VALUE;
}
}

protected final void initC_PNS2SEX(String s) {
if (!s.trim().isEmpty()) {
C_PNS2SEX = Byte.parseByte(s);
} else {
C_PNS2SEX = Byte.MIN_VALUE;
}
}

protected final void initC_POLCOST(String s) {
if (!s.trim().isEmpty()) {
C_POLCOST = Byte.parseByte(s);
} else {
C_POLCOST = Byte.MIN_VALUE;
}
}

protected final void initC_POLEFF1(String s) {
if (!s.trim().isEmpty()) {
C_POLEFF1 = Byte.parseByte(s);
} else {
C_POLEFF1 = Byte.MIN_VALUE;
}
}

protected final void initC_POLEFF2(String s) {
if (!s.trim().isEmpty()) {
C_POLEFF2 = Byte.parseByte(s);
} else {
C_POLEFF2 = Byte.MIN_VALUE;
}
}

protected final void initC_POLEFF3(String s) {
if (!s.trim().isEmpty()) {
C_POLEFF3 = Byte.parseByte(s);
} else {
C_POLEFF3 = Byte.MIN_VALUE;
}
}

protected final void initC_POLEFF4(String s) {
if (!s.trim().isEmpty()) {
C_POLEFF4 = Byte.parseByte(s);
} else {
C_POLEFF4 = Byte.MIN_VALUE;
}
}

protected final void initC_PPID(String s) {
if (!s.trim().isEmpty()) {
C_PPID = Integer.parseInt(s);
} else {
C_PPID = Integer.MIN_VALUE;
}
}

protected final void initC_PPNO(String s) {
if (!s.trim().isEmpty()) {
C_PPNO = Byte.parseByte(s);
} else {
C_PPNO = Byte.MIN_VALUE;
}
}

protected final void initC_PPPEX(String s) {
if (!s.trim().isEmpty()) {
C_PPPEX = Byte.parseByte(s);
} else {
C_PPPEX = Byte.MIN_VALUE;
}
}

protected final void initC_PPPEXM(String s) {
if (!s.trim().isEmpty()) {
C_PPPEXM = Byte.parseByte(s);
} else {
C_PPPEXM = Byte.MIN_VALUE;
}
}

protected final void initC_PPSEX(String s) {
if (!s.trim().isEmpty()) {
C_PPSEX = Byte.parseByte(s);
} else {
C_PPSEX = Byte.MIN_VALUE;
}
}

protected final void initC_PRAISEKID(String s) {
if (!s.trim().isEmpty()) {
C_PRAISEKID = Byte.parseByte(s);
} else {
C_PRAISEKID = Byte.MIN_VALUE;
}
}

protected final void initC_PREARN(String s) {
if (!s.trim().isEmpty()) {
C_PREARN = Byte.parseByte(s);
} else {
C_PREARN = Byte.MIN_VALUE;
}
}

protected final void initC_PREARNA(String s) {
if (!s.trim().isEmpty()) {
C_PREARNA = Byte.parseByte(s);
} else {
C_PREARNA = Byte.MIN_VALUE;
}
}

protected final void initC_PREARNW(String s) {
if (!s.trim().isEmpty()) {
C_PREARNW = Byte.parseByte(s);
} else {
C_PREARNW = Byte.MIN_VALUE;
}
}

protected final void initC_PREASON(String s) {
if (!s.trim().isEmpty()) {
C_PREASON = Byte.parseByte(s);
} else {
C_PREASON = Byte.MIN_VALUE;
}
}

protected final void initC_PRECOG(String s) {
if (!s.trim().isEmpty()) {
C_PRECOG = Byte.parseByte(s);
} else {
C_PRECOG = Byte.MIN_VALUE;
}
}

protected final void initC_PREG(String s) {
if (!s.trim().isEmpty()) {
C_PREG = Byte.parseByte(s);
} else {
C_PREG = Byte.MIN_VALUE;
}
}

protected final void initC_PREGEND1(String s) {
if (!s.trim().isEmpty()) {
C_PREGEND1 = Byte.parseByte(s);
} else {
C_PREGEND1 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGEND2(String s) {
if (!s.trim().isEmpty()) {
C_PREGEND2 = Byte.parseByte(s);
} else {
C_PREGEND2 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGEND3(String s) {
if (!s.trim().isEmpty()) {
C_PREGEND3 = Byte.parseByte(s);
} else {
C_PREGEND3 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGFERT1(String s) {
if (!s.trim().isEmpty()) {
C_PREGFERT1 = Byte.parseByte(s);
} else {
C_PREGFERT1 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGFERT2(String s) {
if (!s.trim().isEmpty()) {
C_PREGFERT2 = Byte.parseByte(s);
} else {
C_PREGFERT2 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGFERT3(String s) {
if (!s.trim().isEmpty()) {
C_PREGFERT3 = Byte.parseByte(s);
} else {
C_PREGFERT3 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGM1(String s) {
if (!s.trim().isEmpty()) {
C_PREGM1 = Byte.parseByte(s);
} else {
C_PREGM1 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGM2(String s) {
if (!s.trim().isEmpty()) {
C_PREGM2 = Byte.parseByte(s);
} else {
C_PREGM2 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGM3(String s) {
if (!s.trim().isEmpty()) {
C_PREGM3 = Byte.parseByte(s);
} else {
C_PREGM3 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGOUT1(String s) {
if (!s.trim().isEmpty()) {
C_PREGOUT1 = Byte.parseByte(s);
} else {
C_PREGOUT1 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGOUT2(String s) {
if (!s.trim().isEmpty()) {
C_PREGOUT2 = Byte.parseByte(s);
} else {
C_PREGOUT2 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGOUT3(String s) {
if (!s.trim().isEmpty()) {
C_PREGOUT3 = Byte.parseByte(s);
} else {
C_PREGOUT3 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGSMK11(String s) {
if (!s.trim().isEmpty()) {
C_PREGSMK11 = Byte.parseByte(s);
} else {
C_PREGSMK11 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGSMK12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_PREGSMK12 = false;
} else {
C_PREGSMK12 = true;
}
}
}

protected final void initC_PREGSMK13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_PREGSMK13 = false;
} else {
C_PREGSMK13 = true;
}
}
}

protected final void initC_PREGSMK21(String s) {
if (!s.trim().isEmpty()) {
C_PREGSMK21 = Byte.parseByte(s);
} else {
C_PREGSMK21 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGSMK22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_PREGSMK22 = false;
} else {
C_PREGSMK22 = true;
}
}
}

protected final void initC_PREGSMK23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_PREGSMK23 = false;
} else {
C_PREGSMK23 = true;
}
}
}

protected final void initC_PREGSMK31(String s) {
if (!s.trim().isEmpty()) {
C_PREGSMK31 = Byte.parseByte(s);
} else {
C_PREGSMK31 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGSMK32(String s) {
if (!s.trim().isEmpty()) {
C_PREGSMK32 = Byte.parseByte(s);
} else {
C_PREGSMK32 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGSMK33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_PREGSMK33 = false;
} else {
C_PREGSMK33 = true;
}
}
}

protected final void initC_PREGSMOKE1(String s) {
if (!s.trim().isEmpty()) {
C_PREGSMOKE1 = Byte.parseByte(s);
} else {
C_PREGSMOKE1 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGSMOKE2(String s) {
if (!s.trim().isEmpty()) {
C_PREGSMOKE2 = Byte.parseByte(s);
} else {
C_PREGSMOKE2 = Byte.MIN_VALUE;
}
}

protected final void initC_PREGSMOKE3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_PREGSMOKE3 = false;
} else {
C_PREGSMOKE3 = true;
}
}
}

protected final void initC_PREGY41(String s) {
if (!s.trim().isEmpty()) {
C_PREGY41 = Short.parseShort(s);
} else {
C_PREGY41 = Short.MIN_VALUE;
}
}

protected final void initC_PREGY42(String s) {
if (!s.trim().isEmpty()) {
C_PREGY42 = Short.parseShort(s);
} else {
C_PREGY42 = Short.MIN_VALUE;
}
}

protected final void initC_PREGY43(String s) {
if (!s.trim().isEmpty()) {
C_PREGY43 = Short.parseShort(s);
} else {
C_PREGY43 = Short.MIN_VALUE;
}
}

protected final void initC_PREL(String s) {
if (!s.trim().isEmpty()) {
C_PREL = Byte.parseByte(s);
} else {
C_PREL = Byte.MIN_VALUE;
}
}

protected final void initC_PRFITB(String s) {
if (!s.trim().isEmpty()) {
C_PRFITB = Byte.parseByte(s);
} else {
C_PRFITB = Byte.MIN_VALUE;
}
}

protected final void initC_PRFITBA(String s) {
if (!s.trim().isEmpty()) {
C_PRFITBA = Byte.parseByte(s);
} else {
C_PRFITBA = Byte.MIN_VALUE;
}
}

protected final void initC_PRFITBW(String s) {
if (!s.trim().isEmpty()) {
C_PRFITBW = Byte.parseByte(s);
} else {
C_PRFITBW = Byte.MIN_VALUE;
}
}

protected final void initC_PRIPN(String s) {
if (!s.trim().isEmpty()) {
C_PRIPN = Byte.parseByte(s);
} else {
C_PRIPN = Byte.MIN_VALUE;
}
}

protected final void initC_PROMODENY(String s) {
if (!s.trim().isEmpty()) {
C_PROMODENY = Byte.parseByte(s);
} else {
C_PROMODENY = Byte.MIN_VALUE;
}
}

protected final void initC_PS1(String s) {
if (!s.trim().isEmpty()) {
C_PS1 = Byte.parseByte(s);
} else {
C_PS1 = Byte.MIN_VALUE;
}
}

protected final void initC_PS10(String s) {
if (!s.trim().isEmpty()) {
C_PS10 = Byte.parseByte(s);
} else {
C_PS10 = Byte.MIN_VALUE;
}
}

protected final void initC_PS11(String s) {
if (!s.trim().isEmpty()) {
C_PS11 = Byte.parseByte(s);
} else {
C_PS11 = Byte.MIN_VALUE;
}
}

protected final void initC_PS12(String s) {
if (!s.trim().isEmpty()) {
C_PS12 = Byte.parseByte(s);
} else {
C_PS12 = Byte.MIN_VALUE;
}
}

protected final void initC_PS13(String s) {
if (!s.trim().isEmpty()) {
C_PS13 = Byte.parseByte(s);
} else {
C_PS13 = Byte.MIN_VALUE;
}
}

protected final void initC_PS14(String s) {
if (!s.trim().isEmpty()) {
C_PS14 = Byte.parseByte(s);
} else {
C_PS14 = Byte.MIN_VALUE;
}
}

protected final void initC_PS15(String s) {
if (!s.trim().isEmpty()) {
C_PS15 = Byte.parseByte(s);
} else {
C_PS15 = Byte.MIN_VALUE;
}
}

protected final void initC_PS16(String s) {
if (!s.trim().isEmpty()) {
C_PS16 = Byte.parseByte(s);
} else {
C_PS16 = Byte.MIN_VALUE;
}
}

protected final void initC_PS17(String s) {
if (!s.trim().isEmpty()) {
C_PS17 = Byte.parseByte(s);
} else {
C_PS17 = Byte.MIN_VALUE;
}
}

protected final void initC_PS18(String s) {
if (!s.trim().isEmpty()) {
C_PS18 = Byte.parseByte(s);
} else {
C_PS18 = Byte.MIN_VALUE;
}
}

protected final void initC_PS19(String s) {
if (!s.trim().isEmpty()) {
C_PS19 = Byte.parseByte(s);
} else {
C_PS19 = Byte.MIN_VALUE;
}
}

protected final void initC_PS2(String s) {
if (!s.trim().isEmpty()) {
C_PS2 = Byte.parseByte(s);
} else {
C_PS2 = Byte.MIN_VALUE;
}
}

protected final void initC_PS20(String s) {
if (!s.trim().isEmpty()) {
C_PS20 = Byte.parseByte(s);
} else {
C_PS20 = Byte.MIN_VALUE;
}
}

protected final void initC_PS21(String s) {
if (!s.trim().isEmpty()) {
C_PS21 = Byte.parseByte(s);
} else {
C_PS21 = Byte.MIN_VALUE;
}
}

protected final void initC_PS22(String s) {
if (!s.trim().isEmpty()) {
C_PS22 = Byte.parseByte(s);
} else {
C_PS22 = Byte.MIN_VALUE;
}
}

protected final void initC_PS23(String s) {
if (!s.trim().isEmpty()) {
C_PS23 = Byte.parseByte(s);
} else {
C_PS23 = Byte.MIN_VALUE;
}
}

protected final void initC_PS24(String s) {
if (!s.trim().isEmpty()) {
C_PS24 = Byte.parseByte(s);
} else {
C_PS24 = Byte.MIN_VALUE;
}
}

protected final void initC_PS25(String s) {
if (!s.trim().isEmpty()) {
C_PS25 = Byte.parseByte(s);
} else {
C_PS25 = Byte.MIN_VALUE;
}
}

protected final void initC_PS26(String s) {
if (!s.trim().isEmpty()) {
C_PS26 = Byte.parseByte(s);
} else {
C_PS26 = Byte.MIN_VALUE;
}
}

protected final void initC_PS27(String s) {
if (!s.trim().isEmpty()) {
C_PS27 = Byte.parseByte(s);
} else {
C_PS27 = Byte.MIN_VALUE;
}
}

protected final void initC_PS28(String s) {
if (!s.trim().isEmpty()) {
C_PS28 = Byte.parseByte(s);
} else {
C_PS28 = Byte.MIN_VALUE;
}
}

protected final void initC_PS29(String s) {
if (!s.trim().isEmpty()) {
C_PS29 = Byte.parseByte(s);
} else {
C_PS29 = Byte.MIN_VALUE;
}
}

protected final void initC_PS3(String s) {
if (!s.trim().isEmpty()) {
C_PS3 = Byte.parseByte(s);
} else {
C_PS3 = Byte.MIN_VALUE;
}
}

protected final void initC_PS30(String s) {
if (!s.trim().isEmpty()) {
C_PS30 = Byte.parseByte(s);
} else {
C_PS30 = Byte.MIN_VALUE;
}
}

protected final void initC_PS31(String s) {
if (!s.trim().isEmpty()) {
C_PS31 = Byte.parseByte(s);
} else {
C_PS31 = Byte.MIN_VALUE;
}
}

protected final void initC_PS32(String s) {
if (!s.trim().isEmpty()) {
C_PS32 = Byte.parseByte(s);
} else {
C_PS32 = Byte.MIN_VALUE;
}
}

protected final void initC_PS4(String s) {
if (!s.trim().isEmpty()) {
C_PS4 = Byte.parseByte(s);
} else {
C_PS4 = Byte.MIN_VALUE;
}
}

protected final void initC_PS5(String s) {
if (!s.trim().isEmpty()) {
C_PS5 = Byte.parseByte(s);
} else {
C_PS5 = Byte.MIN_VALUE;
}
}

protected final void initC_PS6(String s) {
if (!s.trim().isEmpty()) {
C_PS6 = Byte.parseByte(s);
} else {
C_PS6 = Byte.MIN_VALUE;
}
}

protected final void initC_PS7(String s) {
if (!s.trim().isEmpty()) {
C_PS7 = Byte.parseByte(s);
} else {
C_PS7 = Byte.MIN_VALUE;
}
}

protected final void initC_PS8(String s) {
if (!s.trim().isEmpty()) {
C_PS8 = Byte.parseByte(s);
} else {
C_PS8 = Byte.MIN_VALUE;
}
}

protected final void initC_PS9(String s) {
if (!s.trim().isEmpty()) {
C_PS9 = Byte.parseByte(s);
} else {
C_PS9 = Byte.MIN_VALUE;
}
}

protected final void initC_PSDQA_DV(String s) {
if (!s.trim().isEmpty()) {
C_PSDQA_DV = Byte.parseByte(s);
} else {
C_PSDQA_DV = Byte.MIN_VALUE;
}
}

protected final void initC_PSDQB_DV(String s) {
if (!s.trim().isEmpty()) {
C_PSDQB_DV = Byte.parseByte(s);
} else {
C_PSDQB_DV = Byte.MIN_VALUE;
}
}

protected final void initC_PSDQC_DV(String s) {
if (!s.trim().isEmpty()) {
C_PSDQC_DV = Byte.parseByte(s);
} else {
C_PSDQC_DV = Byte.MIN_VALUE;
}
}

protected final void initC_PSIBLINGS(String s) {
if (!s.trim().isEmpty()) {
C_PSIBLINGS = Byte.parseByte(s);
} else {
C_PSIBLINGS = Byte.MIN_VALUE;
}
}

protected final void initC_PSNUMCH(String s) {
if (!s.trim().isEmpty()) {
C_PSNUMCH = Byte.parseByte(s);
} else {
C_PSNUMCH = Byte.MIN_VALUE;
}
}

protected final void initC_PSU(String s) {
if (!s.trim().isEmpty()) {
C_PSU = Integer.parseInt(s);
} else {
C_PSU = Integer.MIN_VALUE;
}
}

protected final void initC_PYENRL(String s) {
if (!s.trim().isEmpty()) {
C_PYENRL = Byte.parseByte(s);
} else {
C_PYENRL = Byte.MIN_VALUE;
}
}

protected final void initC_QFHIGH(String s) {
if (!s.trim().isEmpty()) {
C_QFHIGH = Byte.parseByte(s);
} else {
C_QFHIGH = Byte.MIN_VALUE;
}
}

protected final void initC_QFHIGHFL_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_QFHIGHFL_DV = false;
} else {
C_QFHIGHFL_DV = true;
}
}
}

protected final void initC_QFHIGH_DV(String s) {
if (!s.trim().isEmpty()) {
C_QFHIGH_DV = Byte.parseByte(s);
} else {
C_QFHIGH_DV = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC1(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC1 = Byte.parseByte(s);
} else {
C_QFVOC1 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC10(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC10 = Byte.parseByte(s);
} else {
C_QFVOC10 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC11(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC11 = Byte.parseByte(s);
} else {
C_QFVOC11 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC12(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC12 = Byte.parseByte(s);
} else {
C_QFVOC12 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC13(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC13 = Byte.parseByte(s);
} else {
C_QFVOC13 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC14(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC14 = Byte.parseByte(s);
} else {
C_QFVOC14 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC15(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC15 = Byte.parseByte(s);
} else {
C_QFVOC15 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC2(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC2 = Byte.parseByte(s);
} else {
C_QFVOC2 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC3(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC3 = Byte.parseByte(s);
} else {
C_QFVOC3 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC4(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC4 = Byte.parseByte(s);
} else {
C_QFVOC4 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC5(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC5 = Byte.parseByte(s);
} else {
C_QFVOC5 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC6(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC6 = Byte.parseByte(s);
} else {
C_QFVOC6 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC7(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC7 = Byte.parseByte(s);
} else {
C_QFVOC7 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC8(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC8 = Byte.parseByte(s);
} else {
C_QFVOC8 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC9(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC9 = Byte.parseByte(s);
} else {
C_QFVOC9 = Byte.MIN_VALUE;
}
}

protected final void initC_QFVOC96(String s) {
if (!s.trim().isEmpty()) {
C_QFVOC96 = Byte.parseByte(s);
} else {
C_QFVOC96 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNE(String s) {
if (!s.trim().isEmpty()) {
C_QUALNE = Byte.parseByte(s);
} else {
C_QUALNE = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW1(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW1 = Byte.parseByte(s);
} else {
C_QUALNEW1 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW10(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW10 = Byte.parseByte(s);
} else {
C_QUALNEW10 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW11(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW11 = Byte.parseByte(s);
} else {
C_QUALNEW11 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW13(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW13 = Byte.parseByte(s);
} else {
C_QUALNEW13 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW15(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW15 = Byte.parseByte(s);
} else {
C_QUALNEW15 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW16(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW16 = Byte.parseByte(s);
} else {
C_QUALNEW16 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW17(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW17 = Byte.parseByte(s);
} else {
C_QUALNEW17 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW18(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW18 = Byte.parseByte(s);
} else {
C_QUALNEW18 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW19(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW19 = Byte.parseByte(s);
} else {
C_QUALNEW19 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW2(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW2 = Byte.parseByte(s);
} else {
C_QUALNEW2 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW20(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW20 = Byte.parseByte(s);
} else {
C_QUALNEW20 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW21(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW21 = Byte.parseByte(s);
} else {
C_QUALNEW21 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW22(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW22 = Byte.parseByte(s);
} else {
C_QUALNEW22 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW23(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW23 = Byte.parseByte(s);
} else {
C_QUALNEW23 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW24(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW24 = Byte.parseByte(s);
} else {
C_QUALNEW24 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW25(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW25 = Byte.parseByte(s);
} else {
C_QUALNEW25 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW26(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW26 = Byte.parseByte(s);
} else {
C_QUALNEW26 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW27(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW27 = Byte.parseByte(s);
} else {
C_QUALNEW27 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW28(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW28 = Byte.parseByte(s);
} else {
C_QUALNEW28 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW29(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW29 = Byte.parseByte(s);
} else {
C_QUALNEW29 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW30(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW30 = Byte.parseByte(s);
} else {
C_QUALNEW30 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW31(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW31 = Byte.parseByte(s);
} else {
C_QUALNEW31 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW4(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW4 = Byte.parseByte(s);
} else {
C_QUALNEW4 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW5(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW5 = Byte.parseByte(s);
} else {
C_QUALNEW5 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW6(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW6 = Byte.parseByte(s);
} else {
C_QUALNEW6 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW7(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW7 = Byte.parseByte(s);
} else {
C_QUALNEW7 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW8(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW8 = Byte.parseByte(s);
} else {
C_QUALNEW8 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALNEW9(String s) {
if (!s.trim().isEmpty()) {
C_QUALNEW9 = Byte.parseByte(s);
} else {
C_QUALNEW9 = Byte.MIN_VALUE;
}
}

protected final void initC_QUALOC(String s) {
if (!s.trim().isEmpty()) {
C_QUALOC = Byte.parseByte(s);
} else {
C_QUALOC = Byte.MIN_VALUE;
}
}

protected final void initC_QUARREL(String s) {
if (!s.trim().isEmpty()) {
C_QUARREL = Byte.parseByte(s);
} else {
C_QUARREL = Byte.MIN_VALUE;
}
}

protected final void initC_RACEL(String s) {
if (!s.trim().isEmpty()) {
C_RACEL = Byte.parseByte(s);
} else {
C_RACEL = Byte.MIN_VALUE;
}
}

protected final void initC_RACELAT(String s) {
if (!s.trim().isEmpty()) {
C_RACELAT = Byte.parseByte(s);
} else {
C_RACELAT = Byte.MIN_VALUE;
}
}

protected final void initC_RACELBT(String s) {
if (!s.trim().isEmpty()) {
C_RACELBT = Byte.parseByte(s);
} else {
C_RACELBT = Byte.MIN_VALUE;
}
}

protected final void initC_RACELMT(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_RACELMT = false;
} else {
C_RACELMT = true;
}
}
}

protected final void initC_RACELOT_CODE(String s) {
if (!s.trim().isEmpty()) {
C_RACELOT_CODE = Byte.parseByte(s);
} else {
C_RACELOT_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_RACELO_CODE(String s) {
if (!s.trim().isEmpty()) {
C_RACELO_CODE = Byte.parseByte(s);
} else {
C_RACELO_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_RACELT(String s) {
if (!s.trim().isEmpty()) {
C_RACELT = Byte.parseByte(s);
} else {
C_RACELT = Byte.MIN_VALUE;
}
}

protected final void initC_RACELWT(String s) {
if (!s.trim().isEmpty()) {
C_RACELWT = Byte.parseByte(s);
} else {
C_RACELWT = Byte.MIN_VALUE;
}
}

protected final void initC_RACEL_DV(String s) {
if (!s.trim().isEmpty()) {
C_RACEL_DV = Byte.parseByte(s);
} else {
C_RACEL_DV = Byte.MIN_VALUE;
}
}

protected final void initC_RACH16_DV(String s) {
if (!s.trim().isEmpty()) {
C_RACH16_DV = Byte.parseByte(s);
} else {
C_RACH16_DV = Byte.MIN_VALUE;
}
}

protected final void initC_READTEST(String s) {
if (!s.trim().isEmpty()) {
C_READTEST = Byte.parseByte(s);
} else {
C_READTEST = Byte.MIN_VALUE;
}
}

protected final void initC_REASEND1(String s) {
if (!s.trim().isEmpty()) {
C_REASEND1 = Byte.parseByte(s);
} else {
C_REASEND1 = Byte.MIN_VALUE;
}
}

protected final void initC_REASEND2(String s) {
if (!s.trim().isEmpty()) {
C_REASEND2 = Byte.parseByte(s);
} else {
C_REASEND2 = Byte.MIN_VALUE;
}
}

protected final void initC_REASEND3(String s) {
if (!s.trim().isEmpty()) {
C_REASEND3 = Byte.parseByte(s);
} else {
C_REASEND3 = Byte.MIN_VALUE;
}
}

protected final void initC_REASEND4(String s) {
if (!s.trim().isEmpty()) {
C_REASEND4 = Byte.parseByte(s);
} else {
C_REASEND4 = Byte.MIN_VALUE;
}
}

protected final void initC_REASEND5(String s) {
if (!s.trim().isEmpty()) {
C_REASEND5 = Byte.parseByte(s);
} else {
C_REASEND5 = Byte.MIN_VALUE;
}
}

protected final void initC_REASEND6(String s) {
if (!s.trim().isEmpty()) {
C_REASEND6 = Byte.parseByte(s);
} else {
C_REASEND6 = Byte.MIN_VALUE;
}
}

protected final void initC_REASEND7(String s) {
if (!s.trim().isEmpty()) {
C_REASEND7 = Byte.parseByte(s);
} else {
C_REASEND7 = Byte.MIN_VALUE;
}
}

protected final void initC_REASEND8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_REASEND8 = false;
} else {
C_REASEND8 = true;
}
}
}

protected final void initC_REASEND9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_REASEND9 = false;
} else {
C_REASEND9 = true;
}
}
}

protected final void initC_RELKID(String s) {
if (!s.trim().isEmpty()) {
C_RELKID = Byte.parseByte(s);
} else {
C_RELKID = Byte.MIN_VALUE;
}
}

protected final void initC_RELUP(String s) {
if (!s.trim().isEmpty()) {
C_RELUP = Byte.parseByte(s);
} else {
C_RELUP = Byte.MIN_VALUE;
}
}

protected final void initC_REMAIL_CODE(String s) {
if (!s.trim().isEmpty()) {
C_REMAIL_CODE = Byte.parseByte(s);
} else {
C_REMAIL_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_1 = Byte.parseByte(s);
} else {
C_RESATTACKED1_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_10 = Byte.parseByte(s);
} else {
C_RESATTACKED1_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_11 = Byte.parseByte(s);
} else {
C_RESATTACKED1_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_12 = Byte.parseByte(s);
} else {
C_RESATTACKED1_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_2 = Byte.parseByte(s);
} else {
C_RESATTACKED1_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_3 = Byte.parseByte(s);
} else {
C_RESATTACKED1_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_4 = Byte.parseByte(s);
} else {
C_RESATTACKED1_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_5 = Byte.parseByte(s);
} else {
C_RESATTACKED1_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_6 = Byte.parseByte(s);
} else {
C_RESATTACKED1_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_7 = Byte.parseByte(s);
} else {
C_RESATTACKED1_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_8 = Byte.parseByte(s);
} else {
C_RESATTACKED1_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED1_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED1_9 = Byte.parseByte(s);
} else {
C_RESATTACKED1_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_1 = Byte.parseByte(s);
} else {
C_RESATTACKED2_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_10 = Byte.parseByte(s);
} else {
C_RESATTACKED2_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_11 = Byte.parseByte(s);
} else {
C_RESATTACKED2_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_12 = Byte.parseByte(s);
} else {
C_RESATTACKED2_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_2 = Byte.parseByte(s);
} else {
C_RESATTACKED2_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_3 = Byte.parseByte(s);
} else {
C_RESATTACKED2_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_4 = Byte.parseByte(s);
} else {
C_RESATTACKED2_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_5 = Byte.parseByte(s);
} else {
C_RESATTACKED2_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_6 = Byte.parseByte(s);
} else {
C_RESATTACKED2_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_7 = Byte.parseByte(s);
} else {
C_RESATTACKED2_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_8 = Byte.parseByte(s);
} else {
C_RESATTACKED2_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED2_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED2_9 = Byte.parseByte(s);
} else {
C_RESATTACKED2_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_1 = Byte.parseByte(s);
} else {
C_RESATTACKED3_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_10 = Byte.parseByte(s);
} else {
C_RESATTACKED3_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_11 = Byte.parseByte(s);
} else {
C_RESATTACKED3_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_12 = Byte.parseByte(s);
} else {
C_RESATTACKED3_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_2 = Byte.parseByte(s);
} else {
C_RESATTACKED3_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_3 = Byte.parseByte(s);
} else {
C_RESATTACKED3_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_4 = Byte.parseByte(s);
} else {
C_RESATTACKED3_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_5 = Byte.parseByte(s);
} else {
C_RESATTACKED3_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_6 = Byte.parseByte(s);
} else {
C_RESATTACKED3_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_7 = Byte.parseByte(s);
} else {
C_RESATTACKED3_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_8 = Byte.parseByte(s);
} else {
C_RESATTACKED3_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED3_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED3_9 = Byte.parseByte(s);
} else {
C_RESATTACKED3_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_1 = Byte.parseByte(s);
} else {
C_RESATTACKED4_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_10 = Byte.parseByte(s);
} else {
C_RESATTACKED4_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_11 = Byte.parseByte(s);
} else {
C_RESATTACKED4_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_12 = Byte.parseByte(s);
} else {
C_RESATTACKED4_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_2 = Byte.parseByte(s);
} else {
C_RESATTACKED4_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_3 = Byte.parseByte(s);
} else {
C_RESATTACKED4_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_4 = Byte.parseByte(s);
} else {
C_RESATTACKED4_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_5 = Byte.parseByte(s);
} else {
C_RESATTACKED4_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_6 = Byte.parseByte(s);
} else {
C_RESATTACKED4_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_7 = Byte.parseByte(s);
} else {
C_RESATTACKED4_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_8 = Byte.parseByte(s);
} else {
C_RESATTACKED4_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED4_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED4_9 = Byte.parseByte(s);
} else {
C_RESATTACKED4_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_1 = Byte.parseByte(s);
} else {
C_RESATTACKED5_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_10 = Byte.parseByte(s);
} else {
C_RESATTACKED5_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_11 = Byte.parseByte(s);
} else {
C_RESATTACKED5_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_12 = Byte.parseByte(s);
} else {
C_RESATTACKED5_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_2 = Byte.parseByte(s);
} else {
C_RESATTACKED5_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_3 = Byte.parseByte(s);
} else {
C_RESATTACKED5_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_4 = Byte.parseByte(s);
} else {
C_RESATTACKED5_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_5 = Byte.parseByte(s);
} else {
C_RESATTACKED5_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_6 = Byte.parseByte(s);
} else {
C_RESATTACKED5_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_7 = Byte.parseByte(s);
} else {
C_RESATTACKED5_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_8 = Byte.parseByte(s);
} else {
C_RESATTACKED5_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED5_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED5_9 = Byte.parseByte(s);
} else {
C_RESATTACKED5_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_1 = Byte.parseByte(s);
} else {
C_RESATTACKED6_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_10 = Byte.parseByte(s);
} else {
C_RESATTACKED6_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_11 = Byte.parseByte(s);
} else {
C_RESATTACKED6_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_12 = Byte.parseByte(s);
} else {
C_RESATTACKED6_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_2 = Byte.parseByte(s);
} else {
C_RESATTACKED6_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_3 = Byte.parseByte(s);
} else {
C_RESATTACKED6_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_4 = Byte.parseByte(s);
} else {
C_RESATTACKED6_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_5 = Byte.parseByte(s);
} else {
C_RESATTACKED6_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_6 = Byte.parseByte(s);
} else {
C_RESATTACKED6_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_7 = Byte.parseByte(s);
} else {
C_RESATTACKED6_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_8 = Byte.parseByte(s);
} else {
C_RESATTACKED6_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED6_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED6_9 = Byte.parseByte(s);
} else {
C_RESATTACKED6_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_1 = Byte.parseByte(s);
} else {
C_RESATTACKED7_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_10 = Byte.parseByte(s);
} else {
C_RESATTACKED7_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_11 = Byte.parseByte(s);
} else {
C_RESATTACKED7_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_12 = Byte.parseByte(s);
} else {
C_RESATTACKED7_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_2 = Byte.parseByte(s);
} else {
C_RESATTACKED7_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_3 = Byte.parseByte(s);
} else {
C_RESATTACKED7_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_4 = Byte.parseByte(s);
} else {
C_RESATTACKED7_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_5 = Byte.parseByte(s);
} else {
C_RESATTACKED7_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_6 = Byte.parseByte(s);
} else {
C_RESATTACKED7_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_7 = Byte.parseByte(s);
} else {
C_RESATTACKED7_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_8 = Byte.parseByte(s);
} else {
C_RESATTACKED7_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED7_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED7_9 = Byte.parseByte(s);
} else {
C_RESATTACKED7_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_1 = Byte.parseByte(s);
} else {
C_RESATTACKED8_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_10 = Byte.parseByte(s);
} else {
C_RESATTACKED8_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_11 = Byte.parseByte(s);
} else {
C_RESATTACKED8_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_12 = Byte.parseByte(s);
} else {
C_RESATTACKED8_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_2 = Byte.parseByte(s);
} else {
C_RESATTACKED8_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_3 = Byte.parseByte(s);
} else {
C_RESATTACKED8_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_4 = Byte.parseByte(s);
} else {
C_RESATTACKED8_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_5 = Byte.parseByte(s);
} else {
C_RESATTACKED8_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_6 = Byte.parseByte(s);
} else {
C_RESATTACKED8_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_7 = Byte.parseByte(s);
} else {
C_RESATTACKED8_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_8 = Byte.parseByte(s);
} else {
C_RESATTACKED8_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED8_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED8_9 = Byte.parseByte(s);
} else {
C_RESATTACKED8_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_1 = Byte.parseByte(s);
} else {
C_RESATTACKED96_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_10 = Byte.parseByte(s);
} else {
C_RESATTACKED96_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_11 = Byte.parseByte(s);
} else {
C_RESATTACKED96_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_12 = Byte.parseByte(s);
} else {
C_RESATTACKED96_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_2 = Byte.parseByte(s);
} else {
C_RESATTACKED96_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_3 = Byte.parseByte(s);
} else {
C_RESATTACKED96_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_4 = Byte.parseByte(s);
} else {
C_RESATTACKED96_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_5 = Byte.parseByte(s);
} else {
C_RESATTACKED96_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_6 = Byte.parseByte(s);
} else {
C_RESATTACKED96_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_7 = Byte.parseByte(s);
} else {
C_RESATTACKED96_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_8 = Byte.parseByte(s);
} else {
C_RESATTACKED96_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED96_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED96_9 = Byte.parseByte(s);
} else {
C_RESATTACKED96_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_1 = Byte.parseByte(s);
} else {
C_RESATTACKED97_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_10 = Byte.parseByte(s);
} else {
C_RESATTACKED97_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_11 = Byte.parseByte(s);
} else {
C_RESATTACKED97_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_12 = Byte.parseByte(s);
} else {
C_RESATTACKED97_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_2 = Byte.parseByte(s);
} else {
C_RESATTACKED97_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_3 = Byte.parseByte(s);
} else {
C_RESATTACKED97_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_4 = Byte.parseByte(s);
} else {
C_RESATTACKED97_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_5 = Byte.parseByte(s);
} else {
C_RESATTACKED97_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_6 = Byte.parseByte(s);
} else {
C_RESATTACKED97_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_7 = Byte.parseByte(s);
} else {
C_RESATTACKED97_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_8 = Byte.parseByte(s);
} else {
C_RESATTACKED97_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED97_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED97_9 = Byte.parseByte(s);
} else {
C_RESATTACKED97_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_1(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_1 = Byte.parseByte(s);
} else {
C_RESATTACKED9_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_10(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_10 = Byte.parseByte(s);
} else {
C_RESATTACKED9_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_11(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_11 = Byte.parseByte(s);
} else {
C_RESATTACKED9_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_12(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_12 = Byte.parseByte(s);
} else {
C_RESATTACKED9_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_2(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_2 = Byte.parseByte(s);
} else {
C_RESATTACKED9_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_3(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_3 = Byte.parseByte(s);
} else {
C_RESATTACKED9_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_4(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_4 = Byte.parseByte(s);
} else {
C_RESATTACKED9_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_5(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_5 = Byte.parseByte(s);
} else {
C_RESATTACKED9_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_6(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_6 = Byte.parseByte(s);
} else {
C_RESATTACKED9_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_7(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_7 = Byte.parseByte(s);
} else {
C_RESATTACKED9_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_8(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_8 = Byte.parseByte(s);
} else {
C_RESATTACKED9_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESATTACKED9_9(String s) {
if (!s.trim().isEmpty()) {
C_RESATTACKED9_9 = Byte.parseByte(s);
} else {
C_RESATTACKED9_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_1 = Byte.parseByte(s);
} else {
C_RESAVOID1_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_10 = Byte.parseByte(s);
} else {
C_RESAVOID1_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_11 = Byte.parseByte(s);
} else {
C_RESAVOID1_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_12 = Byte.parseByte(s);
} else {
C_RESAVOID1_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_2 = Byte.parseByte(s);
} else {
C_RESAVOID1_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_3 = Byte.parseByte(s);
} else {
C_RESAVOID1_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_4 = Byte.parseByte(s);
} else {
C_RESAVOID1_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_5 = Byte.parseByte(s);
} else {
C_RESAVOID1_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_6 = Byte.parseByte(s);
} else {
C_RESAVOID1_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_7 = Byte.parseByte(s);
} else {
C_RESAVOID1_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_8 = Byte.parseByte(s);
} else {
C_RESAVOID1_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID1_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID1_9 = Byte.parseByte(s);
} else {
C_RESAVOID1_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_1 = Byte.parseByte(s);
} else {
C_RESAVOID2_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_10 = Byte.parseByte(s);
} else {
C_RESAVOID2_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_11 = Byte.parseByte(s);
} else {
C_RESAVOID2_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_12 = Byte.parseByte(s);
} else {
C_RESAVOID2_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_2 = Byte.parseByte(s);
} else {
C_RESAVOID2_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_3 = Byte.parseByte(s);
} else {
C_RESAVOID2_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_4 = Byte.parseByte(s);
} else {
C_RESAVOID2_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_5 = Byte.parseByte(s);
} else {
C_RESAVOID2_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_6 = Byte.parseByte(s);
} else {
C_RESAVOID2_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_7 = Byte.parseByte(s);
} else {
C_RESAVOID2_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_8 = Byte.parseByte(s);
} else {
C_RESAVOID2_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID2_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID2_9 = Byte.parseByte(s);
} else {
C_RESAVOID2_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_1 = Byte.parseByte(s);
} else {
C_RESAVOID3_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_10 = Byte.parseByte(s);
} else {
C_RESAVOID3_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_11 = Byte.parseByte(s);
} else {
C_RESAVOID3_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_12 = Byte.parseByte(s);
} else {
C_RESAVOID3_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_2 = Byte.parseByte(s);
} else {
C_RESAVOID3_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_3 = Byte.parseByte(s);
} else {
C_RESAVOID3_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_4 = Byte.parseByte(s);
} else {
C_RESAVOID3_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_5 = Byte.parseByte(s);
} else {
C_RESAVOID3_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_6 = Byte.parseByte(s);
} else {
C_RESAVOID3_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_7 = Byte.parseByte(s);
} else {
C_RESAVOID3_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_8 = Byte.parseByte(s);
} else {
C_RESAVOID3_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID3_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID3_9 = Byte.parseByte(s);
} else {
C_RESAVOID3_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_1 = Byte.parseByte(s);
} else {
C_RESAVOID4_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_10 = Byte.parseByte(s);
} else {
C_RESAVOID4_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_11 = Byte.parseByte(s);
} else {
C_RESAVOID4_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_12 = Byte.parseByte(s);
} else {
C_RESAVOID4_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_2 = Byte.parseByte(s);
} else {
C_RESAVOID4_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_3 = Byte.parseByte(s);
} else {
C_RESAVOID4_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_4 = Byte.parseByte(s);
} else {
C_RESAVOID4_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_5 = Byte.parseByte(s);
} else {
C_RESAVOID4_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_6 = Byte.parseByte(s);
} else {
C_RESAVOID4_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_7 = Byte.parseByte(s);
} else {
C_RESAVOID4_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_8 = Byte.parseByte(s);
} else {
C_RESAVOID4_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID4_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID4_9 = Byte.parseByte(s);
} else {
C_RESAVOID4_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_1 = Byte.parseByte(s);
} else {
C_RESAVOID5_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_10 = Byte.parseByte(s);
} else {
C_RESAVOID5_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_11 = Byte.parseByte(s);
} else {
C_RESAVOID5_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_12 = Byte.parseByte(s);
} else {
C_RESAVOID5_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_2 = Byte.parseByte(s);
} else {
C_RESAVOID5_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_3 = Byte.parseByte(s);
} else {
C_RESAVOID5_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_4 = Byte.parseByte(s);
} else {
C_RESAVOID5_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_5 = Byte.parseByte(s);
} else {
C_RESAVOID5_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_6 = Byte.parseByte(s);
} else {
C_RESAVOID5_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_7 = Byte.parseByte(s);
} else {
C_RESAVOID5_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_8 = Byte.parseByte(s);
} else {
C_RESAVOID5_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID5_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID5_9 = Byte.parseByte(s);
} else {
C_RESAVOID5_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_1 = Byte.parseByte(s);
} else {
C_RESAVOID6_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_10 = Byte.parseByte(s);
} else {
C_RESAVOID6_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_11 = Byte.parseByte(s);
} else {
C_RESAVOID6_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_12 = Byte.parseByte(s);
} else {
C_RESAVOID6_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_2 = Byte.parseByte(s);
} else {
C_RESAVOID6_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_3 = Byte.parseByte(s);
} else {
C_RESAVOID6_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_4 = Byte.parseByte(s);
} else {
C_RESAVOID6_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_5 = Byte.parseByte(s);
} else {
C_RESAVOID6_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_6 = Byte.parseByte(s);
} else {
C_RESAVOID6_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_7 = Byte.parseByte(s);
} else {
C_RESAVOID6_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_8 = Byte.parseByte(s);
} else {
C_RESAVOID6_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID6_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID6_9 = Byte.parseByte(s);
} else {
C_RESAVOID6_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_1 = Byte.parseByte(s);
} else {
C_RESAVOID7_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_10 = Byte.parseByte(s);
} else {
C_RESAVOID7_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_11 = Byte.parseByte(s);
} else {
C_RESAVOID7_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_12 = Byte.parseByte(s);
} else {
C_RESAVOID7_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_2 = Byte.parseByte(s);
} else {
C_RESAVOID7_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_3 = Byte.parseByte(s);
} else {
C_RESAVOID7_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_4 = Byte.parseByte(s);
} else {
C_RESAVOID7_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_5 = Byte.parseByte(s);
} else {
C_RESAVOID7_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_6 = Byte.parseByte(s);
} else {
C_RESAVOID7_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_7 = Byte.parseByte(s);
} else {
C_RESAVOID7_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_8 = Byte.parseByte(s);
} else {
C_RESAVOID7_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID7_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID7_9 = Byte.parseByte(s);
} else {
C_RESAVOID7_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_1 = Byte.parseByte(s);
} else {
C_RESAVOID8_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_10 = Byte.parseByte(s);
} else {
C_RESAVOID8_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_11 = Byte.parseByte(s);
} else {
C_RESAVOID8_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_12 = Byte.parseByte(s);
} else {
C_RESAVOID8_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_2 = Byte.parseByte(s);
} else {
C_RESAVOID8_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_3 = Byte.parseByte(s);
} else {
C_RESAVOID8_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_4 = Byte.parseByte(s);
} else {
C_RESAVOID8_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_5 = Byte.parseByte(s);
} else {
C_RESAVOID8_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_6 = Byte.parseByte(s);
} else {
C_RESAVOID8_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_7 = Byte.parseByte(s);
} else {
C_RESAVOID8_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_8 = Byte.parseByte(s);
} else {
C_RESAVOID8_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID8_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID8_9 = Byte.parseByte(s);
} else {
C_RESAVOID8_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_1 = Byte.parseByte(s);
} else {
C_RESAVOID96_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_10 = Byte.parseByte(s);
} else {
C_RESAVOID96_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_11 = Byte.parseByte(s);
} else {
C_RESAVOID96_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_12 = Byte.parseByte(s);
} else {
C_RESAVOID96_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_2 = Byte.parseByte(s);
} else {
C_RESAVOID96_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_3 = Byte.parseByte(s);
} else {
C_RESAVOID96_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_4 = Byte.parseByte(s);
} else {
C_RESAVOID96_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_5 = Byte.parseByte(s);
} else {
C_RESAVOID96_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_6 = Byte.parseByte(s);
} else {
C_RESAVOID96_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_7 = Byte.parseByte(s);
} else {
C_RESAVOID96_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_8 = Byte.parseByte(s);
} else {
C_RESAVOID96_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID96_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID96_9 = Byte.parseByte(s);
} else {
C_RESAVOID96_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_1 = Byte.parseByte(s);
} else {
C_RESAVOID97_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_10 = Byte.parseByte(s);
} else {
C_RESAVOID97_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_11 = Byte.parseByte(s);
} else {
C_RESAVOID97_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_12 = Byte.parseByte(s);
} else {
C_RESAVOID97_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_2 = Byte.parseByte(s);
} else {
C_RESAVOID97_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_3 = Byte.parseByte(s);
} else {
C_RESAVOID97_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_4 = Byte.parseByte(s);
} else {
C_RESAVOID97_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_5 = Byte.parseByte(s);
} else {
C_RESAVOID97_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_6 = Byte.parseByte(s);
} else {
C_RESAVOID97_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_7 = Byte.parseByte(s);
} else {
C_RESAVOID97_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_8 = Byte.parseByte(s);
} else {
C_RESAVOID97_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID97_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID97_9 = Byte.parseByte(s);
} else {
C_RESAVOID97_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_1(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_1 = Byte.parseByte(s);
} else {
C_RESAVOID9_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_10(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_10 = Byte.parseByte(s);
} else {
C_RESAVOID9_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_11(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_11 = Byte.parseByte(s);
} else {
C_RESAVOID9_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_12(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_12 = Byte.parseByte(s);
} else {
C_RESAVOID9_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_2(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_2 = Byte.parseByte(s);
} else {
C_RESAVOID9_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_3(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_3 = Byte.parseByte(s);
} else {
C_RESAVOID9_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_4(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_4 = Byte.parseByte(s);
} else {
C_RESAVOID9_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_5(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_5 = Byte.parseByte(s);
} else {
C_RESAVOID9_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_6(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_6 = Byte.parseByte(s);
} else {
C_RESAVOID9_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_7(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_7 = Byte.parseByte(s);
} else {
C_RESAVOID9_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_8(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_8 = Byte.parseByte(s);
} else {
C_RESAVOID9_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESAVOID9_9(String s) {
if (!s.trim().isEmpty()) {
C_RESAVOID9_9 = Byte.parseByte(s);
} else {
C_RESAVOID9_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_1 = Byte.parseByte(s);
} else {
C_RESINSULTED1_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_10 = Byte.parseByte(s);
} else {
C_RESINSULTED1_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_11 = Byte.parseByte(s);
} else {
C_RESINSULTED1_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_12 = Byte.parseByte(s);
} else {
C_RESINSULTED1_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_2 = Byte.parseByte(s);
} else {
C_RESINSULTED1_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_3 = Byte.parseByte(s);
} else {
C_RESINSULTED1_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_4 = Byte.parseByte(s);
} else {
C_RESINSULTED1_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_5 = Byte.parseByte(s);
} else {
C_RESINSULTED1_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_6 = Byte.parseByte(s);
} else {
C_RESINSULTED1_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_7 = Byte.parseByte(s);
} else {
C_RESINSULTED1_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_8 = Byte.parseByte(s);
} else {
C_RESINSULTED1_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED1_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED1_9 = Byte.parseByte(s);
} else {
C_RESINSULTED1_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_1 = Byte.parseByte(s);
} else {
C_RESINSULTED2_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_10 = Byte.parseByte(s);
} else {
C_RESINSULTED2_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_11 = Byte.parseByte(s);
} else {
C_RESINSULTED2_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_12 = Byte.parseByte(s);
} else {
C_RESINSULTED2_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_2 = Byte.parseByte(s);
} else {
C_RESINSULTED2_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_3 = Byte.parseByte(s);
} else {
C_RESINSULTED2_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_4 = Byte.parseByte(s);
} else {
C_RESINSULTED2_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_5 = Byte.parseByte(s);
} else {
C_RESINSULTED2_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_6 = Byte.parseByte(s);
} else {
C_RESINSULTED2_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_7 = Byte.parseByte(s);
} else {
C_RESINSULTED2_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_8 = Byte.parseByte(s);
} else {
C_RESINSULTED2_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED2_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED2_9 = Byte.parseByte(s);
} else {
C_RESINSULTED2_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_1 = Byte.parseByte(s);
} else {
C_RESINSULTED3_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_10 = Byte.parseByte(s);
} else {
C_RESINSULTED3_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_11 = Byte.parseByte(s);
} else {
C_RESINSULTED3_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_12 = Byte.parseByte(s);
} else {
C_RESINSULTED3_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_2 = Byte.parseByte(s);
} else {
C_RESINSULTED3_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_3 = Byte.parseByte(s);
} else {
C_RESINSULTED3_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_4 = Byte.parseByte(s);
} else {
C_RESINSULTED3_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_5 = Byte.parseByte(s);
} else {
C_RESINSULTED3_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_6 = Byte.parseByte(s);
} else {
C_RESINSULTED3_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_7 = Byte.parseByte(s);
} else {
C_RESINSULTED3_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_8 = Byte.parseByte(s);
} else {
C_RESINSULTED3_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED3_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED3_9 = Byte.parseByte(s);
} else {
C_RESINSULTED3_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_1 = Byte.parseByte(s);
} else {
C_RESINSULTED4_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_10 = Byte.parseByte(s);
} else {
C_RESINSULTED4_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_11 = Byte.parseByte(s);
} else {
C_RESINSULTED4_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_12 = Byte.parseByte(s);
} else {
C_RESINSULTED4_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_2 = Byte.parseByte(s);
} else {
C_RESINSULTED4_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_3 = Byte.parseByte(s);
} else {
C_RESINSULTED4_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_4 = Byte.parseByte(s);
} else {
C_RESINSULTED4_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_5 = Byte.parseByte(s);
} else {
C_RESINSULTED4_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_6 = Byte.parseByte(s);
} else {
C_RESINSULTED4_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_7 = Byte.parseByte(s);
} else {
C_RESINSULTED4_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_8 = Byte.parseByte(s);
} else {
C_RESINSULTED4_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED4_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED4_9 = Byte.parseByte(s);
} else {
C_RESINSULTED4_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_1 = Byte.parseByte(s);
} else {
C_RESINSULTED5_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_10 = Byte.parseByte(s);
} else {
C_RESINSULTED5_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_11 = Byte.parseByte(s);
} else {
C_RESINSULTED5_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_12 = Byte.parseByte(s);
} else {
C_RESINSULTED5_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_2 = Byte.parseByte(s);
} else {
C_RESINSULTED5_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_3 = Byte.parseByte(s);
} else {
C_RESINSULTED5_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_4 = Byte.parseByte(s);
} else {
C_RESINSULTED5_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_5 = Byte.parseByte(s);
} else {
C_RESINSULTED5_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_6 = Byte.parseByte(s);
} else {
C_RESINSULTED5_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_7 = Byte.parseByte(s);
} else {
C_RESINSULTED5_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_8 = Byte.parseByte(s);
} else {
C_RESINSULTED5_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED5_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED5_9 = Byte.parseByte(s);
} else {
C_RESINSULTED5_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_1 = Byte.parseByte(s);
} else {
C_RESINSULTED6_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_10 = Byte.parseByte(s);
} else {
C_RESINSULTED6_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_11 = Byte.parseByte(s);
} else {
C_RESINSULTED6_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_12 = Byte.parseByte(s);
} else {
C_RESINSULTED6_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_2 = Byte.parseByte(s);
} else {
C_RESINSULTED6_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_3 = Byte.parseByte(s);
} else {
C_RESINSULTED6_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_4 = Byte.parseByte(s);
} else {
C_RESINSULTED6_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_5 = Byte.parseByte(s);
} else {
C_RESINSULTED6_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_6 = Byte.parseByte(s);
} else {
C_RESINSULTED6_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_7 = Byte.parseByte(s);
} else {
C_RESINSULTED6_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_8 = Byte.parseByte(s);
} else {
C_RESINSULTED6_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED6_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED6_9 = Byte.parseByte(s);
} else {
C_RESINSULTED6_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_1 = Byte.parseByte(s);
} else {
C_RESINSULTED7_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_10 = Byte.parseByte(s);
} else {
C_RESINSULTED7_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_11 = Byte.parseByte(s);
} else {
C_RESINSULTED7_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_12 = Byte.parseByte(s);
} else {
C_RESINSULTED7_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_2 = Byte.parseByte(s);
} else {
C_RESINSULTED7_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_3 = Byte.parseByte(s);
} else {
C_RESINSULTED7_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_4 = Byte.parseByte(s);
} else {
C_RESINSULTED7_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_5 = Byte.parseByte(s);
} else {
C_RESINSULTED7_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_6 = Byte.parseByte(s);
} else {
C_RESINSULTED7_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_7 = Byte.parseByte(s);
} else {
C_RESINSULTED7_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_8 = Byte.parseByte(s);
} else {
C_RESINSULTED7_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED7_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED7_9 = Byte.parseByte(s);
} else {
C_RESINSULTED7_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_1 = Byte.parseByte(s);
} else {
C_RESINSULTED8_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_10 = Byte.parseByte(s);
} else {
C_RESINSULTED8_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_11 = Byte.parseByte(s);
} else {
C_RESINSULTED8_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_12 = Byte.parseByte(s);
} else {
C_RESINSULTED8_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_2 = Byte.parseByte(s);
} else {
C_RESINSULTED8_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_3 = Byte.parseByte(s);
} else {
C_RESINSULTED8_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_4 = Byte.parseByte(s);
} else {
C_RESINSULTED8_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_5 = Byte.parseByte(s);
} else {
C_RESINSULTED8_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_6 = Byte.parseByte(s);
} else {
C_RESINSULTED8_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_7 = Byte.parseByte(s);
} else {
C_RESINSULTED8_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_8 = Byte.parseByte(s);
} else {
C_RESINSULTED8_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED8_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED8_9 = Byte.parseByte(s);
} else {
C_RESINSULTED8_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_1 = Byte.parseByte(s);
} else {
C_RESINSULTED96_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_10 = Byte.parseByte(s);
} else {
C_RESINSULTED96_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_11 = Byte.parseByte(s);
} else {
C_RESINSULTED96_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_12 = Byte.parseByte(s);
} else {
C_RESINSULTED96_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_2 = Byte.parseByte(s);
} else {
C_RESINSULTED96_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_3 = Byte.parseByte(s);
} else {
C_RESINSULTED96_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_4 = Byte.parseByte(s);
} else {
C_RESINSULTED96_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_5 = Byte.parseByte(s);
} else {
C_RESINSULTED96_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_6 = Byte.parseByte(s);
} else {
C_RESINSULTED96_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_7 = Byte.parseByte(s);
} else {
C_RESINSULTED96_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_8 = Byte.parseByte(s);
} else {
C_RESINSULTED96_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED96_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED96_9 = Byte.parseByte(s);
} else {
C_RESINSULTED96_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_1 = Byte.parseByte(s);
} else {
C_RESINSULTED97_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_10 = Byte.parseByte(s);
} else {
C_RESINSULTED97_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_11 = Byte.parseByte(s);
} else {
C_RESINSULTED97_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_12 = Byte.parseByte(s);
} else {
C_RESINSULTED97_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_2 = Byte.parseByte(s);
} else {
C_RESINSULTED97_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_3 = Byte.parseByte(s);
} else {
C_RESINSULTED97_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_4 = Byte.parseByte(s);
} else {
C_RESINSULTED97_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_5 = Byte.parseByte(s);
} else {
C_RESINSULTED97_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_6 = Byte.parseByte(s);
} else {
C_RESINSULTED97_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_7 = Byte.parseByte(s);
} else {
C_RESINSULTED97_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_8 = Byte.parseByte(s);
} else {
C_RESINSULTED97_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED97_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED97_9 = Byte.parseByte(s);
} else {
C_RESINSULTED97_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_1(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_1 = Byte.parseByte(s);
} else {
C_RESINSULTED9_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_10(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_10 = Byte.parseByte(s);
} else {
C_RESINSULTED9_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_11(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_11 = Byte.parseByte(s);
} else {
C_RESINSULTED9_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_12(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_12 = Byte.parseByte(s);
} else {
C_RESINSULTED9_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_2(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_2 = Byte.parseByte(s);
} else {
C_RESINSULTED9_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_3(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_3 = Byte.parseByte(s);
} else {
C_RESINSULTED9_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_4(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_4 = Byte.parseByte(s);
} else {
C_RESINSULTED9_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_5(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_5 = Byte.parseByte(s);
} else {
C_RESINSULTED9_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_6(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_6 = Byte.parseByte(s);
} else {
C_RESINSULTED9_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_7(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_7 = Byte.parseByte(s);
} else {
C_RESINSULTED9_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_8(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_8 = Byte.parseByte(s);
} else {
C_RESINSULTED9_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESINSULTED9_9(String s) {
if (!s.trim().isEmpty()) {
C_RESINSULTED9_9 = Byte.parseByte(s);
} else {
C_RESINSULTED9_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY1(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY1 = Byte.parseByte(s);
} else {
C_RESJOBDENY1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY2(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY2 = Byte.parseByte(s);
} else {
C_RESJOBDENY2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY3(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY3 = Byte.parseByte(s);
} else {
C_RESJOBDENY3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY4(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY4 = Byte.parseByte(s);
} else {
C_RESJOBDENY4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY5(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY5 = Byte.parseByte(s);
} else {
C_RESJOBDENY5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY6(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY6 = Byte.parseByte(s);
} else {
C_RESJOBDENY6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY7(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY7 = Byte.parseByte(s);
} else {
C_RESJOBDENY7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY8(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY8 = Byte.parseByte(s);
} else {
C_RESJOBDENY8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY9(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY9 = Byte.parseByte(s);
} else {
C_RESJOBDENY9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY96(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY96 = Byte.parseByte(s);
} else {
C_RESJOBDENY96 = Byte.MIN_VALUE;
}
}

protected final void initC_RESJOBDENY97(String s) {
if (!s.trim().isEmpty()) {
C_RESJOBDENY97 = Byte.parseByte(s);
} else {
C_RESJOBDENY97 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPF16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
C_RESPF16 = false;
} else {
C_RESPF16 = true;
}
}
}

protected final void initC_RESPF16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
C_RESPF16_DV = false;
} else {
C_RESPF16_DV = true;
}
}
}

protected final void initC_RESPM16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
C_RESPM16 = false;
} else {
C_RESPM16 = true;
}
}
}

protected final void initC_RESPM16_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
C_RESPM16_DV = false;
} else {
C_RESPM16_DV = true;
}
}
}

protected final void initC_RESPROMDENY1(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY1 = Byte.parseByte(s);
} else {
C_RESPROMDENY1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY2(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY2 = Byte.parseByte(s);
} else {
C_RESPROMDENY2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY3(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY3 = Byte.parseByte(s);
} else {
C_RESPROMDENY3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY4(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY4 = Byte.parseByte(s);
} else {
C_RESPROMDENY4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY5(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY5 = Byte.parseByte(s);
} else {
C_RESPROMDENY5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY6(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY6 = Byte.parseByte(s);
} else {
C_RESPROMDENY6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY7(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY7 = Byte.parseByte(s);
} else {
C_RESPROMDENY7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY8(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY8 = Byte.parseByte(s);
} else {
C_RESPROMDENY8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY9(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY9 = Byte.parseByte(s);
} else {
C_RESPROMDENY9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY96(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY96 = Byte.parseByte(s);
} else {
C_RESPROMDENY96 = Byte.MIN_VALUE;
}
}

protected final void initC_RESPROMDENY97(String s) {
if (!s.trim().isEmpty()) {
C_RESPROMDENY97 = Byte.parseByte(s);
} else {
C_RESPROMDENY97 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY1(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY1 = Byte.parseByte(s);
} else {
C_RESTRAINDENY1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY2(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY2 = Byte.parseByte(s);
} else {
C_RESTRAINDENY2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY3(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY3 = Byte.parseByte(s);
} else {
C_RESTRAINDENY3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY4(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY4 = Byte.parseByte(s);
} else {
C_RESTRAINDENY4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY5(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY5 = Byte.parseByte(s);
} else {
C_RESTRAINDENY5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY6(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY6 = Byte.parseByte(s);
} else {
C_RESTRAINDENY6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY7(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY7 = Byte.parseByte(s);
} else {
C_RESTRAINDENY7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY8(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY8 = Byte.parseByte(s);
} else {
C_RESTRAINDENY8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY9(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY9 = Byte.parseByte(s);
} else {
C_RESTRAINDENY9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY96(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY96 = Byte.parseByte(s);
} else {
C_RESTRAINDENY96 = Byte.MIN_VALUE;
}
}

protected final void initC_RESTRAINDENY97(String s) {
if (!s.trim().isEmpty()) {
C_RESTRAINDENY97 = Byte.parseByte(s);
} else {
C_RESTRAINDENY97 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE1_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE1_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE1_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE2_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE2_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE2_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE3_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE3_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE3_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE4_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE4_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE4_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE5_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE5_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE5_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE6_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE6_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE6_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE7_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE7_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE7_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE8_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE8_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE8_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE96_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE96_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE96_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE97_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE97_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE97_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_1(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_1 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_1 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_10(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_10 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_10 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_11(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_11 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_11 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_12(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_12 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_12 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_2(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_2 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_2 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_3(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_3 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_3 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_4(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_4 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_4 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_5(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_5 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_5 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_6(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_6 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_6 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_7(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_7 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_7 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_8(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_8 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_8 = Byte.MIN_VALUE;
}
}

protected final void initC_RESUNSAFE9_9(String s) {
if (!s.trim().isEmpty()) {
C_RESUNSAFE9_9 = Byte.parseByte(s);
} else {
C_RESUNSAFE9_9 = Byte.MIN_VALUE;
}
}

protected final void initC_RETAMT(String s) {
if (!s.trim().isEmpty()) {
C_RETAMT = Byte.parseByte(s);
} else {
C_RETAMT = Byte.MIN_VALUE;
}
}

protected final void initC_RETCHK(String s) {
if (!s.trim().isEmpty()) {
C_RETCHK = Byte.parseByte(s);
} else {
C_RETCHK = Byte.MIN_VALUE;
}
}

protected final void initC_RETSUF(String s) {
if (!s.trim().isEmpty()) {
C_RETSUF = Byte.parseByte(s);
} else {
C_RETSUF = Byte.MIN_VALUE;
}
}

protected final void initC_RHLAND_CODE(String s) {
if (!s.trim().isEmpty()) {
C_RHLAND_CODE = Byte.parseByte(s);
} else {
C_RHLAND_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_RPHMOB_CODE(String s) {
if (!s.trim().isEmpty()) {
C_RPHMOB_CODE = Byte.parseByte(s);
} else {
C_RPHMOB_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_RPHWRK_CODE(String s) {
if (!s.trim().isEmpty()) {
C_RPHWRK_CODE = Byte.parseByte(s);
} else {
C_RPHWRK_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_RTCON1(String s) {
if (!s.trim().isEmpty()) {
C_RTCON1 = Byte.parseByte(s);
} else {
C_RTCON1 = Byte.MIN_VALUE;
}
}

protected final void initC_RTCON2(String s) {
if (!s.trim().isEmpty()) {
C_RTCON2 = Byte.parseByte(s);
} else {
C_RTCON2 = Byte.MIN_VALUE;
}
}

protected final void initC_RTCON3(String s) {
if (!s.trim().isEmpty()) {
C_RTCON3 = Byte.parseByte(s);
} else {
C_RTCON3 = Byte.MIN_VALUE;
}
}

protected final void initC_RTCON4(String s) {
if (!s.trim().isEmpty()) {
C_RTCON4 = Byte.parseByte(s);
} else {
C_RTCON4 = Byte.MIN_VALUE;
}
}

protected final void initC_RTEXPJB(String s) {
if (!s.trim().isEmpty()) {
C_RTEXPJB = Byte.parseByte(s);
} else {
C_RTEXPJB = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND1(String s) {
if (!s.trim().isEmpty()) {
C_RTFND1 = Byte.parseByte(s);
} else {
C_RTFND1 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND10(String s) {
if (!s.trim().isEmpty()) {
C_RTFND10 = Byte.parseByte(s);
} else {
C_RTFND10 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND2(String s) {
if (!s.trim().isEmpty()) {
C_RTFND2 = Byte.parseByte(s);
} else {
C_RTFND2 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND3(String s) {
if (!s.trim().isEmpty()) {
C_RTFND3 = Byte.parseByte(s);
} else {
C_RTFND3 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND4(String s) {
if (!s.trim().isEmpty()) {
C_RTFND4 = Byte.parseByte(s);
} else {
C_RTFND4 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND5(String s) {
if (!s.trim().isEmpty()) {
C_RTFND5 = Byte.parseByte(s);
} else {
C_RTFND5 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND6(String s) {
if (!s.trim().isEmpty()) {
C_RTFND6 = Byte.parseByte(s);
} else {
C_RTFND6 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND7(String s) {
if (!s.trim().isEmpty()) {
C_RTFND7 = Byte.parseByte(s);
} else {
C_RTFND7 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND8(String s) {
if (!s.trim().isEmpty()) {
C_RTFND8 = Byte.parseByte(s);
} else {
C_RTFND8 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND9(String s) {
if (!s.trim().isEmpty()) {
C_RTFND9 = Byte.parseByte(s);
} else {
C_RTFND9 = Byte.MIN_VALUE;
}
}

protected final void initC_RTFND96(String s) {
if (!s.trim().isEmpty()) {
C_RTFND96 = Byte.parseByte(s);
} else {
C_RTFND96 = Byte.MIN_VALUE;
}
}

protected final void initC_RTPRO1(String s) {
if (!s.trim().isEmpty()) {
C_RTPRO1 = Byte.parseByte(s);
} else {
C_RTPRO1 = Byte.MIN_VALUE;
}
}

protected final void initC_RTPRO2(String s) {
if (!s.trim().isEmpty()) {
C_RTPRO2 = Byte.parseByte(s);
} else {
C_RTPRO2 = Byte.MIN_VALUE;
}
}

protected final void initC_RTPRO3(String s) {
if (!s.trim().isEmpty()) {
C_RTPRO3 = Byte.parseByte(s);
} else {
C_RTPRO3 = Byte.MIN_VALUE;
}
}

protected final void initC_RTPRO4(String s) {
if (!s.trim().isEmpty()) {
C_RTPRO4 = Byte.parseByte(s);
} else {
C_RTPRO4 = Byte.MIN_VALUE;
}
}

protected final void initC_RTPRO5(String s) {
if (!s.trim().isEmpty()) {
C_RTPRO5 = Byte.parseByte(s);
} else {
C_RTPRO5 = Byte.MIN_VALUE;
}
}

protected final void initC_RTPRO6(String s) {
if (!s.trim().isEmpty()) {
C_RTPRO6 = Byte.parseByte(s);
} else {
C_RTPRO6 = Byte.MIN_VALUE;
}
}

protected final void initC_RULESKID(String s) {
if (!s.trim().isEmpty()) {
C_RULESKID = Byte.parseByte(s);
} else {
C_RULESKID = Byte.MIN_VALUE;
}
}

protected final void initC_SAMEJOB(String s) {
if (!s.trim().isEmpty()) {
C_SAMEJOB = Byte.parseByte(s);
} else {
C_SAMEJOB = Byte.MIN_VALUE;
}
}

protected final void initC_SAMPST(String s) {
if (!s.trim().isEmpty()) {
C_SAMPST = Byte.parseByte(s);
} else {
C_SAMPST = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY1(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY1 = Byte.parseByte(s);
} else {
C_SATTRANSY1 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY10(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY10 = Byte.parseByte(s);
} else {
C_SATTRANSY10 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY2(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY2 = Byte.parseByte(s);
} else {
C_SATTRANSY2 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY3(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY3 = Byte.parseByte(s);
} else {
C_SATTRANSY3 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY4(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY4 = Byte.parseByte(s);
} else {
C_SATTRANSY4 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY5(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY5 = Byte.parseByte(s);
} else {
C_SATTRANSY5 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY6(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY6 = Byte.parseByte(s);
} else {
C_SATTRANSY6 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY7(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY7 = Byte.parseByte(s);
} else {
C_SATTRANSY7 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY8(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY8 = Byte.parseByte(s);
} else {
C_SATTRANSY8 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY9(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY9 = Byte.parseByte(s);
} else {
C_SATTRANSY9 = Byte.MIN_VALUE;
}
}

protected final void initC_SATTRANSY97(String s) {
if (!s.trim().isEmpty()) {
C_SATTRANSY97 = Byte.parseByte(s);
} else {
C_SATTRANSY97 = Byte.MIN_VALUE;
}
}

protected final void initC_SCAC(String s) {
if (!s.trim().isEmpty()) {
C_SCAC = Byte.parseByte(s);
} else {
C_SCAC = Byte.MIN_VALUE;
}
}

protected final void initC_SCDASSAT_DV(String s) {
if (!s.trim().isEmpty()) {
C_SCDASSAT_DV = Byte.parseByte(s);
} else {
C_SCDASSAT_DV = Byte.MIN_VALUE;
}
}

protected final void initC_SCEND(String s) {
if (!s.trim().isEmpty()) {
C_SCEND = Byte.parseByte(s);
} else {
C_SCEND = Byte.MIN_VALUE;
}
}

protected final void initC_SCFLAG_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_SCFLAG_DV = false;
} else {
C_SCFLAG_DV = true;
}
}
}

protected final void initC_SCGHQ1_DV(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQ1_DV = Byte.parseByte(s);
} else {
C_SCGHQ1_DV = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQ2_DV(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQ2_DV = Byte.parseByte(s);
} else {
C_SCGHQ2_DV = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQA(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQA = Byte.parseByte(s);
} else {
C_SCGHQA = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQB(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQB = Byte.parseByte(s);
} else {
C_SCGHQB = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQC(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQC = Byte.parseByte(s);
} else {
C_SCGHQC = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQD(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQD = Byte.parseByte(s);
} else {
C_SCGHQD = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQE(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQE = Byte.parseByte(s);
} else {
C_SCGHQE = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQF(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQF = Byte.parseByte(s);
} else {
C_SCGHQF = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQG(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQG = Byte.parseByte(s);
} else {
C_SCGHQG = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQH(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQH = Byte.parseByte(s);
} else {
C_SCGHQH = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQI(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQI = Byte.parseByte(s);
} else {
C_SCGHQI = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQJ(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQJ = Byte.parseByte(s);
} else {
C_SCGHQJ = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQK(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQK = Byte.parseByte(s);
} else {
C_SCGHQK = Byte.MIN_VALUE;
}
}

protected final void initC_SCGHQL(String s) {
if (!s.trim().isEmpty()) {
C_SCGHQL = Byte.parseByte(s);
} else {
C_SCGHQL = Byte.MIN_VALUE;
}
}

protected final void initC_SCHLLOC(String s) {
if (!s.trim().isEmpty()) {
C_SCHLLOC = Byte.parseByte(s);
} else {
C_SCHLLOC = Byte.MIN_VALUE;
}
}

protected final void initC_SCHOK(String s) {
if (!s.trim().isEmpty()) {
C_SCHOK = Byte.parseByte(s);
} else {
C_SCHOK = Byte.MIN_VALUE;
}
}

protected final void initC_SCHOOL(String s) {
if (!s.trim().isEmpty()) {
C_SCHOOL = Byte.parseByte(s);
} else {
C_SCHOOL = Byte.MIN_VALUE;
}
}

protected final void initC_SCLFSAT1(String s) {
if (!s.trim().isEmpty()) {
C_SCLFSAT1 = Byte.parseByte(s);
} else {
C_SCLFSAT1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCLFSAT2(String s) {
if (!s.trim().isEmpty()) {
C_SCLFSAT2 = Byte.parseByte(s);
} else {
C_SCLFSAT2 = Byte.MIN_VALUE;
}
}

protected final void initC_SCLFSAT7(String s) {
if (!s.trim().isEmpty()) {
C_SCLFSAT7 = Byte.parseByte(s);
} else {
C_SCLFSAT7 = Byte.MIN_VALUE;
}
}

protected final void initC_SCLFSATO(String s) {
if (!s.trim().isEmpty()) {
C_SCLFSATO = Byte.parseByte(s);
} else {
C_SCLFSATO = Byte.MIN_VALUE;
}
}

protected final void initC_SCOPNGBHA(String s) {
if (!s.trim().isEmpty()) {
C_SCOPNGBHA = Byte.parseByte(s);
} else {
C_SCOPNGBHA = Byte.MIN_VALUE;
}
}

protected final void initC_SCOPNGBHB(String s) {
if (!s.trim().isEmpty()) {
C_SCOPNGBHB = Byte.parseByte(s);
} else {
C_SCOPNGBHB = Byte.MIN_VALUE;
}
}

protected final void initC_SCOPNGBHC(String s) {
if (!s.trim().isEmpty()) {
C_SCOPNGBHC = Byte.parseByte(s);
} else {
C_SCOPNGBHC = Byte.MIN_VALUE;
}
}

protected final void initC_SCOPNGBHD(String s) {
if (!s.trim().isEmpty()) {
C_SCOPNGBHD = Byte.parseByte(s);
} else {
C_SCOPNGBHD = Byte.MIN_VALUE;
}
}

protected final void initC_SCOPNGBHE(String s) {
if (!s.trim().isEmpty()) {
C_SCOPNGBHE = Byte.parseByte(s);
} else {
C_SCOPNGBHE = Byte.MIN_VALUE;
}
}

protected final void initC_SCOPNGBHF(String s) {
if (!s.trim().isEmpty()) {
C_SCOPNGBHF = Byte.parseByte(s);
} else {
C_SCOPNGBHF = Byte.MIN_VALUE;
}
}

protected final void initC_SCOPNGBHG(String s) {
if (!s.trim().isEmpty()) {
C_SCOPNGBHG = Byte.parseByte(s);
} else {
C_SCOPNGBHG = Byte.MIN_VALUE;
}
}

protected final void initC_SCOPNGBHH(String s) {
if (!s.trim().isEmpty()) {
C_SCOPNGBHH = Byte.parseByte(s);
} else {
C_SCOPNGBHH = Byte.MIN_VALUE;
}
}

protected final void initC_SCPAROUTINT(String s) {
if (!s.trim().isEmpty()) {
C_SCPAROUTINT = Byte.parseByte(s);
} else {
C_SCPAROUTINT = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5A1(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5A1 = Byte.parseByte(s);
} else {
C_SCPTRT5A1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5A2(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5A2 = Byte.parseByte(s);
} else {
C_SCPTRT5A2 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5A3(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5A3 = Byte.parseByte(s);
} else {
C_SCPTRT5A3 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5C1(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5C1 = Byte.parseByte(s);
} else {
C_SCPTRT5C1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5C2(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5C2 = Byte.parseByte(s);
} else {
C_SCPTRT5C2 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5C3(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5C3 = Byte.parseByte(s);
} else {
C_SCPTRT5C3 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5E1(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5E1 = Byte.parseByte(s);
} else {
C_SCPTRT5E1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5E2(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5E2 = Byte.parseByte(s);
} else {
C_SCPTRT5E2 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5E3(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5E3 = Byte.parseByte(s);
} else {
C_SCPTRT5E3 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5N1(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5N1 = Byte.parseByte(s);
} else {
C_SCPTRT5N1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5N2(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5N2 = Byte.parseByte(s);
} else {
C_SCPTRT5N2 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5N3(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5N3 = Byte.parseByte(s);
} else {
C_SCPTRT5N3 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5O1(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5O1 = Byte.parseByte(s);
} else {
C_SCPTRT5O1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5O2(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5O2 = Byte.parseByte(s);
} else {
C_SCPTRT5O2 = Byte.MIN_VALUE;
}
}

protected final void initC_SCPTRT5O3(String s) {
if (!s.trim().isEmpty()) {
C_SCPTRT5O3 = Byte.parseByte(s);
} else {
C_SCPTRT5O3 = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELHAPPY(String s) {
if (!s.trim().isEmpty()) {
C_SCRELHAPPY = Byte.parseByte(s);
} else {
C_SCRELHAPPY = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELPARAR(String s) {
if (!s.trim().isEmpty()) {
C_SCRELPARAR = Byte.parseByte(s);
} else {
C_SCRELPARAR = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELPARCD(String s) {
if (!s.trim().isEmpty()) {
C_SCRELPARCD = Byte.parseByte(s);
} else {
C_SCRELPARCD = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELPARDS(String s) {
if (!s.trim().isEmpty()) {
C_SCRELPARDS = Byte.parseByte(s);
} else {
C_SCRELPARDS = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELPAREI(String s) {
if (!s.trim().isEmpty()) {
C_SCRELPAREI = Byte.parseByte(s);
} else {
C_SCRELPAREI = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELPARIR(String s) {
if (!s.trim().isEmpty()) {
C_SCRELPARIR = Byte.parseByte(s);
} else {
C_SCRELPARIR = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELPARKS(String s) {
if (!s.trim().isEmpty()) {
C_SCRELPARKS = Byte.parseByte(s);
} else {
C_SCRELPARKS = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELPARRG(String s) {
if (!s.trim().isEmpty()) {
C_SCRELPARRG = Byte.parseByte(s);
} else {
C_SCRELPARRG = Byte.MIN_VALUE;
}
}

protected final void initC_SCRELPARWT(String s) {
if (!s.trim().isEmpty()) {
C_SCRELPARWT = Byte.parseByte(s);
} else {
C_SCRELPARWT = Byte.MIN_VALUE;
}
}

protected final void initC_SCRF1(String s) {
if (!s.trim().isEmpty()) {
C_SCRF1 = Byte.parseByte(s);
} else {
C_SCRF1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCRF2(String s) {
if (!s.trim().isEmpty()) {
C_SCRF2 = Byte.parseByte(s);
} else {
C_SCRF2 = Byte.MIN_VALUE;
}
}

protected final void initC_SCRF3(String s) {
if (!s.trim().isEmpty()) {
C_SCRF3 = Byte.parseByte(s);
} else {
C_SCRF3 = Byte.MIN_VALUE;
}
}

protected final void initC_SCRF4(String s) {
if (!s.trim().isEmpty()) {
C_SCRF4 = Byte.parseByte(s);
} else {
C_SCRF4 = Byte.MIN_VALUE;
}
}

protected final void initC_SCRF5(String s) {
if (!s.trim().isEmpty()) {
C_SCRF5 = Byte.parseByte(s);
} else {
C_SCRF5 = Byte.MIN_VALUE;
}
}

protected final void initC_SCRF6(String s) {
if (!s.trim().isEmpty()) {
C_SCRF6 = Byte.parseByte(s);
} else {
C_SCRF6 = Byte.MIN_VALUE;
}
}

protected final void initC_SCRF97(String s) {
if (!s.trim().isEmpty()) {
C_SCRF97 = Byte.parseByte(s);
} else {
C_SCRF97 = Byte.MIN_VALUE;
}
}

protected final void initC_SCRX_CODE(String s) {
if (!s.trim().isEmpty()) {
C_SCRX_CODE = Byte.parseByte(s);
} else {
C_SCRX_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF1(String s) {
if (!s.trim().isEmpty()) {
C_SCSF1 = Byte.parseByte(s);
} else {
C_SCSF1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF2A(String s) {
if (!s.trim().isEmpty()) {
C_SCSF2A = Byte.parseByte(s);
} else {
C_SCSF2A = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF2B(String s) {
if (!s.trim().isEmpty()) {
C_SCSF2B = Byte.parseByte(s);
} else {
C_SCSF2B = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF3A(String s) {
if (!s.trim().isEmpty()) {
C_SCSF3A = Byte.parseByte(s);
} else {
C_SCSF3A = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF3B(String s) {
if (!s.trim().isEmpty()) {
C_SCSF3B = Byte.parseByte(s);
} else {
C_SCSF3B = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF4A(String s) {
if (!s.trim().isEmpty()) {
C_SCSF4A = Byte.parseByte(s);
} else {
C_SCSF4A = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF4B(String s) {
if (!s.trim().isEmpty()) {
C_SCSF4B = Byte.parseByte(s);
} else {
C_SCSF4B = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF5(String s) {
if (!s.trim().isEmpty()) {
C_SCSF5 = Byte.parseByte(s);
} else {
C_SCSF5 = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF6A(String s) {
if (!s.trim().isEmpty()) {
C_SCSF6A = Byte.parseByte(s);
} else {
C_SCSF6A = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF6B(String s) {
if (!s.trim().isEmpty()) {
C_SCSF6B = Byte.parseByte(s);
} else {
C_SCSF6B = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF6C(String s) {
if (!s.trim().isEmpty()) {
C_SCSF6C = Byte.parseByte(s);
} else {
C_SCSF6C = Byte.MIN_VALUE;
}
}

protected final void initC_SCSF7(String s) {
if (!s.trim().isEmpty()) {
C_SCSF7 = Byte.parseByte(s);
} else {
C_SCSF7 = Byte.MIN_VALUE;
}
}

protected final void initC_SCUN1(String s) {
if (!s.trim().isEmpty()) {
C_SCUN1 = Byte.parseByte(s);
} else {
C_SCUN1 = Byte.MIN_VALUE;
}
}

protected final void initC_SCUN2(String s) {
if (!s.trim().isEmpty()) {
C_SCUN2 = Byte.parseByte(s);
} else {
C_SCUN2 = Byte.MIN_VALUE;
}
}

protected final void initC_SCUN3(String s) {
if (!s.trim().isEmpty()) {
C_SCUN3 = Byte.parseByte(s);
} else {
C_SCUN3 = Byte.MIN_VALUE;
}
}

protected final void initC_SCUN97(String s) {
if (!s.trim().isEmpty()) {
C_SCUN97 = Byte.parseByte(s);
} else {
C_SCUN97 = Byte.MIN_VALUE;
}
}

protected final void initC_SCUX_CODE(String s) {
if (!s.trim().isEmpty()) {
C_SCUX_CODE = Byte.parseByte(s);
} else {
C_SCUX_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_SEEARNGRS_DV(String s) {
if (!s.trim().isEmpty()) {
C_SEEARNGRS_DV = Double.parseDouble(s);
} else {
C_SEEARNGRS_DV = Double.NaN;
}
}

protected final void initC_SEEARNGRS_IF(String s) {
if (!s.trim().isEmpty()) {
C_SEEARNGRS_IF = Byte.parseByte(s);
} else {
C_SEEARNGRS_IF = Byte.MIN_VALUE;
}
}

protected final void initC_SEEARNNET_DV(String s) {
if (!s.trim().isEmpty()) {
C_SEEARNNET_DV = Double.parseDouble(s);
} else {
C_SEEARNNET_DV = Double.NaN;
}
}

protected final void initC_SEEKID(String s) {
if (!s.trim().isEmpty()) {
C_SEEKID = Byte.parseByte(s);
} else {
C_SEEKID = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACC(String s) {
if (!s.trim().isEmpty()) {
C_SERVACC = Byte.parseByte(s);
} else {
C_SERVACC = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY1(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY1 = Byte.parseByte(s);
} else {
C_SERVACCY1 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY10(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY10 = Byte.parseByte(s);
} else {
C_SERVACCY10 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY11(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY11 = Byte.parseByte(s);
} else {
C_SERVACCY11 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY12(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY12 = Byte.parseByte(s);
} else {
C_SERVACCY12 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY13(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY13 = Byte.parseByte(s);
} else {
C_SERVACCY13 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY14(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY14 = Byte.parseByte(s);
} else {
C_SERVACCY14 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY15(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY15 = Byte.parseByte(s);
} else {
C_SERVACCY15 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY2(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY2 = Byte.parseByte(s);
} else {
C_SERVACCY2 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY3(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY3 = Byte.parseByte(s);
} else {
C_SERVACCY3 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY4(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY4 = Byte.parseByte(s);
} else {
C_SERVACCY4 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY5(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY5 = Byte.parseByte(s);
} else {
C_SERVACCY5 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY6(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY6 = Byte.parseByte(s);
} else {
C_SERVACCY6 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY7(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY7 = Byte.parseByte(s);
} else {
C_SERVACCY7 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY8(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY8 = Byte.parseByte(s);
} else {
C_SERVACCY8 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY9(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY9 = Byte.parseByte(s);
} else {
C_SERVACCY9 = Byte.MIN_VALUE;
}
}

protected final void initC_SERVACCY97(String s) {
if (!s.trim().isEmpty()) {
C_SERVACCY97 = Byte.parseByte(s);
} else {
C_SERVACCY97 = Byte.MIN_VALUE;
}
}

protected final void initC_SEVENSPAP(String s) {
if (!s.trim().isEmpty()) {
C_SEVENSPAP = Byte.parseByte(s);
} else {
C_SEVENSPAP = Byte.MIN_VALUE;
}
}

protected final void initC_SEX(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
C_SEX = false;
} else {
C_SEX = true;
}
}
}

protected final void initC_SEXUOR(String s) {
if (!s.trim().isEmpty()) {
C_SEXUOR = Byte.parseByte(s);
} else {
C_SEXUOR = Byte.MIN_VALUE;
}
}

protected final void initC_SEX_DV(String s) {
if (!s.trim().isEmpty()) {
C_SEX_DV = Byte.parseByte(s);
} else {
C_SEX_DV = Byte.MIN_VALUE;
}
}

protected final void initC_SF1(String s) {
if (!s.trim().isEmpty()) {
C_SF1 = Byte.parseByte(s);
} else {
C_SF1 = Byte.MIN_VALUE;
}
}

protected final void initC_SF12MCS_DV(String s) {
if (!s.trim().isEmpty()) {
C_SF12MCS_DV = Double.parseDouble(s);
} else {
C_SF12MCS_DV = Double.NaN;
}
}

protected final void initC_SF12PCS_DV(String s) {
if (!s.trim().isEmpty()) {
C_SF12PCS_DV = Double.parseDouble(s);
} else {
C_SF12PCS_DV = Double.NaN;
}
}

protected final void initC_SIBHIT(String s) {
if (!s.trim().isEmpty()) {
C_SIBHIT = Byte.parseByte(s);
} else {
C_SIBHIT = Byte.MIN_VALUE;
}
}

protected final void initC_SIBSTEAL(String s) {
if (!s.trim().isEmpty()) {
C_SIBSTEAL = Byte.parseByte(s);
} else {
C_SIBSTEAL = Byte.MIN_VALUE;
}
}

protected final void initC_SIBTEASE(String s) {
if (!s.trim().isEmpty()) {
C_SIBTEASE = Byte.parseByte(s);
} else {
C_SIBTEASE = Byte.MIN_VALUE;
}
}

protected final void initC_SIBVERAB(String s) {
if (!s.trim().isEmpty()) {
C_SIBVERAB = Byte.parseByte(s);
} else {
C_SIBVERAB = Byte.MIN_VALUE;
}
}

protected final void initC_SIMAGE(String s) {
if (!s.trim().isEmpty()) {
C_SIMAGE = Byte.parseByte(s);
} else {
C_SIMAGE = Byte.MIN_VALUE;
}
}

protected final void initC_SIMAREA(String s) {
if (!s.trim().isEmpty()) {
C_SIMAREA = Byte.parseByte(s);
} else {
C_SIMAREA = Byte.MIN_VALUE;
}
}

protected final void initC_SIMEDUC(String s) {
if (!s.trim().isEmpty()) {
C_SIMEDUC = Byte.parseByte(s);
} else {
C_SIMEDUC = Byte.MIN_VALUE;
}
}

protected final void initC_SIMFAM(String s) {
if (!s.trim().isEmpty()) {
C_SIMFAM = Byte.parseByte(s);
} else {
C_SIMFAM = Byte.MIN_VALUE;
}
}

protected final void initC_SIMINC(String s) {
if (!s.trim().isEmpty()) {
C_SIMINC = Byte.parseByte(s);
} else {
C_SIMINC = Byte.MIN_VALUE;
}
}

protected final void initC_SIMJOB(String s) {
if (!s.trim().isEmpty()) {
C_SIMJOB = Byte.parseByte(s);
} else {
C_SIMJOB = Byte.MIN_VALUE;
}
}

protected final void initC_SIMRACE(String s) {
if (!s.trim().isEmpty()) {
C_SIMRACE = Byte.parseByte(s);
} else {
C_SIMRACE = Byte.MIN_VALUE;
}
}

protected final void initC_SINGLE_DV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
C_SINGLE_DV = false;
} else {
C_SINGLE_DV = true;
}
}
}

protected final void initC_SLAPKID(String s) {
if (!s.trim().isEmpty()) {
C_SLAPKID = Byte.parseByte(s);
} else {
C_SLAPKID = Byte.MIN_VALUE;
}
}

protected final void initC_SMKMNTH11(String s) {
if (!s.trim().isEmpty()) {
C_SMKMNTH11 = Byte.parseByte(s);
} else {
C_SMKMNTH11 = Byte.MIN_VALUE;
}
}

protected final void initC_SMKMNTH12(String s) {
if (!s.trim().isEmpty()) {
C_SMKMNTH12 = Byte.parseByte(s);
} else {
C_SMKMNTH12 = Byte.MIN_VALUE;
}
}

protected final void initC_SMKMNTH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_SMKMNTH13 = false;
} else {
C_SMKMNTH13 = true;
}
}
}

protected final void initC_SMKMNTH21(String s) {
if (!s.trim().isEmpty()) {
C_SMKMNTH21 = Byte.parseByte(s);
} else {
C_SMKMNTH21 = Byte.MIN_VALUE;
}
}

protected final void initC_SMKMNTH22(String s) {
if (!s.trim().isEmpty()) {
C_SMKMNTH22 = Byte.parseByte(s);
} else {
C_SMKMNTH22 = Byte.MIN_VALUE;
}
}

protected final void initC_SMKMNTH23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_SMKMNTH23 = false;
} else {
C_SMKMNTH23 = true;
}
}
}

protected final void initC_SMKMNTH31(String s) {
if (!s.trim().isEmpty()) {
C_SMKMNTH31 = Byte.parseByte(s);
} else {
C_SMKMNTH31 = Byte.MIN_VALUE;
}
}

protected final void initC_SMKMNTH32(String s) {
if (!s.trim().isEmpty()) {
C_SMKMNTH32 = Byte.parseByte(s);
} else {
C_SMKMNTH32 = Byte.MIN_VALUE;
}
}

protected final void initC_SMKMNTH33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_SMKMNTH33 = false;
} else {
C_SMKMNTH33 = true;
}
}
}

protected final void initC_SMOFRQ(String s) {
if (!s.trim().isEmpty()) {
C_SMOFRQ = Byte.parseByte(s);
} else {
C_SMOFRQ = Byte.MIN_VALUE;
}
}

protected final void initC_SOCIALKID(String s) {
if (!s.trim().isEmpty()) {
C_SOCIALKID = Byte.parseByte(s);
} else {
C_SOCIALKID = Byte.MIN_VALUE;
}
}

protected final void initC_SOCWEB(String s) {
if (!s.trim().isEmpty()) {
C_SOCWEB = Byte.parseByte(s);
} else {
C_SOCWEB = Byte.MIN_VALUE;
}
}

protected final void initC_SPPEN(String s) {
if (!s.trim().isEmpty()) {
C_SPPEN = Byte.parseByte(s);
} else {
C_SPPEN = Byte.MIN_VALUE;
}
}

protected final void initC_SPPID(String s) {
if (!s.trim().isEmpty()) {
C_SPPID = Integer.parseInt(s);
} else {
C_SPPID = Integer.MIN_VALUE;
}
}

protected final void initC_SPPNO(String s) {
if (!s.trim().isEmpty()) {
C_SPPNO = Byte.parseByte(s);
} else {
C_SPPNO = Byte.MIN_VALUE;
}
}

protected final void initC_STATCM1(String s) {
if (!s.trim().isEmpty()) {
C_STATCM1 = Byte.parseByte(s);
} else {
C_STATCM1 = Byte.MIN_VALUE;
}
}

protected final void initC_STATCM2(String s) {
if (!s.trim().isEmpty()) {
C_STATCM2 = Byte.parseByte(s);
} else {
C_STATCM2 = Byte.MIN_VALUE;
}
}

protected final void initC_STATCY41(String s) {
if (!s.trim().isEmpty()) {
C_STATCY41 = Short.parseShort(s);
} else {
C_STATCY41 = Short.MIN_VALUE;
}
}

protected final void initC_STATCY42(String s) {
if (!s.trim().isEmpty()) {
C_STATCY42 = Short.parseShort(s);
} else {
C_STATCY42 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDD1(String s) {
if (!s.trim().isEmpty()) {
C_STATENDD1 = Byte.parseByte(s);
} else {
C_STATENDD1 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDD2(String s) {
if (!s.trim().isEmpty()) {
C_STATENDD2 = Byte.parseByte(s);
} else {
C_STATENDD2 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDD3(String s) {
if (!s.trim().isEmpty()) {
C_STATENDD3 = Byte.parseByte(s);
} else {
C_STATENDD3 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDD4(String s) {
if (!s.trim().isEmpty()) {
C_STATENDD4 = Byte.parseByte(s);
} else {
C_STATENDD4 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDD5(String s) {
if (!s.trim().isEmpty()) {
C_STATENDD5 = Byte.parseByte(s);
} else {
C_STATENDD5 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDD6(String s) {
if (!s.trim().isEmpty()) {
C_STATENDD6 = Byte.parseByte(s);
} else {
C_STATENDD6 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDD7(String s) {
if (!s.trim().isEmpty()) {
C_STATENDD7 = Byte.parseByte(s);
} else {
C_STATENDD7 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDD8(String s) {
if (!s.trim().isEmpty()) {
C_STATENDD8 = Byte.parseByte(s);
} else {
C_STATENDD8 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDD9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_STATENDD9 = false;
} else {
C_STATENDD9 = true;
}
}
}

protected final void initC_STATENDM1(String s) {
if (!s.trim().isEmpty()) {
C_STATENDM1 = Byte.parseByte(s);
} else {
C_STATENDM1 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDM2(String s) {
if (!s.trim().isEmpty()) {
C_STATENDM2 = Byte.parseByte(s);
} else {
C_STATENDM2 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDM3(String s) {
if (!s.trim().isEmpty()) {
C_STATENDM3 = Byte.parseByte(s);
} else {
C_STATENDM3 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDM4(String s) {
if (!s.trim().isEmpty()) {
C_STATENDM4 = Byte.parseByte(s);
} else {
C_STATENDM4 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDM5(String s) {
if (!s.trim().isEmpty()) {
C_STATENDM5 = Byte.parseByte(s);
} else {
C_STATENDM5 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDM6(String s) {
if (!s.trim().isEmpty()) {
C_STATENDM6 = Byte.parseByte(s);
} else {
C_STATENDM6 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDM7(String s) {
if (!s.trim().isEmpty()) {
C_STATENDM7 = Byte.parseByte(s);
} else {
C_STATENDM7 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDM8(String s) {
if (!s.trim().isEmpty()) {
C_STATENDM8 = Byte.parseByte(s);
} else {
C_STATENDM8 = Byte.MIN_VALUE;
}
}

protected final void initC_STATENDM9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_STATENDM9 = false;
} else {
C_STATENDM9 = true;
}
}
}

protected final void initC_STATENDY41(String s) {
if (!s.trim().isEmpty()) {
C_STATENDY41 = Short.parseShort(s);
} else {
C_STATENDY41 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDY42(String s) {
if (!s.trim().isEmpty()) {
C_STATENDY42 = Short.parseShort(s);
} else {
C_STATENDY42 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDY43(String s) {
if (!s.trim().isEmpty()) {
C_STATENDY43 = Short.parseShort(s);
} else {
C_STATENDY43 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDY44(String s) {
if (!s.trim().isEmpty()) {
C_STATENDY44 = Short.parseShort(s);
} else {
C_STATENDY44 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDY45(String s) {
if (!s.trim().isEmpty()) {
C_STATENDY45 = Short.parseShort(s);
} else {
C_STATENDY45 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDY46(String s) {
if (!s.trim().isEmpty()) {
C_STATENDY46 = Short.parseShort(s);
} else {
C_STATENDY46 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDY47(String s) {
if (!s.trim().isEmpty()) {
C_STATENDY47 = Short.parseShort(s);
} else {
C_STATENDY47 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDY48(String s) {
if (!s.trim().isEmpty()) {
C_STATENDY48 = Short.parseShort(s);
} else {
C_STATENDY48 = Short.MIN_VALUE;
}
}

protected final void initC_STATENDY49(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
C_STATENDY49 = false;
} else {
C_STATENDY49 = true;
}
}
}

protected final void initC_STEALSIB(String s) {
if (!s.trim().isEmpty()) {
C_STEALSIB = Byte.parseByte(s);
} else {
C_STEALSIB = Byte.MIN_VALUE;
}
}

protected final void initC_STENDREAS(String s) {
if (!s.trim().isEmpty()) {
C_STENDREAS = Byte.parseByte(s);
} else {
C_STENDREAS = Byte.MIN_VALUE;
}
}

protected final void initC_STEPREL(String s) {
if (!s.trim().isEmpty()) {
C_STEPREL = Byte.parseByte(s);
} else {
C_STEPREL = Byte.MIN_VALUE;
}
}

protected final void initC_STRATA(String s) {
if (!s.trim().isEmpty()) {
C_STRATA = Short.parseShort(s);
} else {
C_STRATA = Short.MIN_VALUE;
}
}

protected final void initC_SUB7STOP1(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP1 = Byte.parseByte(s);
} else {
C_SUB7STOP1 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7STOP2(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP2 = Byte.parseByte(s);
} else {
C_SUB7STOP2 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7STOP3(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP3 = Byte.parseByte(s);
} else {
C_SUB7STOP3 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7STOP4(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP4 = Byte.parseByte(s);
} else {
C_SUB7STOP4 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7STOP5(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP5 = Byte.parseByte(s);
} else {
C_SUB7STOP5 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7STOP6(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP6 = Byte.parseByte(s);
} else {
C_SUB7STOP6 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7STOP7(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP7 = Byte.parseByte(s);
} else {
C_SUB7STOP7 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7STOP8(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP8 = Byte.parseByte(s);
} else {
C_SUB7STOP8 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7STOP97(String s) {
if (!s.trim().isEmpty()) {
C_SUB7STOP97 = Byte.parseByte(s);
} else {
C_SUB7STOP97 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7_1(String s) {
if (!s.trim().isEmpty()) {
C_SUB7_1 = Byte.parseByte(s);
} else {
C_SUB7_1 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7_2(String s) {
if (!s.trim().isEmpty()) {
C_SUB7_2 = Byte.parseByte(s);
} else {
C_SUB7_2 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7_3(String s) {
if (!s.trim().isEmpty()) {
C_SUB7_3 = Byte.parseByte(s);
} else {
C_SUB7_3 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7_4(String s) {
if (!s.trim().isEmpty()) {
C_SUB7_4 = Byte.parseByte(s);
} else {
C_SUB7_4 = Byte.MIN_VALUE;
}
}

protected final void initC_SUB7_5(String s) {
if (!s.trim().isEmpty()) {
C_SUB7_5 = Byte.parseByte(s);
} else {
C_SUB7_5 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT11(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT11 = Byte.parseByte(s);
} else {
C_SUBCONT11 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT12(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT12 = Byte.parseByte(s);
} else {
C_SUBCONT12 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT13(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT13 = Byte.parseByte(s);
} else {
C_SUBCONT13 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT21(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT21 = Byte.parseByte(s);
} else {
C_SUBCONT21 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT210(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT210 = Byte.parseByte(s);
} else {
C_SUBCONT210 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT211(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT211 = Byte.parseByte(s);
} else {
C_SUBCONT211 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT212(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT212 = Byte.parseByte(s);
} else {
C_SUBCONT212 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT213(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT213 = Byte.parseByte(s);
} else {
C_SUBCONT213 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT214(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT214 = Byte.parseByte(s);
} else {
C_SUBCONT214 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT215(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT215 = Byte.parseByte(s);
} else {
C_SUBCONT215 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT216(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT216 = Byte.parseByte(s);
} else {
C_SUBCONT216 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT22(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT22 = Byte.parseByte(s);
} else {
C_SUBCONT22 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT23(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT23 = Byte.parseByte(s);
} else {
C_SUBCONT23 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT24(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT24 = Byte.parseByte(s);
} else {
C_SUBCONT24 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT25(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT25 = Byte.parseByte(s);
} else {
C_SUBCONT25 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT26(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT26 = Byte.parseByte(s);
} else {
C_SUBCONT26 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT27(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT27 = Byte.parseByte(s);
} else {
C_SUBCONT27 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT28(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT28 = Byte.parseByte(s);
} else {
C_SUBCONT28 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT29(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT29 = Byte.parseByte(s);
} else {
C_SUBCONT29 = Byte.MIN_VALUE;
}
}

protected final void initC_SUBCONT3(String s) {
if (!s.trim().isEmpty()) {
C_SUBCONT3 = Byte.parseByte(s);
} else {
C_SUBCONT3 = Byte.MIN_VALUE;
}
}

protected final void initC_SUSP(String s) {
if (!s.trim().isEmpty()) {
C_SUSP = Byte.parseByte(s);
} else {
C_SUSP = Byte.MIN_VALUE;
}
}

protected final void initC_TALKMATTER(String s) {
if (!s.trim().isEmpty()) {
C_TALKMATTER = Byte.parseByte(s);
} else {
C_TALKMATTER = Byte.MIN_VALUE;
}
}

protected final void initC_TEASESIB(String s) {
if (!s.trim().isEmpty()) {
C_TEASESIB = Byte.parseByte(s);
} else {
C_TEASESIB = Byte.MIN_VALUE;
}
}

protected final void initC_TLKF(String s) {
if (!s.trim().isEmpty()) {
C_TLKF = Byte.parseByte(s);
} else {
C_TLKF = Byte.MIN_VALUE;
}
}

protected final void initC_TLKM(String s) {
if (!s.trim().isEmpty()) {
C_TLKM = Byte.parseByte(s);
} else {
C_TLKM = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINANY(String s) {
if (!s.trim().isEmpty()) {
C_TRAINANY = Byte.parseByte(s);
} else {
C_TRAINANY = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINDAYS1(String s) {
if (!s.trim().isEmpty()) {
C_TRAINDAYS1 = Short.parseShort(s);
} else {
C_TRAINDAYS1 = Short.MIN_VALUE;
}
}

protected final void initC_TRAINDAYS2(String s) {
if (!s.trim().isEmpty()) {
C_TRAINDAYS2 = Short.parseShort(s);
} else {
C_TRAINDAYS2 = Short.MIN_VALUE;
}
}

protected final void initC_TRAINDAYS3(String s) {
if (!s.trim().isEmpty()) {
C_TRAINDAYS3 = Short.parseShort(s);
} else {
C_TRAINDAYS3 = Short.MIN_VALUE;
}
}

protected final void initC_TRAINDENY(String s) {
if (!s.trim().isEmpty()) {
C_TRAINDENY = Byte.parseByte(s);
} else {
C_TRAINDENY = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINEND1(String s) {
if (!s.trim().isEmpty()) {
C_TRAINEND1 = Byte.parseByte(s);
} else {
C_TRAINEND1 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINEND2(String s) {
if (!s.trim().isEmpty()) {
C_TRAINEND2 = Byte.parseByte(s);
} else {
C_TRAINEND2 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINEND3(String s) {
if (!s.trim().isEmpty()) {
C_TRAINEND3 = Byte.parseByte(s);
} else {
C_TRAINEND3 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINHRS1(String s) {
if (!s.trim().isEmpty()) {
C_TRAINHRS1 = Byte.parseByte(s);
} else {
C_TRAINHRS1 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINHRS2(String s) {
if (!s.trim().isEmpty()) {
C_TRAINHRS2 = Byte.parseByte(s);
} else {
C_TRAINHRS2 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINHRS3(String s) {
if (!s.trim().isEmpty()) {
C_TRAINHRS3 = Byte.parseByte(s);
} else {
C_TRAINHRS3 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINN(String s) {
if (!s.trim().isEmpty()) {
C_TRAINN = Byte.parseByte(s);
} else {
C_TRAINN = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP11(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP11 = Byte.parseByte(s);
} else {
C_TRAINPURP11 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP12(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP12 = Byte.parseByte(s);
} else {
C_TRAINPURP12 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP13(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP13 = Byte.parseByte(s);
} else {
C_TRAINPURP13 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP21(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP21 = Byte.parseByte(s);
} else {
C_TRAINPURP21 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP22(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP22 = Byte.parseByte(s);
} else {
C_TRAINPURP22 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP23(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP23 = Byte.parseByte(s);
} else {
C_TRAINPURP23 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP31(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP31 = Byte.parseByte(s);
} else {
C_TRAINPURP31 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP32(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP32 = Byte.parseByte(s);
} else {
C_TRAINPURP32 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP33(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP33 = Byte.parseByte(s);
} else {
C_TRAINPURP33 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP41(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP41 = Byte.parseByte(s);
} else {
C_TRAINPURP41 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP42(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP42 = Byte.parseByte(s);
} else {
C_TRAINPURP42 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP43(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP43 = Byte.parseByte(s);
} else {
C_TRAINPURP43 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP51(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP51 = Byte.parseByte(s);
} else {
C_TRAINPURP51 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP52(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP52 = Byte.parseByte(s);
} else {
C_TRAINPURP52 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP53(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP53 = Byte.parseByte(s);
} else {
C_TRAINPURP53 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP61(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP61 = Byte.parseByte(s);
} else {
C_TRAINPURP61 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP62(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP62 = Byte.parseByte(s);
} else {
C_TRAINPURP62 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP63(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP63 = Byte.parseByte(s);
} else {
C_TRAINPURP63 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP71(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP71 = Byte.parseByte(s);
} else {
C_TRAINPURP71 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP72(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP72 = Byte.parseByte(s);
} else {
C_TRAINPURP72 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINPURP73(String s) {
if (!s.trim().isEmpty()) {
C_TRAINPURP73 = Byte.parseByte(s);
} else {
C_TRAINPURP73 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINQUAL1(String s) {
if (!s.trim().isEmpty()) {
C_TRAINQUAL1 = Byte.parseByte(s);
} else {
C_TRAINQUAL1 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINQUAL2(String s) {
if (!s.trim().isEmpty()) {
C_TRAINQUAL2 = Byte.parseByte(s);
} else {
C_TRAINQUAL2 = Byte.MIN_VALUE;
}
}

protected final void initC_TRAINQUAL3(String s) {
if (!s.trim().isEmpty()) {
C_TRAINQUAL3 = Byte.parseByte(s);
} else {
C_TRAINQUAL3 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL1(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL1 = Byte.parseByte(s);
} else {
C_TRQUAL1 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL10(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL10 = Byte.parseByte(s);
} else {
C_TRQUAL10 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL11(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL11 = Byte.parseByte(s);
} else {
C_TRQUAL11 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL13(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL13 = Byte.parseByte(s);
} else {
C_TRQUAL13 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL15(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL15 = Byte.parseByte(s);
} else {
C_TRQUAL15 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL16(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL16 = Byte.parseByte(s);
} else {
C_TRQUAL16 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL17(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL17 = Byte.parseByte(s);
} else {
C_TRQUAL17 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL18(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL18 = Byte.parseByte(s);
} else {
C_TRQUAL18 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL19(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL19 = Byte.parseByte(s);
} else {
C_TRQUAL19 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL2(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL2 = Byte.parseByte(s);
} else {
C_TRQUAL2 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL20(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL20 = Byte.parseByte(s);
} else {
C_TRQUAL20 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL21(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL21 = Byte.parseByte(s);
} else {
C_TRQUAL21 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL22(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL22 = Byte.parseByte(s);
} else {
C_TRQUAL22 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL23(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL23 = Byte.parseByte(s);
} else {
C_TRQUAL23 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL24(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL24 = Byte.parseByte(s);
} else {
C_TRQUAL24 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL25(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL25 = Byte.parseByte(s);
} else {
C_TRQUAL25 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL26(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL26 = Byte.parseByte(s);
} else {
C_TRQUAL26 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL27(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL27 = Byte.parseByte(s);
} else {
C_TRQUAL27 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL28(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL28 = Byte.parseByte(s);
} else {
C_TRQUAL28 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL29(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL29 = Byte.parseByte(s);
} else {
C_TRQUAL29 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL3(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL3 = Byte.parseByte(s);
} else {
C_TRQUAL3 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL30(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL30 = Byte.parseByte(s);
} else {
C_TRQUAL30 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL31(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL31 = Byte.parseByte(s);
} else {
C_TRQUAL31 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL4(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL4 = Byte.parseByte(s);
} else {
C_TRQUAL4 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL5(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL5 = Byte.parseByte(s);
} else {
C_TRQUAL5 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL6(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL6 = Byte.parseByte(s);
} else {
C_TRQUAL6 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL7(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL7 = Byte.parseByte(s);
} else {
C_TRQUAL7 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL8(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL8 = Byte.parseByte(s);
} else {
C_TRQUAL8 = Byte.MIN_VALUE;
}
}

protected final void initC_TRQUAL9(String s) {
if (!s.trim().isEmpty()) {
C_TRQUAL9 = Byte.parseByte(s);
} else {
C_TRQUAL9 = Byte.MIN_VALUE;
}
}

protected final void initC_TRWHO1(String s) {
if (!s.trim().isEmpty()) {
C_TRWHO1 = Byte.parseByte(s);
} else {
C_TRWHO1 = Byte.MIN_VALUE;
}
}

protected final void initC_TRWHO2(String s) {
if (!s.trim().isEmpty()) {
C_TRWHO2 = Byte.parseByte(s);
} else {
C_TRWHO2 = Byte.MIN_VALUE;
}
}

protected final void initC_TRWHO3(String s) {
if (!s.trim().isEmpty()) {
C_TRWHO3 = Byte.parseByte(s);
} else {
C_TRWHO3 = Byte.MIN_VALUE;
}
}

protected final void initC_TVHOURS(String s) {
if (!s.trim().isEmpty()) {
C_TVHOURS = Double.parseDouble(s);
} else {
C_TVHOURS = Double.NaN;
}
}

protected final void initC_TVM2(String s) {
if (!s.trim().isEmpty()) {
C_TVM2 = Byte.parseByte(s);
} else {
C_TVM2 = Byte.MIN_VALUE;
}
}

protected final void initC_UKBORN(String s) {
if (!s.trim().isEmpty()) {
C_UKBORN = Byte.parseByte(s);
} else {
C_UKBORN = Byte.MIN_VALUE;
}
}

protected final void initC_UNDQUS(String s) {
if (!s.trim().isEmpty()) {
C_UNDQUS = Byte.parseByte(s);
} else {
C_UNDQUS = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE1(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE1 = Byte.parseByte(s);
} else {
C_UNSAFE1 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE10(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE10 = Byte.parseByte(s);
} else {
C_UNSAFE10 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE11(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE11 = Byte.parseByte(s);
} else {
C_UNSAFE11 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE2(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE2 = Byte.parseByte(s);
} else {
C_UNSAFE2 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE3(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE3 = Byte.parseByte(s);
} else {
C_UNSAFE3 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE4(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE4 = Byte.parseByte(s);
} else {
C_UNSAFE4 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE5(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE5 = Byte.parseByte(s);
} else {
C_UNSAFE5 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE6(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE6 = Byte.parseByte(s);
} else {
C_UNSAFE6 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE7(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE7 = Byte.parseByte(s);
} else {
C_UNSAFE7 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE8(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE8 = Byte.parseByte(s);
} else {
C_UNSAFE8 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE9(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE9 = Byte.parseByte(s);
} else {
C_UNSAFE9 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE96(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE96 = Byte.parseByte(s);
} else {
C_UNSAFE96 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE97(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE97 = Byte.parseByte(s);
} else {
C_UNSAFE97 = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFEO_CODE(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFEO_CODE = Byte.parseByte(s);
} else {
C_UNSAFEO_CODE = Byte.MIN_VALUE;
}
}

protected final void initC_UNSAFE_DV(String s) {
if (!s.trim().isEmpty()) {
C_UNSAFE_DV = Byte.parseByte(s);
} else {
C_UNSAFE_DV = Byte.MIN_VALUE;
}
}

protected final void initC_UPSET(String s) {
if (!s.trim().isEmpty()) {
C_UPSET = Byte.parseByte(s);
} else {
C_UPSET = Byte.MIN_VALUE;
}
}

protected final void initC_URBAN_DV(String s) {
if (!s.trim().isEmpty()) {
C_URBAN_DV = Byte.parseByte(s);
} else {
C_URBAN_DV = Byte.MIN_VALUE;
}
}

protected final void initC_VERABSIB(String s) {
if (!s.trim().isEmpty()) {
C_VERABSIB = Byte.parseByte(s);
} else {
C_VERABSIB = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT11(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT11 = Byte.parseByte(s);
} else {
C_VFCONT11 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT12(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT12 = Byte.parseByte(s);
} else {
C_VFCONT12 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT13(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT13 = Byte.parseByte(s);
} else {
C_VFCONT13 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT21(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT21 = Byte.parseByte(s);
} else {
C_VFCONT21 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT210(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT210 = Byte.parseByte(s);
} else {
C_VFCONT210 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT211(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT211 = Byte.parseByte(s);
} else {
C_VFCONT211 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT212(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT212 = Byte.parseByte(s);
} else {
C_VFCONT212 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT213(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT213 = Byte.parseByte(s);
} else {
C_VFCONT213 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT214(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT214 = Byte.parseByte(s);
} else {
C_VFCONT214 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT215(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT215 = Byte.parseByte(s);
} else {
C_VFCONT215 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT216(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT216 = Byte.parseByte(s);
} else {
C_VFCONT216 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT22(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT22 = Byte.parseByte(s);
} else {
C_VFCONT22 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT23(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT23 = Byte.parseByte(s);
} else {
C_VFCONT23 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT24(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT24 = Byte.parseByte(s);
} else {
C_VFCONT24 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT25(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT25 = Byte.parseByte(s);
} else {
C_VFCONT25 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT26(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT26 = Byte.parseByte(s);
} else {
C_VFCONT26 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT27(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT27 = Byte.parseByte(s);
} else {
C_VFCONT27 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT28(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT28 = Byte.parseByte(s);
} else {
C_VFCONT28 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT29(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT29 = Byte.parseByte(s);
} else {
C_VFCONT29 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCONT3(String s) {
if (!s.trim().isEmpty()) {
C_VFCONT3 = Byte.parseByte(s);
} else {
C_VFCONT3 = Byte.MIN_VALUE;
}
}

protected final void initC_VFCT(String s) {
if (!s.trim().isEmpty()) {
C_VFCT = Byte.parseByte(s);
} else {
C_VFCT = Byte.MIN_VALUE;
}
}

protected final void initC_VFPRE(String s) {
if (!s.trim().isEmpty()) {
C_VFPRE = Byte.parseByte(s);
} else {
C_VFPRE = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP1(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP1 = Byte.parseByte(s);
} else {
C_VFSTOP1 = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP2(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP2 = Byte.parseByte(s);
} else {
C_VFSTOP2 = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP3(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP3 = Byte.parseByte(s);
} else {
C_VFSTOP3 = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP4(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP4 = Byte.parseByte(s);
} else {
C_VFSTOP4 = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP5(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP5 = Byte.parseByte(s);
} else {
C_VFSTOP5 = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP6(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP6 = Byte.parseByte(s);
} else {
C_VFSTOP6 = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP7(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP7 = Byte.parseByte(s);
} else {
C_VFSTOP7 = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP8(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP8 = Byte.parseByte(s);
} else {
C_VFSTOP8 = Byte.MIN_VALUE;
}
}

protected final void initC_VFSTOP97(String s) {
if (!s.trim().isEmpty()) {
C_VFSTOP97 = Byte.parseByte(s);
} else {
C_VFSTOP97 = Byte.MIN_VALUE;
}
}

protected final void initC_VFTCTW(String s) {
if (!s.trim().isEmpty()) {
C_VFTCTW = Byte.parseByte(s);
} else {
C_VFTCTW = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAM(String s) {
if (!s.trim().isEmpty()) {
C_VISFAM = Byte.parseByte(s);
} else {
C_VISFAM = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY1(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY1 = Byte.parseByte(s);
} else {
C_VISFAMY1 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY10(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY10 = Byte.parseByte(s);
} else {
C_VISFAMY10 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY11(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY11 = Byte.parseByte(s);
} else {
C_VISFAMY11 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY12(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY12 = Byte.parseByte(s);
} else {
C_VISFAMY12 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY13(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY13 = Byte.parseByte(s);
} else {
C_VISFAMY13 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY14(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY14 = Byte.parseByte(s);
} else {
C_VISFAMY14 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY15(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY15 = Byte.parseByte(s);
} else {
C_VISFAMY15 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY2(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY2 = Byte.parseByte(s);
} else {
C_VISFAMY2 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY3(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY3 = Byte.parseByte(s);
} else {
C_VISFAMY3 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY4(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY4 = Byte.parseByte(s);
} else {
C_VISFAMY4 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY5(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY5 = Byte.parseByte(s);
} else {
C_VISFAMY5 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY6(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY6 = Byte.parseByte(s);
} else {
C_VISFAMY6 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY7(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY7 = Byte.parseByte(s);
} else {
C_VISFAMY7 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY8(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY8 = Byte.parseByte(s);
} else {
C_VISFAMY8 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY9(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY9 = Byte.parseByte(s);
} else {
C_VISFAMY9 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFAMY97(String s) {
if (!s.trim().isEmpty()) {
C_VISFAMY97 = Byte.parseByte(s);
} else {
C_VISFAMY97 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDS(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDS = Byte.parseByte(s);
} else {
C_VISFRNDS = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY1(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY1 = Byte.parseByte(s);
} else {
C_VISFRNDSY1 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY10(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY10 = Byte.parseByte(s);
} else {
C_VISFRNDSY10 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY11(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY11 = Byte.parseByte(s);
} else {
C_VISFRNDSY11 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY12(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY12 = Byte.parseByte(s);
} else {
C_VISFRNDSY12 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY13(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY13 = Byte.parseByte(s);
} else {
C_VISFRNDSY13 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY14(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY14 = Byte.parseByte(s);
} else {
C_VISFRNDSY14 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY2(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY2 = Byte.parseByte(s);
} else {
C_VISFRNDSY2 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY3(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY3 = Byte.parseByte(s);
} else {
C_VISFRNDSY3 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY4(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY4 = Byte.parseByte(s);
} else {
C_VISFRNDSY4 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY5(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY5 = Byte.parseByte(s);
} else {
C_VISFRNDSY5 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY6(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY6 = Byte.parseByte(s);
} else {
C_VISFRNDSY6 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY7(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY7 = Byte.parseByte(s);
} else {
C_VISFRNDSY7 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY8(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY8 = Byte.parseByte(s);
} else {
C_VISFRNDSY8 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY9(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY9 = Byte.parseByte(s);
} else {
C_VISFRNDSY9 = Byte.MIN_VALUE;
}
}

protected final void initC_VISFRNDSY97(String s) {
if (!s.trim().isEmpty()) {
C_VISFRNDSY97 = Byte.parseByte(s);
} else {
C_VISFRNDSY97 = Byte.MIN_VALUE;
}
}

protected final void initC_VOLRECPER(String s) {
if (!s.trim().isEmpty()) {
C_VOLRECPER = Byte.parseByte(s);
} else {
C_VOLRECPER = Byte.MIN_VALUE;
}
}

protected final void initC_VOTE1(String s) {
if (!s.trim().isEmpty()) {
C_VOTE1 = Byte.parseByte(s);
} else {
C_VOTE1 = Byte.MIN_VALUE;
}
}

protected final void initC_VOTE2(String s) {
if (!s.trim().isEmpty()) {
C_VOTE2 = Byte.parseByte(s);
} else {
C_VOTE2 = Byte.MIN_VALUE;
}
}

protected final void initC_VOTE3(String s) {
if (!s.trim().isEmpty()) {
C_VOTE3 = Byte.parseByte(s);
} else {
C_VOTE3 = Byte.MIN_VALUE;
}
}

protected final void initC_VOTE4(String s) {
if (!s.trim().isEmpty()) {
C_VOTE4 = Byte.parseByte(s);
} else {
C_VOTE4 = Byte.MIN_VALUE;
}
}

protected final void initC_VOTE5(String s) {
if (!s.trim().isEmpty()) {
C_VOTE5 = Byte.parseByte(s);
} else {
C_VOTE5 = Byte.MIN_VALUE;
}
}

protected final void initC_VOTE6(String s) {
if (!s.trim().isEmpty()) {
C_VOTE6 = Byte.parseByte(s);
} else {
C_VOTE6 = Byte.MIN_VALUE;
}
}

protected final void initC_VOTEINTENT(String s) {
if (!s.trim().isEmpty()) {
C_VOTEINTENT = Byte.parseByte(s);
} else {
C_VOTEINTENT = Byte.MIN_VALUE;
}
}

protected final void initC_VOTENORM(String s) {
if (!s.trim().isEmpty()) {
C_VOTENORM = Byte.parseByte(s);
} else {
C_VOTENORM = Byte.MIN_VALUE;
}
}

protected final void initC_WEKID(String s) {
if (!s.trim().isEmpty()) {
C_WEKID = Byte.parseByte(s);
} else {
C_WEKID = Byte.MIN_VALUE;
}
}

protected final void initC_WHORUAGE(String s) {
if (!s.trim().isEmpty()) {
C_WHORUAGE = Byte.parseByte(s);
} else {
C_WHORUAGE = Byte.MIN_VALUE;
}
}

protected final void initC_WHORUEDU(String s) {
if (!s.trim().isEmpty()) {
C_WHORUEDU = Byte.parseByte(s);
} else {
C_WHORUEDU = Byte.MIN_VALUE;
}
}

protected final void initC_WHORUFAM(String s) {
if (!s.trim().isEmpty()) {
C_WHORUFAM = Byte.parseByte(s);
} else {
C_WHORUFAM = Byte.MIN_VALUE;
}
}

protected final void initC_WHORUPOL(String s) {
if (!s.trim().isEmpty()) {
C_WHORUPOL = Byte.parseByte(s);
} else {
C_WHORUPOL = Byte.MIN_VALUE;
}
}

protected final void initC_WHORUPRO(String s) {
if (!s.trim().isEmpty()) {
C_WHORUPRO = Byte.parseByte(s);
} else {
C_WHORUPRO = Byte.MIN_VALUE;
}
}

protected final void initC_WHORURAC(String s) {
if (!s.trim().isEmpty()) {
C_WHORURAC = Byte.parseByte(s);
} else {
C_WHORURAC = Byte.MIN_VALUE;
}
}

protected final void initC_WHORUSEX(String s) {
if (!s.trim().isEmpty()) {
C_WHORUSEX = Byte.parseByte(s);
} else {
C_WHORUSEX = Byte.MIN_VALUE;
}
}

protected final void initC_WKPLSAM(String s) {
if (!s.trim().isEmpty()) {
C_WKPLSAM = Byte.parseByte(s);
} else {
C_WKPLSAM = Byte.MIN_VALUE;
}
}

protected final void initC_WORDS1(String s) {
if (!s.trim().isEmpty()) {
C_WORDS1 = Byte.parseByte(s);
} else {
C_WORDS1 = Byte.MIN_VALUE;
}
}

protected final void initC_WORDS2(String s) {
if (!s.trim().isEmpty()) {
C_WORDS2 = Byte.parseByte(s);
} else {
C_WORDS2 = Byte.MIN_VALUE;
}
}

protected final void initC_WORDS3(String s) {
if (!s.trim().isEmpty()) {
C_WORDS3 = Byte.parseByte(s);
} else {
C_WORDS3 = Byte.MIN_VALUE;
}
}

protected final void initC_WORDS4(String s) {
if (!s.trim().isEmpty()) {
C_WORDS4 = Byte.parseByte(s);
} else {
C_WORDS4 = Byte.MIN_VALUE;
}
}

protected final void initC_WORKTRAV(String s) {
if (!s.trim().isEmpty()) {
C_WORKTRAV = Byte.parseByte(s);
} else {
C_WORKTRAV = Byte.MIN_VALUE;
}
}

protected final void initC_WRCOMPPRE(String s) {
if (!s.trim().isEmpty()) {
C_WRCOMPPRE = Byte.parseByte(s);
} else {
C_WRCOMPPRE = Byte.MIN_VALUE;
}
}

protected final void initC_WRDRCL(String s) {
if (!s.trim().isEmpty()) {
C_WRDRCL = Byte.parseByte(s);
} else {
C_WRDRCL = Byte.MIN_VALUE;
}
}

protected final void initC_WRDRECPRE(String s) {
if (!s.trim().isEmpty()) {
C_WRDRECPRE = Byte.parseByte(s);
} else {
C_WRDRECPRE = Byte.MIN_VALUE;
}
}

protected final void initC_WRINTPRE(String s) {
if (!s.trim().isEmpty()) {
C_WRINTPRE = Byte.parseByte(s);
} else {
C_WRINTPRE = Byte.MIN_VALUE;
}
}

protected final void initC_XPMOVE(String s) {
if (!s.trim().isEmpty()) {
C_XPMOVE = Byte.parseByte(s);
} else {
C_XPMOVE = Byte.MIN_VALUE;
}
}

protected final void initC_XTRA5MINOSM_DV(String s) {
if (!s.trim().isEmpty()) {
C_XTRA5MINOSM_DV = Byte.parseByte(s);
} else {
C_XTRA5MINOSM_DV = Byte.MIN_VALUE;
}
}

protected final void initC_XTRA5MIN_DV(String s) {
if (!s.trim().isEmpty()) {
C_XTRA5MIN_DV = Byte.parseByte(s);
} else {
C_XTRA5MIN_DV = Byte.MIN_VALUE;
}
}

protected final void initC_YAJBSRV1(String s) {
if (!s.trim().isEmpty()) {
C_YAJBSRV1 = Byte.parseByte(s);
} else {
C_YAJBSRV1 = Byte.MIN_VALUE;
}
}

protected final void initC_YAJBSRV2(String s) {
if (!s.trim().isEmpty()) {
C_YAJBSRV2 = Byte.parseByte(s);
} else {
C_YAJBSRV2 = Byte.MIN_VALUE;
}
}

protected final void initC_YAJBSRV3(String s) {
if (!s.trim().isEmpty()) {
C_YAJBSRV3 = Byte.parseByte(s);
} else {
C_YAJBSRV3 = Byte.MIN_VALUE;
}
}

protected final void initC_YAJBSRV4(String s) {
if (!s.trim().isEmpty()) {
C_YAJBSRV4 = Byte.parseByte(s);
} else {
C_YAJBSRV4 = Byte.MIN_VALUE;
}
}

protected final void initC_YAJBSRV5(String s) {
if (!s.trim().isEmpty()) {
C_YAJBSRV5 = Byte.parseByte(s);
} else {
C_YAJBSRV5 = Byte.MIN_VALUE;
}
}

protected final void initC_YAJBSRV6(String s) {
if (!s.trim().isEmpty()) {
C_YAJBSRV6 = Byte.parseByte(s);
} else {
C_YAJBSRV6 = Byte.MIN_VALUE;
}
}

protected final void initC_YAJBSRV7(String s) {
if (!s.trim().isEmpty()) {
C_YAJBSRV7 = Byte.parseByte(s);
} else {
C_YAJBSRV7 = Byte.MIN_VALUE;
}
}

protected final void initC_YAJBSRV96(String s) {
if (!s.trim().isEmpty()) {
C_YAJBSRV96 = Byte.parseByte(s);
} else {
C_YAJBSRV96 = Byte.MIN_VALUE;
}
}

protected final void initC_YANSSEC5_DV(String s) {
if (!s.trim().isEmpty()) {
C_YANSSEC5_DV = Byte.parseByte(s);
} else {
C_YANSSEC5_DV = Byte.MIN_VALUE;
}
}

protected final void initC_YASOC00_CC(String s) {
if (!s.trim().isEmpty()) {
C_YASOC00_CC = Short.parseShort(s);
} else {
C_YASOC00_CC = Short.MIN_VALUE;
}
}

protected final void initC_YASOC10_CC(String s) {
if (!s.trim().isEmpty()) {
C_YASOC10_CC = Short.parseShort(s);
} else {
C_YASOC10_CC = Short.MIN_VALUE;
}
}

protected final void initC_YASOC90_CC(String s) {
if (!s.trim().isEmpty()) {
C_YASOC90_CC = Byte.parseByte(s);
} else {
C_YASOC90_CC = Byte.MIN_VALUE;
}
}

protected final void initC_YELLKID(String s) {
if (!s.trim().isEmpty()) {
C_YELLKID = Byte.parseByte(s);
} else {
C_YELLKID = Byte.MIN_VALUE;
}
}

protected final void initC_YR2UK4(String s) {
if (!s.trim().isEmpty()) {
C_YR2UK4 = Short.parseShort(s);
} else {
C_YR2UK4 = Short.MIN_VALUE;
}
}

public byte getC_ADCTS() {
return C_ADCTS;
}

public byte getC_ADOPTCH01() {
return C_ADOPTCH01;
}

public byte getC_ADOPTCH02() {
return C_ADOPTCH02;
}

public byte getC_ADOPTCH03() {
return C_ADOPTCH03;
}

public byte getC_ADOPTCH04() {
return C_ADOPTCH04;
}

public byte getC_ADOPTCH05() {
return C_ADOPTCH05;
}

public boolean getC_ADOPTCH06() {
return C_ADOPTCH06;
}

public boolean getC_ADOPTCH07() {
return C_ADOPTCH07;
}

public boolean getC_ADOPTCH08() {
return C_ADOPTCH08;
}

public boolean getC_ADOPTCH09() {
return C_ADOPTCH09;
}

public boolean getC_ADOPTCH10() {
return C_ADOPTCH10;
}

public boolean getC_ADOPTCH11() {
return C_ADOPTCH11;
}

public boolean getC_ADOPTCH12() {
return C_ADOPTCH12;
}

public boolean getC_ADOPTCH13() {
return C_ADOPTCH13;
}

public boolean getC_ADOPTCH14() {
return C_ADOPTCH14;
}

public boolean getC_ADOPTCH15() {
return C_ADOPTCH15;
}

public boolean getC_ADOPTCH16() {
return C_ADOPTCH16;
}

public byte getC_ADSTATUS() {
return C_ADSTATUS;
}

public byte getC_AEDROF1() {
return C_AEDROF1;
}

public byte getC_AEDROF2() {
return C_AEDROF2;
}

public boolean getC_AEDROF3() {
return C_AEDROF3;
}

protected double C_AEPUDA1() {
return C_AEPUDA1;
}

public byte getC_AEPUDA2() {
return C_AEPUDA2;
}

public boolean getC_AEPUDA3() {
return C_AEPUDA3;
}

public byte getC_AEPUWK1() {
return C_AEPUWK1;
}

public boolean getC_AEPUWK2() {
return C_AEPUWK2;
}

public boolean getC_AEPUWK3() {
return C_AEPUWK3;
}

public byte getC_AGEGR10_DV() {
return C_AGEGR10_DV;
}

public byte getC_AGEGR13_DV() {
return C_AGEGR13_DV;
}

public byte getC_AGEGR5_DV() {
return C_AGEGR5_DV;
}

public byte getC_AGERET() {
return C_AGERET;
}

public byte getC_AGE_DV() {
return C_AGE_DV;
}

public byte getC_AHVWELL() {
return C_AHVWELL;
}

public byte getC_AIDEFT() {
return C_AIDEFT;
}

public byte getC_AIDHH() {
return C_AIDHH;
}

public byte getC_AIDHRS() {
return C_AIDHRS;
}

public byte getC_AIDHU1() {
return C_AIDHU1;
}

public byte getC_AIDHU2() {
return C_AIDHU2;
}

public byte getC_AIDHUA1() {
return C_AIDHUA1;
}

public byte getC_AIDHUA10() {
return C_AIDHUA10;
}

public byte getC_AIDHUA11() {
return C_AIDHUA11;
}

public byte getC_AIDHUA12() {
return C_AIDHUA12;
}

public byte getC_AIDHUA13() {
return C_AIDHUA13;
}

public byte getC_AIDHUA14() {
return C_AIDHUA14;
}

public byte getC_AIDHUA15() {
return C_AIDHUA15;
}

public byte getC_AIDHUA16() {
return C_AIDHUA16;
}

public byte getC_AIDHUA2() {
return C_AIDHUA2;
}

public byte getC_AIDHUA3() {
return C_AIDHUA3;
}

public byte getC_AIDHUA4() {
return C_AIDHUA4;
}

public byte getC_AIDHUA5() {
return C_AIDHUA5;
}

public byte getC_AIDHUA6() {
return C_AIDHUA6;
}

public byte getC_AIDHUA7() {
return C_AIDHUA7;
}

public byte getC_AIDHUA8() {
return C_AIDHUA8;
}

public byte getC_AIDHUA9() {
return C_AIDHUA9;
}

public byte getC_AIDXHH() {
return C_AIDXHH;
}

public byte getC_ALLCH01() {
return C_ALLCH01;
}

public byte getC_ALLCH02() {
return C_ALLCH02;
}

public byte getC_ALLCH03() {
return C_ALLCH03;
}

public byte getC_ALLCH04() {
return C_ALLCH04;
}

public byte getC_ALLCH05() {
return C_ALLCH05;
}

public byte getC_ALLCH06() {
return C_ALLCH06;
}

public byte getC_ALLCH07() {
return C_ALLCH07;
}

public byte getC_ALLCH08() {
return C_ALLCH08;
}

public boolean getC_ALLCH09() {
return C_ALLCH09;
}

public boolean getC_ALLCH10() {
return C_ALLCH10;
}

public boolean getC_ALLCH11() {
return C_ALLCH11;
}

public boolean getC_ALLCH12() {
return C_ALLCH12;
}

public boolean getC_ALLCH13() {
return C_ALLCH13;
}

public boolean getC_ALLCH14() {
return C_ALLCH14;
}

public boolean getC_ALLCH15() {
return C_ALLCH15;
}

public boolean getC_ALLCH16() {
return C_ALLCH16;
}

public byte getC_APVOCIMP() {
return C_APVOCIMP;
}

public byte getC_AREA() {
return C_AREA;
}

public byte getC_ARGF() {
return C_ARGF;
}

public byte getC_ARGM() {
return C_ARGM;
}

public byte getC_ATTACKED1() {
return C_ATTACKED1;
}

public byte getC_ATTACKED10() {
return C_ATTACKED10;
}

public byte getC_ATTACKED11() {
return C_ATTACKED11;
}

public byte getC_ATTACKED2() {
return C_ATTACKED2;
}

public byte getC_ATTACKED3() {
return C_ATTACKED3;
}

public byte getC_ATTACKED4() {
return C_ATTACKED4;
}

public byte getC_ATTACKED5() {
return C_ATTACKED5;
}

public byte getC_ATTACKED6() {
return C_ATTACKED6;
}

public byte getC_ATTACKED7() {
return C_ATTACKED7;
}

public byte getC_ATTACKED8() {
return C_ATTACKED8;
}

public byte getC_ATTACKED9() {
return C_ATTACKED9;
}

public byte getC_ATTACKED96() {
return C_ATTACKED96;
}

public byte getC_ATTACKED97() {
return C_ATTACKED97;
}

public byte getC_ATTACKEDO_CODE() {
return C_ATTACKEDO_CODE;
}

public byte getC_ATTACKED_DV() {
return C_ATTACKED_DV;
}

public byte getC_AVOIDANCE1() {
return C_AVOIDANCE1;
}

public byte getC_AVOIDANCE10() {
return C_AVOIDANCE10;
}

public byte getC_AVOIDANCE11() {
return C_AVOIDANCE11;
}

public byte getC_AVOIDANCE2() {
return C_AVOIDANCE2;
}

public byte getC_AVOIDANCE3() {
return C_AVOIDANCE3;
}

public byte getC_AVOIDANCE4() {
return C_AVOIDANCE4;
}

public byte getC_AVOIDANCE5() {
return C_AVOIDANCE5;
}

public byte getC_AVOIDANCE6() {
return C_AVOIDANCE6;
}

public byte getC_AVOIDANCE7() {
return C_AVOIDANCE7;
}

public byte getC_AVOIDANCE8() {
return C_AVOIDANCE8;
}

public byte getC_AVOIDANCE9() {
return C_AVOIDANCE9;
}

public byte getC_AVOIDANCE96() {
return C_AVOIDANCE96;
}

public byte getC_AVOIDANCE97() {
return C_AVOIDANCE97;
}

public byte getC_AVOIDANCEO_CODE() {
return C_AVOIDANCEO_CODE;
}

public byte getC_AVOIDED_DV() {
return C_AVOIDED_DV;
}

public byte getC_BASNSA() {
return C_BASNSA;
}

protected double C_BASRATE() {
return C_BASRATE;
}

public byte getC_BASREST() {
return C_BASREST;
}

public byte getC_BENCB() {
return C_BENCB;
}

public byte getC_BENCTC() {
return C_BENCTC;
}

public byte getC_BENDIS1() {
return C_BENDIS1;
}

public byte getC_BENDIS10() {
return C_BENDIS10;
}

public byte getC_BENDIS12() {
return C_BENDIS12;
}

public byte getC_BENDIS13() {
return C_BENDIS13;
}

public byte getC_BENDIS14() {
return C_BENDIS14;
}

public byte getC_BENDIS15() {
return C_BENDIS15;
}

public byte getC_BENDIS16() {
return C_BENDIS16;
}

public byte getC_BENDIS2() {
return C_BENDIS2;
}

public byte getC_BENDIS3() {
return C_BENDIS3;
}

public byte getC_BENDIS4() {
return C_BENDIS4;
}

public byte getC_BENDIS5() {
return C_BENDIS5;
}

public byte getC_BENDIS6() {
return C_BENDIS6;
}

public byte getC_BENDIS7() {
return C_BENDIS7;
}

public byte getC_BENDIS8() {
return C_BENDIS8;
}

public byte getC_BENDIS9() {
return C_BENDIS9;
}

public byte getC_BENDIS96() {
return C_BENDIS96;
}

public byte getC_BENDIS97() {
return C_BENDIS97;
}

public byte getC_BENFAM1() {
return C_BENFAM1;
}

public byte getC_BENFAM10() {
return C_BENFAM10;
}

public byte getC_BENFAM2() {
return C_BENFAM2;
}

public byte getC_BENFAM3() {
return C_BENFAM3;
}

public byte getC_BENFAM4() {
return C_BENFAM4;
}

public byte getC_BENFAM5() {
return C_BENFAM5;
}

public byte getC_BENFAM6() {
return C_BENFAM6;
}

public byte getC_BENFAM7() {
return C_BENFAM7;
}

public byte getC_BENFAM8() {
return C_BENFAM8;
}

public byte getC_BENFAM9() {
return C_BENFAM9;
}

public byte getC_BENFAM96() {
return C_BENFAM96;
}

public byte getC_BENHOU1() {
return C_BENHOU1;
}

public byte getC_BENHOU2() {
return C_BENHOU2;
}

public byte getC_BENHOU3() {
return C_BENHOU3;
}

public byte getC_BENHOU4() {
return C_BENHOU4;
}

public byte getC_BENHOU5() {
return C_BENHOU5;
}

public byte getC_BENHOU6() {
return C_BENHOU6;
}

public byte getC_BENHOU7() {
return C_BENHOU7;
}

public byte getC_BENHOU8() {
return C_BENHOU8;
}

public byte getC_BENHOU9() {
return C_BENHOU9;
}

public byte getC_BENHOU96() {
return C_BENHOU96;
}

public byte getC_BENPEN1() {
return C_BENPEN1;
}

public byte getC_BENPEN10() {
return C_BENPEN10;
}

public byte getC_BENPEN11() {
return C_BENPEN11;
}

public byte getC_BENPEN12() {
return C_BENPEN12;
}

public byte getC_BENPEN13() {
return C_BENPEN13;
}

public byte getC_BENPEN2() {
return C_BENPEN2;
}

public byte getC_BENPEN3() {
return C_BENPEN3;
}

public byte getC_BENPEN4() {
return C_BENPEN4;
}

public byte getC_BENPEN5() {
return C_BENPEN5;
}

public byte getC_BENPEN6() {
return C_BENPEN6;
}

public byte getC_BENPEN7() {
return C_BENPEN7;
}

public byte getC_BENPEN8() {
return C_BENPEN8;
}

public byte getC_BENPEN9() {
return C_BENPEN9;
}

public byte getC_BENPEN96() {
return C_BENPEN96;
}

public byte getC_BENSTA1() {
return C_BENSTA1;
}

public byte getC_BENSTA10() {
return C_BENSTA10;
}

public byte getC_BENSTA11() {
return C_BENSTA11;
}

public byte getC_BENSTA12() {
return C_BENSTA12;
}

public byte getC_BENSTA13() {
return C_BENSTA13;
}

public byte getC_BENSTA2() {
return C_BENSTA2;
}

public byte getC_BENSTA3() {
return C_BENSTA3;
}

public byte getC_BENSTA4() {
return C_BENSTA4;
}

public byte getC_BENSTA5() {
return C_BENSTA5;
}

public byte getC_BENSTA6() {
return C_BENSTA6;
}

public byte getC_BENSTA7() {
return C_BENSTA7;
}

public byte getC_BENSTA9() {
return C_BENSTA9;
}

public byte getC_BENSTA96() {
return C_BENSTA96;
}

public byte getC_BENSTA97() {
return C_BENSTA97;
}

public byte getC_BENTAX1() {
return C_BENTAX1;
}

public byte getC_BENTAX10() {
return C_BENTAX10;
}

public byte getC_BENTAX2() {
return C_BENTAX2;
}

public byte getC_BENTAX3() {
return C_BENTAX3;
}

public byte getC_BENTAX4() {
return C_BENTAX4;
}

public byte getC_BENTAX5() {
return C_BENTAX5;
}

public byte getC_BENTAX6() {
return C_BENTAX6;
}

public byte getC_BENTAX7() {
return C_BENTAX7;
}

public byte getC_BENTAX8() {
return C_BENTAX8;
}

public byte getC_BENTAX9() {
return C_BENTAX9;
}

public byte getC_BENTAX96() {
return C_BENTAX96;
}

public byte getC_BENUNEMP1() {
return C_BENUNEMP1;
}

public byte getC_BENUNEMP2() {
return C_BENUNEMP2;
}

public byte getC_BENUNEMP3() {
return C_BENUNEMP3;
}

public byte getC_BENUNEMP4() {
return C_BENUNEMP4;
}

public byte getC_BENUNEMP5() {
return C_BENUNEMP5;
}

public byte getC_BENUNEMP6() {
return C_BENUNEMP6;
}

public byte getC_BENUNEMP7() {
return C_BENUNEMP7;
}

public byte getC_BENUNEMP96() {
return C_BENUNEMP96;
}

public byte getC_BIG5A_DV() {
return C_BIG5A_DV;
}

public byte getC_BIG5C_DV() {
return C_BIG5C_DV;
}

public byte getC_BIG5E_DV() {
return C_BIG5E_DV;
}

public byte getC_BIG5N_DV() {
return C_BIG5N_DV;
}

public byte getC_BIG5O_DV() {
return C_BIG5O_DV;
}

public short getC_BIRTHY() {
return C_BIRTHY;
}

public byte getC_BRITID() {
return C_BRITID;
}

public byte getC_BTYPE1() {
return C_BTYPE1;
}

public byte getC_BTYPE10() {
return C_BTYPE10;
}

public byte getC_BTYPE11() {
return C_BTYPE11;
}

public byte getC_BTYPE12() {
return C_BTYPE12;
}

public byte getC_BTYPE13() {
return C_BTYPE13;
}

public byte getC_BTYPE14() {
return C_BTYPE14;
}

public byte getC_BTYPE2() {
return C_BTYPE2;
}

public byte getC_BTYPE3() {
return C_BTYPE3;
}

public byte getC_BTYPE4() {
return C_BTYPE4;
}

public byte getC_BTYPE5() {
return C_BTYPE5;
}

public byte getC_BTYPE6() {
return C_BTYPE6;
}

public byte getC_BTYPE7() {
return C_BTYPE7;
}

public byte getC_BTYPE8() {
return C_BTYPE8;
}

public byte getC_BTYPE9() {
return C_BTYPE9;
}

public byte getC_BTYPE96() {
return C_BTYPE96;
}

public byte getC_BUNO_DV() {
return C_BUNO_DV;
}

public byte getC_CAIDU1() {
return C_CAIDU1;
}

public byte getC_CAIDU2() {
return C_CAIDU2;
}

public byte getC_CAIDU3() {
return C_CAIDU3;
}

public byte getC_CAIDU4() {
return C_CAIDU4;
}

public byte getC_CAIDU5() {
return C_CAIDU5;
}

public byte getC_CAIDU6() {
return C_CAIDU6;
}

public byte getC_CAIDU7() {
return C_CAIDU7;
}

public byte getC_CAIDU8() {
return C_CAIDU8;
}

public byte getC_CAIDU96() {
return C_CAIDU96;
}

public byte getC_CAIDU97() {
return C_CAIDU97;
}

public byte getC_CARUSE() {
return C_CARUSE;
}

public byte getC_CASIEND() {
return C_CASIEND;
}

public byte getC_CCARE() {
return C_CCARE;
}

public byte getC_CCWORK() {
return C_CCWORK;
}

public byte getC_CGIVNA1_DV() {
return C_CGIVNA1_DV;
}

public byte getC_CGIVNS1_DV() {
return C_CGIVNS1_DV;
}

public byte getC_CGIVS71_DV() {
return C_CGIVS71_DV;
}

public byte getC_CGIVVF1_DV() {
return C_CGIVVF1_DV;
}

public byte getC_CGIVWRD1_DV() {
return C_CGIVWRD1_DV;
}

public byte getC_CGIVWRI1_DV() {
return C_CGIVWRI1_DV;
}

public byte getC_CGNA_DV() {
return C_CGNA_DV;
}

public byte getC_CGNS1A_DV() {
return C_CGNS1A_DV;
}

public byte getC_CGNS1B_DV() {
return C_CGNS1B_DV;
}

public short getC_CGNS1SC10_DV() {
return C_CGNS1SC10_DV;
}

public byte getC_CGNS1SC6_DV() {
return C_CGNS1SC6_DV;
}

public byte getC_CGNS2A_DV() {
return C_CGNS2A_DV;
}

public byte getC_CGNS2B_DV() {
return C_CGNS2B_DV;
}

public short getC_CGNS2SC10_DV() {
return C_CGNS2SC10_DV;
}

public byte getC_CGNS2SC6_DV() {
return C_CGNS2SC6_DV;
}

public byte getC_CGS7CA_DV() {
return C_CGS7CA_DV;
}

public byte getC_CGS7CS_DV() {
return C_CGS7CS_DV;
}

public byte getC_CGS7N_DV() {
return C_CGS7N_DV;
}

public byte getC_CGSRMEM2_DV() {
return C_CGSRMEM2_DV;
}

public byte getC_CGSRMEM_DV() {
return C_CGSRMEM_DV;
}

public byte getC_CGVFC_DV() {
return C_CGVFC_DV;
}

public byte getC_CGVFW_DV() {
return C_CGVFW_DV;
}

public byte getC_CGWRD_DV() {
return C_CGWRD_DV;
}

public byte getC_CGWRI1_DV() {
return C_CGWRI1_DV;
}

public byte getC_CGWRI2_DV() {
return C_CGWRI2_DV;
}

public byte getC_CGWRI3_DV() {
return C_CGWRI3_DV;
}

public byte getC_CGWRI4_DV() {
return C_CGWRI4_DV;
}

public byte getC_CGWRI_DV() {
return C_CGWRI_DV;
}

public short getC_CH1BY4() {
return C_CH1BY4;
}

public byte getC_CHAID1() {
return C_CHAID1;
}

public byte getC_CHAID2() {
return C_CHAID2;
}

public byte getC_CHAID3() {
return C_CHAID3;
}

public byte getC_CHAID4() {
return C_CHAID4;
}

public byte getC_CHAID5() {
return C_CHAID5;
}

public byte getC_CHAID6() {
return C_CHAID6;
}

public byte getC_CHAID7() {
return C_CHAID7;
}

public byte getC_CHAID8() {
return C_CHAID8;
}

public byte getC_CHAID96() {
return C_CHAID96;
}

public byte getC_CHAID97() {
return C_CHAID97;
}

public byte getC_CHCON() {
return C_CHCON;
}

public byte getC_CHFAR() {
return C_CHFAR;
}

public byte getC_CHILDPNO() {
return C_CHILDPNO;
}

public boolean getC_CHKRESP() {
return C_CHKRESP;
}

public byte getC_CHSEE() {
return C_CHSEE;
}

public int getC_CINDTIME() {
return C_CINDTIME;
}

public byte getC_CITZN1() {
return C_CITZN1;
}

public byte getC_CITZN2() {
return C_CITZN2;
}

public byte getC_CITZN3() {
return C_CITZN3;
}

public byte getC_CIVICDUTY() {
return C_CIVICDUTY;
}

public byte getC_CJBATT() {
return C_CJBATT;
}

public byte getC_CJOB() {
return C_CJOB;
}

public byte getC_CLANGAB() {
return C_CLANGAB;
}

public byte getC_CLOSENUM() {
return C_CLOSENUM;
}

public byte getC_CMCORD() {
return C_CMCORD;
}

public byte getC_CMCORDALL() {
return C_CMCORDALL;
}

protected double C_CMCORDAM() {
return C_CMCORDAM;
}

public byte getC_CMCORDPER() {
return C_CMCORDPER;
}

public short getC_CMCORDRCAM() {
return C_CMCORDRCAM;
}

public byte getC_CMCORDRCPR() {
return C_CMCORDRCPR;
}

public byte getC_CMCORDREC() {
return C_CMCORDREC;
}

public byte getC_CMCORDTM() {
return C_CMCORDTM;
}

public byte getC_CMCSAACT() {
return C_CMCSAACT;
}

public byte getC_CMCSAALL() {
return C_CMCSAALL;
}

public short getC_CMCSAAM() {
return C_CMCSAAM;
}

public byte getC_CMCSANIL1() {
return C_CMCSANIL1;
}

public byte getC_CMCSANIL2() {
return C_CMCSANIL2;
}

public byte getC_CMCSANIL3() {
return C_CMCSANIL3;
}

public byte getC_CMCSANIL4() {
return C_CMCSANIL4;
}

public byte getC_CMCSANIL5() {
return C_CMCSANIL5;
}

public byte getC_CMCSANIL97() {
return C_CMCSANIL97;
}

public byte getC_CMCSAPER() {
return C_CMCSAPER;
}

public byte getC_CMCSAPR() {
return C_CMCSAPR;
}

public byte getC_CMKNDEVR1() {
return C_CMKNDEVR1;
}

public byte getC_CMKNDEVR2() {
return C_CMKNDEVR2;
}

public byte getC_CMKNDEVR3() {
return C_CMKNDEVR3;
}

public byte getC_CMKNDEVR4() {
return C_CMKNDEVR4;
}

public byte getC_CMKNDEVR96() {
return C_CMKNDEVR96;
}

public byte getC_CMKNDEVR97() {
return C_CMKNDEVR97;
}

public byte getC_CMLSTAT1() {
return C_CMLSTAT1;
}

public byte getC_CMLSTAT2() {
return C_CMLSTAT2;
}

public byte getC_CMNIL1() {
return C_CMNIL1;
}

public byte getC_CMNIL2() {
return C_CMNIL2;
}

public byte getC_CMNIL3() {
return C_CMNIL3;
}

public byte getC_CMNIL4() {
return C_CMNIL4;
}

public byte getC_CMNIL5() {
return C_CMNIL5;
}

public byte getC_CMNIL6() {
return C_CMNIL6;
}

public byte getC_CMNIL7() {
return C_CMNIL7;
}

public byte getC_CMNIL8() {
return C_CMNIL8;
}

public byte getC_CMNIL9() {
return C_CMNIL9;
}

public byte getC_CMNIL97() {
return C_CMNIL97;
}

public byte getC_CMOTHPAY1() {
return C_CMOTHPAY1;
}

public byte getC_CMOTHPAY10() {
return C_CMOTHPAY10;
}

public byte getC_CMOTHPAY11() {
return C_CMOTHPAY11;
}

public byte getC_CMOTHPAY2() {
return C_CMOTHPAY2;
}

public byte getC_CMOTHPAY3() {
return C_CMOTHPAY3;
}

public byte getC_CMOTHPAY4() {
return C_CMOTHPAY4;
}

public byte getC_CMOTHPAY5() {
return C_CMOTHPAY5;
}

public byte getC_CMOTHPAY6() {
return C_CMOTHPAY6;
}

public byte getC_CMOTHPAY7() {
return C_CMOTHPAY7;
}

public byte getC_CMOTHPAY8() {
return C_CMOTHPAY8;
}

public byte getC_CMOTHPAY9() {
return C_CMOTHPAY9;
}

public byte getC_CMOTHPAY96() {
return C_CMOTHPAY96;
}

public byte getC_CMOTHPAY97() {
return C_CMOTHPAY97;
}

public byte getC_CMROUTE() {
return C_CMROUTE;
}

public byte getC_CMSAMEA() {
return C_CMSAMEA;
}

public byte getC_CMSAMEB() {
return C_CMSAMEB;
}

public byte getC_CMSAMEC() {
return C_CMSAMEC;
}

public byte getC_CMVOL() {
return C_CMVOL;
}

public byte getC_CMVOLALL() {
return C_CMVOLALL;
}

protected double C_CMVOLAM() {
return C_CMVOLAM;
}

public byte getC_CMVOLPER() {
return C_CMVOLPER;
}

public short getC_CMVOLRCAM() {
return C_CMVOLRCAM;
}

public byte getC_CMVOLRCPR() {
return C_CMVOLRCPR;
}

public byte getC_CMVOLREC() {
return C_CMVOLREC;
}

public byte getC_CMVOLTM() {
return C_CMVOLTM;
}

public byte getC_COGDIST() {
return C_COGDIST;
}

public byte getC_COGEND() {
return C_COGEND;
}

public byte getC_COH1BM() {
return C_COH1BM;
}

public short getC_COH1BY() {
return C_COH1BY;
}

public byte getC_COH1EM() {
return C_COH1EM;
}

public short getC_COH1EY() {
return C_COH1EY;
}

public byte getC_COH1MR() {
return C_COH1MR;
}

public byte getC_COHAB() {
return C_COHAB;
}

public byte getC_COHABN() {
return C_COHABN;
}

public boolean getC_COHAB_DV() {
return C_COHAB_DV;
}

public byte getC_COLBENS1() {
return C_COLBENS1;
}

public byte getC_COLBENS2() {
return C_COLBENS2;
}

public byte getC_COLBENS3() {
return C_COLBENS3;
}

public byte getC_COLBENS4() {
return C_COLBENS4;
}

public byte getC_COMIMMLS11() {
return C_COMIMMLS11;
}

public byte getC_COMIMMLS110() {
return C_COMIMMLS110;
}

public byte getC_COMIMMLS12() {
return C_COMIMMLS12;
}

public byte getC_COMIMMLS13() {
return C_COMIMMLS13;
}

public byte getC_COMIMMLS14() {
return C_COMIMMLS14;
}

public byte getC_COMIMMLS15() {
return C_COMIMMLS15;
}

public byte getC_COMIMMLS16() {
return C_COMIMMLS16;
}

public byte getC_COMIMMLS17() {
return C_COMIMMLS17;
}

public byte getC_COMIMMLS18() {
return C_COMIMMLS18;
}

public byte getC_COMIMMLS19() {
return C_COMIMMLS19;
}

public byte getC_COMIMMLS196() {
return C_COMIMMLS196;
}

public byte getC_COMIMMLS21() {
return C_COMIMMLS21;
}

public byte getC_COMIMMLS210() {
return C_COMIMMLS210;
}

public byte getC_COMIMMLS22() {
return C_COMIMMLS22;
}

public byte getC_COMIMMLS23() {
return C_COMIMMLS23;
}

public byte getC_COMIMMLS24() {
return C_COMIMMLS24;
}

public byte getC_COMIMMLS25() {
return C_COMIMMLS25;
}

public byte getC_COMIMMLS26() {
return C_COMIMMLS26;
}

public byte getC_COMIMMLS27() {
return C_COMIMMLS27;
}

public byte getC_COMIMMLS28() {
return C_COMIMMLS28;
}

public byte getC_COMIMMLS29() {
return C_COMIMMLS29;
}

public byte getC_COMIMMLS296() {
return C_COMIMMLS296;
}

public byte getC_COMIMMLS31() {
return C_COMIMMLS31;
}

public byte getC_COMIMMLS310() {
return C_COMIMMLS310;
}

public byte getC_COMIMMLS32() {
return C_COMIMMLS32;
}

public byte getC_COMIMMLS33() {
return C_COMIMMLS33;
}

public byte getC_COMIMMLS34() {
return C_COMIMMLS34;
}

public byte getC_COMIMMLS35() {
return C_COMIMMLS35;
}

public byte getC_COMIMMLS36() {
return C_COMIMMLS36;
}

public byte getC_COMIMMLS37() {
return C_COMIMMLS37;
}

public byte getC_COMIMMLS38() {
return C_COMIMMLS38;
}

public byte getC_COMIMMLS39() {
return C_COMIMMLS39;
}

public byte getC_COMIMMLS396() {
return C_COMIMMLS396;
}

public byte getC_COMIMMLS41() {
return C_COMIMMLS41;
}

public byte getC_COMIMMLS410() {
return C_COMIMMLS410;
}

public byte getC_COMIMMLS42() {
return C_COMIMMLS42;
}

public byte getC_COMIMMLS43() {
return C_COMIMMLS43;
}

public byte getC_COMIMMLS44() {
return C_COMIMMLS44;
}

public byte getC_COMIMMLS45() {
return C_COMIMMLS45;
}

public byte getC_COMIMMLS46() {
return C_COMIMMLS46;
}

public byte getC_COMIMMLS47() {
return C_COMIMMLS47;
}

public byte getC_COMIMMLS48() {
return C_COMIMMLS48;
}

public byte getC_COMIMMLS49() {
return C_COMIMMLS49;
}

public byte getC_COMIMMLS496() {
return C_COMIMMLS496;
}

public byte getC_CONTFT() {
return C_CONTFT;
}

public byte getC_CORDRECPER() {
return C_CORDRECPER;
}

public byte getC_COUNTRY() {
return C_COUNTRY;
}

public byte getC_CRDARK() {
return C_CRDARK;
}

public byte getC_CRWORA() {
return C_CRWORA;
}

public byte getC_CRWORB() {
return C_CRWORB;
}

public byte getC_CSACALC() {
return C_CSACALC;
}

protected double C_CSACALCAM() {
return C_CSACALCAM;
}

public byte getC_CSAPAYTO() {
return C_CSAPAYTO;
}

public byte getC_CSARECPER() {
return C_CSARECPER;
}

public byte getC_CSTAT() {
return C_CSTAT;
}

public byte getC_CTADD1_CODE() {
return C_CTADD1_CODE;
}

public byte getC_CTADD2_CODE() {
return C_CTADD2_CODE;
}

public byte getC_CTCNTY_CODE() {
return C_CTCNTY_CODE;
}

public byte getC_CTEMAIL_CODE() {
return C_CTEMAIL_CODE;
}

public byte getC_CTPCODE_CODE() {
return C_CTPCODE_CODE;
}

public byte getC_CTTEL1_CODE() {
return C_CTTEL1_CODE;
}

public byte getC_CTTEL2_CODE() {
return C_CTTEL2_CODE;
}

public byte getC_CTTOWN_CODE() {
return C_CTTOWN_CODE;
}

public byte getC_CUDDLEKID() {
return C_CUDDLEKID;
}

public byte getC_CURRJOB1() {
return C_CURRJOB1;
}

public byte getC_CURRJOB2() {
return C_CURRJOB2;
}

public byte getC_CURRJOB3() {
return C_CURRJOB3;
}

public byte getC_CURRJOB4() {
return C_CURRJOB4;
}

public byte getC_CURRJOB5() {
return C_CURRJOB5;
}

public byte getC_CURRJOB6() {
return C_CURRJOB6;
}

public byte getC_CURRJOB7() {
return C_CURRJOB7;
}

public boolean getC_CURRJOB8() {
return C_CURRJOB8;
}

public byte getC_CURRJOB9() {
return C_CURRJOB9;
}

public byte getC_CURRPART1() {
return C_CURRPART1;
}

public byte getC_CURRPART2() {
return C_CURRPART2;
}

public boolean getC_CURRPART3() {
return C_CURRPART3;
}

public byte getC_CURRSTAT1() {
return C_CURRSTAT1;
}

public byte getC_CURRSTAT2() {
return C_CURRSTAT2;
}

public byte getC_CURRSTAT3() {
return C_CURRSTAT3;
}

public byte getC_CURRSTAT4() {
return C_CURRSTAT4;
}

public byte getC_CURRSTAT5() {
return C_CURRSTAT5;
}

public byte getC_CURRSTAT6() {
return C_CURRSTAT6;
}

public byte getC_CURRSTAT7() {
return C_CURRSTAT7;
}

public byte getC_CURRSTAT8() {
return C_CURRSTAT8;
}

public boolean getC_CURRSTAT9() {
return C_CURRSTAT9;
}

public byte getC_DCSATM() {
return C_DCSATM;
}

public byte getC_DELAYLS11() {
return C_DELAYLS11;
}

public byte getC_DELAYLS110() {
return C_DELAYLS110;
}

public byte getC_DELAYLS12() {
return C_DELAYLS12;
}

public byte getC_DELAYLS13() {
return C_DELAYLS13;
}

public byte getC_DELAYLS14() {
return C_DELAYLS14;
}

public byte getC_DELAYLS15() {
return C_DELAYLS15;
}

public byte getC_DELAYLS16() {
return C_DELAYLS16;
}

public byte getC_DELAYLS17() {
return C_DELAYLS17;
}

public byte getC_DELAYLS18() {
return C_DELAYLS18;
}

public byte getC_DELAYLS19() {
return C_DELAYLS19;
}

public byte getC_DELAYLS196() {
return C_DELAYLS196;
}

public byte getC_DELAYLS21() {
return C_DELAYLS21;
}

public byte getC_DELAYLS210() {
return C_DELAYLS210;
}

public byte getC_DELAYLS22() {
return C_DELAYLS22;
}

public byte getC_DELAYLS23() {
return C_DELAYLS23;
}

public byte getC_DELAYLS24() {
return C_DELAYLS24;
}

public byte getC_DELAYLS25() {
return C_DELAYLS25;
}

public byte getC_DELAYLS26() {
return C_DELAYLS26;
}

public byte getC_DELAYLS27() {
return C_DELAYLS27;
}

public byte getC_DELAYLS28() {
return C_DELAYLS28;
}

public byte getC_DELAYLS29() {
return C_DELAYLS29;
}

public byte getC_DELAYLS296() {
return C_DELAYLS296;
}

public byte getC_DELAYLS31() {
return C_DELAYLS31;
}

public byte getC_DELAYLS310() {
return C_DELAYLS310;
}

public byte getC_DELAYLS32() {
return C_DELAYLS32;
}

public byte getC_DELAYLS33() {
return C_DELAYLS33;
}

public byte getC_DELAYLS34() {
return C_DELAYLS34;
}

public byte getC_DELAYLS35() {
return C_DELAYLS35;
}

public byte getC_DELAYLS36() {
return C_DELAYLS36;
}

public byte getC_DELAYLS37() {
return C_DELAYLS37;
}

public byte getC_DELAYLS38() {
return C_DELAYLS38;
}

public byte getC_DELAYLS39() {
return C_DELAYLS39;
}

public byte getC_DELAYLS396() {
return C_DELAYLS396;
}

public byte getC_DELAYLS41() {
return C_DELAYLS41;
}

public byte getC_DELAYLS410() {
return C_DELAYLS410;
}

public byte getC_DELAYLS42() {
return C_DELAYLS42;
}

public byte getC_DELAYLS43() {
return C_DELAYLS43;
}

public byte getC_DELAYLS44() {
return C_DELAYLS44;
}

public byte getC_DELAYLS45() {
return C_DELAYLS45;
}

public byte getC_DELAYLS46() {
return C_DELAYLS46;
}

public byte getC_DELAYLS47() {
return C_DELAYLS47;
}

public byte getC_DELAYLS48() {
return C_DELAYLS48;
}

public byte getC_DELAYLS49() {
return C_DELAYLS49;
}

public byte getC_DELAYLS496() {
return C_DELAYLS496;
}

public byte getC_DELAYSTOP1() {
return C_DELAYSTOP1;
}

public byte getC_DELAYSTOP2() {
return C_DELAYSTOP2;
}

public byte getC_DELAYSTOP3() {
return C_DELAYSTOP3;
}

public byte getC_DELAYSTOP4() {
return C_DELAYSTOP4;
}

public byte getC_DELAYSTOP5() {
return C_DELAYSTOP5;
}

public byte getC_DELAYSTOP6() {
return C_DELAYSTOP6;
}

public byte getC_DELAYSTOP7() {
return C_DELAYSTOP7;
}

public byte getC_DELAYSTOP8() {
return C_DELAYSTOP8;
}

public byte getC_DELAYSTOP97() {
return C_DELAYSTOP97;
}

public byte getC_DEMORIENT() {
return C_DEMORIENT;
}

public boolean getC_DEPCHL_DV() {
return C_DEPCHL_DV;
}

public byte getC_DINNER() {
return C_DINNER;
}

public byte getC_DISDIF1() {
return C_DISDIF1;
}

public byte getC_DISDIF10() {
return C_DISDIF10;
}

public byte getC_DISDIF11() {
return C_DISDIF11;
}

public byte getC_DISDIF12() {
return C_DISDIF12;
}

public byte getC_DISDIF2() {
return C_DISDIF2;
}

public byte getC_DISDIF3() {
return C_DISDIF3;
}

public byte getC_DISDIF4() {
return C_DISDIF4;
}

public byte getC_DISDIF5() {
return C_DISDIF5;
}

public byte getC_DISDIF6() {
return C_DISDIF6;
}

public byte getC_DISDIF7() {
return C_DISDIF7;
}

public byte getC_DISDIF8() {
return C_DISDIF8;
}

public byte getC_DISDIF9() {
return C_DISDIF9;
}

public byte getC_DISDIF96() {
return C_DISDIF96;
}

public byte getC_DISEFFECTS1() {
return C_DISEFFECTS1;
}

public byte getC_DISEFFECTS2() {
return C_DISEFFECTS2;
}

public byte getC_DISEFFECTS3() {
return C_DISEFFECTS3;
}

public byte getC_DISEFFECTS4() {
return C_DISEFFECTS4;
}

public byte getC_DISEFFECTS5() {
return C_DISEFFECTS5;
}

public byte getC_DIVCHK1() {
return C_DIVCHK1;
}

public byte getC_DIVCHK2() {
return C_DIVCHK2;
}

public byte getC_DIVFIN1() {
return C_DIVFIN1;
}

public boolean getC_DIVFIN2() {
return C_DIVFIN2;
}

public byte getC_DKLM() {
return C_DKLM;
}

public byte getC_DMEMCONT11() {
return C_DMEMCONT11;
}

public byte getC_DMEMCONT12() {
return C_DMEMCONT12;
}

public byte getC_DMEMCONT13() {
return C_DMEMCONT13;
}

public byte getC_DMEMCONT21() {
return C_DMEMCONT21;
}

public byte getC_DMEMCONT210() {
return C_DMEMCONT210;
}

public byte getC_DMEMCONT211() {
return C_DMEMCONT211;
}

public byte getC_DMEMCONT212() {
return C_DMEMCONT212;
}

public byte getC_DMEMCONT213() {
return C_DMEMCONT213;
}

public byte getC_DMEMCONT214() {
return C_DMEMCONT214;
}

public byte getC_DMEMCONT215() {
return C_DMEMCONT215;
}

public byte getC_DMEMCONT216() {
return C_DMEMCONT216;
}

public byte getC_DMEMCONT22() {
return C_DMEMCONT22;
}

public byte getC_DMEMCONT23() {
return C_DMEMCONT23;
}

public byte getC_DMEMCONT24() {
return C_DMEMCONT24;
}

public byte getC_DMEMCONT25() {
return C_DMEMCONT25;
}

public byte getC_DMEMCONT26() {
return C_DMEMCONT26;
}

public byte getC_DMEMCONT27() {
return C_DMEMCONT27;
}

public byte getC_DMEMCONT28() {
return C_DMEMCONT28;
}

public byte getC_DMEMCONT29() {
return C_DMEMCONT29;
}

public byte getC_DMEMCONT3() {
return C_DMEMCONT3;
}

public short getC_DOBY_DV() {
return C_DOBY_DV;
}

public byte getC_DRGMJ() {
return C_DRGMJ;
}

public byte getC_DRGOTH() {
return C_DRGOTH;
}

public byte getC_DRGSOL() {
return C_DRGSOL;
}

public byte getC_DRIVE() {
return C_DRIVE;
}

public byte getC_DRNK4W() {
return C_DRNK4W;
}

public byte getC_DVAGE() {
return C_DVAGE;
}

public byte getC_DVM1() {
return C_DVM1;
}

public boolean getC_DVM2() {
return C_DVM2;
}

public short getC_DVY41() {
return C_DVY41;
}

public boolean getC_DVY42() {
return C_DVY42;
}

public byte getC_EATLIVU() {
return C_EATLIVU;
}

public byte getC_EDASP() {
return C_EDASP;
}

public byte getC_EDTYPE() {
return C_EDTYPE;
}

public byte getC_EDUCATION() {
return C_EDUCATION;
}

public byte getC_EED12() {
return C_EED12;
}

public byte getC_EMPCHK() {
return C_EMPCHK;
}

public byte getC_EMPLOY() {
return C_EMPLOY;
}

public byte getC_EMPSTENDD() {
return C_EMPSTENDD;
}

public byte getC_EMPSTENDM() {
return C_EMPSTENDM;
}

public short getC_EMPSTENDY4() {
return C_EMPSTENDY4;
}

public byte getC_ENDMNTH1() {
return C_ENDMNTH1;
}

public byte getC_ENDMNTH2() {
return C_ENDMNTH2;
}

public byte getC_ENDMNTH3() {
return C_ENDMNTH3;
}

public byte getC_EPROSH() {
return C_EPROSH;
}

public byte getC_ETHN_DV() {
return C_ETHN_DV;
}

public byte getC_EVRALC() {
return C_EVRALC;
}

public byte getC_EVRSMO() {
return C_EVRSMO;
}

public byte getC_EXPREAM() {
return C_EXPREAM;
}

public byte getC_EXSAME() {
return C_EXSAME;
}

public byte getC_EXTNSA() {
return C_EXTNSA;
}

protected double C_EXTRATE() {
return C_EXTRATE;
}

public byte getC_EXTREST() {
return C_EXTREST;
}

public byte getC_FAMILY() {
return C_FAMILY;
}

public byte getC_FAMSUP() {
return C_FAMSUP;
}

public byte getC_FARKID() {
return C_FARKID;
}

public byte getC_FATHER() {
return C_FATHER;
}

public byte getC_FEDLIK() {
return C_FEDLIK;
}

public byte getC_FEDNT() {
return C_FEDNT;
}

public byte getC_FEDNTO_CODE() {
return C_FEDNTO_CODE;
}

public byte getC_FEEND() {
return C_FEEND;
}

public byte getC_FENOW() {
return C_FENOW;
}

public byte getC_FFBRFEDLW() {
return C_FFBRFEDLW;
}

public byte getC_FF_BENTYPE01() {
return C_FF_BENTYPE01;
}

public byte getC_FF_BENTYPE02() {
return C_FF_BENTYPE02;
}

public byte getC_FF_BENTYPE03() {
return C_FF_BENTYPE03;
}

public byte getC_FF_BENTYPE04() {
return C_FF_BENTYPE04;
}

public byte getC_FF_BENTYPE05() {
return C_FF_BENTYPE05;
}

public byte getC_FF_BENTYPE06() {
return C_FF_BENTYPE06;
}

public byte getC_FF_BENTYPE07() {
return C_FF_BENTYPE07;
}

public byte getC_FF_BENTYPE08() {
return C_FF_BENTYPE08;
}

public byte getC_FF_BENTYPE09() {
return C_FF_BENTYPE09;
}

public byte getC_FF_BENTYPE10() {
return C_FF_BENTYPE10;
}

public byte getC_FF_BENTYPE11() {
return C_FF_BENTYPE11;
}

public byte getC_FF_BENTYPE12() {
return C_FF_BENTYPE12;
}

public byte getC_FF_BENTYPE13() {
return C_FF_BENTYPE13;
}

public byte getC_FF_BENTYPE14() {
return C_FF_BENTYPE14;
}

public byte getC_FF_BENTYPE15() {
return C_FF_BENTYPE15;
}

public byte getC_FF_BENTYPE16() {
return C_FF_BENTYPE16;
}

public byte getC_FF_BENTYPE17() {
return C_FF_BENTYPE17;
}

public byte getC_FF_BENTYPE18() {
return C_FF_BENTYPE18;
}

public byte getC_FF_BENTYPE19() {
return C_FF_BENTYPE19;
}

public byte getC_FF_BENTYPE20() {
return C_FF_BENTYPE20;
}

public byte getC_FF_BENTYPE21() {
return C_FF_BENTYPE21;
}

public byte getC_FF_BENTYPE22() {
return C_FF_BENTYPE22;
}

public byte getC_FF_BENTYPE23() {
return C_FF_BENTYPE23;
}

public byte getC_FF_BENTYPE24() {
return C_FF_BENTYPE24;
}

public byte getC_FF_BENTYPE25() {
return C_FF_BENTYPE25;
}

public byte getC_FF_BENTYPE26() {
return C_FF_BENTYPE26;
}

public byte getC_FF_BENTYPE27() {
return C_FF_BENTYPE27;
}

public byte getC_FF_BENTYPE28() {
return C_FF_BENTYPE28;
}

public byte getC_FF_BENTYPE29() {
return C_FF_BENTYPE29;
}

public byte getC_FF_BENTYPE30() {
return C_FF_BENTYPE30;
}

public byte getC_FF_BENTYPE31() {
return C_FF_BENTYPE31;
}

public byte getC_FF_BENTYPE32() {
return C_FF_BENTYPE32;
}

public byte getC_FF_BENTYPE33() {
return C_FF_BENTYPE33;
}

public byte getC_FF_BENTYPE34() {
return C_FF_BENTYPE34;
}

public byte getC_FF_BENTYPE35() {
return C_FF_BENTYPE35;
}

public byte getC_FF_BENTYPE36() {
return C_FF_BENTYPE36;
}

public byte getC_FF_BENTYPE37() {
return C_FF_BENTYPE37;
}

public byte getC_FF_BENTYPE38() {
return C_FF_BENTYPE38;
}

public byte getC_FF_BENTYPE39() {
return C_FF_BENTYPE39;
}

public byte getC_FF_EMPLW() {
return C_FF_EMPLW;
}

public byte getC_FF_EVERINT() {
return C_FF_EVERINT;
}

public byte getC_FF_IVINTLANG() {
return C_FF_IVINTLANG;
}

public byte getC_FF_IVLOLW() {
return C_FF_IVLOLW;
}

public byte getC_FF_JBMNGR() {
return C_FF_JBMNGR;
}

public byte getC_FF_JBSEMP() {
return C_FF_JBSEMP;
}

public byte getC_FF_JBSIZE() {
return C_FF_JBSIZE;
}

public byte getC_FF_JBSTAT() {
return C_FF_JBSTAT;
}

public byte getC_FF_OPRLG() {
return C_FF_OPRLG;
}

public byte getC_FF_OPRLG0() {
return C_FF_OPRLG0;
}

public byte getC_FF_OPRLG0NI() {
return C_FF_OPRLG0NI;
}

public byte getC_FF_TEL() {
return C_FF_TEL;
}

public byte getC_FF_UKBORN() {
return C_FF_UKBORN;
}

public short getC_FF_YR2UK4() {
return C_FF_YR2UK4;
}

protected double C_FIBENOTHR_DV() {
return C_FIBENOTHR_DV;
}

protected double C_FIBENOTHR_IF() {
return C_FIBENOTHR_IF;
}

public boolean getC_FIBENOTHR_TC() {
return C_FIBENOTHR_TC;
}

protected double C_FIMNGRS_DV() {
return C_FIMNGRS_DV;
}

protected double C_FIMNGRS_IF() {
return C_FIMNGRS_IF;
}

public boolean getC_FIMNGRS_TC() {
return C_FIMNGRS_TC;
}

protected double C_FIMNINVNET_DV() {
return C_FIMNINVNET_DV;
}

protected double C_FIMNLABGRS_DV() {
return C_FIMNLABGRS_DV;
}

protected double C_FIMNLABGRS_IF() {
return C_FIMNLABGRS_IF;
}

public boolean getC_FIMNLABGRS_TC() {
return C_FIMNLABGRS_TC;
}

protected double C_FIMNLABNET_DV() {
return C_FIMNLABNET_DV;
}

public boolean getC_FIMNLABNET_TC() {
return C_FIMNLABNET_TC;
}

protected double C_FIMNMISC_DV() {
return C_FIMNMISC_DV;
}

protected double C_FIMNNET_DV() {
return C_FIMNNET_DV;
}

protected double C_FIMNPEN_DV() {
return C_FIMNPEN_DV;
}

protected double C_FIMNPRBEN_DV() {
return C_FIMNPRBEN_DV;
}

protected double C_FIMNSBEN_DV() {
return C_FIMNSBEN_DV;
}

public byte getC_FINFUT() {
return C_FINFUT;
}

public byte getC_FINNOW() {
return C_FINNOW;
}

public byte getC_FIVEALCDR() {
return C_FIVEALCDR;
}

public byte getC_FIYRDB1() {
return C_FIYRDB1;
}

public byte getC_FIYRDB2() {
return C_FIYRDB2;
}

public byte getC_FIYRDB3() {
return C_FIYRDB3;
}

public byte getC_FIYRDB4() {
return C_FIYRDB4;
}

public byte getC_FIYRDB5() {
return C_FIYRDB5;
}

public byte getC_FIYRDB6() {
return C_FIYRDB6;
}

public int getC_FIYRDIA() {
return C_FIYRDIA;
}

protected double C_FIYRINVINC_DV() {
return C_FIYRINVINC_DV;
}

public byte getC_FIYRINVINC_IF() {
return C_FIYRINVINC_IF;
}

public boolean getC_FIYRINVINC_TC() {
return C_FIYRINVINC_TC;
}

public int getC_FNPID() {
return C_FNPID;
}

public byte getC_FNPNO() {
return C_FNPNO;
}

public int getC_FNSPID() {
return C_FNSPID;
}

public byte getC_FNSPNO() {
return C_FNSPNO;
}

public byte getC_FRDRG() {
return C_FRDRG;
}

public byte getC_FROBULLI() {
return C_FROBULLI;
}

public byte getC_FROBULLY() {
return C_FROBULLY;
}

public byte getC_FRPBULLI() {
return C_FRPBULLI;
}

public byte getC_FRPBULLY() {
return C_FRPBULLY;
}

public byte getC_FT2ENDM1() {
return C_FT2ENDM1;
}

public byte getC_FT2ENDM2() {
return C_FT2ENDM2;
}

public byte getC_FT2ENDM3() {
return C_FT2ENDM3;
}

public byte getC_FT2ENDM4() {
return C_FT2ENDM4;
}

public short getC_FT2ENDY41() {
return C_FT2ENDY41;
}

public short getC_FT2ENDY42() {
return C_FT2ENDY42;
}

public short getC_FT2ENDY43() {
return C_FT2ENDY43;
}

public short getC_FT2ENDY44() {
return C_FT2ENDY44;
}

public byte getC_FTEDANY() {
return C_FTEDANY;
}

public byte getC_FTEDEND1() {
return C_FTEDEND1;
}

public byte getC_FTEDEND2() {
return C_FTEDEND2;
}

public byte getC_FTEDEND3() {
return C_FTEDEND3;
}

public byte getC_FTEDEND4() {
return C_FTEDEND4;
}

public byte getC_FTEDMOR1() {
return C_FTEDMOR1;
}

public byte getC_FTEDMOR2() {
return C_FTEDMOR2;
}

public byte getC_FTEDMOR3() {
return C_FTEDMOR3;
}

public byte getC_FTEDMOR4() {
return C_FTEDMOR4;
}

public byte getC_FTEDSTARTM1() {
return C_FTEDSTARTM1;
}

public byte getC_FTEDSTARTM2() {
return C_FTEDSTARTM2;
}

public byte getC_FTEDSTARTM3() {
return C_FTEDSTARTM3;
}

public byte getC_FTEDSTARTM4() {
return C_FTEDSTARTM4;
}

public short getC_FTEDSTARTY41() {
return C_FTEDSTARTY41;
}

public short getC_FTEDSTARTY42() {
return C_FTEDSTARTY42;
}

public short getC_FTEDSTARTY43() {
return C_FTEDSTARTY43;
}

public short getC_FTEDSTARTY44() {
return C_FTEDSTARTY44;
}

public byte getC_FTENDM() {
return C_FTENDM;
}

public short getC_FTENDY4() {
return C_FTENDY4;
}

public short getC_FTEXV() {
return C_FTEXV;
}

public byte getC_FTEXW() {
return C_FTEXW;
}

public byte getC_FTQUALS() {
return C_FTQUALS;
}

public short getC_FUTRA() {
return C_FUTRA;
}

public short getC_FUTRB() {
return C_FUTRB;
}

public short getC_FUTRC() {
return C_FUTRC;
}

public short getC_FUTRD() {
return C_FUTRD;
}

public short getC_FUTRE() {
return C_FUTRE;
}

public short getC_FUTRF() {
return C_FUTRF;
}

public short getC_FUTRG() {
return C_FUTRG;
}

public short getC_FUTRH() {
return C_FUTRH;
}

public short getC_FUTRI() {
return C_FUTRI;
}

public short getC_FUTRJ() {
return C_FUTRJ;
}

public short getC_FUTRK() {
return C_FUTRK;
}

public short getC_FUTRL() {
return C_FUTRL;
}

public byte getC_FUTUREINT() {
return C_FUTUREINT;
}

public byte getC_GOR_DV() {
return C_GOR_DV;
}

public int getC_GRFPID() {
return C_GRFPID;
}

public byte getC_GRFPNO() {
return C_GRFPNO;
}

public int getC_GRMPID() {
return C_GRMPID;
}

public byte getC_GRMPNO() {
return C_GRMPNO;
}

public byte getC_GRPBFTS() {
return C_GRPBFTS;
}

public byte getC_HASSTEP() {
return C_HASSTEP;
}

public byte getC_HCOND1() {
return C_HCOND1;
}

public byte getC_HCOND10() {
return C_HCOND10;
}

public byte getC_HCOND11() {
return C_HCOND11;
}

public byte getC_HCOND12() {
return C_HCOND12;
}

public byte getC_HCOND13() {
return C_HCOND13;
}

public byte getC_HCOND14() {
return C_HCOND14;
}

public byte getC_HCOND15() {
return C_HCOND15;
}

public byte getC_HCOND16() {
return C_HCOND16;
}

public byte getC_HCOND17() {
return C_HCOND17;
}

public byte getC_HCOND2() {
return C_HCOND2;
}

public byte getC_HCOND3() {
return C_HCOND3;
}

public byte getC_HCOND4() {
return C_HCOND4;
}

public byte getC_HCOND5() {
return C_HCOND5;
}

public byte getC_HCOND6() {
return C_HCOND6;
}

public byte getC_HCOND7() {
return C_HCOND7;
}

public byte getC_HCOND8() {
return C_HCOND8;
}

public byte getC_HCOND9() {
return C_HCOND9;
}

public byte getC_HCOND96() {
return C_HCOND96;
}

public byte getC_HCONDA01() {
return C_HCONDA01;
}

public byte getC_HCONDA02() {
return C_HCONDA02;
}

public byte getC_HCONDA03() {
return C_HCONDA03;
}

public byte getC_HCONDA04() {
return C_HCONDA04;
}

public byte getC_HCONDA05() {
return C_HCONDA05;
}

public byte getC_HCONDA06() {
return C_HCONDA06;
}

public byte getC_HCONDA07() {
return C_HCONDA07;
}

public byte getC_HCONDA08() {
return C_HCONDA08;
}

public byte getC_HCONDA09() {
return C_HCONDA09;
}

public byte getC_HCONDA10() {
return C_HCONDA10;
}

public byte getC_HCONDA11() {
return C_HCONDA11;
}

public byte getC_HCONDA12() {
return C_HCONDA12;
}

public byte getC_HCONDA13() {
return C_HCONDA13;
}

public byte getC_HCONDA14() {
return C_HCONDA14;
}

public byte getC_HCONDA15() {
return C_HCONDA15;
}

public byte getC_HCONDA16() {
return C_HCONDA16;
}

public byte getC_HCONDA17() {
return C_HCONDA17;
}

public byte getC_HCONDE6() {
return C_HCONDE6;
}

public byte getC_HCONDE7() {
return C_HCONDE7;
}

public byte getC_HCONDE96() {
return C_HCONDE96;
}

public byte getC_HCONDEA6() {
return C_HCONDEA6;
}

public byte getC_HCONDEA7() {
return C_HCONDEA7;
}

public byte getC_HCONDN1() {
return C_HCONDN1;
}

public byte getC_HCONDN10() {
return C_HCONDN10;
}

public byte getC_HCONDN11() {
return C_HCONDN11;
}

public byte getC_HCONDN12() {
return C_HCONDN12;
}

public byte getC_HCONDN13() {
return C_HCONDN13;
}

public byte getC_HCONDN14() {
return C_HCONDN14;
}

public byte getC_HCONDN15() {
return C_HCONDN15;
}

public byte getC_HCONDN16() {
return C_HCONDN16;
}

public byte getC_HCONDN17() {
return C_HCONDN17;
}

public byte getC_HCONDN2() {
return C_HCONDN2;
}

public byte getC_HCONDN3() {
return C_HCONDN3;
}

public byte getC_HCONDN4() {
return C_HCONDN4;
}

public byte getC_HCONDN5() {
return C_HCONDN5;
}

public byte getC_HCONDN6() {
return C_HCONDN6;
}

public byte getC_HCONDN7() {
return C_HCONDN7;
}

public byte getC_HCONDN8() {
return C_HCONDN8;
}

public byte getC_HCONDN9() {
return C_HCONDN9;
}

public byte getC_HCONDN96() {
return C_HCONDN96;
}

public byte getC_HCONDNO1() {
return C_HCONDNO1;
}

public byte getC_HCONDNO2() {
return C_HCONDNO2;
}

public byte getC_HCONDNO3() {
return C_HCONDNO3;
}

public byte getC_HCONDNO4() {
return C_HCONDNO4;
}

public byte getC_HCONDNO5() {
return C_HCONDNO5;
}

public byte getC_HCONDNO6() {
return C_HCONDNO6;
}

public byte getC_HCONDNO7() {
return C_HCONDNO7;
}

public byte getC_HCONDNO8() {
return C_HCONDNO8;
}

public byte getC_HCONDNS1() {
return C_HCONDNS1;
}

public byte getC_HCONDNS2() {
return C_HCONDNS2;
}

public byte getC_HCONDNS3() {
return C_HCONDNS3;
}

public byte getC_HCONDNS4() {
return C_HCONDNS4;
}

public byte getC_HCONDNS5() {
return C_HCONDNS5;
}

public byte getC_HCONDNS6() {
return C_HCONDNS6;
}

public byte getC_HCONDNS7() {
return C_HCONDNS7;
}

public byte getC_HCONDNS8() {
return C_HCONDNS8;
}

public byte getC_HCONDS01() {
return C_HCONDS01;
}

public byte getC_HCONDS02() {
return C_HCONDS02;
}

public byte getC_HCONDS03() {
return C_HCONDS03;
}

public byte getC_HCONDS04() {
return C_HCONDS04;
}

public byte getC_HCONDS05() {
return C_HCONDS05;
}

public byte getC_HCONDS08() {
return C_HCONDS08;
}

public byte getC_HCONDS09() {
return C_HCONDS09;
}

public byte getC_HCONDS10() {
return C_HCONDS10;
}

public byte getC_HCONDS11() {
return C_HCONDS11;
}

public byte getC_HCONDS12() {
return C_HCONDS12;
}

public byte getC_HCONDS13() {
return C_HCONDS13;
}

public byte getC_HCONDS14() {
return C_HCONDS14;
}

public byte getC_HCONDS15() {
return C_HCONDS15;
}

public byte getC_HCONDS16() {
return C_HCONDS16;
}

public byte getC_HCONDS17() {
return C_HCONDS17;
}

public byte getC_HEALTH() {
return C_HEALTH;
}

public byte getC_HEARCOMPUTER() {
return C_HEARCOMPUTER;
}

public byte getC_HGADOPTF() {
return C_HGADOPTF;
}

public byte getC_HGADOPTM() {
return C_HGADOPTM;
}

public byte getC_HGBIOF() {
return C_HGBIOF;
}

public byte getC_HGBIOM() {
return C_HGBIOM;
}

public byte getC_HGPART() {
return C_HGPART;
}

public byte getC_HHORIG() {
return C_HHORIG;
}

public byte getC_HHRESP_DV() {
return C_HHRESP_DV;
}

public byte getC_HHTYPE_DV() {
return C_HHTYPE_DV;
}

public int getC_HIDP() {
return C_HIDP;
}

public byte getC_HIQUAL_DV() {
return C_HIQUAL_DV;
}

public byte getC_HITSIB() {
return C_HITSIB;
}

public byte getC_HLPHMWK() {
return C_HLPHMWK;
}

public byte getC_HOOD15() {
return C_HOOD15;
}

public byte getC_HOSPC1() {
return C_HOSPC1;
}

public byte getC_HOSPC2() {
return C_HOSPC2;
}

public byte getC_HOSPC3() {
return C_HOSPC3;
}

public byte getC_HOSPC4() {
return C_HOSPC4;
}

public byte getC_HOSPC5() {
return C_HOSPC5;
}

public byte getC_HOSPC6() {
return C_HOSPC6;
}

public byte getC_HOSPC7() {
return C_HOSPC7;
}

public byte getC_HOSPC8() {
return C_HOSPC8;
}

public short getC_HOSPDC1() {
return C_HOSPDC1;
}

public short getC_HOSPDC2() {
return C_HOSPDC2;
}

public short getC_HOSPDC3() {
return C_HOSPDC3;
}

public byte getC_HOSPDC4() {
return C_HOSPDC4;
}

public byte getC_HOSPDC5() {
return C_HOSPDC5;
}

public byte getC_HOSPDC6() {
return C_HOSPDC6;
}

public byte getC_HOSPDC7() {
return C_HOSPDC7;
}

public boolean getC_HOSPDC8() {
return C_HOSPDC8;
}

public byte getC_HOUSING() {
return C_HOUSING;
}

public int getC_HRPID() {
return C_HRPID;
}

public byte getC_HRPNO() {
return C_HRPNO;
}

public byte getC_IENDDATHH() {
return C_IENDDATHH;
}

public byte getC_IENDDATMM() {
return C_IENDDATMM;
}

public byte getC_IENDDATSS() {
return C_IENDDATSS;
}

public byte getC_IMMSTOP1() {
return C_IMMSTOP1;
}

public byte getC_IMMSTOP2() {
return C_IMMSTOP2;
}

public byte getC_IMMSTOP3() {
return C_IMMSTOP3;
}

public byte getC_IMMSTOP4() {
return C_IMMSTOP4;
}

public byte getC_IMMSTOP5() {
return C_IMMSTOP5;
}

public byte getC_IMMSTOP6() {
return C_IMMSTOP6;
}

public byte getC_IMMSTOP7() {
return C_IMMSTOP7;
}

public byte getC_IMMSTOP8() {
return C_IMMSTOP8;
}

public byte getC_IMMSTOP97() {
return C_IMMSTOP97;
}

protected double C_IND5MUS_LW() {
return C_IND5MUS_LW;
}

protected double C_IND5MUS_XW() {
return C_IND5MUS_XW;
}

protected double C_INDBD91_LW() {
return C_INDBD91_LW;
}

protected double C_INDBDUB_LW() {
return C_INDBDUB_LW;
}

protected double C_INDIN01_LW() {
return C_INDIN01_LW;
}

protected double C_INDIN91_LW() {
return C_INDIN91_LW;
}

protected double C_INDINUB_LW() {
return C_INDINUB_LW;
}

protected double C_INDINUB_XW() {
return C_INDINUB_XW;
}

protected double C_INDINUS_LW() {
return C_INDINUS_LW;
}

public boolean getC_INDMODE() {
return C_INDMODE;
}

protected double C_INDNS91_LW() {
return C_INDNS91_LW;
}

protected double C_INDNSUB_LW() {
return C_INDNSUB_LW;
}

protected double C_INDPXUB_LW() {
return C_INDPXUB_LW;
}

protected double C_INDPXUB_XW() {
return C_INDPXUB_XW;
}

protected double C_INDPXUS_LW() {
return C_INDPXUS_LW;
}

protected double C_INDSCUB_LW() {
return C_INDSCUB_LW;
}

protected double C_INDSCUB_XW() {
return C_INDSCUB_XW;
}

protected double C_INDSCUS_LW() {
return C_INDSCUS_LW;
}

public byte getC_INSULTED1() {
return C_INSULTED1;
}

public byte getC_INSULTED10() {
return C_INSULTED10;
}

public byte getC_INSULTED11() {
return C_INSULTED11;
}

public byte getC_INSULTED2() {
return C_INSULTED2;
}

public byte getC_INSULTED3() {
return C_INSULTED3;
}

public byte getC_INSULTED4() {
return C_INSULTED4;
}

public byte getC_INSULTED5() {
return C_INSULTED5;
}

public byte getC_INSULTED6() {
return C_INSULTED6;
}

public byte getC_INSULTED7() {
return C_INSULTED7;
}

public byte getC_INSULTED8() {
return C_INSULTED8;
}

public byte getC_INSULTED9() {
return C_INSULTED9;
}

public byte getC_INSULTED96() {
return C_INSULTED96;
}

public byte getC_INSULTED97() {
return C_INSULTED97;
}

public byte getC_INSULTEDO_CODE() {
return C_INSULTEDO_CODE;
}

public byte getC_INSULTED_DV() {
return C_INSULTED_DV;
}

public byte getC_INTDATD_DV() {
return C_INTDATD_DV;
}

public byte getC_INTDATM_DV() {
return C_INTDATM_DV;
}

public short getC_INTDATY_DV() {
return C_INTDATY_DV;
}

public byte getC_INTIMMLS11() {
return C_INTIMMLS11;
}

public byte getC_INTIMMLS110() {
return C_INTIMMLS110;
}

public byte getC_INTIMMLS12() {
return C_INTIMMLS12;
}

public byte getC_INTIMMLS13() {
return C_INTIMMLS13;
}

public byte getC_INTIMMLS14() {
return C_INTIMMLS14;
}

public byte getC_INTIMMLS15() {
return C_INTIMMLS15;
}

public byte getC_INTIMMLS16() {
return C_INTIMMLS16;
}

public byte getC_INTIMMLS17() {
return C_INTIMMLS17;
}

public byte getC_INTIMMLS18() {
return C_INTIMMLS18;
}

public byte getC_INTIMMLS19() {
return C_INTIMMLS19;
}

public byte getC_INTIMMLS196() {
return C_INTIMMLS196;
}

public byte getC_INTIMMLS21() {
return C_INTIMMLS21;
}

public byte getC_INTIMMLS210() {
return C_INTIMMLS210;
}

public byte getC_INTIMMLS22() {
return C_INTIMMLS22;
}

public byte getC_INTIMMLS23() {
return C_INTIMMLS23;
}

public byte getC_INTIMMLS24() {
return C_INTIMMLS24;
}

public byte getC_INTIMMLS25() {
return C_INTIMMLS25;
}

public byte getC_INTIMMLS26() {
return C_INTIMMLS26;
}

public byte getC_INTIMMLS27() {
return C_INTIMMLS27;
}

public byte getC_INTIMMLS28() {
return C_INTIMMLS28;
}

public byte getC_INTIMMLS29() {
return C_INTIMMLS29;
}

public byte getC_INTIMMLS296() {
return C_INTIMMLS296;
}

public byte getC_INTIMMLS31() {
return C_INTIMMLS31;
}

public byte getC_INTIMMLS310() {
return C_INTIMMLS310;
}

public byte getC_INTIMMLS32() {
return C_INTIMMLS32;
}

public byte getC_INTIMMLS33() {
return C_INTIMMLS33;
}

public byte getC_INTIMMLS34() {
return C_INTIMMLS34;
}

public byte getC_INTIMMLS35() {
return C_INTIMMLS35;
}

public byte getC_INTIMMLS36() {
return C_INTIMMLS36;
}

public byte getC_INTIMMLS37() {
return C_INTIMMLS37;
}

public byte getC_INTIMMLS38() {
return C_INTIMMLS38;
}

public byte getC_INTIMMLS39() {
return C_INTIMMLS39;
}

public byte getC_INTIMMLS396() {
return C_INTIMMLS396;
}

public byte getC_INTIMMLS41() {
return C_INTIMMLS41;
}

public byte getC_INTIMMLS410() {
return C_INTIMMLS410;
}

public byte getC_INTIMMLS42() {
return C_INTIMMLS42;
}

public byte getC_INTIMMLS43() {
return C_INTIMMLS43;
}

public byte getC_INTIMMLS44() {
return C_INTIMMLS44;
}

public byte getC_INTIMMLS45() {
return C_INTIMMLS45;
}

public byte getC_INTIMMLS46() {
return C_INTIMMLS46;
}

public byte getC_INTIMMLS47() {
return C_INTIMMLS47;
}

public byte getC_INTIMMLS48() {
return C_INTIMMLS48;
}

public byte getC_INTIMMLS49() {
return C_INTIMMLS49;
}

public byte getC_INTIMMLS496() {
return C_INTIMMLS496;
}

public byte getC_INVITRO1() {
return C_INVITRO1;
}

public byte getC_INVITRO2() {
return C_INVITRO2;
}

public boolean getC_INVITRO3() {
return C_INVITRO3;
}

public byte getC_IOUTCOME() {
return C_IOUTCOME;
}

public byte getC_ISTRTDATD() {
return C_ISTRTDATD;
}

public byte getC_ISTRTDATHH() {
return C_ISTRTDATHH;
}

public byte getC_ISTRTDATM() {
return C_ISTRTDATM;
}

public byte getC_ISTRTDATMM() {
return C_ISTRTDATMM;
}

public byte getC_ISTRTDATSS() {
return C_ISTRTDATSS;
}

public short getC_ISTRTDATY() {
return C_ISTRTDATY;
}

public short getC_ISYEAR() {
return C_ISYEAR;
}

public byte getC_IVAFFCT11() {
return C_IVAFFCT11;
}

public byte getC_IVAFFCT12() {
return C_IVAFFCT12;
}

public byte getC_IVAFFCT13() {
return C_IVAFFCT13;
}

public byte getC_IVAFFCT14() {
return C_IVAFFCT14;
}

public byte getC_IVAFFCT15() {
return C_IVAFFCT15;
}

public byte getC_IVAFFCT17() {
return C_IVAFFCT17;
}

public byte getC_IVAFFCT21() {
return C_IVAFFCT21;
}

public byte getC_IVAFFCT22() {
return C_IVAFFCT22;
}

public byte getC_IVAFFCT23() {
return C_IVAFFCT23;
}

public byte getC_IVAFFCT27() {
return C_IVAFFCT27;
}

public byte getC_IVAFFCT30() {
return C_IVAFFCT30;
}

public byte getC_IVAFFCT97() {
return C_IVAFFCT97;
}

public byte getC_IVCOOP() {
return C_IVCOOP;
}

public boolean getC_IVFIO() {
return C_IVFIO;
}

public byte getC_IVINFNCE() {
return C_IVINFNCE;
}

public byte getC_IVLIBAL() {
return C_IVLIBAL;
}

public byte getC_IVLIENG() {
return C_IVLIENG;
}

public byte getC_IVLITRANS() {
return C_IVLITRANS;
}

public byte getC_IVLIWHO() {
return C_IVLIWHO;
}

public byte getC_IVPRSNT() {
return C_IVPRSNT;
}

public byte getC_J1BOSS() {
return C_J1BOSS;
}

public byte getC_J1MNGR() {
return C_J1MNGR;
}

public byte getC_J1NONE() {
return C_J1NONE;
}

public byte getC_J1NSSEC5_DV() {
return C_J1NSSEC5_DV;
}

public byte getC_J1SEMP() {
return C_J1SEMP;
}

public short getC_J1SOC00_CC() {
return C_J1SOC00_CC;
}

public short getC_J1SOC10_CC() {
return C_J1SOC10_CC;
}

public byte getC_J1SOC90_CC() {
return C_J1SOC90_CC;
}

public byte getC_J2HAS() {
return C_J2HAS;
}

public short getC_J2HRS() {
return C_J2HRS;
}

public byte getC_J2NSSEC5_DV() {
return C_J2NSSEC5_DV;
}

public short getC_J2PAY() {
return C_J2PAY;
}

protected double C_J2PAYNET_DV() {
return C_J2PAYNET_DV;
}

protected double C_J2PAY_DV() {
return C_J2PAY_DV;
}

public byte getC_J2PAY_IF() {
return C_J2PAY_IF;
}

public byte getC_J2SEMP() {
return C_J2SEMP;
}

public short getC_J2SOC00_CC() {
return C_J2SOC00_CC;
}

public short getC_J2SOC10_CC() {
return C_J2SOC10_CC;
}

public byte getC_J2SOC90_CC() {
return C_J2SOC90_CC;
}

public byte getC_JBATT1() {
return C_JBATT1;
}

public byte getC_JBATT2() {
return C_JBATT2;
}

public byte getC_JBATT3() {
return C_JBATT3;
}

public byte getC_JBATT4() {
return C_JBATT4;
}

public byte getC_JBATT5() {
return C_JBATT5;
}

public byte getC_JBATT6() {
return C_JBATT6;
}

public boolean getC_JBATT7() {
return C_JBATT7;
}

public boolean getC_JBATT8() {
return C_JBATT8;
}

public byte getC_JBATT9() {
return C_JBATT9;
}

public byte getC_JBBGD() {
return C_JBBGD;
}

public byte getC_JBBGDATD() {
return C_JBBGDATD;
}

public byte getC_JBBGDATM() {
return C_JBBGDATM;
}

public short getC_JBBGDATY() {
return C_JBBGDATY;
}

public byte getC_JBBGM() {
return C_JBBGM;
}

public short getC_JBBGY() {
return C_JBBGY;
}

public byte getC_JBENDD() {
return C_JBENDD;
}

public byte getC_JBENDM() {
return C_JBENDM;
}

public byte getC_JBENDREAS() {
return C_JBENDREAS;
}

public short getC_JBENDY4() {
return C_JBENDY4;
}

public byte getC_JBES2000() {
return C_JBES2000;
}

public byte getC_JBFT_DV() {
return C_JBFT_DV;
}

public byte getC_JBHAD() {
return C_JBHAD;
}

public byte getC_JBHAS() {
return C_JBHAS;
}

protected double C_JBHRS() {
return C_JBHRS;
}

public byte getC_JBIINDB_DV() {
return C_JBIINDB_DV;
}

public short getC_JBISCO88_CC() {
return C_JBISCO88_CC;
}

public byte getC_JBMNGR() {
return C_JBMNGR;
}

public byte getC_JBMNGRCHK() {
return C_JBMNGRCHK;
}

public byte getC_JBNSSEC3_DV() {
return C_JBNSSEC3_DV;
}

public byte getC_JBNSSEC5_DV() {
return C_JBNSSEC5_DV;
}

public byte getC_JBNSSEC8_DV() {
return C_JBNSSEC8_DV;
}

public byte getC_JBNSSEC_DV() {
return C_JBNSSEC_DV;
}

public byte getC_JBOFF() {
return C_JBOFF;
}

public byte getC_JBOFFY() {
return C_JBOFFY;
}

public byte getC_JBOT() {
return C_JBOT;
}

public byte getC_JBOTPD() {
return C_JBOTPD;
}

public byte getC_JBPL() {
return C_JBPL;
}

public byte getC_JBRGSC_DV() {
return C_JBRGSC_DV;
}

public byte getC_JBSAMR() {
return C_JBSAMR;
}

public byte getC_JBSAT() {
return C_JBSAT;
}

public byte getC_JBSECT() {
return C_JBSECT;
}

public byte getC_JBSECTPUB() {
return C_JBSECTPUB;
}

public byte getC_JBSEG_DV() {
return C_JBSEG_DV;
}

public byte getC_JBSEMP() {
return C_JBSEMP;
}

public byte getC_JBSEMPCHK() {
return C_JBSEMPCHK;
}

public byte getC_JBSIC07CHK() {
return C_JBSIC07CHK;
}

public byte getC_JBSIC07_CC() {
return C_JBSIC07_CC;
}

public byte getC_JBSIZE() {
return C_JBSIZE;
}

public byte getC_JBSIZECHK() {
return C_JBSIZECHK;
}

public byte getC_JBSOC00CHK() {
return C_JBSOC00CHK;
}

public short getC_JBSOC00_CC() {
return C_JBSOC00_CC;
}

public short getC_JBSOC10_CC() {
return C_JBSOC10_CC;
}

public byte getC_JBSOCGR_DV() {
return C_JBSOCGR_DV;
}

public byte getC_JBSTAT() {
return C_JBSTAT;
}

public byte getC_JBTERM1() {
return C_JBTERM1;
}

public byte getC_JBTERM2() {
return C_JBTERM2;
}

public short getC_JBTTWT() {
return C_JBTTWT;
}

public byte getC_JLBOSS() {
return C_JLBOSS;
}

public byte getC_JLENDM() {
return C_JLENDM;
}

public short getC_JLENDY() {
return C_JLENDY;
}

public byte getC_JLES2000() {
return C_JLES2000;
}

public byte getC_JLIINDB_DV() {
return C_JLIINDB_DV;
}

public short getC_JLISCO88_CC() {
return C_JLISCO88_CC;
}

public byte getC_JLMNGR() {
return C_JLMNGR;
}

public byte getC_JLNSSEC3_DV() {
return C_JLNSSEC3_DV;
}

public byte getC_JLNSSEC5_DV() {
return C_JLNSSEC5_DV;
}

public byte getC_JLNSSEC8_DV() {
return C_JLNSSEC8_DV;
}

public byte getC_JLNSSEC_DV() {
return C_JLNSSEC_DV;
}

public byte getC_JLRGSC_DV() {
return C_JLRGSC_DV;
}

public byte getC_JLSEG_DV() {
return C_JLSEG_DV;
}

public byte getC_JLSEMP() {
return C_JLSEMP;
}

public byte getC_JLSIC07_CC() {
return C_JLSIC07_CC;
}

public byte getC_JLSIZE() {
return C_JLSIZE;
}

public short getC_JLSOC00_CC() {
return C_JLSOC00_CC;
}

public short getC_JLSOC10_CC() {
return C_JLSOC10_CC;
}

public byte getC_JOBDENY() {
return C_JOBDENY;
}

public byte getC_JOBHOURS1() {
return C_JOBHOURS1;
}

public byte getC_JOBHOURS2() {
return C_JOBHOURS2;
}

public byte getC_JOBHOURS3() {
return C_JOBHOURS3;
}

public byte getC_JOBHOURS4() {
return C_JOBHOURS4;
}

public byte getC_JOBHOURS5() {
return C_JOBHOURS5;
}

public byte getC_JOBHOURS6() {
return C_JOBHOURS6;
}

public byte getC_JOBHOURS7() {
return C_JOBHOURS7;
}

public boolean getC_JOBHOURS8() {
return C_JOBHOURS8;
}

public boolean getC_JOBHOURS9() {
return C_JOBHOURS9;
}

public byte getC_JOBLOOK() {
return C_JOBLOOK;
}

public byte getC_JSACCS() {
return C_JSACCS;
}

public byte getC_JSBOSS() {
return C_JSBOSS;
}

public byte getC_JSHRS() {
return C_JSHRS;
}

public byte getC_JSPART() {
return C_JSPART;
}

public int getC_JSPAYU() {
return C_JSPAYU;
}

public byte getC_JSPAYW() {
return C_JSPAYW;
}

public byte getC_JSPL() {
return C_JSPL;
}

public byte getC_JSPRBM() {
return C_JSPRBM;
}

public short getC_JSPRBY4() {
return C_JSPRBY4;
}

public byte getC_JSPREM() {
return C_JSPREM;
}

public short getC_JSPREY4() {
return C_JSPREY4;
}

public int getC_JSPRF() {
return C_JSPRF;
}

public byte getC_JSPRLS() {
return C_JSPRLS;
}

public byte getC_JSPRNI() {
return C_JSPRNI;
}

public byte getC_JSPRTX() {
return C_JSPRTX;
}

public byte getC_JSPYNI() {
return C_JSPYNI;
}

public byte getC_JSPYTX() {
return C_JSPYTX;
}

public byte getC_JSSIZE() {
return C_JSSIZE;
}

public byte getC_JSTTWT() {
return C_JSTTWT;
}

public short getC_JSTTWTB() {
return C_JSTTWTB;
}

public byte getC_JSTYPEB() {
return C_JSTYPEB;
}

public byte getC_JSWORKTRAV() {
return C_JSWORKTRAV;
}

public byte getC_JUBGN() {
return C_JUBGN;
}

public byte getC_JULK4WK() {
return C_JULK4WK;
}

public byte getC_JULK4X1() {
return C_JULK4X1;
}

public byte getC_JULK4X2() {
return C_JULK4X2;
}

public byte getC_JULK4X3() {
return C_JULK4X3;
}

public byte getC_JULK4X4() {
return C_JULK4X4;
}

public byte getC_JULK4X5() {
return C_JULK4X5;
}

public byte getC_JULK4X6() {
return C_JULK4X6;
}

public byte getC_JULK4X96() {
return C_JULK4X96;
}

public byte getC_JULKJB() {
return C_JULKJB;
}

public byte getC_KID2UNI01() {
return C_KID2UNI01;
}

public byte getC_KID2UNI02() {
return C_KID2UNI02;
}

public byte getC_KID2UNI03() {
return C_KID2UNI03;
}

public byte getC_KID2UNI04() {
return C_KID2UNI04;
}

public byte getC_KID2UNI05() {
return C_KID2UNI05;
}

public byte getC_KID2UNI06() {
return C_KID2UNI06;
}

public byte getC_KID2UNI07() {
return C_KID2UNI07;
}

public byte getC_KID2UNI08() {
return C_KID2UNI08;
}

public byte getC_KID2UNI09() {
return C_KID2UNI09;
}

public byte getC_KID2UNI10() {
return C_KID2UNI10;
}

public byte getC_KID2UNI11() {
return C_KID2UNI11;
}

public byte getC_KID2UNI12() {
return C_KID2UNI12;
}

public byte getC_KID2UNI13() {
return C_KID2UNI13;
}

public byte getC_KID2UNI14() {
return C_KID2UNI14;
}

public byte getC_KID2UNI15() {
return C_KID2UNI15;
}

public byte getC_KID2UNI16() {
return C_KID2UNI16;
}

public byte getC_KIDSPT() {
return C_KIDSPT;
}

public byte getC_LADOPT() {
return C_LADOPT;
}

public byte getC_LATE() {
return C_LATE;
}

public byte getC_LCHMULTI1() {
return C_LCHMULTI1;
}

public byte getC_LCHMULTI2() {
return C_LCHMULTI2;
}

public boolean getC_LCHMULTI3() {
return C_LCHMULTI3;
}

public byte getC_LCOHNPI() {
return C_LCOHNPI;
}

protected double C_LENINDINTV() {
return C_LENINDINTV;
}

public byte getC_LEVELIMP() {
return C_LEVELIMP;
}

public byte getC_LICENG() {
return C_LICENG;
}

public byte getC_LICTRANS() {
return C_LICTRANS;
}

public byte getC_LICWHO() {
return C_LICWHO;
}

public byte getC_LIENG() {
return C_LIENG;
}

public byte getC_LIHOW() {
return C_LIHOW;
}

public byte getC_LINGUA() {
return C_LINGUA;
}

public byte getC_LITRANS() {
return C_LITRANS;
}

public byte getC_LIVESP() {
return C_LIVESP;
}

public boolean getC_LIVESP_DV() {
return C_LIVESP_DV;
}

public byte getC_LIVEWITH() {
return C_LIVEWITH;
}

public byte getC_LIWHO() {
return C_LIWHO;
}

public byte getC_LKMOVE() {
return C_LKMOVE;
}

public byte getC_LLKNBRD() {
return C_LLKNBRD;
}

public byte getC_LMAR1M() {
return C_LMAR1M;
}

public short getC_LMAR1Y() {
return C_LMAR1Y;
}

public byte getC_LMCBM1() {
return C_LMCBM1;
}

public byte getC_LMCBM2() {
return C_LMCBM2;
}

public byte getC_LMCBM3() {
return C_LMCBM3;
}

public short getC_LMCBY41() {
return C_LMCBY41;
}

public short getC_LMCBY42() {
return C_LMCBY42;
}

public short getC_LMCBY43() {
return C_LMCBY43;
}

public byte getC_LMSPM1() {
return C_LMSPM1;
}

public byte getC_LMSPM2() {
return C_LMSPM2;
}

public byte getC_LMSPM3() {
return C_LMSPM3;
}

public short getC_LMSPY41() {
return C_LMSPY41;
}

public short getC_LMSPY42() {
return C_LMSPY42;
}

public short getC_LMSPY43() {
return C_LMSPY43;
}

public byte getC_LNADOPT() {
return C_LNADOPT;
}

public byte getC_LNPRNT() {
return C_LNPRNT;
}

public byte getC_LOCSERAP() {
return C_LOCSERAP;
}

public byte getC_LOCSERAS() {
return C_LOCSERAS;
}

public byte getC_LOCSERB() {
return C_LOCSERB;
}

public byte getC_LOCSERC() {
return C_LOCSERC;
}

public byte getC_LOCSERD() {
return C_LOCSERD;
}

public byte getC_LOCSERE() {
return C_LOCSERE;
}

public byte getC_LPRNT() {
return C_LPRNT;
}

public byte getC_LVHM() {
return C_LVHM;
}

public byte getC_LVMTHP() {
return C_LVMTHP;
}

public byte getC_LVREL1() {
return C_LVREL1;
}

public byte getC_LVREL10() {
return C_LVREL10;
}

public byte getC_LVREL2() {
return C_LVREL2;
}

public byte getC_LVREL3() {
return C_LVREL3;
}

public byte getC_LVREL4() {
return C_LVREL4;
}

public byte getC_LVREL5() {
return C_LVREL5;
}

public byte getC_LVREL6() {
return C_LVREL6;
}

public byte getC_LVREL7() {
return C_LVREL7;
}

public byte getC_LVREL8() {
return C_LVREL8;
}

public byte getC_LVREL9() {
return C_LVREL9;
}

public byte getC_LVREL96() {
return C_LVREL96;
}

public byte getC_LVSCDO() {
return C_LVSCDO;
}

public byte getC_LVWHY() {
return C_LVWHY;
}

public short getC_LVYRP() {
return C_LVYRP;
}

public byte getC_LWWRONG() {
return C_LWWRONG;
}

public byte getC_MAAGE() {
return C_MAAGE;
}

public byte getC_MACOB() {
return C_MACOB;
}

public byte getC_MACON() {
return C_MACON;
}

public byte getC_MAFAR() {
return C_MAFAR;
}

public byte getC_MAJU() {
return C_MAJU;
}

public byte getC_MALONE() {
return C_MALONE;
}

public byte getC_MAMOSTCON() {
return C_MAMOSTCON;
}

public byte getC_MANSSEC5_DV() {
return C_MANSSEC5_DV;
}

public byte getC_MARSTAT() {
return C_MARSTAT;
}

public byte getC_MASEE() {
return C_MASEE;
}

public short getC_MASOC00_CC() {
return C_MASOC00_CC;
}

public short getC_MASOC10_CC() {
return C_MASOC10_CC;
}

public byte getC_MASOC90_CC() {
return C_MASOC90_CC;
}

public byte getC_MASTAT_DV() {
return C_MASTAT_DV;
}

public byte getC_MATLEAVE() {
return C_MATLEAVE;
}

public byte getC_MATLV() {
return C_MATLV;
}

public byte getC_MATLVENDD() {
return C_MATLVENDD;
}

public byte getC_MATLVENDM() {
return C_MATLVENDM;
}

public short getC_MATLVENDY4() {
return C_MATLVENDY4;
}

public byte getC_MATLVSTD() {
return C_MATLVSTD;
}

public byte getC_MATLVSTM() {
return C_MATLVSTM;
}

public short getC_MATLVSTY4() {
return C_MATLVSTY4;
}

public byte getC_MAYRUK() {
return C_MAYRUK;
}

public byte getC_MEMAID() {
return C_MEMAID;
}

public byte getC_MEMCONT11() {
return C_MEMCONT11;
}

public byte getC_MEMCONT12() {
return C_MEMCONT12;
}

public byte getC_MEMCONT13() {
return C_MEMCONT13;
}

public byte getC_MEMCONT21() {
return C_MEMCONT21;
}

public byte getC_MEMCONT210() {
return C_MEMCONT210;
}

public byte getC_MEMCONT211() {
return C_MEMCONT211;
}

public byte getC_MEMCONT212() {
return C_MEMCONT212;
}

public byte getC_MEMCONT213() {
return C_MEMCONT213;
}

public byte getC_MEMCONT214() {
return C_MEMCONT214;
}

public byte getC_MEMCONT215() {
return C_MEMCONT215;
}

public byte getC_MEMCONT216() {
return C_MEMCONT216;
}

public byte getC_MEMCONT22() {
return C_MEMCONT22;
}

public byte getC_MEMCONT23() {
return C_MEMCONT23;
}

public byte getC_MEMCONT24() {
return C_MEMCONT24;
}

public byte getC_MEMCONT25() {
return C_MEMCONT25;
}

public byte getC_MEMCONT26() {
return C_MEMCONT26;
}

public byte getC_MEMCONT27() {
return C_MEMCONT27;
}

public byte getC_MEMCONT28() {
return C_MEMCONT28;
}

public byte getC_MEMCONT29() {
return C_MEMCONT29;
}

public byte getC_MEMCONT3() {
return C_MEMCONT3;
}

public byte getC_MEMORIG() {
return C_MEMORIG;
}

public byte getC_MEMPER() {
return C_MEMPER;
}

public byte getC_MEMPLOY() {
return C_MEMPLOY;
}

public byte getC_MEMPROB1() {
return C_MEMPROB1;
}

public byte getC_MEMPROB2() {
return C_MEMPROB2;
}

public byte getC_MEMPROB3() {
return C_MEMPROB3;
}

public byte getC_MEMPROB4() {
return C_MEMPROB4;
}

public byte getC_MIGCNTRY() {
return C_MIGCNTRY;
}

public byte getC_MIGPLNS() {
return C_MIGPLNS;
}

public byte getC_MLAGST() {
return C_MLAGST;
}

public byte getC_MLAGSTU() {
return C_MLAGSTU;
}

public byte getC_MLFUTR() {
return C_MLFUTR;
}

public byte getC_MLRNOT1() {
return C_MLRNOT1;
}

public byte getC_MLRNOT10() {
return C_MLRNOT10;
}

public byte getC_MLRNOT11() {
return C_MLRNOT11;
}

public byte getC_MLRNOT12() {
return C_MLRNOT12;
}

public byte getC_MLRNOT13() {
return C_MLRNOT13;
}

public byte getC_MLRNOT2() {
return C_MLRNOT2;
}

public byte getC_MLRNOT3() {
return C_MLRNOT3;
}

public byte getC_MLRNOT4() {
return C_MLRNOT4;
}

public byte getC_MLRNOT5() {
return C_MLRNOT5;
}

public byte getC_MLRNOT6() {
return C_MLRNOT6;
}

public byte getC_MLRNOT7() {
return C_MLRNOT7;
}

public byte getC_MLRNOT8() {
return C_MLRNOT8;
}

public byte getC_MLRNOT9() {
return C_MLRNOT9;
}

public byte getC_MLRNOT97() {
return C_MLRNOT97;
}

public byte getC_MLSTAT() {
return C_MLSTAT;
}

public byte getC_MLSTATCHK() {
return C_MLSTATCHK;
}

public byte getC_MLWKFPT() {
return C_MLWKFPT;
}

public int getC_MNPID() {
return C_MNPID;
}

public byte getC_MNPNO() {
return C_MNPNO;
}

public int getC_MNSPID() {
return C_MNSPID;
}

public byte getC_MNSPNO() {
return C_MNSPNO;
}

public byte getC_MOBUSE() {
return C_MOBUSE;
}

public byte getC_MONTH() {
return C_MONTH;
}

public byte getC_MOVDIR() {
return C_MOVDIR;
}

public byte getC_MOVEOTH_CODE() {
return C_MOVEOTH_CODE;
}

public byte getC_MOVY11() {
return C_MOVY11;
}

public byte getC_MOVY12() {
return C_MOVY12;
}

public byte getC_MOVY13() {
return C_MOVY13;
}

public byte getC_MOVY14() {
return C_MOVY14;
}

public byte getC_MOVY15() {
return C_MOVY15;
}

public byte getC_MOVY16() {
return C_MOVY16;
}

public byte getC_MSTATCH1() {
return C_MSTATCH1;
}

public byte getC_MSTATCH2() {
return C_MSTATCH2;
}

public byte getC_MSTATSAM() {
return C_MSTATSAM;
}

public byte getC_MSTATSAMN() {
return C_MSTATSAMN;
}

public byte getC_MVEVER() {
return C_MVEVER;
}

public byte getC_MVMNTH() {
return C_MVMNTH;
}

public short getC_MVYR() {
return C_MVYR;
}

public byte getC_NACAR() {
return C_NACAR;
}

public byte getC_NACONT11() {
return C_NACONT11;
}

public byte getC_NACONT12() {
return C_NACONT12;
}

public byte getC_NACONT13() {
return C_NACONT13;
}

public byte getC_NACONT21() {
return C_NACONT21;
}

public byte getC_NACONT210() {
return C_NACONT210;
}

public byte getC_NACONT211() {
return C_NACONT211;
}

public byte getC_NACONT212() {
return C_NACONT212;
}

public byte getC_NACONT213() {
return C_NACONT213;
}

public byte getC_NACONT214() {
return C_NACONT214;
}

public byte getC_NACONT215() {
return C_NACONT215;
}

public byte getC_NACONT216() {
return C_NACONT216;
}

public byte getC_NACONT22() {
return C_NACONT22;
}

public byte getC_NACONT23() {
return C_NACONT23;
}

public byte getC_NACONT24() {
return C_NACONT24;
}

public byte getC_NACONT25() {
return C_NACONT25;
}

public byte getC_NACONT26() {
return C_NACONT26;
}

public byte getC_NACONT27() {
return C_NACONT27;
}

public byte getC_NACONT28() {
return C_NACONT28;
}

public byte getC_NACONT29() {
return C_NACONT29;
}

public byte getC_NACONT3() {
return C_NACONT3;
}

public byte getC_NADISEASE() {
return C_NADISEASE;
}

public byte getC_NADOPTCH() {
return C_NADOPTCH;
}

public byte getC_NADRINK() {
return C_NADRINK;
}

public byte getC_NAIDXHH() {
return C_NAIDXHH;
}

public byte getC_NAINTEREST() {
return C_NAINTEREST;
}

public byte getC_NALOTTERY() {
return C_NALOTTERY;
}

public byte getC_NASOFA() {
return C_NASOFA;
}

public byte getC_NASTOP1() {
return C_NASTOP1;
}

public byte getC_NASTOP2() {
return C_NASTOP2;
}

public byte getC_NASTOP3() {
return C_NASTOP3;
}

public byte getC_NASTOP4() {
return C_NASTOP4;
}

public byte getC_NASTOP5() {
return C_NASTOP5;
}

public byte getC_NASTOP6() {
return C_NASTOP6;
}

public byte getC_NASTOP7() {
return C_NASTOP7;
}

public byte getC_NASTOP8() {
return C_NASTOP8;
}

public byte getC_NASTOP97() {
return C_NASTOP97;
}

public byte getC_NATCH01() {
return C_NATCH01;
}

public byte getC_NATCH02() {
return C_NATCH02;
}

public byte getC_NATCH03() {
return C_NATCH03;
}

public byte getC_NATCH04() {
return C_NATCH04;
}

public byte getC_NATCH05() {
return C_NATCH05;
}

public byte getC_NATCH06() {
return C_NATCH06;
}

public byte getC_NATCH07() {
return C_NATCH07;
}

public byte getC_NATCH08() {
return C_NATCH08;
}

public byte getC_NATCH09() {
return C_NATCH09;
}

public byte getC_NATCH10() {
return C_NATCH10;
}

public byte getC_NATCH11() {
return C_NATCH11;
}

public boolean getC_NATCH12() {
return C_NATCH12;
}

public boolean getC_NATCH13() {
return C_NATCH13;
}

public boolean getC_NATCH14() {
return C_NATCH14;
}

public boolean getC_NATCH15() {
return C_NATCH15;
}

public boolean getC_NATCH16() {
return C_NATCH16;
}

public byte getC_NATID1() {
return C_NATID1;
}

public byte getC_NATID2() {
return C_NATID2;
}

public byte getC_NATID3() {
return C_NATID3;
}

public byte getC_NATID4() {
return C_NATID4;
}

public byte getC_NATID5() {
return C_NATID5;
}

public byte getC_NATID6() {
return C_NATID6;
}

public byte getC_NATID97() {
return C_NATID97;
}

public byte getC_NBRCOH1() {
return C_NBRCOH1;
}

public byte getC_NBRCOH2() {
return C_NBRCOH2;
}

public byte getC_NBRCOH3() {
return C_NBRCOH3;
}

public byte getC_NBRCOH4() {
return C_NBRCOH4;
}

public byte getC_NBRCOHDK_DV() {
return C_NBRCOHDK_DV;
}

public byte getC_NBRCOH_DV() {
return C_NBRCOH_DV;
}

protected double C_NBRSNCI_DV() {
return C_NBRSNCI_DV;
}

public byte getC_NCH10() {
return C_NCH10;
}

public byte getC_NCH10TO15() {
return C_NCH10TO15;
}

public byte getC_NCH14RESP() {
return C_NCH14RESP;
}

public byte getC_NCH3RESP() {
return C_NCH3RESP;
}

public byte getC_NCH415RESP() {
return C_NCH415RESP;
}

public byte getC_NCH5RESP() {
return C_NCH5RESP;
}

public byte getC_NCH5TO15() {
return C_NCH5TO15;
}

public byte getC_NCH8RESP() {
return C_NCH8RESP;
}

public byte getC_NCHILD() {
return C_NCHILD;
}

public byte getC_NCHILD_DV() {
return C_NCHILD_DV;
}

public byte getC_NCHRESP() {
return C_NCHRESP;
}

public byte getC_NCHUND18RESP() {
return C_NCHUND18RESP;
}

public byte getC_NCHUNDER16() {
return C_NCHUNDER16;
}

public byte getC_NCRR1() {
return C_NCRR1;
}

public byte getC_NCRR11() {
return C_NCRR11;
}

public byte getC_NCRR12() {
return C_NCRR12;
}

public byte getC_NCRR3() {
return C_NCRR3;
}

public byte getC_NCRR4() {
return C_NCRR4;
}

public byte getC_NCRR5() {
return C_NCRR5;
}

public byte getC_NCRR6() {
return C_NCRR6;
}

public byte getC_NCRR8() {
return C_NCRR8;
}

public byte getC_NCRR9() {
return C_NCRR9;
}

public byte getC_NCRRM() {
return C_NCRRM;
}

public short getC_NCRRY4() {
return C_NCRRY4;
}

public byte getC_NDEPCHL_DV() {
return C_NDEPCHL_DV;
}

public byte getC_NETAG_1() {
return C_NETAG_1;
}

public byte getC_NETAG_2() {
return C_NETAG_2;
}

public byte getC_NETAG_3() {
return C_NETAG_3;
}

public byte getC_NETCHT() {
return C_NETCHT;
}

public byte getC_NETDO10_1() {
return C_NETDO10_1;
}

public byte getC_NETDO10_2() {
return C_NETDO10_2;
}

public byte getC_NETDO10_3() {
return C_NETDO10_3;
}

public byte getC_NETDO1_1() {
return C_NETDO1_1;
}

public byte getC_NETDO1_2() {
return C_NETDO1_2;
}

public byte getC_NETDO1_3() {
return C_NETDO1_3;
}

public byte getC_NETDO2_1() {
return C_NETDO2_1;
}

public byte getC_NETDO2_2() {
return C_NETDO2_2;
}

public byte getC_NETDO2_3() {
return C_NETDO2_3;
}

public byte getC_NETDO3_1() {
return C_NETDO3_1;
}

public byte getC_NETDO3_2() {
return C_NETDO3_2;
}

public byte getC_NETDO3_3() {
return C_NETDO3_3;
}

public byte getC_NETDO4_1() {
return C_NETDO4_1;
}

public byte getC_NETDO4_2() {
return C_NETDO4_2;
}

public byte getC_NETDO4_3() {
return C_NETDO4_3;
}

public byte getC_NETDO5_1() {
return C_NETDO5_1;
}

public byte getC_NETDO5_2() {
return C_NETDO5_2;
}

public byte getC_NETDO5_3() {
return C_NETDO5_3;
}

public byte getC_NETDO6_1() {
return C_NETDO6_1;
}

public byte getC_NETDO6_2() {
return C_NETDO6_2;
}

public byte getC_NETDO6_3() {
return C_NETDO6_3;
}

public byte getC_NETDO7_1() {
return C_NETDO7_1;
}

public byte getC_NETDO7_2() {
return C_NETDO7_2;
}

public byte getC_NETDO7_3() {
return C_NETDO7_3;
}

public byte getC_NETDO8_1() {
return C_NETDO8_1;
}

public byte getC_NETDO8_2() {
return C_NETDO8_2;
}

public byte getC_NETDO8_3() {
return C_NETDO8_3;
}

public byte getC_NETDO96_1() {
return C_NETDO96_1;
}

public byte getC_NETDO96_2() {
return C_NETDO96_2;
}

public byte getC_NETDO96_3() {
return C_NETDO96_3;
}

public byte getC_NETDO97_1() {
return C_NETDO97_1;
}

public byte getC_NETDO97_2() {
return C_NETDO97_2;
}

public byte getC_NETDO97_3() {
return C_NETDO97_3;
}

public byte getC_NETDO9_1() {
return C_NETDO9_1;
}

public byte getC_NETDO9_2() {
return C_NETDO9_2;
}

public byte getC_NETDO9_3() {
return C_NETDO9_3;
}

public byte getC_NETET_1() {
return C_NETET_1;
}

public byte getC_NETET_2() {
return C_NETET_2;
}

public byte getC_NETET_3() {
return C_NETET_3;
}

public byte getC_NETJB_1() {
return C_NETJB_1;
}

public byte getC_NETJB_2() {
return C_NETJB_2;
}

public byte getC_NETJB_3() {
return C_NETJB_3;
}

public byte getC_NETKN_1() {
return C_NETKN_1;
}

public byte getC_NETKN_2() {
return C_NETKN_2;
}

public byte getC_NETKN_3() {
return C_NETKN_3;
}

public byte getC_NETLV_1() {
return C_NETLV_1;
}

public byte getC_NETLV_2() {
return C_NETLV_2;
}

public byte getC_NETLV_3() {
return C_NETLV_3;
}

public byte getC_NETM2() {
return C_NETM2;
}

public byte getC_NETM2O_CODE() {
return C_NETM2O_CODE;
}

public byte getC_NETMET_1() {
return C_NETMET_1;
}

public byte getC_NETMET_2() {
return C_NETMET_2;
}

public byte getC_NETMET_3() {
return C_NETMET_3;
}

public byte getC_NETPH_1() {
return C_NETPH_1;
}

public byte getC_NETPH_2() {
return C_NETPH_2;
}

public byte getC_NETPH_3() {
return C_NETPH_3;
}

public byte getC_NETPUSE() {
return C_NETPUSE;
}

public byte getC_NETRL_1() {
return C_NETRL_1;
}

public byte getC_NETRL_2() {
return C_NETRL_2;
}

public byte getC_NETRL_3() {
return C_NETRL_3;
}

public byte getC_NETSX_1() {
return C_NETSX_1;
}

public byte getC_NETSX_2() {
return C_NETSX_2;
}

public byte getC_NETSX_3() {
return C_NETSX_3;
}

public byte getC_NETTALK10_1() {
return C_NETTALK10_1;
}

public byte getC_NETTALK10_2() {
return C_NETTALK10_2;
}

public byte getC_NETTALK10_3() {
return C_NETTALK10_3;
}

public byte getC_NETTALK11_1() {
return C_NETTALK11_1;
}

public byte getC_NETTALK11_2() {
return C_NETTALK11_2;
}

public byte getC_NETTALK11_3() {
return C_NETTALK11_3;
}

public byte getC_NETTALK12_1() {
return C_NETTALK12_1;
}

public byte getC_NETTALK12_2() {
return C_NETTALK12_2;
}

public byte getC_NETTALK12_3() {
return C_NETTALK12_3;
}

public byte getC_NETTALK13_1() {
return C_NETTALK13_1;
}

public byte getC_NETTALK13_2() {
return C_NETTALK13_2;
}

public byte getC_NETTALK13_3() {
return C_NETTALK13_3;
}

public byte getC_NETTALK1_1() {
return C_NETTALK1_1;
}

public byte getC_NETTALK1_2() {
return C_NETTALK1_2;
}

public byte getC_NETTALK1_3() {
return C_NETTALK1_3;
}

public byte getC_NETTALK2_1() {
return C_NETTALK2_1;
}

public byte getC_NETTALK2_2() {
return C_NETTALK2_2;
}

public byte getC_NETTALK2_3() {
return C_NETTALK2_3;
}

public byte getC_NETTALK3_1() {
return C_NETTALK3_1;
}

public byte getC_NETTALK3_2() {
return C_NETTALK3_2;
}

public byte getC_NETTALK3_3() {
return C_NETTALK3_3;
}

public byte getC_NETTALK4_1() {
return C_NETTALK4_1;
}

public byte getC_NETTALK4_2() {
return C_NETTALK4_2;
}

public byte getC_NETTALK4_3() {
return C_NETTALK4_3;
}

public byte getC_NETTALK5_1() {
return C_NETTALK5_1;
}

public byte getC_NETTALK5_2() {
return C_NETTALK5_2;
}

public byte getC_NETTALK5_3() {
return C_NETTALK5_3;
}

public byte getC_NETTALK6_1() {
return C_NETTALK6_1;
}

public byte getC_NETTALK6_2() {
return C_NETTALK6_2;
}

public byte getC_NETTALK6_3() {
return C_NETTALK6_3;
}

public byte getC_NETTALK7_1() {
return C_NETTALK7_1;
}

public byte getC_NETTALK7_2() {
return C_NETTALK7_2;
}

public byte getC_NETTALK7_3() {
return C_NETTALK7_3;
}

public byte getC_NETTALK8_1() {
return C_NETTALK8_1;
}

public byte getC_NETTALK8_2() {
return C_NETTALK8_2;
}

public byte getC_NETTALK8_3() {
return C_NETTALK8_3;
}

public byte getC_NETTALK96_1() {
return C_NETTALK96_1;
}

public byte getC_NETTALK96_2() {
return C_NETTALK96_2;
}

public byte getC_NETTALK96_3() {
return C_NETTALK96_3;
}

public byte getC_NETTALK97_1() {
return C_NETTALK97_1;
}

public byte getC_NETTALK97_2() {
return C_NETTALK97_2;
}

public byte getC_NETTALK97_3() {
return C_NETTALK97_3;
}

public byte getC_NETTALK9_1() {
return C_NETTALK9_1;
}

public byte getC_NETTALK9_2() {
return C_NETTALK9_2;
}

public byte getC_NETTALK9_3() {
return C_NETTALK9_3;
}

public byte getC_NETUSE() {
return C_NETUSE;
}

public byte getC_NETWEB_1() {
return C_NETWEB_1;
}

public byte getC_NETWEB_2() {
return C_NETWEB_2;
}

public byte getC_NETWEB_3() {
return C_NETWEB_3;
}

public byte getC_NETWR_1() {
return C_NETWR_1;
}

public byte getC_NETWR_2() {
return C_NETWR_2;
}

public byte getC_NETWR_3() {
return C_NETWR_3;
}

public byte getC_NEWSMAIN() {
return C_NEWSMAIN;
}

public byte getC_NEWSOURCE1() {
return C_NEWSOURCE1;
}

public byte getC_NEWSOURCE10() {
return C_NEWSOURCE10;
}

public byte getC_NEWSOURCE11() {
return C_NEWSOURCE11;
}

public byte getC_NEWSOURCE12() {
return C_NEWSOURCE12;
}

public byte getC_NEWSOURCE2() {
return C_NEWSOURCE2;
}

public byte getC_NEWSOURCE3() {
return C_NEWSOURCE3;
}

public byte getC_NEWSOURCE4() {
return C_NEWSOURCE4;
}

public byte getC_NEWSOURCE5() {
return C_NEWSOURCE5;
}

public byte getC_NEWSOURCE6() {
return C_NEWSOURCE6;
}

public byte getC_NEWSOURCE7() {
return C_NEWSOURCE7;
}

public byte getC_NEWSOURCE8() {
return C_NEWSOURCE8;
}

public byte getC_NEWSOURCE9() {
return C_NEWSOURCE9;
}

public byte getC_NEWSOURCE96() {
return C_NEWSOURCE96;
}

public byte getC_NEXT1() {
return C_NEXT1;
}

public byte getC_NEXT2() {
return C_NEXT2;
}

public byte getC_NEXT3() {
return C_NEXT3;
}

public byte getC_NEXT4() {
return C_NEXT4;
}

public byte getC_NEXT5() {
return C_NEXT5;
}

public byte getC_NEXT6() {
return C_NEXT6;
}

public byte getC_NEXT7() {
return C_NEXT7;
}

public byte getC_NEXT8() {
return C_NEXT8;
}

public byte getC_NEXT9() {
return C_NEXT9;
}

public byte getC_NEXTELSE1() {
return C_NEXTELSE1;
}

public byte getC_NEXTELSE2() {
return C_NEXTELSE2;
}

public byte getC_NEXTELSE3() {
return C_NEXTELSE3;
}

public byte getC_NEXTELSE4() {
return C_NEXTELSE4;
}

public byte getC_NEXTELSE5() {
return C_NEXTELSE5;
}

public byte getC_NEXTELSE6() {
return C_NEXTELSE6;
}

public byte getC_NEXTELSE7() {
return C_NEXTELSE7;
}

public byte getC_NEXTELSE8() {
return C_NEXTELSE8;
}

public boolean getC_NEXTELSE9() {
return C_NEXTELSE9;
}

public byte getC_NEXTJOB1() {
return C_NEXTJOB1;
}

public byte getC_NEXTJOB2() {
return C_NEXTJOB2;
}

public byte getC_NEXTJOB3() {
return C_NEXTJOB3;
}

public byte getC_NEXTJOB4() {
return C_NEXTJOB4;
}

public byte getC_NEXTJOB5() {
return C_NEXTJOB5;
}

public byte getC_NEXTJOB6() {
return C_NEXTJOB6;
}

public byte getC_NEXTJOB7() {
return C_NEXTJOB7;
}

public boolean getC_NEXTJOB8() {
return C_NEXTJOB8;
}

public byte getC_NEXTJOB9() {
return C_NEXTJOB9;
}

public byte getC_NEXTSTAT1() {
return C_NEXTSTAT1;
}

public byte getC_NEXTSTAT2() {
return C_NEXTSTAT2;
}

public byte getC_NEXTSTAT3() {
return C_NEXTSTAT3;
}

public byte getC_NEXTSTAT4() {
return C_NEXTSTAT4;
}

public byte getC_NEXTSTAT5() {
return C_NEXTSTAT5;
}

public byte getC_NEXTSTAT6() {
return C_NEXTSTAT6;
}

public byte getC_NEXTSTAT7() {
return C_NEXTSTAT7;
}

public byte getC_NEXTSTAT8() {
return C_NEXTSTAT8;
}

public byte getC_NEXTSTAT9() {
return C_NEXTSTAT9;
}

public byte getC_NFH01() {
return C_NFH01;
}

public byte getC_NFH02() {
return C_NFH02;
}

public byte getC_NFH03() {
return C_NFH03;
}

public byte getC_NFH04() {
return C_NFH04;
}

public byte getC_NFH05() {
return C_NFH05;
}

public byte getC_NFH06() {
return C_NFH06;
}

public byte getC_NFH07() {
return C_NFH07;
}

public byte getC_NFH08() {
return C_NFH08;
}

public byte getC_NFH09() {
return C_NFH09;
}

public byte getC_NFH10() {
return C_NFH10;
}

public byte getC_NFH11() {
return C_NFH11;
}

public byte getC_NFH12() {
return C_NFH12;
}

public byte getC_NFH13() {
return C_NFH13;
}

public byte getC_NFH14() {
return C_NFH14;
}

public byte getC_NFH15() {
return C_NFH15;
}

public byte getC_NFH16() {
return C_NFH16;
}

public byte getC_NFH17() {
return C_NFH17;
}

public byte getC_NFH18() {
return C_NFH18;
}

public byte getC_NFH19() {
return C_NFH19;
}

public byte getC_NFH20() {
return C_NFH20;
}

public byte getC_NFH21() {
return C_NFH21;
}

public byte getC_NFH22() {
return C_NFH22;
}

public byte getC_NFH23() {
return C_NFH23;
}

public byte getC_NFH24() {
return C_NFH24;
}

public byte getC_NFH25() {
return C_NFH25;
}

public byte getC_NFH26() {
return C_NFH26;
}

public byte getC_NFH27() {
return C_NFH27;
}

public byte getC_NFH28() {
return C_NFH28;
}

public byte getC_NFH29() {
return C_NFH29;
}

public byte getC_NFH30() {
return C_NFH30;
}

public byte getC_NFH31() {
return C_NFH31;
}

public byte getC_NFH32() {
return C_NFH32;
}

public byte getC_NFH33() {
return C_NFH33;
}

public byte getC_NFH34() {
return C_NFH34;
}

public byte getC_NFH35() {
return C_NFH35;
}

public byte getC_NFH36() {
return C_NFH36;
}

public byte getC_NFH37() {
return C_NFH37;
}

public byte getC_NFH38() {
return C_NFH38;
}

public byte getC_NFH39() {
return C_NFH39;
}

public byte getC_NGRP_DV() {
return C_NGRP_DV;
}

public byte getC_NHIQUAL_DV() {
return C_NHIQUAL_DV;
}

public byte getC_NIACT() {
return C_NIACT;
}

public byte getC_NICLBNS1() {
return C_NICLBNS1;
}

public byte getC_NICLBNS2() {
return C_NICLBNS2;
}

public byte getC_NICLBNS3() {
return C_NICLBNS3;
}

public byte getC_NICLBNS4() {
return C_NICLBNS4;
}

public byte getC_NIREL() {
return C_NIREL;
}

public byte getC_NISERPS() {
return C_NISERPS;
}

public byte getC_NMAR() {
return C_NMAR;
}

public byte getC_NMPSP_DV() {
return C_NMPSP_DV;
}

public byte getC_NNATCH() {
return C_NNATCH;
}

public byte getC_NNEWBORN() {
return C_NNEWBORN;
}

public byte getC_NNMPSP_DV() {
return C_NNMPSP_DV;
}

public byte getC_NNSIB_DV() {
return C_NNSIB_DV;
}

public byte getC_NNSSIB_DV() {
return C_NNSSIB_DV;
}

public byte getC_NOTEMPCHK() {
return C_NOTEMPCHK;
}

public byte getC_NPENSIONER_DV() {
return C_NPENSIONER_DV;
}

public byte getC_NPNS_DV() {
return C_NPNS_DV;
}

public byte getC_NPN_DV() {
return C_NPN_DV;
}

public byte getC_NQFHIGH_DV() {
return C_NQFHIGH_DV;
}

public byte getC_NRELS1() {
return C_NRELS1;
}

public byte getC_NRELS2() {
return C_NRELS2;
}

public byte getC_NRELS3() {
return C_NRELS3;
}

public byte getC_NRELS4() {
return C_NRELS4;
}

public byte getC_NRELS5() {
return C_NRELS5;
}

public byte getC_NRELS6() {
return C_NRELS6;
}

public byte getC_NS200PRE() {
return C_NS200PRE;
}

public byte getC_NS201G1() {
return C_NS201G1;
}

public byte getC_NS202H1() {
return C_NS202H1;
}

public byte getC_NS203I1() {
return C_NS203I1;
}

public byte getC_NS204A1() {
return C_NS204A1;
}

public byte getC_NS205B1() {
return C_NS205B1;
}

public byte getC_NS206C1() {
return C_NS206C1;
}

public byte getC_NS207D1() {
return C_NS207D1;
}

public byte getC_NS208E1() {
return C_NS208E1;
}

public byte getC_NS209F1() {
return C_NS209F1;
}

public byte getC_NS210J1() {
return C_NS210J1;
}

public byte getC_NS211K1() {
return C_NS211K1;
}

public byte getC_NS212L1() {
return C_NS212L1;
}

public byte getC_NS213M1() {
return C_NS213M1;
}

public byte getC_NS214N1() {
return C_NS214N1;
}

public byte getC_NS215O1() {
return C_NS215O1;
}

public byte getC_NS216C() {
return C_NS216C;
}

public byte getC_NS221G2() {
return C_NS221G2;
}

public byte getC_NS222H2() {
return C_NS222H2;
}

public byte getC_NS223I2() {
return C_NS223I2;
}

public byte getC_NS224A2() {
return C_NS224A2;
}

public byte getC_NS225B2() {
return C_NS225B2;
}

public byte getC_NS226C() {
return C_NS226C;
}

public byte getC_NS226C2() {
return C_NS226C2;
}

public byte getC_NS227D2() {
return C_NS227D2;
}

public byte getC_NS228E2() {
return C_NS228E2;
}

public byte getC_NS229F2() {
return C_NS229F2;
}

public byte getC_NS230J2() {
return C_NS230J2;
}

public byte getC_NS231K2() {
return C_NS231K2;
}

public byte getC_NS232L2() {
return C_NS232L2;
}

public byte getC_NS233M2() {
return C_NS233M2;
}

public byte getC_NS234N2() {
return C_NS234N2;
}

public byte getC_NS235O2() {
return C_NS235O2;
}

public byte getC_NS240() {
return C_NS240;
}

public byte getC_NS241() {
return C_NS241;
}

public byte getC_NS242() {
return C_NS242;
}

public byte getC_NSCONT11() {
return C_NSCONT11;
}

public byte getC_NSCONT12() {
return C_NSCONT12;
}

public byte getC_NSCONT13() {
return C_NSCONT13;
}

public byte getC_NSCONT21() {
return C_NSCONT21;
}

public byte getC_NSCONT210() {
return C_NSCONT210;
}

public byte getC_NSCONT211() {
return C_NSCONT211;
}

public byte getC_NSCONT212() {
return C_NSCONT212;
}

public byte getC_NSCONT213() {
return C_NSCONT213;
}

public byte getC_NSCONT214() {
return C_NSCONT214;
}

public byte getC_NSCONT215() {
return C_NSCONT215;
}

public byte getC_NSCONT216() {
return C_NSCONT216;
}

public byte getC_NSCONT22() {
return C_NSCONT22;
}

public byte getC_NSCONT23() {
return C_NSCONT23;
}

public byte getC_NSCONT24() {
return C_NSCONT24;
}

public byte getC_NSCONT25() {
return C_NSCONT25;
}

public byte getC_NSCONT26() {
return C_NSCONT26;
}

public byte getC_NSCONT27() {
return C_NSCONT27;
}

public byte getC_NSCONT28() {
return C_NSCONT28;
}

public byte getC_NSCONT29() {
return C_NSCONT29;
}

public byte getC_NSCONT3() {
return C_NSCONT3;
}

public byte getC_NSRAN() {
return C_NSRAN;
}

public byte getC_NSSTOP1() {
return C_NSSTOP1;
}

public byte getC_NSSTOP2() {
return C_NSSTOP2;
}

public byte getC_NSSTOP3() {
return C_NSSTOP3;
}

public byte getC_NSSTOP4() {
return C_NSSTOP4;
}

public byte getC_NSSTOP5() {
return C_NSSTOP5;
}

public byte getC_NSSTOP6() {
return C_NSSTOP6;
}

public byte getC_NSSTOP7() {
return C_NSSTOP7;
}

public byte getC_NSSTOP8() {
return C_NSSTOP8;
}

public byte getC_NSSTOP97() {
return C_NSSTOP97;
}

public byte getC_NUABPRE() {
return C_NUABPRE;
}

public byte getC_NUNMPSP_DV() {
return C_NUNMPSP_DV;
}

public byte getC_NXTJBENDD() {
return C_NXTJBENDD;
}

public byte getC_NXTJBENDM() {
return C_NXTJBENDM;
}

public short getC_NXTJBENDY4() {
return C_NXTJBENDY4;
}

public byte getC_NXTJBES() {
return C_NXTJBES;
}

public byte getC_NXTJBHRS() {
return C_NXTJBHRS;
}

public byte getC_NXTST() {
return C_NXTST;
}

public byte getC_NXTSTELSE() {
return C_NXTSTELSE;
}

public byte getC_NXTSTENDD() {
return C_NXTSTENDD;
}

public byte getC_NXTSTENDM() {
return C_NXTSTENDM;
}

public short getC_NXTSTENDY4() {
return C_NXTSTENDY4;
}

public byte getC_OCIMPA() {
return C_OCIMPA;
}

public byte getC_OCIMPB() {
return C_OCIMPB;
}

public byte getC_OCIMPE() {
return C_OCIMPE;
}

public byte getC_OCIMPF() {
return C_OCIMPF;
}

public byte getC_OCIMPI() {
return C_OCIMPI;
}

public byte getC_OCIMPK() {
return C_OCIMPK;
}

public byte getC_OCIMPL() {
return C_OCIMPL;
}

public byte getC_OHCH16() {
return C_OHCH16;
}

public byte getC_OPRLG() {
return C_OPRLG;
}

public byte getC_OPRLG0() {
return C_OPRLG0;
}

public byte getC_OPRLG0NI() {
return C_OPRLG0NI;
}

public byte getC_OPRLG1() {
return C_OPRLG1;
}

public byte getC_ORG() {
return C_ORG;
}

public byte getC_ORGA1() {
return C_ORGA1;
}

public byte getC_ORGA10() {
return C_ORGA10;
}

public byte getC_ORGA11() {
return C_ORGA11;
}

public byte getC_ORGA12() {
return C_ORGA12;
}

public byte getC_ORGA13() {
return C_ORGA13;
}

public byte getC_ORGA14() {
return C_ORGA14;
}

public byte getC_ORGA15() {
return C_ORGA15;
}

public byte getC_ORGA16() {
return C_ORGA16;
}

public byte getC_ORGA2() {
return C_ORGA2;
}

public byte getC_ORGA3() {
return C_ORGA3;
}

public byte getC_ORGA4() {
return C_ORGA4;
}

public byte getC_ORGA5() {
return C_ORGA5;
}

public byte getC_ORGA6() {
return C_ORGA6;
}

public byte getC_ORGA7() {
return C_ORGA7;
}

public byte getC_ORGA8() {
return C_ORGA8;
}

public byte getC_ORGA9() {
return C_ORGA9;
}

public byte getC_ORGA96() {
return C_ORGA96;
}

public byte getC_ORGAT1() {
return C_ORGAT1;
}

public byte getC_ORGAT10() {
return C_ORGAT10;
}

public byte getC_ORGAT11() {
return C_ORGAT11;
}

public byte getC_ORGAT12() {
return C_ORGAT12;
}

public byte getC_ORGAT13() {
return C_ORGAT13;
}

public byte getC_ORGAT14() {
return C_ORGAT14;
}

public byte getC_ORGAT15() {
return C_ORGAT15;
}

public byte getC_ORGAT16() {
return C_ORGAT16;
}

public byte getC_ORGAT2() {
return C_ORGAT2;
}

public byte getC_ORGAT3() {
return C_ORGAT3;
}

public byte getC_ORGAT4() {
return C_ORGAT4;
}

public byte getC_ORGAT5() {
return C_ORGAT5;
}

public byte getC_ORGAT6() {
return C_ORGAT6;
}

public byte getC_ORGAT7() {
return C_ORGAT7;
}

public byte getC_ORGAT8() {
return C_ORGAT8;
}

public byte getC_ORGAT9() {
return C_ORGAT9;
}

public byte getC_ORGAT96() {
return C_ORGAT96;
}

public byte getC_ORGM1() {
return C_ORGM1;
}

public byte getC_ORGM10() {
return C_ORGM10;
}

public byte getC_ORGM11() {
return C_ORGM11;
}

public byte getC_ORGM12() {
return C_ORGM12;
}

public byte getC_ORGM13() {
return C_ORGM13;
}

public byte getC_ORGM14() {
return C_ORGM14;
}

public byte getC_ORGM15() {
return C_ORGM15;
}

public byte getC_ORGM16() {
return C_ORGM16;
}

public byte getC_ORGM2() {
return C_ORGM2;
}

public byte getC_ORGM3() {
return C_ORGM3;
}

public byte getC_ORGM4() {
return C_ORGM4;
}

public byte getC_ORGM5() {
return C_ORGM5;
}

public byte getC_ORGM6() {
return C_ORGM6;
}

public byte getC_ORGM7() {
return C_ORGM7;
}

public byte getC_ORGM8() {
return C_ORGM8;
}

public byte getC_ORGM9() {
return C_ORGM9;
}

public byte getC_ORGM96() {
return C_ORGM96;
}

public byte getC_ORGMT1() {
return C_ORGMT1;
}

public byte getC_ORGMT10() {
return C_ORGMT10;
}

public byte getC_ORGMT11() {
return C_ORGMT11;
}

public byte getC_ORGMT12() {
return C_ORGMT12;
}

public byte getC_ORGMT13() {
return C_ORGMT13;
}

public byte getC_ORGMT14() {
return C_ORGMT14;
}

public byte getC_ORGMT15() {
return C_ORGMT15;
}

public byte getC_ORGMT16() {
return C_ORGMT16;
}

public byte getC_ORGMT2() {
return C_ORGMT2;
}

public byte getC_ORGMT3() {
return C_ORGMT3;
}

public byte getC_ORGMT4() {
return C_ORGMT4;
}

public byte getC_ORGMT5() {
return C_ORGMT5;
}

public byte getC_ORGMT6() {
return C_ORGMT6;
}

public byte getC_ORGMT7() {
return C_ORGMT7;
}

public byte getC_ORGMT8() {
return C_ORGMT8;
}

public byte getC_ORGMT9() {
return C_ORGMT9;
}

public byte getC_ORGMT96() {
return C_ORGMT96;
}

public byte getC_ORIGADD() {
return C_ORIGADD;
}

public byte getC_OVTNSA() {
return C_OVTNSA;
}

public byte getC_OVTPAY() {
return C_OVTPAY;
}

protected double C_OVTRATE() {
return C_OVTRATE;
}

public byte getC_OVTREST() {
return C_OVTREST;
}

public byte getC_PAAGE() {
return C_PAAGE;
}

public byte getC_PAAID1() {
return C_PAAID1;
}

public byte getC_PAAID2() {
return C_PAAID2;
}

public byte getC_PAAID3() {
return C_PAAID3;
}

public byte getC_PAAID4() {
return C_PAAID4;
}

public byte getC_PAAID5() {
return C_PAAID5;
}

public byte getC_PAAID6() {
return C_PAAID6;
}

public byte getC_PAAID7() {
return C_PAAID7;
}

public byte getC_PAAID8() {
return C_PAAID8;
}

public byte getC_PAAID96() {
return C_PAAID96;
}

public byte getC_PAAID97() {
return C_PAAID97;
}

public byte getC_PACOB() {
return C_PACOB;
}

public byte getC_PACON() {
return C_PACON;
}

public byte getC_PAFAR() {
return C_PAFAR;
}

public byte getC_PAIDU1() {
return C_PAIDU1;
}

public byte getC_PAIDU2() {
return C_PAIDU2;
}

public byte getC_PAIDU3() {
return C_PAIDU3;
}

public byte getC_PAIDU4() {
return C_PAIDU4;
}

public byte getC_PAIDU5() {
return C_PAIDU5;
}

public byte getC_PAIDU6() {
return C_PAIDU6;
}

public byte getC_PAIDU7() {
return C_PAIDU7;
}

public byte getC_PAIDU8() {
return C_PAIDU8;
}

public byte getC_PAIDU96() {
return C_PAIDU96;
}

public byte getC_PAIDU97() {
return C_PAIDU97;
}

public byte getC_PAJU() {
return C_PAJU;
}

public byte getC_PALONE() {
return C_PALONE;
}

public byte getC_PAMOSTCON() {
return C_PAMOSTCON;
}

public byte getC_PANSSEC5_DV() {
return C_PANSSEC5_DV;
}

public byte getC_PAPERM2() {
return C_PAPERM2;
}

public byte getC_PARCHILD() {
return C_PARCHILD;
}

public byte getC_PAREVE() {
return C_PAREVE;
}

public byte getC_PARMAR() {
return C_PARMAR;
}

public byte getC_PARSCH() {
return C_PARSCH;
}

public byte getC_PASEE() {
return C_PASEE;
}

public short getC_PASOC00_CC() {
return C_PASOC00_CC;
}

public short getC_PASOC10_CC() {
return C_PASOC10_CC;
}

public byte getC_PASOC90_CC() {
return C_PASOC90_CC;
}

public int getC_PAYGL() {
return C_PAYGL;
}

protected double C_PAYGU_DV() {
return C_PAYGU_DV;
}

public byte getC_PAYGU_IF() {
return C_PAYGU_IF;
}

public byte getC_PAYGWC() {
return C_PAYGWC;
}

protected double C_PAYG_DV() {
return C_PAYG_DV;
}

public int getC_PAYNL() {
return C_PAYNL;
}

protected double C_PAYNU_DV() {
return C_PAYNU_DV;
}

public byte getC_PAYNU_IF() {
return C_PAYNU_IF;
}

public byte getC_PAYNWC() {
return C_PAYNWC;
}

protected double C_PAYN_DV() {
return C_PAYN_DV;
}

public byte getC_PAYRUK() {
return C_PAYRUK;
}

public byte getC_PAYTYP() {
return C_PAYTYP;
}

public int getC_PAYU() {
return C_PAYU;
}

public byte getC_PAYUG() {
return C_PAYUG;
}

public byte getC_PAYUSL() {
return C_PAYUSL;
}

public byte getC_PAYUWC() {
return C_PAYUWC;
}

protected double C_PAYU_DV() {
return C_PAYU_DV;
}

public byte getC_PBNFT1() {
return C_PBNFT1;
}

public byte getC_PBNFT10() {
return C_PBNFT10;
}

public byte getC_PBNFT11() {
return C_PBNFT11;
}

public byte getC_PBNFT12() {
return C_PBNFT12;
}

public byte getC_PBNFT2() {
return C_PBNFT2;
}

public byte getC_PBNFT3() {
return C_PBNFT3;
}

public byte getC_PBNFT4() {
return C_PBNFT4;
}

public byte getC_PBNFT5() {
return C_PBNFT5;
}

public byte getC_PBNFT6() {
return C_PBNFT6;
}

public byte getC_PBNFT7() {
return C_PBNFT7;
}

public byte getC_PBNFT8() {
return C_PBNFT8;
}

public byte getC_PBNFT9() {
return C_PBNFT9;
}

public byte getC_PBNFT96() {
return C_PBNFT96;
}

public byte getC_PENMEX() {
return C_PENMEX;
}

public byte getC_PENSIONER_DV() {
return C_PENSIONER_DV;
}

public byte getC_PERBFTS() {
return C_PERBFTS;
}

public byte getC_PERPOLINF() {
return C_PERPOLINF;
}

public byte getC_PJBPTFT() {
return C_PJBPTFT;
}

public byte getC_PJSPTFT() {
return C_PJSPTFT;
}

public byte getC_PJULK4WK() {
return C_PJULK4WK;
}

public byte getC_PLBORNC() {
return C_PLBORNC;
}

public byte getC_PLIVPAR() {
return C_PLIVPAR;
}

public byte getC_PLNOWM() {
return C_PLNOWM;
}

public short getC_PLNOWY4() {
return C_PLNOWY4;
}

public int getC_PN1PID() {
return C_PN1PID;
}

public byte getC_PN1PNO() {
return C_PN1PNO;
}

public byte getC_PN1SEX() {
return C_PN1SEX;
}

public int getC_PN2PID() {
return C_PN2PID;
}

public byte getC_PN2PNO() {
return C_PN2PNO;
}

public byte getC_PN2SEX() {
return C_PN2SEX;
}

public byte getC_PNO() {
return C_PNO;
}

public int getC_PNS1PID() {
return C_PNS1PID;
}

public byte getC_PNS1PNO() {
return C_PNS1PNO;
}

public byte getC_PNS1SEX() {
return C_PNS1SEX;
}

public int getC_PNS2PID() {
return C_PNS2PID;
}

public byte getC_PNS2PNO() {
return C_PNS2PNO;
}

public byte getC_PNS2SEX() {
return C_PNS2SEX;
}

public byte getC_POLCOST() {
return C_POLCOST;
}

public byte getC_POLEFF1() {
return C_POLEFF1;
}

public byte getC_POLEFF2() {
return C_POLEFF2;
}

public byte getC_POLEFF3() {
return C_POLEFF3;
}

public byte getC_POLEFF4() {
return C_POLEFF4;
}

public int getC_PPID() {
return C_PPID;
}

public byte getC_PPNO() {
return C_PPNO;
}

public byte getC_PPPEX() {
return C_PPPEX;
}

public byte getC_PPPEXM() {
return C_PPPEXM;
}

public byte getC_PPSEX() {
return C_PPSEX;
}

public byte getC_PRAISEKID() {
return C_PRAISEKID;
}

public byte getC_PREARN() {
return C_PREARN;
}

public byte getC_PREARNA() {
return C_PREARNA;
}

public byte getC_PREARNW() {
return C_PREARNW;
}

public byte getC_PREASON() {
return C_PREASON;
}

public byte getC_PRECOG() {
return C_PRECOG;
}

public byte getC_PREG() {
return C_PREG;
}

public byte getC_PREGEND1() {
return C_PREGEND1;
}

public byte getC_PREGEND2() {
return C_PREGEND2;
}

public byte getC_PREGEND3() {
return C_PREGEND3;
}

public byte getC_PREGFERT1() {
return C_PREGFERT1;
}

public byte getC_PREGFERT2() {
return C_PREGFERT2;
}

public byte getC_PREGFERT3() {
return C_PREGFERT3;
}

public byte getC_PREGM1() {
return C_PREGM1;
}

public byte getC_PREGM2() {
return C_PREGM2;
}

public byte getC_PREGM3() {
return C_PREGM3;
}

public byte getC_PREGOUT1() {
return C_PREGOUT1;
}

public byte getC_PREGOUT2() {
return C_PREGOUT2;
}

public byte getC_PREGOUT3() {
return C_PREGOUT3;
}

public byte getC_PREGSMK11() {
return C_PREGSMK11;
}

public boolean getC_PREGSMK12() {
return C_PREGSMK12;
}

public boolean getC_PREGSMK13() {
return C_PREGSMK13;
}

public byte getC_PREGSMK21() {
return C_PREGSMK21;
}

public boolean getC_PREGSMK22() {
return C_PREGSMK22;
}

public boolean getC_PREGSMK23() {
return C_PREGSMK23;
}

public byte getC_PREGSMK31() {
return C_PREGSMK31;
}

public byte getC_PREGSMK32() {
return C_PREGSMK32;
}

public boolean getC_PREGSMK33() {
return C_PREGSMK33;
}

public byte getC_PREGSMOKE1() {
return C_PREGSMOKE1;
}

public byte getC_PREGSMOKE2() {
return C_PREGSMOKE2;
}

public boolean getC_PREGSMOKE3() {
return C_PREGSMOKE3;
}

public short getC_PREGY41() {
return C_PREGY41;
}

public short getC_PREGY42() {
return C_PREGY42;
}

public short getC_PREGY43() {
return C_PREGY43;
}

public byte getC_PREL() {
return C_PREL;
}

public byte getC_PRFITB() {
return C_PRFITB;
}

public byte getC_PRFITBA() {
return C_PRFITBA;
}

public byte getC_PRFITBW() {
return C_PRFITBW;
}

public byte getC_PRIPN() {
return C_PRIPN;
}

public byte getC_PROMODENY() {
return C_PROMODENY;
}

public byte getC_PS1() {
return C_PS1;
}

public byte getC_PS10() {
return C_PS10;
}

public byte getC_PS11() {
return C_PS11;
}

public byte getC_PS12() {
return C_PS12;
}

public byte getC_PS13() {
return C_PS13;
}

public byte getC_PS14() {
return C_PS14;
}

public byte getC_PS15() {
return C_PS15;
}

public byte getC_PS16() {
return C_PS16;
}

public byte getC_PS17() {
return C_PS17;
}

public byte getC_PS18() {
return C_PS18;
}

public byte getC_PS19() {
return C_PS19;
}

public byte getC_PS2() {
return C_PS2;
}

public byte getC_PS20() {
return C_PS20;
}

public byte getC_PS21() {
return C_PS21;
}

public byte getC_PS22() {
return C_PS22;
}

public byte getC_PS23() {
return C_PS23;
}

public byte getC_PS24() {
return C_PS24;
}

public byte getC_PS25() {
return C_PS25;
}

public byte getC_PS26() {
return C_PS26;
}

public byte getC_PS27() {
return C_PS27;
}

public byte getC_PS28() {
return C_PS28;
}

public byte getC_PS29() {
return C_PS29;
}

public byte getC_PS3() {
return C_PS3;
}

public byte getC_PS30() {
return C_PS30;
}

public byte getC_PS31() {
return C_PS31;
}

public byte getC_PS32() {
return C_PS32;
}

public byte getC_PS4() {
return C_PS4;
}

public byte getC_PS5() {
return C_PS5;
}

public byte getC_PS6() {
return C_PS6;
}

public byte getC_PS7() {
return C_PS7;
}

public byte getC_PS8() {
return C_PS8;
}

public byte getC_PS9() {
return C_PS9;
}

public byte getC_PSDQA_DV() {
return C_PSDQA_DV;
}

public byte getC_PSDQB_DV() {
return C_PSDQB_DV;
}

public byte getC_PSDQC_DV() {
return C_PSDQC_DV;
}

public byte getC_PSIBLINGS() {
return C_PSIBLINGS;
}

public byte getC_PSNUMCH() {
return C_PSNUMCH;
}

public int getC_PSU() {
return C_PSU;
}

public byte getC_PYENRL() {
return C_PYENRL;
}

public byte getC_QFHIGH() {
return C_QFHIGH;
}

public boolean getC_QFHIGHFL_DV() {
return C_QFHIGHFL_DV;
}

public byte getC_QFHIGH_DV() {
return C_QFHIGH_DV;
}

public byte getC_QFVOC1() {
return C_QFVOC1;
}

public byte getC_QFVOC10() {
return C_QFVOC10;
}

public byte getC_QFVOC11() {
return C_QFVOC11;
}

public byte getC_QFVOC12() {
return C_QFVOC12;
}

public byte getC_QFVOC13() {
return C_QFVOC13;
}

public byte getC_QFVOC14() {
return C_QFVOC14;
}

public byte getC_QFVOC15() {
return C_QFVOC15;
}

public byte getC_QFVOC2() {
return C_QFVOC2;
}

public byte getC_QFVOC3() {
return C_QFVOC3;
}

public byte getC_QFVOC4() {
return C_QFVOC4;
}

public byte getC_QFVOC5() {
return C_QFVOC5;
}

public byte getC_QFVOC6() {
return C_QFVOC6;
}

public byte getC_QFVOC7() {
return C_QFVOC7;
}

public byte getC_QFVOC8() {
return C_QFVOC8;
}

public byte getC_QFVOC9() {
return C_QFVOC9;
}

public byte getC_QFVOC96() {
return C_QFVOC96;
}

public byte getC_QUALNE() {
return C_QUALNE;
}

public byte getC_QUALNEW1() {
return C_QUALNEW1;
}

public byte getC_QUALNEW10() {
return C_QUALNEW10;
}

public byte getC_QUALNEW11() {
return C_QUALNEW11;
}

public byte getC_QUALNEW13() {
return C_QUALNEW13;
}

public byte getC_QUALNEW15() {
return C_QUALNEW15;
}

public byte getC_QUALNEW16() {
return C_QUALNEW16;
}

public byte getC_QUALNEW17() {
return C_QUALNEW17;
}

public byte getC_QUALNEW18() {
return C_QUALNEW18;
}

public byte getC_QUALNEW19() {
return C_QUALNEW19;
}

public byte getC_QUALNEW2() {
return C_QUALNEW2;
}

public byte getC_QUALNEW20() {
return C_QUALNEW20;
}

public byte getC_QUALNEW21() {
return C_QUALNEW21;
}

public byte getC_QUALNEW22() {
return C_QUALNEW22;
}

public byte getC_QUALNEW23() {
return C_QUALNEW23;
}

public byte getC_QUALNEW24() {
return C_QUALNEW24;
}

public byte getC_QUALNEW25() {
return C_QUALNEW25;
}

public byte getC_QUALNEW26() {
return C_QUALNEW26;
}

public byte getC_QUALNEW27() {
return C_QUALNEW27;
}

public byte getC_QUALNEW28() {
return C_QUALNEW28;
}

public byte getC_QUALNEW29() {
return C_QUALNEW29;
}

public byte getC_QUALNEW30() {
return C_QUALNEW30;
}

public byte getC_QUALNEW31() {
return C_QUALNEW31;
}

public byte getC_QUALNEW4() {
return C_QUALNEW4;
}

public byte getC_QUALNEW5() {
return C_QUALNEW5;
}

public byte getC_QUALNEW6() {
return C_QUALNEW6;
}

public byte getC_QUALNEW7() {
return C_QUALNEW7;
}

public byte getC_QUALNEW8() {
return C_QUALNEW8;
}

public byte getC_QUALNEW9() {
return C_QUALNEW9;
}

public byte getC_QUALOC() {
return C_QUALOC;
}

public byte getC_QUARREL() {
return C_QUARREL;
}

public byte getC_RACEL() {
return C_RACEL;
}

public byte getC_RACELAT() {
return C_RACELAT;
}

public byte getC_RACELBT() {
return C_RACELBT;
}

public boolean getC_RACELMT() {
return C_RACELMT;
}

public byte getC_RACELOT_CODE() {
return C_RACELOT_CODE;
}

public byte getC_RACELO_CODE() {
return C_RACELO_CODE;
}

public byte getC_RACELT() {
return C_RACELT;
}

public byte getC_RACELWT() {
return C_RACELWT;
}

public byte getC_RACEL_DV() {
return C_RACEL_DV;
}

public byte getC_RACH16_DV() {
return C_RACH16_DV;
}

public byte getC_READTEST() {
return C_READTEST;
}

public byte getC_REASEND1() {
return C_REASEND1;
}

public byte getC_REASEND2() {
return C_REASEND2;
}

public byte getC_REASEND3() {
return C_REASEND3;
}

public byte getC_REASEND4() {
return C_REASEND4;
}

public byte getC_REASEND5() {
return C_REASEND5;
}

public byte getC_REASEND6() {
return C_REASEND6;
}

public byte getC_REASEND7() {
return C_REASEND7;
}

public boolean getC_REASEND8() {
return C_REASEND8;
}

public boolean getC_REASEND9() {
return C_REASEND9;
}

public byte getC_RELKID() {
return C_RELKID;
}

public byte getC_RELUP() {
return C_RELUP;
}

public byte getC_REMAIL_CODE() {
return C_REMAIL_CODE;
}

public byte getC_RESATTACKED1_1() {
return C_RESATTACKED1_1;
}

public byte getC_RESATTACKED1_10() {
return C_RESATTACKED1_10;
}

public byte getC_RESATTACKED1_11() {
return C_RESATTACKED1_11;
}

public byte getC_RESATTACKED1_12() {
return C_RESATTACKED1_12;
}

public byte getC_RESATTACKED1_2() {
return C_RESATTACKED1_2;
}

public byte getC_RESATTACKED1_3() {
return C_RESATTACKED1_3;
}

public byte getC_RESATTACKED1_4() {
return C_RESATTACKED1_4;
}

public byte getC_RESATTACKED1_5() {
return C_RESATTACKED1_5;
}

public byte getC_RESATTACKED1_6() {
return C_RESATTACKED1_6;
}

public byte getC_RESATTACKED1_7() {
return C_RESATTACKED1_7;
}

public byte getC_RESATTACKED1_8() {
return C_RESATTACKED1_8;
}

public byte getC_RESATTACKED1_9() {
return C_RESATTACKED1_9;
}

public byte getC_RESATTACKED2_1() {
return C_RESATTACKED2_1;
}

public byte getC_RESATTACKED2_10() {
return C_RESATTACKED2_10;
}

public byte getC_RESATTACKED2_11() {
return C_RESATTACKED2_11;
}

public byte getC_RESATTACKED2_12() {
return C_RESATTACKED2_12;
}

public byte getC_RESATTACKED2_2() {
return C_RESATTACKED2_2;
}

public byte getC_RESATTACKED2_3() {
return C_RESATTACKED2_3;
}

public byte getC_RESATTACKED2_4() {
return C_RESATTACKED2_4;
}

public byte getC_RESATTACKED2_5() {
return C_RESATTACKED2_5;
}

public byte getC_RESATTACKED2_6() {
return C_RESATTACKED2_6;
}

public byte getC_RESATTACKED2_7() {
return C_RESATTACKED2_7;
}

public byte getC_RESATTACKED2_8() {
return C_RESATTACKED2_8;
}

public byte getC_RESATTACKED2_9() {
return C_RESATTACKED2_9;
}

public byte getC_RESATTACKED3_1() {
return C_RESATTACKED3_1;
}

public byte getC_RESATTACKED3_10() {
return C_RESATTACKED3_10;
}

public byte getC_RESATTACKED3_11() {
return C_RESATTACKED3_11;
}

public byte getC_RESATTACKED3_12() {
return C_RESATTACKED3_12;
}

public byte getC_RESATTACKED3_2() {
return C_RESATTACKED3_2;
}

public byte getC_RESATTACKED3_3() {
return C_RESATTACKED3_3;
}

public byte getC_RESATTACKED3_4() {
return C_RESATTACKED3_4;
}

public byte getC_RESATTACKED3_5() {
return C_RESATTACKED3_5;
}

public byte getC_RESATTACKED3_6() {
return C_RESATTACKED3_6;
}

public byte getC_RESATTACKED3_7() {
return C_RESATTACKED3_7;
}

public byte getC_RESATTACKED3_8() {
return C_RESATTACKED3_8;
}

public byte getC_RESATTACKED3_9() {
return C_RESATTACKED3_9;
}

public byte getC_RESATTACKED4_1() {
return C_RESATTACKED4_1;
}

public byte getC_RESATTACKED4_10() {
return C_RESATTACKED4_10;
}

public byte getC_RESATTACKED4_11() {
return C_RESATTACKED4_11;
}

public byte getC_RESATTACKED4_12() {
return C_RESATTACKED4_12;
}

public byte getC_RESATTACKED4_2() {
return C_RESATTACKED4_2;
}

public byte getC_RESATTACKED4_3() {
return C_RESATTACKED4_3;
}

public byte getC_RESATTACKED4_4() {
return C_RESATTACKED4_4;
}

public byte getC_RESATTACKED4_5() {
return C_RESATTACKED4_5;
}

public byte getC_RESATTACKED4_6() {
return C_RESATTACKED4_6;
}

public byte getC_RESATTACKED4_7() {
return C_RESATTACKED4_7;
}

public byte getC_RESATTACKED4_8() {
return C_RESATTACKED4_8;
}

public byte getC_RESATTACKED4_9() {
return C_RESATTACKED4_9;
}

public byte getC_RESATTACKED5_1() {
return C_RESATTACKED5_1;
}

public byte getC_RESATTACKED5_10() {
return C_RESATTACKED5_10;
}

public byte getC_RESATTACKED5_11() {
return C_RESATTACKED5_11;
}

public byte getC_RESATTACKED5_12() {
return C_RESATTACKED5_12;
}

public byte getC_RESATTACKED5_2() {
return C_RESATTACKED5_2;
}

public byte getC_RESATTACKED5_3() {
return C_RESATTACKED5_3;
}

public byte getC_RESATTACKED5_4() {
return C_RESATTACKED5_4;
}

public byte getC_RESATTACKED5_5() {
return C_RESATTACKED5_5;
}

public byte getC_RESATTACKED5_6() {
return C_RESATTACKED5_6;
}

public byte getC_RESATTACKED5_7() {
return C_RESATTACKED5_7;
}

public byte getC_RESATTACKED5_8() {
return C_RESATTACKED5_8;
}

public byte getC_RESATTACKED5_9() {
return C_RESATTACKED5_9;
}

public byte getC_RESATTACKED6_1() {
return C_RESATTACKED6_1;
}

public byte getC_RESATTACKED6_10() {
return C_RESATTACKED6_10;
}

public byte getC_RESATTACKED6_11() {
return C_RESATTACKED6_11;
}

public byte getC_RESATTACKED6_12() {
return C_RESATTACKED6_12;
}

public byte getC_RESATTACKED6_2() {
return C_RESATTACKED6_2;
}

public byte getC_RESATTACKED6_3() {
return C_RESATTACKED6_3;
}

public byte getC_RESATTACKED6_4() {
return C_RESATTACKED6_4;
}

public byte getC_RESATTACKED6_5() {
return C_RESATTACKED6_5;
}

public byte getC_RESATTACKED6_6() {
return C_RESATTACKED6_6;
}

public byte getC_RESATTACKED6_7() {
return C_RESATTACKED6_7;
}

public byte getC_RESATTACKED6_8() {
return C_RESATTACKED6_8;
}

public byte getC_RESATTACKED6_9() {
return C_RESATTACKED6_9;
}

public byte getC_RESATTACKED7_1() {
return C_RESATTACKED7_1;
}

public byte getC_RESATTACKED7_10() {
return C_RESATTACKED7_10;
}

public byte getC_RESATTACKED7_11() {
return C_RESATTACKED7_11;
}

public byte getC_RESATTACKED7_12() {
return C_RESATTACKED7_12;
}

public byte getC_RESATTACKED7_2() {
return C_RESATTACKED7_2;
}

public byte getC_RESATTACKED7_3() {
return C_RESATTACKED7_3;
}

public byte getC_RESATTACKED7_4() {
return C_RESATTACKED7_4;
}

public byte getC_RESATTACKED7_5() {
return C_RESATTACKED7_5;
}

public byte getC_RESATTACKED7_6() {
return C_RESATTACKED7_6;
}

public byte getC_RESATTACKED7_7() {
return C_RESATTACKED7_7;
}

public byte getC_RESATTACKED7_8() {
return C_RESATTACKED7_8;
}

public byte getC_RESATTACKED7_9() {
return C_RESATTACKED7_9;
}

public byte getC_RESATTACKED8_1() {
return C_RESATTACKED8_1;
}

public byte getC_RESATTACKED8_10() {
return C_RESATTACKED8_10;
}

public byte getC_RESATTACKED8_11() {
return C_RESATTACKED8_11;
}

public byte getC_RESATTACKED8_12() {
return C_RESATTACKED8_12;
}

public byte getC_RESATTACKED8_2() {
return C_RESATTACKED8_2;
}

public byte getC_RESATTACKED8_3() {
return C_RESATTACKED8_3;
}

public byte getC_RESATTACKED8_4() {
return C_RESATTACKED8_4;
}

public byte getC_RESATTACKED8_5() {
return C_RESATTACKED8_5;
}

public byte getC_RESATTACKED8_6() {
return C_RESATTACKED8_6;
}

public byte getC_RESATTACKED8_7() {
return C_RESATTACKED8_7;
}

public byte getC_RESATTACKED8_8() {
return C_RESATTACKED8_8;
}

public byte getC_RESATTACKED8_9() {
return C_RESATTACKED8_9;
}

public byte getC_RESATTACKED96_1() {
return C_RESATTACKED96_1;
}

public byte getC_RESATTACKED96_10() {
return C_RESATTACKED96_10;
}

public byte getC_RESATTACKED96_11() {
return C_RESATTACKED96_11;
}

public byte getC_RESATTACKED96_12() {
return C_RESATTACKED96_12;
}

public byte getC_RESATTACKED96_2() {
return C_RESATTACKED96_2;
}

public byte getC_RESATTACKED96_3() {
return C_RESATTACKED96_3;
}

public byte getC_RESATTACKED96_4() {
return C_RESATTACKED96_4;
}

public byte getC_RESATTACKED96_5() {
return C_RESATTACKED96_5;
}

public byte getC_RESATTACKED96_6() {
return C_RESATTACKED96_6;
}

public byte getC_RESATTACKED96_7() {
return C_RESATTACKED96_7;
}

public byte getC_RESATTACKED96_8() {
return C_RESATTACKED96_8;
}

public byte getC_RESATTACKED96_9() {
return C_RESATTACKED96_9;
}

public byte getC_RESATTACKED97_1() {
return C_RESATTACKED97_1;
}

public byte getC_RESATTACKED97_10() {
return C_RESATTACKED97_10;
}

public byte getC_RESATTACKED97_11() {
return C_RESATTACKED97_11;
}

public byte getC_RESATTACKED97_12() {
return C_RESATTACKED97_12;
}

public byte getC_RESATTACKED97_2() {
return C_RESATTACKED97_2;
}

public byte getC_RESATTACKED97_3() {
return C_RESATTACKED97_3;
}

public byte getC_RESATTACKED97_4() {
return C_RESATTACKED97_4;
}

public byte getC_RESATTACKED97_5() {
return C_RESATTACKED97_5;
}

public byte getC_RESATTACKED97_6() {
return C_RESATTACKED97_6;
}

public byte getC_RESATTACKED97_7() {
return C_RESATTACKED97_7;
}

public byte getC_RESATTACKED97_8() {
return C_RESATTACKED97_8;
}

public byte getC_RESATTACKED97_9() {
return C_RESATTACKED97_9;
}

public byte getC_RESATTACKED9_1() {
return C_RESATTACKED9_1;
}

public byte getC_RESATTACKED9_10() {
return C_RESATTACKED9_10;
}

public byte getC_RESATTACKED9_11() {
return C_RESATTACKED9_11;
}

public byte getC_RESATTACKED9_12() {
return C_RESATTACKED9_12;
}

public byte getC_RESATTACKED9_2() {
return C_RESATTACKED9_2;
}

public byte getC_RESATTACKED9_3() {
return C_RESATTACKED9_3;
}

public byte getC_RESATTACKED9_4() {
return C_RESATTACKED9_4;
}

public byte getC_RESATTACKED9_5() {
return C_RESATTACKED9_5;
}

public byte getC_RESATTACKED9_6() {
return C_RESATTACKED9_6;
}

public byte getC_RESATTACKED9_7() {
return C_RESATTACKED9_7;
}

public byte getC_RESATTACKED9_8() {
return C_RESATTACKED9_8;
}

public byte getC_RESATTACKED9_9() {
return C_RESATTACKED9_9;
}

public byte getC_RESAVOID1_1() {
return C_RESAVOID1_1;
}

public byte getC_RESAVOID1_10() {
return C_RESAVOID1_10;
}

public byte getC_RESAVOID1_11() {
return C_RESAVOID1_11;
}

public byte getC_RESAVOID1_12() {
return C_RESAVOID1_12;
}

public byte getC_RESAVOID1_2() {
return C_RESAVOID1_2;
}

public byte getC_RESAVOID1_3() {
return C_RESAVOID1_3;
}

public byte getC_RESAVOID1_4() {
return C_RESAVOID1_4;
}

public byte getC_RESAVOID1_5() {
return C_RESAVOID1_5;
}

public byte getC_RESAVOID1_6() {
return C_RESAVOID1_6;
}

public byte getC_RESAVOID1_7() {
return C_RESAVOID1_7;
}

public byte getC_RESAVOID1_8() {
return C_RESAVOID1_8;
}

public byte getC_RESAVOID1_9() {
return C_RESAVOID1_9;
}

public byte getC_RESAVOID2_1() {
return C_RESAVOID2_1;
}

public byte getC_RESAVOID2_10() {
return C_RESAVOID2_10;
}

public byte getC_RESAVOID2_11() {
return C_RESAVOID2_11;
}

public byte getC_RESAVOID2_12() {
return C_RESAVOID2_12;
}

public byte getC_RESAVOID2_2() {
return C_RESAVOID2_2;
}

public byte getC_RESAVOID2_3() {
return C_RESAVOID2_3;
}

public byte getC_RESAVOID2_4() {
return C_RESAVOID2_4;
}

public byte getC_RESAVOID2_5() {
return C_RESAVOID2_5;
}

public byte getC_RESAVOID2_6() {
return C_RESAVOID2_6;
}

public byte getC_RESAVOID2_7() {
return C_RESAVOID2_7;
}

public byte getC_RESAVOID2_8() {
return C_RESAVOID2_8;
}

public byte getC_RESAVOID2_9() {
return C_RESAVOID2_9;
}

public byte getC_RESAVOID3_1() {
return C_RESAVOID3_1;
}

public byte getC_RESAVOID3_10() {
return C_RESAVOID3_10;
}

public byte getC_RESAVOID3_11() {
return C_RESAVOID3_11;
}

public byte getC_RESAVOID3_12() {
return C_RESAVOID3_12;
}

public byte getC_RESAVOID3_2() {
return C_RESAVOID3_2;
}

public byte getC_RESAVOID3_3() {
return C_RESAVOID3_3;
}

public byte getC_RESAVOID3_4() {
return C_RESAVOID3_4;
}

public byte getC_RESAVOID3_5() {
return C_RESAVOID3_5;
}

public byte getC_RESAVOID3_6() {
return C_RESAVOID3_6;
}

public byte getC_RESAVOID3_7() {
return C_RESAVOID3_7;
}

public byte getC_RESAVOID3_8() {
return C_RESAVOID3_8;
}

public byte getC_RESAVOID3_9() {
return C_RESAVOID3_9;
}

public byte getC_RESAVOID4_1() {
return C_RESAVOID4_1;
}

public byte getC_RESAVOID4_10() {
return C_RESAVOID4_10;
}

public byte getC_RESAVOID4_11() {
return C_RESAVOID4_11;
}

public byte getC_RESAVOID4_12() {
return C_RESAVOID4_12;
}

public byte getC_RESAVOID4_2() {
return C_RESAVOID4_2;
}

public byte getC_RESAVOID4_3() {
return C_RESAVOID4_3;
}

public byte getC_RESAVOID4_4() {
return C_RESAVOID4_4;
}

public byte getC_RESAVOID4_5() {
return C_RESAVOID4_5;
}

public byte getC_RESAVOID4_6() {
return C_RESAVOID4_6;
}

public byte getC_RESAVOID4_7() {
return C_RESAVOID4_7;
}

public byte getC_RESAVOID4_8() {
return C_RESAVOID4_8;
}

public byte getC_RESAVOID4_9() {
return C_RESAVOID4_9;
}

public byte getC_RESAVOID5_1() {
return C_RESAVOID5_1;
}

public byte getC_RESAVOID5_10() {
return C_RESAVOID5_10;
}

public byte getC_RESAVOID5_11() {
return C_RESAVOID5_11;
}

public byte getC_RESAVOID5_12() {
return C_RESAVOID5_12;
}

public byte getC_RESAVOID5_2() {
return C_RESAVOID5_2;
}

public byte getC_RESAVOID5_3() {
return C_RESAVOID5_3;
}

public byte getC_RESAVOID5_4() {
return C_RESAVOID5_4;
}

public byte getC_RESAVOID5_5() {
return C_RESAVOID5_5;
}

public byte getC_RESAVOID5_6() {
return C_RESAVOID5_6;
}

public byte getC_RESAVOID5_7() {
return C_RESAVOID5_7;
}

public byte getC_RESAVOID5_8() {
return C_RESAVOID5_8;
}

public byte getC_RESAVOID5_9() {
return C_RESAVOID5_9;
}

public byte getC_RESAVOID6_1() {
return C_RESAVOID6_1;
}

public byte getC_RESAVOID6_10() {
return C_RESAVOID6_10;
}

public byte getC_RESAVOID6_11() {
return C_RESAVOID6_11;
}

public byte getC_RESAVOID6_12() {
return C_RESAVOID6_12;
}

public byte getC_RESAVOID6_2() {
return C_RESAVOID6_2;
}

public byte getC_RESAVOID6_3() {
return C_RESAVOID6_3;
}

public byte getC_RESAVOID6_4() {
return C_RESAVOID6_4;
}

public byte getC_RESAVOID6_5() {
return C_RESAVOID6_5;
}

public byte getC_RESAVOID6_6() {
return C_RESAVOID6_6;
}

public byte getC_RESAVOID6_7() {
return C_RESAVOID6_7;
}

public byte getC_RESAVOID6_8() {
return C_RESAVOID6_8;
}

public byte getC_RESAVOID6_9() {
return C_RESAVOID6_9;
}

public byte getC_RESAVOID7_1() {
return C_RESAVOID7_1;
}

public byte getC_RESAVOID7_10() {
return C_RESAVOID7_10;
}

public byte getC_RESAVOID7_11() {
return C_RESAVOID7_11;
}

public byte getC_RESAVOID7_12() {
return C_RESAVOID7_12;
}

public byte getC_RESAVOID7_2() {
return C_RESAVOID7_2;
}

public byte getC_RESAVOID7_3() {
return C_RESAVOID7_3;
}

public byte getC_RESAVOID7_4() {
return C_RESAVOID7_4;
}

public byte getC_RESAVOID7_5() {
return C_RESAVOID7_5;
}

public byte getC_RESAVOID7_6() {
return C_RESAVOID7_6;
}

public byte getC_RESAVOID7_7() {
return C_RESAVOID7_7;
}

public byte getC_RESAVOID7_8() {
return C_RESAVOID7_8;
}

public byte getC_RESAVOID7_9() {
return C_RESAVOID7_9;
}

public byte getC_RESAVOID8_1() {
return C_RESAVOID8_1;
}

public byte getC_RESAVOID8_10() {
return C_RESAVOID8_10;
}

public byte getC_RESAVOID8_11() {
return C_RESAVOID8_11;
}

public byte getC_RESAVOID8_12() {
return C_RESAVOID8_12;
}

public byte getC_RESAVOID8_2() {
return C_RESAVOID8_2;
}

public byte getC_RESAVOID8_3() {
return C_RESAVOID8_3;
}

public byte getC_RESAVOID8_4() {
return C_RESAVOID8_4;
}

public byte getC_RESAVOID8_5() {
return C_RESAVOID8_5;
}

public byte getC_RESAVOID8_6() {
return C_RESAVOID8_6;
}

public byte getC_RESAVOID8_7() {
return C_RESAVOID8_7;
}

public byte getC_RESAVOID8_8() {
return C_RESAVOID8_8;
}

public byte getC_RESAVOID8_9() {
return C_RESAVOID8_9;
}

public byte getC_RESAVOID96_1() {
return C_RESAVOID96_1;
}

public byte getC_RESAVOID96_10() {
return C_RESAVOID96_10;
}

public byte getC_RESAVOID96_11() {
return C_RESAVOID96_11;
}

public byte getC_RESAVOID96_12() {
return C_RESAVOID96_12;
}

public byte getC_RESAVOID96_2() {
return C_RESAVOID96_2;
}

public byte getC_RESAVOID96_3() {
return C_RESAVOID96_3;
}

public byte getC_RESAVOID96_4() {
return C_RESAVOID96_4;
}

public byte getC_RESAVOID96_5() {
return C_RESAVOID96_5;
}

public byte getC_RESAVOID96_6() {
return C_RESAVOID96_6;
}

public byte getC_RESAVOID96_7() {
return C_RESAVOID96_7;
}

public byte getC_RESAVOID96_8() {
return C_RESAVOID96_8;
}

public byte getC_RESAVOID96_9() {
return C_RESAVOID96_9;
}

public byte getC_RESAVOID97_1() {
return C_RESAVOID97_1;
}

public byte getC_RESAVOID97_10() {
return C_RESAVOID97_10;
}

public byte getC_RESAVOID97_11() {
return C_RESAVOID97_11;
}

public byte getC_RESAVOID97_12() {
return C_RESAVOID97_12;
}

public byte getC_RESAVOID97_2() {
return C_RESAVOID97_2;
}

public byte getC_RESAVOID97_3() {
return C_RESAVOID97_3;
}

public byte getC_RESAVOID97_4() {
return C_RESAVOID97_4;
}

public byte getC_RESAVOID97_5() {
return C_RESAVOID97_5;
}

public byte getC_RESAVOID97_6() {
return C_RESAVOID97_6;
}

public byte getC_RESAVOID97_7() {
return C_RESAVOID97_7;
}

public byte getC_RESAVOID97_8() {
return C_RESAVOID97_8;
}

public byte getC_RESAVOID97_9() {
return C_RESAVOID97_9;
}

public byte getC_RESAVOID9_1() {
return C_RESAVOID9_1;
}

public byte getC_RESAVOID9_10() {
return C_RESAVOID9_10;
}

public byte getC_RESAVOID9_11() {
return C_RESAVOID9_11;
}

public byte getC_RESAVOID9_12() {
return C_RESAVOID9_12;
}

public byte getC_RESAVOID9_2() {
return C_RESAVOID9_2;
}

public byte getC_RESAVOID9_3() {
return C_RESAVOID9_3;
}

public byte getC_RESAVOID9_4() {
return C_RESAVOID9_4;
}

public byte getC_RESAVOID9_5() {
return C_RESAVOID9_5;
}

public byte getC_RESAVOID9_6() {
return C_RESAVOID9_6;
}

public byte getC_RESAVOID9_7() {
return C_RESAVOID9_7;
}

public byte getC_RESAVOID9_8() {
return C_RESAVOID9_8;
}

public byte getC_RESAVOID9_9() {
return C_RESAVOID9_9;
}

public byte getC_RESINSULTED1_1() {
return C_RESINSULTED1_1;
}

public byte getC_RESINSULTED1_10() {
return C_RESINSULTED1_10;
}

public byte getC_RESINSULTED1_11() {
return C_RESINSULTED1_11;
}

public byte getC_RESINSULTED1_12() {
return C_RESINSULTED1_12;
}

public byte getC_RESINSULTED1_2() {
return C_RESINSULTED1_2;
}

public byte getC_RESINSULTED1_3() {
return C_RESINSULTED1_3;
}

public byte getC_RESINSULTED1_4() {
return C_RESINSULTED1_4;
}

public byte getC_RESINSULTED1_5() {
return C_RESINSULTED1_5;
}

public byte getC_RESINSULTED1_6() {
return C_RESINSULTED1_6;
}

public byte getC_RESINSULTED1_7() {
return C_RESINSULTED1_7;
}

public byte getC_RESINSULTED1_8() {
return C_RESINSULTED1_8;
}

public byte getC_RESINSULTED1_9() {
return C_RESINSULTED1_9;
}

public byte getC_RESINSULTED2_1() {
return C_RESINSULTED2_1;
}

public byte getC_RESINSULTED2_10() {
return C_RESINSULTED2_10;
}

public byte getC_RESINSULTED2_11() {
return C_RESINSULTED2_11;
}

public byte getC_RESINSULTED2_12() {
return C_RESINSULTED2_12;
}

public byte getC_RESINSULTED2_2() {
return C_RESINSULTED2_2;
}

public byte getC_RESINSULTED2_3() {
return C_RESINSULTED2_3;
}

public byte getC_RESINSULTED2_4() {
return C_RESINSULTED2_4;
}

public byte getC_RESINSULTED2_5() {
return C_RESINSULTED2_5;
}

public byte getC_RESINSULTED2_6() {
return C_RESINSULTED2_6;
}

public byte getC_RESINSULTED2_7() {
return C_RESINSULTED2_7;
}

public byte getC_RESINSULTED2_8() {
return C_RESINSULTED2_8;
}

public byte getC_RESINSULTED2_9() {
return C_RESINSULTED2_9;
}

public byte getC_RESINSULTED3_1() {
return C_RESINSULTED3_1;
}

public byte getC_RESINSULTED3_10() {
return C_RESINSULTED3_10;
}

public byte getC_RESINSULTED3_11() {
return C_RESINSULTED3_11;
}

public byte getC_RESINSULTED3_12() {
return C_RESINSULTED3_12;
}

public byte getC_RESINSULTED3_2() {
return C_RESINSULTED3_2;
}

public byte getC_RESINSULTED3_3() {
return C_RESINSULTED3_3;
}

public byte getC_RESINSULTED3_4() {
return C_RESINSULTED3_4;
}

public byte getC_RESINSULTED3_5() {
return C_RESINSULTED3_5;
}

public byte getC_RESINSULTED3_6() {
return C_RESINSULTED3_6;
}

public byte getC_RESINSULTED3_7() {
return C_RESINSULTED3_7;
}

public byte getC_RESINSULTED3_8() {
return C_RESINSULTED3_8;
}

public byte getC_RESINSULTED3_9() {
return C_RESINSULTED3_9;
}

public byte getC_RESINSULTED4_1() {
return C_RESINSULTED4_1;
}

public byte getC_RESINSULTED4_10() {
return C_RESINSULTED4_10;
}

public byte getC_RESINSULTED4_11() {
return C_RESINSULTED4_11;
}

public byte getC_RESINSULTED4_12() {
return C_RESINSULTED4_12;
}

public byte getC_RESINSULTED4_2() {
return C_RESINSULTED4_2;
}

public byte getC_RESINSULTED4_3() {
return C_RESINSULTED4_3;
}

public byte getC_RESINSULTED4_4() {
return C_RESINSULTED4_4;
}

public byte getC_RESINSULTED4_5() {
return C_RESINSULTED4_5;
}

public byte getC_RESINSULTED4_6() {
return C_RESINSULTED4_6;
}

public byte getC_RESINSULTED4_7() {
return C_RESINSULTED4_7;
}

public byte getC_RESINSULTED4_8() {
return C_RESINSULTED4_8;
}

public byte getC_RESINSULTED4_9() {
return C_RESINSULTED4_9;
}

public byte getC_RESINSULTED5_1() {
return C_RESINSULTED5_1;
}

public byte getC_RESINSULTED5_10() {
return C_RESINSULTED5_10;
}

public byte getC_RESINSULTED5_11() {
return C_RESINSULTED5_11;
}

public byte getC_RESINSULTED5_12() {
return C_RESINSULTED5_12;
}

public byte getC_RESINSULTED5_2() {
return C_RESINSULTED5_2;
}

public byte getC_RESINSULTED5_3() {
return C_RESINSULTED5_3;
}

public byte getC_RESINSULTED5_4() {
return C_RESINSULTED5_4;
}

public byte getC_RESINSULTED5_5() {
return C_RESINSULTED5_5;
}

public byte getC_RESINSULTED5_6() {
return C_RESINSULTED5_6;
}

public byte getC_RESINSULTED5_7() {
return C_RESINSULTED5_7;
}

public byte getC_RESINSULTED5_8() {
return C_RESINSULTED5_8;
}

public byte getC_RESINSULTED5_9() {
return C_RESINSULTED5_9;
}

public byte getC_RESINSULTED6_1() {
return C_RESINSULTED6_1;
}

public byte getC_RESINSULTED6_10() {
return C_RESINSULTED6_10;
}

public byte getC_RESINSULTED6_11() {
return C_RESINSULTED6_11;
}

public byte getC_RESINSULTED6_12() {
return C_RESINSULTED6_12;
}

public byte getC_RESINSULTED6_2() {
return C_RESINSULTED6_2;
}

public byte getC_RESINSULTED6_3() {
return C_RESINSULTED6_3;
}

public byte getC_RESINSULTED6_4() {
return C_RESINSULTED6_4;
}

public byte getC_RESINSULTED6_5() {
return C_RESINSULTED6_5;
}

public byte getC_RESINSULTED6_6() {
return C_RESINSULTED6_6;
}

public byte getC_RESINSULTED6_7() {
return C_RESINSULTED6_7;
}

public byte getC_RESINSULTED6_8() {
return C_RESINSULTED6_8;
}

public byte getC_RESINSULTED6_9() {
return C_RESINSULTED6_9;
}

public byte getC_RESINSULTED7_1() {
return C_RESINSULTED7_1;
}

public byte getC_RESINSULTED7_10() {
return C_RESINSULTED7_10;
}

public byte getC_RESINSULTED7_11() {
return C_RESINSULTED7_11;
}

public byte getC_RESINSULTED7_12() {
return C_RESINSULTED7_12;
}

public byte getC_RESINSULTED7_2() {
return C_RESINSULTED7_2;
}

public byte getC_RESINSULTED7_3() {
return C_RESINSULTED7_3;
}

public byte getC_RESINSULTED7_4() {
return C_RESINSULTED7_4;
}

public byte getC_RESINSULTED7_5() {
return C_RESINSULTED7_5;
}

public byte getC_RESINSULTED7_6() {
return C_RESINSULTED7_6;
}

public byte getC_RESINSULTED7_7() {
return C_RESINSULTED7_7;
}

public byte getC_RESINSULTED7_8() {
return C_RESINSULTED7_8;
}

public byte getC_RESINSULTED7_9() {
return C_RESINSULTED7_9;
}

public byte getC_RESINSULTED8_1() {
return C_RESINSULTED8_1;
}

public byte getC_RESINSULTED8_10() {
return C_RESINSULTED8_10;
}

public byte getC_RESINSULTED8_11() {
return C_RESINSULTED8_11;
}

public byte getC_RESINSULTED8_12() {
return C_RESINSULTED8_12;
}

public byte getC_RESINSULTED8_2() {
return C_RESINSULTED8_2;
}

public byte getC_RESINSULTED8_3() {
return C_RESINSULTED8_3;
}

public byte getC_RESINSULTED8_4() {
return C_RESINSULTED8_4;
}

public byte getC_RESINSULTED8_5() {
return C_RESINSULTED8_5;
}

public byte getC_RESINSULTED8_6() {
return C_RESINSULTED8_6;
}

public byte getC_RESINSULTED8_7() {
return C_RESINSULTED8_7;
}

public byte getC_RESINSULTED8_8() {
return C_RESINSULTED8_8;
}

public byte getC_RESINSULTED8_9() {
return C_RESINSULTED8_9;
}

public byte getC_RESINSULTED96_1() {
return C_RESINSULTED96_1;
}

public byte getC_RESINSULTED96_10() {
return C_RESINSULTED96_10;
}

public byte getC_RESINSULTED96_11() {
return C_RESINSULTED96_11;
}

public byte getC_RESINSULTED96_12() {
return C_RESINSULTED96_12;
}

public byte getC_RESINSULTED96_2() {
return C_RESINSULTED96_2;
}

public byte getC_RESINSULTED96_3() {
return C_RESINSULTED96_3;
}

public byte getC_RESINSULTED96_4() {
return C_RESINSULTED96_4;
}

public byte getC_RESINSULTED96_5() {
return C_RESINSULTED96_5;
}

public byte getC_RESINSULTED96_6() {
return C_RESINSULTED96_6;
}

public byte getC_RESINSULTED96_7() {
return C_RESINSULTED96_7;
}

public byte getC_RESINSULTED96_8() {
return C_RESINSULTED96_8;
}

public byte getC_RESINSULTED96_9() {
return C_RESINSULTED96_9;
}

public byte getC_RESINSULTED97_1() {
return C_RESINSULTED97_1;
}

public byte getC_RESINSULTED97_10() {
return C_RESINSULTED97_10;
}

public byte getC_RESINSULTED97_11() {
return C_RESINSULTED97_11;
}

public byte getC_RESINSULTED97_12() {
return C_RESINSULTED97_12;
}

public byte getC_RESINSULTED97_2() {
return C_RESINSULTED97_2;
}

public byte getC_RESINSULTED97_3() {
return C_RESINSULTED97_3;
}

public byte getC_RESINSULTED97_4() {
return C_RESINSULTED97_4;
}

public byte getC_RESINSULTED97_5() {
return C_RESINSULTED97_5;
}

public byte getC_RESINSULTED97_6() {
return C_RESINSULTED97_6;
}

public byte getC_RESINSULTED97_7() {
return C_RESINSULTED97_7;
}

public byte getC_RESINSULTED97_8() {
return C_RESINSULTED97_8;
}

public byte getC_RESINSULTED97_9() {
return C_RESINSULTED97_9;
}

public byte getC_RESINSULTED9_1() {
return C_RESINSULTED9_1;
}

public byte getC_RESINSULTED9_10() {
return C_RESINSULTED9_10;
}

public byte getC_RESINSULTED9_11() {
return C_RESINSULTED9_11;
}

public byte getC_RESINSULTED9_12() {
return C_RESINSULTED9_12;
}

public byte getC_RESINSULTED9_2() {
return C_RESINSULTED9_2;
}

public byte getC_RESINSULTED9_3() {
return C_RESINSULTED9_3;
}

public byte getC_RESINSULTED9_4() {
return C_RESINSULTED9_4;
}

public byte getC_RESINSULTED9_5() {
return C_RESINSULTED9_5;
}

public byte getC_RESINSULTED9_6() {
return C_RESINSULTED9_6;
}

public byte getC_RESINSULTED9_7() {
return C_RESINSULTED9_7;
}

public byte getC_RESINSULTED9_8() {
return C_RESINSULTED9_8;
}

public byte getC_RESINSULTED9_9() {
return C_RESINSULTED9_9;
}

public byte getC_RESJOBDENY1() {
return C_RESJOBDENY1;
}

public byte getC_RESJOBDENY2() {
return C_RESJOBDENY2;
}

public byte getC_RESJOBDENY3() {
return C_RESJOBDENY3;
}

public byte getC_RESJOBDENY4() {
return C_RESJOBDENY4;
}

public byte getC_RESJOBDENY5() {
return C_RESJOBDENY5;
}

public byte getC_RESJOBDENY6() {
return C_RESJOBDENY6;
}

public byte getC_RESJOBDENY7() {
return C_RESJOBDENY7;
}

public byte getC_RESJOBDENY8() {
return C_RESJOBDENY8;
}

public byte getC_RESJOBDENY9() {
return C_RESJOBDENY9;
}

public byte getC_RESJOBDENY96() {
return C_RESJOBDENY96;
}

public byte getC_RESJOBDENY97() {
return C_RESJOBDENY97;
}

public boolean getC_RESPF16() {
return C_RESPF16;
}

public boolean getC_RESPF16_DV() {
return C_RESPF16_DV;
}

public boolean getC_RESPM16() {
return C_RESPM16;
}

public boolean getC_RESPM16_DV() {
return C_RESPM16_DV;
}

public byte getC_RESPROMDENY1() {
return C_RESPROMDENY1;
}

public byte getC_RESPROMDENY2() {
return C_RESPROMDENY2;
}

public byte getC_RESPROMDENY3() {
return C_RESPROMDENY3;
}

public byte getC_RESPROMDENY4() {
return C_RESPROMDENY4;
}

public byte getC_RESPROMDENY5() {
return C_RESPROMDENY5;
}

public byte getC_RESPROMDENY6() {
return C_RESPROMDENY6;
}

public byte getC_RESPROMDENY7() {
return C_RESPROMDENY7;
}

public byte getC_RESPROMDENY8() {
return C_RESPROMDENY8;
}

public byte getC_RESPROMDENY9() {
return C_RESPROMDENY9;
}

public byte getC_RESPROMDENY96() {
return C_RESPROMDENY96;
}

public byte getC_RESPROMDENY97() {
return C_RESPROMDENY97;
}

public byte getC_RESTRAINDENY1() {
return C_RESTRAINDENY1;
}

public byte getC_RESTRAINDENY2() {
return C_RESTRAINDENY2;
}

public byte getC_RESTRAINDENY3() {
return C_RESTRAINDENY3;
}

public byte getC_RESTRAINDENY4() {
return C_RESTRAINDENY4;
}

public byte getC_RESTRAINDENY5() {
return C_RESTRAINDENY5;
}

public byte getC_RESTRAINDENY6() {
return C_RESTRAINDENY6;
}

public byte getC_RESTRAINDENY7() {
return C_RESTRAINDENY7;
}

public byte getC_RESTRAINDENY8() {
return C_RESTRAINDENY8;
}

public byte getC_RESTRAINDENY9() {
return C_RESTRAINDENY9;
}

public byte getC_RESTRAINDENY96() {
return C_RESTRAINDENY96;
}

public byte getC_RESTRAINDENY97() {
return C_RESTRAINDENY97;
}

public byte getC_RESUNSAFE1_1() {
return C_RESUNSAFE1_1;
}

public byte getC_RESUNSAFE1_10() {
return C_RESUNSAFE1_10;
}

public byte getC_RESUNSAFE1_11() {
return C_RESUNSAFE1_11;
}

public byte getC_RESUNSAFE1_12() {
return C_RESUNSAFE1_12;
}

public byte getC_RESUNSAFE1_2() {
return C_RESUNSAFE1_2;
}

public byte getC_RESUNSAFE1_3() {
return C_RESUNSAFE1_3;
}

public byte getC_RESUNSAFE1_4() {
return C_RESUNSAFE1_4;
}

public byte getC_RESUNSAFE1_5() {
return C_RESUNSAFE1_5;
}

public byte getC_RESUNSAFE1_6() {
return C_RESUNSAFE1_6;
}

public byte getC_RESUNSAFE1_7() {
return C_RESUNSAFE1_7;
}

public byte getC_RESUNSAFE1_8() {
return C_RESUNSAFE1_8;
}

public byte getC_RESUNSAFE1_9() {
return C_RESUNSAFE1_9;
}

public byte getC_RESUNSAFE2_1() {
return C_RESUNSAFE2_1;
}

public byte getC_RESUNSAFE2_10() {
return C_RESUNSAFE2_10;
}

public byte getC_RESUNSAFE2_11() {
return C_RESUNSAFE2_11;
}

public byte getC_RESUNSAFE2_12() {
return C_RESUNSAFE2_12;
}

public byte getC_RESUNSAFE2_2() {
return C_RESUNSAFE2_2;
}

public byte getC_RESUNSAFE2_3() {
return C_RESUNSAFE2_3;
}

public byte getC_RESUNSAFE2_4() {
return C_RESUNSAFE2_4;
}

public byte getC_RESUNSAFE2_5() {
return C_RESUNSAFE2_5;
}

public byte getC_RESUNSAFE2_6() {
return C_RESUNSAFE2_6;
}

public byte getC_RESUNSAFE2_7() {
return C_RESUNSAFE2_7;
}

public byte getC_RESUNSAFE2_8() {
return C_RESUNSAFE2_8;
}

public byte getC_RESUNSAFE2_9() {
return C_RESUNSAFE2_9;
}

public byte getC_RESUNSAFE3_1() {
return C_RESUNSAFE3_1;
}

public byte getC_RESUNSAFE3_10() {
return C_RESUNSAFE3_10;
}

public byte getC_RESUNSAFE3_11() {
return C_RESUNSAFE3_11;
}

public byte getC_RESUNSAFE3_12() {
return C_RESUNSAFE3_12;
}

public byte getC_RESUNSAFE3_2() {
return C_RESUNSAFE3_2;
}

public byte getC_RESUNSAFE3_3() {
return C_RESUNSAFE3_3;
}

public byte getC_RESUNSAFE3_4() {
return C_RESUNSAFE3_4;
}

public byte getC_RESUNSAFE3_5() {
return C_RESUNSAFE3_5;
}

public byte getC_RESUNSAFE3_6() {
return C_RESUNSAFE3_6;
}

public byte getC_RESUNSAFE3_7() {
return C_RESUNSAFE3_7;
}

public byte getC_RESUNSAFE3_8() {
return C_RESUNSAFE3_8;
}

public byte getC_RESUNSAFE3_9() {
return C_RESUNSAFE3_9;
}

public byte getC_RESUNSAFE4_1() {
return C_RESUNSAFE4_1;
}

public byte getC_RESUNSAFE4_10() {
return C_RESUNSAFE4_10;
}

public byte getC_RESUNSAFE4_11() {
return C_RESUNSAFE4_11;
}

public byte getC_RESUNSAFE4_12() {
return C_RESUNSAFE4_12;
}

public byte getC_RESUNSAFE4_2() {
return C_RESUNSAFE4_2;
}

public byte getC_RESUNSAFE4_3() {
return C_RESUNSAFE4_3;
}

public byte getC_RESUNSAFE4_4() {
return C_RESUNSAFE4_4;
}

public byte getC_RESUNSAFE4_5() {
return C_RESUNSAFE4_5;
}

public byte getC_RESUNSAFE4_6() {
return C_RESUNSAFE4_6;
}

public byte getC_RESUNSAFE4_7() {
return C_RESUNSAFE4_7;
}

public byte getC_RESUNSAFE4_8() {
return C_RESUNSAFE4_8;
}

public byte getC_RESUNSAFE4_9() {
return C_RESUNSAFE4_9;
}

public byte getC_RESUNSAFE5_1() {
return C_RESUNSAFE5_1;
}

public byte getC_RESUNSAFE5_10() {
return C_RESUNSAFE5_10;
}

public byte getC_RESUNSAFE5_11() {
return C_RESUNSAFE5_11;
}

public byte getC_RESUNSAFE5_12() {
return C_RESUNSAFE5_12;
}

public byte getC_RESUNSAFE5_2() {
return C_RESUNSAFE5_2;
}

public byte getC_RESUNSAFE5_3() {
return C_RESUNSAFE5_3;
}

public byte getC_RESUNSAFE5_4() {
return C_RESUNSAFE5_4;
}

public byte getC_RESUNSAFE5_5() {
return C_RESUNSAFE5_5;
}

public byte getC_RESUNSAFE5_6() {
return C_RESUNSAFE5_6;
}

public byte getC_RESUNSAFE5_7() {
return C_RESUNSAFE5_7;
}

public byte getC_RESUNSAFE5_8() {
return C_RESUNSAFE5_8;
}

public byte getC_RESUNSAFE5_9() {
return C_RESUNSAFE5_9;
}

public byte getC_RESUNSAFE6_1() {
return C_RESUNSAFE6_1;
}

public byte getC_RESUNSAFE6_10() {
return C_RESUNSAFE6_10;
}

public byte getC_RESUNSAFE6_11() {
return C_RESUNSAFE6_11;
}

public byte getC_RESUNSAFE6_12() {
return C_RESUNSAFE6_12;
}

public byte getC_RESUNSAFE6_2() {
return C_RESUNSAFE6_2;
}

public byte getC_RESUNSAFE6_3() {
return C_RESUNSAFE6_3;
}

public byte getC_RESUNSAFE6_4() {
return C_RESUNSAFE6_4;
}

public byte getC_RESUNSAFE6_5() {
return C_RESUNSAFE6_5;
}

public byte getC_RESUNSAFE6_6() {
return C_RESUNSAFE6_6;
}

public byte getC_RESUNSAFE6_7() {
return C_RESUNSAFE6_7;
}

public byte getC_RESUNSAFE6_8() {
return C_RESUNSAFE6_8;
}

public byte getC_RESUNSAFE6_9() {
return C_RESUNSAFE6_9;
}

public byte getC_RESUNSAFE7_1() {
return C_RESUNSAFE7_1;
}

public byte getC_RESUNSAFE7_10() {
return C_RESUNSAFE7_10;
}

public byte getC_RESUNSAFE7_11() {
return C_RESUNSAFE7_11;
}

public byte getC_RESUNSAFE7_12() {
return C_RESUNSAFE7_12;
}

public byte getC_RESUNSAFE7_2() {
return C_RESUNSAFE7_2;
}

public byte getC_RESUNSAFE7_3() {
return C_RESUNSAFE7_3;
}

public byte getC_RESUNSAFE7_4() {
return C_RESUNSAFE7_4;
}

public byte getC_RESUNSAFE7_5() {
return C_RESUNSAFE7_5;
}

public byte getC_RESUNSAFE7_6() {
return C_RESUNSAFE7_6;
}

public byte getC_RESUNSAFE7_7() {
return C_RESUNSAFE7_7;
}

public byte getC_RESUNSAFE7_8() {
return C_RESUNSAFE7_8;
}

public byte getC_RESUNSAFE7_9() {
return C_RESUNSAFE7_9;
}

public byte getC_RESUNSAFE8_1() {
return C_RESUNSAFE8_1;
}

public byte getC_RESUNSAFE8_10() {
return C_RESUNSAFE8_10;
}

public byte getC_RESUNSAFE8_11() {
return C_RESUNSAFE8_11;
}

public byte getC_RESUNSAFE8_12() {
return C_RESUNSAFE8_12;
}

public byte getC_RESUNSAFE8_2() {
return C_RESUNSAFE8_2;
}

public byte getC_RESUNSAFE8_3() {
return C_RESUNSAFE8_3;
}

public byte getC_RESUNSAFE8_4() {
return C_RESUNSAFE8_4;
}

public byte getC_RESUNSAFE8_5() {
return C_RESUNSAFE8_5;
}

public byte getC_RESUNSAFE8_6() {
return C_RESUNSAFE8_6;
}

public byte getC_RESUNSAFE8_7() {
return C_RESUNSAFE8_7;
}

public byte getC_RESUNSAFE8_8() {
return C_RESUNSAFE8_8;
}

public byte getC_RESUNSAFE8_9() {
return C_RESUNSAFE8_9;
}

public byte getC_RESUNSAFE96_1() {
return C_RESUNSAFE96_1;
}

public byte getC_RESUNSAFE96_10() {
return C_RESUNSAFE96_10;
}

public byte getC_RESUNSAFE96_11() {
return C_RESUNSAFE96_11;
}

public byte getC_RESUNSAFE96_12() {
return C_RESUNSAFE96_12;
}

public byte getC_RESUNSAFE96_2() {
return C_RESUNSAFE96_2;
}

public byte getC_RESUNSAFE96_3() {
return C_RESUNSAFE96_3;
}

public byte getC_RESUNSAFE96_4() {
return C_RESUNSAFE96_4;
}

public byte getC_RESUNSAFE96_5() {
return C_RESUNSAFE96_5;
}

public byte getC_RESUNSAFE96_6() {
return C_RESUNSAFE96_6;
}

public byte getC_RESUNSAFE96_7() {
return C_RESUNSAFE96_7;
}

public byte getC_RESUNSAFE96_8() {
return C_RESUNSAFE96_8;
}

public byte getC_RESUNSAFE96_9() {
return C_RESUNSAFE96_9;
}

public byte getC_RESUNSAFE97_1() {
return C_RESUNSAFE97_1;
}

public byte getC_RESUNSAFE97_10() {
return C_RESUNSAFE97_10;
}

public byte getC_RESUNSAFE97_11() {
return C_RESUNSAFE97_11;
}

public byte getC_RESUNSAFE97_12() {
return C_RESUNSAFE97_12;
}

public byte getC_RESUNSAFE97_2() {
return C_RESUNSAFE97_2;
}

public byte getC_RESUNSAFE97_3() {
return C_RESUNSAFE97_3;
}

public byte getC_RESUNSAFE97_4() {
return C_RESUNSAFE97_4;
}

public byte getC_RESUNSAFE97_5() {
return C_RESUNSAFE97_5;
}

public byte getC_RESUNSAFE97_6() {
return C_RESUNSAFE97_6;
}

public byte getC_RESUNSAFE97_7() {
return C_RESUNSAFE97_7;
}

public byte getC_RESUNSAFE97_8() {
return C_RESUNSAFE97_8;
}

public byte getC_RESUNSAFE97_9() {
return C_RESUNSAFE97_9;
}

public byte getC_RESUNSAFE9_1() {
return C_RESUNSAFE9_1;
}

public byte getC_RESUNSAFE9_10() {
return C_RESUNSAFE9_10;
}

public byte getC_RESUNSAFE9_11() {
return C_RESUNSAFE9_11;
}

public byte getC_RESUNSAFE9_12() {
return C_RESUNSAFE9_12;
}

public byte getC_RESUNSAFE9_2() {
return C_RESUNSAFE9_2;
}

public byte getC_RESUNSAFE9_3() {
return C_RESUNSAFE9_3;
}

public byte getC_RESUNSAFE9_4() {
return C_RESUNSAFE9_4;
}

public byte getC_RESUNSAFE9_5() {
return C_RESUNSAFE9_5;
}

public byte getC_RESUNSAFE9_6() {
return C_RESUNSAFE9_6;
}

public byte getC_RESUNSAFE9_7() {
return C_RESUNSAFE9_7;
}

public byte getC_RESUNSAFE9_8() {
return C_RESUNSAFE9_8;
}

public byte getC_RESUNSAFE9_9() {
return C_RESUNSAFE9_9;
}

public byte getC_RETAMT() {
return C_RETAMT;
}

public byte getC_RETCHK() {
return C_RETCHK;
}

public byte getC_RETSUF() {
return C_RETSUF;
}

public byte getC_RHLAND_CODE() {
return C_RHLAND_CODE;
}

public byte getC_RPHMOB_CODE() {
return C_RPHMOB_CODE;
}

public byte getC_RPHWRK_CODE() {
return C_RPHWRK_CODE;
}

public byte getC_RTCON1() {
return C_RTCON1;
}

public byte getC_RTCON2() {
return C_RTCON2;
}

public byte getC_RTCON3() {
return C_RTCON3;
}

public byte getC_RTCON4() {
return C_RTCON4;
}

public byte getC_RTEXPJB() {
return C_RTEXPJB;
}

public byte getC_RTFND1() {
return C_RTFND1;
}

public byte getC_RTFND10() {
return C_RTFND10;
}

public byte getC_RTFND2() {
return C_RTFND2;
}

public byte getC_RTFND3() {
return C_RTFND3;
}

public byte getC_RTFND4() {
return C_RTFND4;
}

public byte getC_RTFND5() {
return C_RTFND5;
}

public byte getC_RTFND6() {
return C_RTFND6;
}

public byte getC_RTFND7() {
return C_RTFND7;
}

public byte getC_RTFND8() {
return C_RTFND8;
}

public byte getC_RTFND9() {
return C_RTFND9;
}

public byte getC_RTFND96() {
return C_RTFND96;
}

public byte getC_RTPRO1() {
return C_RTPRO1;
}

public byte getC_RTPRO2() {
return C_RTPRO2;
}

public byte getC_RTPRO3() {
return C_RTPRO3;
}

public byte getC_RTPRO4() {
return C_RTPRO4;
}

public byte getC_RTPRO5() {
return C_RTPRO5;
}

public byte getC_RTPRO6() {
return C_RTPRO6;
}

public byte getC_RULESKID() {
return C_RULESKID;
}

public byte getC_SAMEJOB() {
return C_SAMEJOB;
}

public byte getC_SAMPST() {
return C_SAMPST;
}

public byte getC_SATTRANSY1() {
return C_SATTRANSY1;
}

public byte getC_SATTRANSY10() {
return C_SATTRANSY10;
}

public byte getC_SATTRANSY2() {
return C_SATTRANSY2;
}

public byte getC_SATTRANSY3() {
return C_SATTRANSY3;
}

public byte getC_SATTRANSY4() {
return C_SATTRANSY4;
}

public byte getC_SATTRANSY5() {
return C_SATTRANSY5;
}

public byte getC_SATTRANSY6() {
return C_SATTRANSY6;
}

public byte getC_SATTRANSY7() {
return C_SATTRANSY7;
}

public byte getC_SATTRANSY8() {
return C_SATTRANSY8;
}

public byte getC_SATTRANSY9() {
return C_SATTRANSY9;
}

public byte getC_SATTRANSY97() {
return C_SATTRANSY97;
}

public byte getC_SCAC() {
return C_SCAC;
}

public byte getC_SCDASSAT_DV() {
return C_SCDASSAT_DV;
}

public byte getC_SCEND() {
return C_SCEND;
}

public boolean getC_SCFLAG_DV() {
return C_SCFLAG_DV;
}

public byte getC_SCGHQ1_DV() {
return C_SCGHQ1_DV;
}

public byte getC_SCGHQ2_DV() {
return C_SCGHQ2_DV;
}

public byte getC_SCGHQA() {
return C_SCGHQA;
}

public byte getC_SCGHQB() {
return C_SCGHQB;
}

public byte getC_SCGHQC() {
return C_SCGHQC;
}

public byte getC_SCGHQD() {
return C_SCGHQD;
}

public byte getC_SCGHQE() {
return C_SCGHQE;
}

public byte getC_SCGHQF() {
return C_SCGHQF;
}

public byte getC_SCGHQG() {
return C_SCGHQG;
}

public byte getC_SCGHQH() {
return C_SCGHQH;
}

public byte getC_SCGHQI() {
return C_SCGHQI;
}

public byte getC_SCGHQJ() {
return C_SCGHQJ;
}

public byte getC_SCGHQK() {
return C_SCGHQK;
}

public byte getC_SCGHQL() {
return C_SCGHQL;
}

public byte getC_SCHLLOC() {
return C_SCHLLOC;
}

public byte getC_SCHOK() {
return C_SCHOK;
}

public byte getC_SCHOOL() {
return C_SCHOOL;
}

public byte getC_SCLFSAT1() {
return C_SCLFSAT1;
}

public byte getC_SCLFSAT2() {
return C_SCLFSAT2;
}

public byte getC_SCLFSAT7() {
return C_SCLFSAT7;
}

public byte getC_SCLFSATO() {
return C_SCLFSATO;
}

public byte getC_SCOPNGBHA() {
return C_SCOPNGBHA;
}

public byte getC_SCOPNGBHB() {
return C_SCOPNGBHB;
}

public byte getC_SCOPNGBHC() {
return C_SCOPNGBHC;
}

public byte getC_SCOPNGBHD() {
return C_SCOPNGBHD;
}

public byte getC_SCOPNGBHE() {
return C_SCOPNGBHE;
}

public byte getC_SCOPNGBHF() {
return C_SCOPNGBHF;
}

public byte getC_SCOPNGBHG() {
return C_SCOPNGBHG;
}

public byte getC_SCOPNGBHH() {
return C_SCOPNGBHH;
}

public byte getC_SCPAROUTINT() {
return C_SCPAROUTINT;
}

public byte getC_SCPTRT5A1() {
return C_SCPTRT5A1;
}

public byte getC_SCPTRT5A2() {
return C_SCPTRT5A2;
}

public byte getC_SCPTRT5A3() {
return C_SCPTRT5A3;
}

public byte getC_SCPTRT5C1() {
return C_SCPTRT5C1;
}

public byte getC_SCPTRT5C2() {
return C_SCPTRT5C2;
}

public byte getC_SCPTRT5C3() {
return C_SCPTRT5C3;
}

public byte getC_SCPTRT5E1() {
return C_SCPTRT5E1;
}

public byte getC_SCPTRT5E2() {
return C_SCPTRT5E2;
}

public byte getC_SCPTRT5E3() {
return C_SCPTRT5E3;
}

public byte getC_SCPTRT5N1() {
return C_SCPTRT5N1;
}

public byte getC_SCPTRT5N2() {
return C_SCPTRT5N2;
}

public byte getC_SCPTRT5N3() {
return C_SCPTRT5N3;
}

public byte getC_SCPTRT5O1() {
return C_SCPTRT5O1;
}

public byte getC_SCPTRT5O2() {
return C_SCPTRT5O2;
}

public byte getC_SCPTRT5O3() {
return C_SCPTRT5O3;
}

public byte getC_SCRELHAPPY() {
return C_SCRELHAPPY;
}

public byte getC_SCRELPARAR() {
return C_SCRELPARAR;
}

public byte getC_SCRELPARCD() {
return C_SCRELPARCD;
}

public byte getC_SCRELPARDS() {
return C_SCRELPARDS;
}

public byte getC_SCRELPAREI() {
return C_SCRELPAREI;
}

public byte getC_SCRELPARIR() {
return C_SCRELPARIR;
}

public byte getC_SCRELPARKS() {
return C_SCRELPARKS;
}

public byte getC_SCRELPARRG() {
return C_SCRELPARRG;
}

public byte getC_SCRELPARWT() {
return C_SCRELPARWT;
}

public byte getC_SCRF1() {
return C_SCRF1;
}

public byte getC_SCRF2() {
return C_SCRF2;
}

public byte getC_SCRF3() {
return C_SCRF3;
}

public byte getC_SCRF4() {
return C_SCRF4;
}

public byte getC_SCRF5() {
return C_SCRF5;
}

public byte getC_SCRF6() {
return C_SCRF6;
}

public byte getC_SCRF97() {
return C_SCRF97;
}

public byte getC_SCRX_CODE() {
return C_SCRX_CODE;
}

public byte getC_SCSF1() {
return C_SCSF1;
}

public byte getC_SCSF2A() {
return C_SCSF2A;
}

public byte getC_SCSF2B() {
return C_SCSF2B;
}

public byte getC_SCSF3A() {
return C_SCSF3A;
}

public byte getC_SCSF3B() {
return C_SCSF3B;
}

public byte getC_SCSF4A() {
return C_SCSF4A;
}

public byte getC_SCSF4B() {
return C_SCSF4B;
}

public byte getC_SCSF5() {
return C_SCSF5;
}

public byte getC_SCSF6A() {
return C_SCSF6A;
}

public byte getC_SCSF6B() {
return C_SCSF6B;
}

public byte getC_SCSF6C() {
return C_SCSF6C;
}

public byte getC_SCSF7() {
return C_SCSF7;
}

public byte getC_SCUN1() {
return C_SCUN1;
}

public byte getC_SCUN2() {
return C_SCUN2;
}

public byte getC_SCUN3() {
return C_SCUN3;
}

public byte getC_SCUN97() {
return C_SCUN97;
}

public byte getC_SCUX_CODE() {
return C_SCUX_CODE;
}

protected double C_SEEARNGRS_DV() {
return C_SEEARNGRS_DV;
}

public byte getC_SEEARNGRS_IF() {
return C_SEEARNGRS_IF;
}

protected double C_SEEARNNET_DV() {
return C_SEEARNNET_DV;
}

public byte getC_SEEKID() {
return C_SEEKID;
}

public byte getC_SERVACC() {
return C_SERVACC;
}

public byte getC_SERVACCY1() {
return C_SERVACCY1;
}

public byte getC_SERVACCY10() {
return C_SERVACCY10;
}

public byte getC_SERVACCY11() {
return C_SERVACCY11;
}

public byte getC_SERVACCY12() {
return C_SERVACCY12;
}

public byte getC_SERVACCY13() {
return C_SERVACCY13;
}

public byte getC_SERVACCY14() {
return C_SERVACCY14;
}

public byte getC_SERVACCY15() {
return C_SERVACCY15;
}

public byte getC_SERVACCY2() {
return C_SERVACCY2;
}

public byte getC_SERVACCY3() {
return C_SERVACCY3;
}

public byte getC_SERVACCY4() {
return C_SERVACCY4;
}

public byte getC_SERVACCY5() {
return C_SERVACCY5;
}

public byte getC_SERVACCY6() {
return C_SERVACCY6;
}

public byte getC_SERVACCY7() {
return C_SERVACCY7;
}

public byte getC_SERVACCY8() {
return C_SERVACCY8;
}

public byte getC_SERVACCY9() {
return C_SERVACCY9;
}

public byte getC_SERVACCY97() {
return C_SERVACCY97;
}

public byte getC_SEVENSPAP() {
return C_SEVENSPAP;
}

public boolean getC_SEX() {
return C_SEX;
}

public byte getC_SEXUOR() {
return C_SEXUOR;
}

public byte getC_SEX_DV() {
return C_SEX_DV;
}

public byte getC_SF1() {
return C_SF1;
}

protected double C_SF12MCS_DV() {
return C_SF12MCS_DV;
}

protected double C_SF12PCS_DV() {
return C_SF12PCS_DV;
}

public byte getC_SIBHIT() {
return C_SIBHIT;
}

public byte getC_SIBSTEAL() {
return C_SIBSTEAL;
}

public byte getC_SIBTEASE() {
return C_SIBTEASE;
}

public byte getC_SIBVERAB() {
return C_SIBVERAB;
}

public byte getC_SIMAGE() {
return C_SIMAGE;
}

public byte getC_SIMAREA() {
return C_SIMAREA;
}

public byte getC_SIMEDUC() {
return C_SIMEDUC;
}

public byte getC_SIMFAM() {
return C_SIMFAM;
}

public byte getC_SIMINC() {
return C_SIMINC;
}

public byte getC_SIMJOB() {
return C_SIMJOB;
}

public byte getC_SIMRACE() {
return C_SIMRACE;
}

public boolean getC_SINGLE_DV() {
return C_SINGLE_DV;
}

public byte getC_SLAPKID() {
return C_SLAPKID;
}

public byte getC_SMKMNTH11() {
return C_SMKMNTH11;
}

public byte getC_SMKMNTH12() {
return C_SMKMNTH12;
}

public boolean getC_SMKMNTH13() {
return C_SMKMNTH13;
}

public byte getC_SMKMNTH21() {
return C_SMKMNTH21;
}

public byte getC_SMKMNTH22() {
return C_SMKMNTH22;
}

public boolean getC_SMKMNTH23() {
return C_SMKMNTH23;
}

public byte getC_SMKMNTH31() {
return C_SMKMNTH31;
}

public byte getC_SMKMNTH32() {
return C_SMKMNTH32;
}

public boolean getC_SMKMNTH33() {
return C_SMKMNTH33;
}

public byte getC_SMOFRQ() {
return C_SMOFRQ;
}

public byte getC_SOCIALKID() {
return C_SOCIALKID;
}

public byte getC_SOCWEB() {
return C_SOCWEB;
}

public byte getC_SPPEN() {
return C_SPPEN;
}

public int getC_SPPID() {
return C_SPPID;
}

public byte getC_SPPNO() {
return C_SPPNO;
}

public byte getC_STATCM1() {
return C_STATCM1;
}

public byte getC_STATCM2() {
return C_STATCM2;
}

public short getC_STATCY41() {
return C_STATCY41;
}

public short getC_STATCY42() {
return C_STATCY42;
}

public byte getC_STATENDD1() {
return C_STATENDD1;
}

public byte getC_STATENDD2() {
return C_STATENDD2;
}

public byte getC_STATENDD3() {
return C_STATENDD3;
}

public byte getC_STATENDD4() {
return C_STATENDD4;
}

public byte getC_STATENDD5() {
return C_STATENDD5;
}

public byte getC_STATENDD6() {
return C_STATENDD6;
}

public byte getC_STATENDD7() {
return C_STATENDD7;
}

public byte getC_STATENDD8() {
return C_STATENDD8;
}

public boolean getC_STATENDD9() {
return C_STATENDD9;
}

public byte getC_STATENDM1() {
return C_STATENDM1;
}

public byte getC_STATENDM2() {
return C_STATENDM2;
}

public byte getC_STATENDM3() {
return C_STATENDM3;
}

public byte getC_STATENDM4() {
return C_STATENDM4;
}

public byte getC_STATENDM5() {
return C_STATENDM5;
}

public byte getC_STATENDM6() {
return C_STATENDM6;
}

public byte getC_STATENDM7() {
return C_STATENDM7;
}

public byte getC_STATENDM8() {
return C_STATENDM8;
}

public boolean getC_STATENDM9() {
return C_STATENDM9;
}

public short getC_STATENDY41() {
return C_STATENDY41;
}

public short getC_STATENDY42() {
return C_STATENDY42;
}

public short getC_STATENDY43() {
return C_STATENDY43;
}

public short getC_STATENDY44() {
return C_STATENDY44;
}

public short getC_STATENDY45() {
return C_STATENDY45;
}

public short getC_STATENDY46() {
return C_STATENDY46;
}

public short getC_STATENDY47() {
return C_STATENDY47;
}

public short getC_STATENDY48() {
return C_STATENDY48;
}

public boolean getC_STATENDY49() {
return C_STATENDY49;
}

public byte getC_STEALSIB() {
return C_STEALSIB;
}

public byte getC_STENDREAS() {
return C_STENDREAS;
}

public byte getC_STEPREL() {
return C_STEPREL;
}

public short getC_STRATA() {
return C_STRATA;
}

public byte getC_SUB7STOP1() {
return C_SUB7STOP1;
}

public byte getC_SUB7STOP2() {
return C_SUB7STOP2;
}

public byte getC_SUB7STOP3() {
return C_SUB7STOP3;
}

public byte getC_SUB7STOP4() {
return C_SUB7STOP4;
}

public byte getC_SUB7STOP5() {
return C_SUB7STOP5;
}

public byte getC_SUB7STOP6() {
return C_SUB7STOP6;
}

public byte getC_SUB7STOP7() {
return C_SUB7STOP7;
}

public byte getC_SUB7STOP8() {
return C_SUB7STOP8;
}

public byte getC_SUB7STOP97() {
return C_SUB7STOP97;
}

public byte getC_SUB7_1() {
return C_SUB7_1;
}

public byte getC_SUB7_2() {
return C_SUB7_2;
}

public byte getC_SUB7_3() {
return C_SUB7_3;
}

public byte getC_SUB7_4() {
return C_SUB7_4;
}

public byte getC_SUB7_5() {
return C_SUB7_5;
}

public byte getC_SUBCONT11() {
return C_SUBCONT11;
}

public byte getC_SUBCONT12() {
return C_SUBCONT12;
}

public byte getC_SUBCONT13() {
return C_SUBCONT13;
}

public byte getC_SUBCONT21() {
return C_SUBCONT21;
}

public byte getC_SUBCONT210() {
return C_SUBCONT210;
}

public byte getC_SUBCONT211() {
return C_SUBCONT211;
}

public byte getC_SUBCONT212() {
return C_SUBCONT212;
}

public byte getC_SUBCONT213() {
return C_SUBCONT213;
}

public byte getC_SUBCONT214() {
return C_SUBCONT214;
}

public byte getC_SUBCONT215() {
return C_SUBCONT215;
}

public byte getC_SUBCONT216() {
return C_SUBCONT216;
}

public byte getC_SUBCONT22() {
return C_SUBCONT22;
}

public byte getC_SUBCONT23() {
return C_SUBCONT23;
}

public byte getC_SUBCONT24() {
return C_SUBCONT24;
}

public byte getC_SUBCONT25() {
return C_SUBCONT25;
}

public byte getC_SUBCONT26() {
return C_SUBCONT26;
}

public byte getC_SUBCONT27() {
return C_SUBCONT27;
}

public byte getC_SUBCONT28() {
return C_SUBCONT28;
}

public byte getC_SUBCONT29() {
return C_SUBCONT29;
}

public byte getC_SUBCONT3() {
return C_SUBCONT3;
}

public byte getC_SUSP() {
return C_SUSP;
}

public byte getC_TALKMATTER() {
return C_TALKMATTER;
}

public byte getC_TEASESIB() {
return C_TEASESIB;
}

public byte getC_TLKF() {
return C_TLKF;
}

public byte getC_TLKM() {
return C_TLKM;
}

public byte getC_TRAINANY() {
return C_TRAINANY;
}

public short getC_TRAINDAYS1() {
return C_TRAINDAYS1;
}

public short getC_TRAINDAYS2() {
return C_TRAINDAYS2;
}

public short getC_TRAINDAYS3() {
return C_TRAINDAYS3;
}

public byte getC_TRAINDENY() {
return C_TRAINDENY;
}

public byte getC_TRAINEND1() {
return C_TRAINEND1;
}

public byte getC_TRAINEND2() {
return C_TRAINEND2;
}

public byte getC_TRAINEND3() {
return C_TRAINEND3;
}

public byte getC_TRAINHRS1() {
return C_TRAINHRS1;
}

public byte getC_TRAINHRS2() {
return C_TRAINHRS2;
}

public byte getC_TRAINHRS3() {
return C_TRAINHRS3;
}

public byte getC_TRAINN() {
return C_TRAINN;
}

public byte getC_TRAINPURP11() {
return C_TRAINPURP11;
}

public byte getC_TRAINPURP12() {
return C_TRAINPURP12;
}

public byte getC_TRAINPURP13() {
return C_TRAINPURP13;
}

public byte getC_TRAINPURP21() {
return C_TRAINPURP21;
}

public byte getC_TRAINPURP22() {
return C_TRAINPURP22;
}

public byte getC_TRAINPURP23() {
return C_TRAINPURP23;
}

public byte getC_TRAINPURP31() {
return C_TRAINPURP31;
}

public byte getC_TRAINPURP32() {
return C_TRAINPURP32;
}

public byte getC_TRAINPURP33() {
return C_TRAINPURP33;
}

public byte getC_TRAINPURP41() {
return C_TRAINPURP41;
}

public byte getC_TRAINPURP42() {
return C_TRAINPURP42;
}

public byte getC_TRAINPURP43() {
return C_TRAINPURP43;
}

public byte getC_TRAINPURP51() {
return C_TRAINPURP51;
}

public byte getC_TRAINPURP52() {
return C_TRAINPURP52;
}

public byte getC_TRAINPURP53() {
return C_TRAINPURP53;
}

public byte getC_TRAINPURP61() {
return C_TRAINPURP61;
}

public byte getC_TRAINPURP62() {
return C_TRAINPURP62;
}

public byte getC_TRAINPURP63() {
return C_TRAINPURP63;
}

public byte getC_TRAINPURP71() {
return C_TRAINPURP71;
}

public byte getC_TRAINPURP72() {
return C_TRAINPURP72;
}

public byte getC_TRAINPURP73() {
return C_TRAINPURP73;
}

public byte getC_TRAINQUAL1() {
return C_TRAINQUAL1;
}

public byte getC_TRAINQUAL2() {
return C_TRAINQUAL2;
}

public byte getC_TRAINQUAL3() {
return C_TRAINQUAL3;
}

public byte getC_TRQUAL1() {
return C_TRQUAL1;
}

public byte getC_TRQUAL10() {
return C_TRQUAL10;
}

public byte getC_TRQUAL11() {
return C_TRQUAL11;
}

public byte getC_TRQUAL13() {
return C_TRQUAL13;
}

public byte getC_TRQUAL15() {
return C_TRQUAL15;
}

public byte getC_TRQUAL16() {
return C_TRQUAL16;
}

public byte getC_TRQUAL17() {
return C_TRQUAL17;
}

public byte getC_TRQUAL18() {
return C_TRQUAL18;
}

public byte getC_TRQUAL19() {
return C_TRQUAL19;
}

public byte getC_TRQUAL2() {
return C_TRQUAL2;
}

public byte getC_TRQUAL20() {
return C_TRQUAL20;
}

public byte getC_TRQUAL21() {
return C_TRQUAL21;
}

public byte getC_TRQUAL22() {
return C_TRQUAL22;
}

public byte getC_TRQUAL23() {
return C_TRQUAL23;
}

public byte getC_TRQUAL24() {
return C_TRQUAL24;
}

public byte getC_TRQUAL25() {
return C_TRQUAL25;
}

public byte getC_TRQUAL26() {
return C_TRQUAL26;
}

public byte getC_TRQUAL27() {
return C_TRQUAL27;
}

public byte getC_TRQUAL28() {
return C_TRQUAL28;
}

public byte getC_TRQUAL29() {
return C_TRQUAL29;
}

public byte getC_TRQUAL3() {
return C_TRQUAL3;
}

public byte getC_TRQUAL30() {
return C_TRQUAL30;
}

public byte getC_TRQUAL31() {
return C_TRQUAL31;
}

public byte getC_TRQUAL4() {
return C_TRQUAL4;
}

public byte getC_TRQUAL5() {
return C_TRQUAL5;
}

public byte getC_TRQUAL6() {
return C_TRQUAL6;
}

public byte getC_TRQUAL7() {
return C_TRQUAL7;
}

public byte getC_TRQUAL8() {
return C_TRQUAL8;
}

public byte getC_TRQUAL9() {
return C_TRQUAL9;
}

public byte getC_TRWHO1() {
return C_TRWHO1;
}

public byte getC_TRWHO2() {
return C_TRWHO2;
}

public byte getC_TRWHO3() {
return C_TRWHO3;
}

protected double C_TVHOURS() {
return C_TVHOURS;
}

public byte getC_TVM2() {
return C_TVM2;
}

public byte getC_UKBORN() {
return C_UKBORN;
}

public byte getC_UNDQUS() {
return C_UNDQUS;
}

public byte getC_UNSAFE1() {
return C_UNSAFE1;
}

public byte getC_UNSAFE10() {
return C_UNSAFE10;
}

public byte getC_UNSAFE11() {
return C_UNSAFE11;
}

public byte getC_UNSAFE2() {
return C_UNSAFE2;
}

public byte getC_UNSAFE3() {
return C_UNSAFE3;
}

public byte getC_UNSAFE4() {
return C_UNSAFE4;
}

public byte getC_UNSAFE5() {
return C_UNSAFE5;
}

public byte getC_UNSAFE6() {
return C_UNSAFE6;
}

public byte getC_UNSAFE7() {
return C_UNSAFE7;
}

public byte getC_UNSAFE8() {
return C_UNSAFE8;
}

public byte getC_UNSAFE9() {
return C_UNSAFE9;
}

public byte getC_UNSAFE96() {
return C_UNSAFE96;
}

public byte getC_UNSAFE97() {
return C_UNSAFE97;
}

public byte getC_UNSAFEO_CODE() {
return C_UNSAFEO_CODE;
}

public byte getC_UNSAFE_DV() {
return C_UNSAFE_DV;
}

public byte getC_UPSET() {
return C_UPSET;
}

public byte getC_URBAN_DV() {
return C_URBAN_DV;
}

public byte getC_VERABSIB() {
return C_VERABSIB;
}

public byte getC_VFCONT11() {
return C_VFCONT11;
}

public byte getC_VFCONT12() {
return C_VFCONT12;
}

public byte getC_VFCONT13() {
return C_VFCONT13;
}

public byte getC_VFCONT21() {
return C_VFCONT21;
}

public byte getC_VFCONT210() {
return C_VFCONT210;
}

public byte getC_VFCONT211() {
return C_VFCONT211;
}

public byte getC_VFCONT212() {
return C_VFCONT212;
}

public byte getC_VFCONT213() {
return C_VFCONT213;
}

public byte getC_VFCONT214() {
return C_VFCONT214;
}

public byte getC_VFCONT215() {
return C_VFCONT215;
}

public byte getC_VFCONT216() {
return C_VFCONT216;
}

public byte getC_VFCONT22() {
return C_VFCONT22;
}

public byte getC_VFCONT23() {
return C_VFCONT23;
}

public byte getC_VFCONT24() {
return C_VFCONT24;
}

public byte getC_VFCONT25() {
return C_VFCONT25;
}

public byte getC_VFCONT26() {
return C_VFCONT26;
}

public byte getC_VFCONT27() {
return C_VFCONT27;
}

public byte getC_VFCONT28() {
return C_VFCONT28;
}

public byte getC_VFCONT29() {
return C_VFCONT29;
}

public byte getC_VFCONT3() {
return C_VFCONT3;
}

public byte getC_VFCT() {
return C_VFCT;
}

public byte getC_VFPRE() {
return C_VFPRE;
}

public byte getC_VFSTOP1() {
return C_VFSTOP1;
}

public byte getC_VFSTOP2() {
return C_VFSTOP2;
}

public byte getC_VFSTOP3() {
return C_VFSTOP3;
}

public byte getC_VFSTOP4() {
return C_VFSTOP4;
}

public byte getC_VFSTOP5() {
return C_VFSTOP5;
}

public byte getC_VFSTOP6() {
return C_VFSTOP6;
}

public byte getC_VFSTOP7() {
return C_VFSTOP7;
}

public byte getC_VFSTOP8() {
return C_VFSTOP8;
}

public byte getC_VFSTOP97() {
return C_VFSTOP97;
}

public byte getC_VFTCTW() {
return C_VFTCTW;
}

public byte getC_VISFAM() {
return C_VISFAM;
}

public byte getC_VISFAMY1() {
return C_VISFAMY1;
}

public byte getC_VISFAMY10() {
return C_VISFAMY10;
}

public byte getC_VISFAMY11() {
return C_VISFAMY11;
}

public byte getC_VISFAMY12() {
return C_VISFAMY12;
}

public byte getC_VISFAMY13() {
return C_VISFAMY13;
}

public byte getC_VISFAMY14() {
return C_VISFAMY14;
}

public byte getC_VISFAMY15() {
return C_VISFAMY15;
}

public byte getC_VISFAMY2() {
return C_VISFAMY2;
}

public byte getC_VISFAMY3() {
return C_VISFAMY3;
}

public byte getC_VISFAMY4() {
return C_VISFAMY4;
}

public byte getC_VISFAMY5() {
return C_VISFAMY5;
}

public byte getC_VISFAMY6() {
return C_VISFAMY6;
}

public byte getC_VISFAMY7() {
return C_VISFAMY7;
}

public byte getC_VISFAMY8() {
return C_VISFAMY8;
}

public byte getC_VISFAMY9() {
return C_VISFAMY9;
}

public byte getC_VISFAMY97() {
return C_VISFAMY97;
}

public byte getC_VISFRNDS() {
return C_VISFRNDS;
}

public byte getC_VISFRNDSY1() {
return C_VISFRNDSY1;
}

public byte getC_VISFRNDSY10() {
return C_VISFRNDSY10;
}

public byte getC_VISFRNDSY11() {
return C_VISFRNDSY11;
}

public byte getC_VISFRNDSY12() {
return C_VISFRNDSY12;
}

public byte getC_VISFRNDSY13() {
return C_VISFRNDSY13;
}

public byte getC_VISFRNDSY14() {
return C_VISFRNDSY14;
}

public byte getC_VISFRNDSY2() {
return C_VISFRNDSY2;
}

public byte getC_VISFRNDSY3() {
return C_VISFRNDSY3;
}

public byte getC_VISFRNDSY4() {
return C_VISFRNDSY4;
}

public byte getC_VISFRNDSY5() {
return C_VISFRNDSY5;
}

public byte getC_VISFRNDSY6() {
return C_VISFRNDSY6;
}

public byte getC_VISFRNDSY7() {
return C_VISFRNDSY7;
}

public byte getC_VISFRNDSY8() {
return C_VISFRNDSY8;
}

public byte getC_VISFRNDSY9() {
return C_VISFRNDSY9;
}

public byte getC_VISFRNDSY97() {
return C_VISFRNDSY97;
}

public byte getC_VOLRECPER() {
return C_VOLRECPER;
}

public byte getC_VOTE1() {
return C_VOTE1;
}

public byte getC_VOTE2() {
return C_VOTE2;
}

public byte getC_VOTE3() {
return C_VOTE3;
}

public byte getC_VOTE4() {
return C_VOTE4;
}

public byte getC_VOTE5() {
return C_VOTE5;
}

public byte getC_VOTE6() {
return C_VOTE6;
}

public byte getC_VOTEINTENT() {
return C_VOTEINTENT;
}

public byte getC_VOTENORM() {
return C_VOTENORM;
}

public byte getC_WEKID() {
return C_WEKID;
}

public byte getC_WHORUAGE() {
return C_WHORUAGE;
}

public byte getC_WHORUEDU() {
return C_WHORUEDU;
}

public byte getC_WHORUFAM() {
return C_WHORUFAM;
}

public byte getC_WHORUPOL() {
return C_WHORUPOL;
}

public byte getC_WHORUPRO() {
return C_WHORUPRO;
}

public byte getC_WHORURAC() {
return C_WHORURAC;
}

public byte getC_WHORUSEX() {
return C_WHORUSEX;
}

public byte getC_WKPLSAM() {
return C_WKPLSAM;
}

public byte getC_WORDS1() {
return C_WORDS1;
}

public byte getC_WORDS2() {
return C_WORDS2;
}

public byte getC_WORDS3() {
return C_WORDS3;
}

public byte getC_WORDS4() {
return C_WORDS4;
}

public byte getC_WORKTRAV() {
return C_WORKTRAV;
}

public byte getC_WRCOMPPRE() {
return C_WRCOMPPRE;
}

public byte getC_WRDRCL() {
return C_WRDRCL;
}

public byte getC_WRDRECPRE() {
return C_WRDRECPRE;
}

public byte getC_WRINTPRE() {
return C_WRINTPRE;
}

public byte getC_XPMOVE() {
return C_XPMOVE;
}

public byte getC_XTRA5MINOSM_DV() {
return C_XTRA5MINOSM_DV;
}

public byte getC_XTRA5MIN_DV() {
return C_XTRA5MIN_DV;
}

public byte getC_YAJBSRV1() {
return C_YAJBSRV1;
}

public byte getC_YAJBSRV2() {
return C_YAJBSRV2;
}

public byte getC_YAJBSRV3() {
return C_YAJBSRV3;
}

public byte getC_YAJBSRV4() {
return C_YAJBSRV4;
}

public byte getC_YAJBSRV5() {
return C_YAJBSRV5;
}

public byte getC_YAJBSRV6() {
return C_YAJBSRV6;
}

public byte getC_YAJBSRV7() {
return C_YAJBSRV7;
}

public byte getC_YAJBSRV96() {
return C_YAJBSRV96;
}

public byte getC_YANSSEC5_DV() {
return C_YANSSEC5_DV;
}

public short getC_YASOC00_CC() {
return C_YASOC00_CC;
}

public short getC_YASOC10_CC() {
return C_YASOC10_CC;
}

public byte getC_YASOC90_CC() {
return C_YASOC90_CC;
}

public byte getC_YELLKID() {
return C_YELLKID;
}

public short getC_YR2UK4() {
return C_YR2UK4;
}

public US_Wave3_HHOLD_Record(String line) {
s = line.split("\t");
initPIDP(s[0]);
initPID(s[1]);
initC_HIDP(s[2]);
initC_PNO(s[3]);
initC_CHILDPNO(s[4]);
initC_HHORIG(s[5]);
initC_MEMORIG(s[6]);
initC_PSU(s[7]);
initC_STRATA(s[8]);
initC_SAMPST(s[9]);
initC_MONTH(s[10]);
initC_IVFIO(s[11]);
initC_IOUTCOME(s[12]);
initC_SEX(s[13]);
initC_DVAGE(s[14]);
initC_BIRTHY(s[15]);
initC_CINDTIME(s[16]);
initC_WRDRCL(s[17]);
initC_NSRAN(s[18]);
initC_LVWHY(s[19]);
initC_LVMTHP(s[20]);
initC_LVYRP(s[21]);
initC_ISYEAR(s[22]);
initC_ADSTATUS(s[23]);
initC_PLIVPAR(s[24]);
initC_PSIBLINGS(s[25]);
initC_NCH14RESP(s[26]);
initC_NCH3RESP(s[27]);
initC_NCH5RESP(s[28]);
initC_NCH8RESP(s[29]);
initC_NCH415RESP(s[30]);
initC_NCHRESP(s[31]);
initC_NCHUND18RESP(s[32]);
initC_NATCH01(s[33]);
initC_NATCH02(s[34]);
initC_NATCH03(s[35]);
initC_NATCH04(s[36]);
initC_NATCH05(s[37]);
initC_NATCH06(s[38]);
initC_NATCH07(s[39]);
initC_NATCH08(s[40]);
initC_NATCH09(s[41]);
initC_NATCH10(s[42]);
initC_NATCH11(s[43]);
initC_NATCH12(s[44]);
initC_NATCH13(s[45]);
initC_NATCH14(s[46]);
initC_NATCH15(s[47]);
initC_NATCH16(s[48]);
initC_NNATCH(s[49]);
initC_NADOPTCH(s[50]);
initC_ADOPTCH01(s[51]);
initC_ADOPTCH02(s[52]);
initC_ADOPTCH03(s[53]);
initC_ADOPTCH04(s[54]);
initC_ADOPTCH05(s[55]);
initC_ADOPTCH06(s[56]);
initC_ADOPTCH07(s[57]);
initC_ADOPTCH08(s[58]);
initC_ADOPTCH09(s[59]);
initC_ADOPTCH10(s[60]);
initC_ADOPTCH11(s[61]);
initC_ADOPTCH12(s[62]);
initC_ADOPTCH13(s[63]);
initC_ADOPTCH14(s[64]);
initC_ADOPTCH15(s[65]);
initC_ADOPTCH16(s[66]);
initC_NCHUNDER16(s[67]);
initC_NCH5TO15(s[68]);
initC_NCH10TO15(s[69]);
initC_NCH10(s[70]);
initC_FFBRFEDLW(s[71]);
initC_ALLCH01(s[72]);
initC_ALLCH02(s[73]);
initC_ALLCH03(s[74]);
initC_ALLCH04(s[75]);
initC_ALLCH05(s[76]);
initC_ALLCH06(s[77]);
initC_ALLCH07(s[78]);
initC_ALLCH08(s[79]);
initC_ALLCH09(s[80]);
initC_ALLCH10(s[81]);
initC_ALLCH11(s[82]);
initC_ALLCH12(s[83]);
initC_ALLCH13(s[84]);
initC_ALLCH14(s[85]);
initC_ALLCH15(s[86]);
initC_ALLCH16(s[87]);
initC_ISTRTDATY(s[88]);
initC_ISTRTDATM(s[89]);
initC_ISTRTDATD(s[90]);
initC_LIENG(s[91]);
initC_LITRANS(s[92]);
initC_LIWHO(s[93]);
initC_LIHOW(s[94]);
initC_CHKRESP(s[95]);
initC_MVEVER(s[96]);
initC_MVMNTH(s[97]);
initC_MVYR(s[98]);
initC_LKMOVE(s[99]);
initC_XPMOVE(s[100]);
initC_JBSTAT(s[101]);
initC_MLSTATCHK(s[102]);
initC_MLSTAT(s[103]);
initC_DRIVE(s[104]);
initC_CARUSE(s[105]);
initC_MOBUSE(s[106]);
initC_NETPUSE(s[107]);
initC_BRITID(s[108]);
initC_UKBORN(s[109]);
initC_PLBORNC(s[110]);
initC_YR2UK4(s[111]);
initC_CITZN1(s[112]);
initC_CITZN2(s[113]);
initC_CITZN3(s[114]);
initC_QFHIGH(s[115]);
initC_QUALOC(s[116]);
initC_QFVOC1(s[117]);
initC_QFVOC2(s[118]);
initC_QFVOC3(s[119]);
initC_QFVOC4(s[120]);
initC_QFVOC5(s[121]);
initC_QFVOC6(s[122]);
initC_QFVOC7(s[123]);
initC_QFVOC8(s[124]);
initC_QFVOC9(s[125]);
initC_QFVOC10(s[126]);
initC_QFVOC11(s[127]);
initC_QFVOC12(s[128]);
initC_QFVOC13(s[129]);
initC_QFVOC14(s[130]);
initC_QFVOC15(s[131]);
initC_QFVOC96(s[132]);
initC_SCHOOL(s[133]);
initC_SCEND(s[134]);
initC_SCHLLOC(s[135]);
initC_SCHOK(s[136]);
initC_FENOW(s[137]);
initC_FEEND(s[138]);
initC_J1NONE(s[139]);
initC_J1SEMP(s[140]);
initC_J1BOSS(s[141]);
initC_J1MNGR(s[142]);
initC_EDTYPE(s[143]);
initC_EDASP(s[144]);
initC_LVSCDO(s[145]);
initC_AHVWELL(s[146]);
initC_FEDLIK(s[147]);
initC_FEDNT(s[148]);
initC_FUTUREINT(s[149]);
initC_LVHM(s[150]);
initC_OCIMPA(s[151]);
initC_OCIMPB(s[152]);
initC_OCIMPE(s[153]);
initC_OCIMPF(s[154]);
initC_OCIMPI(s[155]);
initC_OCIMPK(s[156]);
initC_OCIMPL(s[157]);
initC_FUTRA(s[158]);
initC_FUTRB(s[159]);
initC_FUTRC(s[160]);
initC_FUTRD(s[161]);
initC_FUTRE(s[162]);
initC_FUTRF(s[163]);
initC_FUTRG(s[164]);
initC_FUTRH(s[165]);
initC_FUTRI(s[166]);
initC_FUTRJ(s[167]);
initC_FUTRK(s[168]);
initC_FUTRL(s[169]);
initC_PAJU(s[170]);
initC_MAJU(s[171]);
initC_PACOB(s[172]);
initC_PAYRUK(s[173]);
initC_MACOB(s[174]);
initC_MAYRUK(s[175]);
initC_NATID1(s[176]);
initC_NATID2(s[177]);
initC_NATID3(s[178]);
initC_NATID4(s[179]);
initC_NATID5(s[180]);
initC_NATID6(s[181]);
initC_NATID97(s[182]);
initC_RACEL(s[183]);
initC_RACELO_CODE(s[184]);
initC_RACELT(s[185]);
initC_RACELWT(s[186]);
initC_RACELMT(s[187]);
initC_RACELAT(s[188]);
initC_RACELBT(s[189]);
initC_RACELOT_CODE(s[190]);
initC_OPRLG(s[191]);
initC_OPRLG0NI(s[192]);
initC_NIREL(s[193]);
initC_NIACT(s[194]);
initC_OPRLG0(s[195]);
initC_OPRLG1(s[196]);
initC_UNSAFE1(s[197]);
initC_UNSAFE2(s[198]);
initC_UNSAFE3(s[199]);
initC_UNSAFE4(s[200]);
initC_UNSAFE5(s[201]);
initC_UNSAFE6(s[202]);
initC_UNSAFE7(s[203]);
initC_UNSAFE8(s[204]);
initC_UNSAFE9(s[205]);
initC_UNSAFE10(s[206]);
initC_UNSAFE11(s[207]);
initC_UNSAFE96(s[208]);
initC_UNSAFE97(s[209]);
initC_UNSAFEO_CODE(s[210]);
initC_RESUNSAFE1_1(s[211]);
initC_RESUNSAFE2_1(s[212]);
initC_RESUNSAFE3_1(s[213]);
initC_RESUNSAFE4_1(s[214]);
initC_RESUNSAFE5_1(s[215]);
initC_RESUNSAFE6_1(s[216]);
initC_RESUNSAFE7_1(s[217]);
initC_RESUNSAFE8_1(s[218]);
initC_RESUNSAFE9_1(s[219]);
initC_RESUNSAFE96_1(s[220]);
initC_RESUNSAFE97_1(s[221]);
initC_RESUNSAFE1_2(s[222]);
initC_RESUNSAFE2_2(s[223]);
initC_RESUNSAFE3_2(s[224]);
initC_RESUNSAFE4_2(s[225]);
initC_RESUNSAFE5_2(s[226]);
initC_RESUNSAFE6_2(s[227]);
initC_RESUNSAFE7_2(s[228]);
initC_RESUNSAFE8_2(s[229]);
initC_RESUNSAFE9_2(s[230]);
initC_RESUNSAFE96_2(s[231]);
initC_RESUNSAFE97_2(s[232]);
initC_RESUNSAFE1_3(s[233]);
initC_RESUNSAFE2_3(s[234]);
initC_RESUNSAFE3_3(s[235]);
initC_RESUNSAFE4_3(s[236]);
initC_RESUNSAFE5_3(s[237]);
initC_RESUNSAFE6_3(s[238]);
initC_RESUNSAFE7_3(s[239]);
initC_RESUNSAFE8_3(s[240]);
initC_RESUNSAFE9_3(s[241]);
initC_RESUNSAFE96_3(s[242]);
initC_RESUNSAFE97_3(s[243]);
initC_RESUNSAFE1_4(s[244]);
initC_RESUNSAFE2_4(s[245]);
initC_RESUNSAFE3_4(s[246]);
initC_RESUNSAFE4_4(s[247]);
initC_RESUNSAFE5_4(s[248]);
initC_RESUNSAFE6_4(s[249]);
initC_RESUNSAFE7_4(s[250]);
initC_RESUNSAFE8_4(s[251]);
initC_RESUNSAFE9_4(s[252]);
initC_RESUNSAFE96_4(s[253]);
initC_RESUNSAFE97_4(s[254]);
initC_RESUNSAFE1_5(s[255]);
initC_RESUNSAFE2_5(s[256]);
initC_RESUNSAFE3_5(s[257]);
initC_RESUNSAFE4_5(s[258]);
initC_RESUNSAFE5_5(s[259]);
initC_RESUNSAFE6_5(s[260]);
initC_RESUNSAFE7_5(s[261]);
initC_RESUNSAFE8_5(s[262]);
initC_RESUNSAFE9_5(s[263]);
initC_RESUNSAFE96_5(s[264]);
initC_RESUNSAFE97_5(s[265]);
initC_RESUNSAFE1_6(s[266]);
initC_RESUNSAFE2_6(s[267]);
initC_RESUNSAFE3_6(s[268]);
initC_RESUNSAFE4_6(s[269]);
initC_RESUNSAFE5_6(s[270]);
initC_RESUNSAFE6_6(s[271]);
initC_RESUNSAFE7_6(s[272]);
initC_RESUNSAFE8_6(s[273]);
initC_RESUNSAFE9_6(s[274]);
initC_RESUNSAFE96_6(s[275]);
initC_RESUNSAFE97_6(s[276]);
initC_RESUNSAFE1_7(s[277]);
initC_RESUNSAFE2_7(s[278]);
initC_RESUNSAFE3_7(s[279]);
initC_RESUNSAFE4_7(s[280]);
initC_RESUNSAFE5_7(s[281]);
initC_RESUNSAFE6_7(s[282]);
initC_RESUNSAFE7_7(s[283]);
initC_RESUNSAFE8_7(s[284]);
initC_RESUNSAFE9_7(s[285]);
initC_RESUNSAFE96_7(s[286]);
initC_RESUNSAFE97_7(s[287]);
initC_RESUNSAFE1_8(s[288]);
initC_RESUNSAFE2_8(s[289]);
initC_RESUNSAFE3_8(s[290]);
initC_RESUNSAFE4_8(s[291]);
initC_RESUNSAFE5_8(s[292]);
initC_RESUNSAFE6_8(s[293]);
initC_RESUNSAFE7_8(s[294]);
initC_RESUNSAFE8_8(s[295]);
initC_RESUNSAFE9_8(s[296]);
initC_RESUNSAFE96_8(s[297]);
initC_RESUNSAFE97_8(s[298]);
initC_RESUNSAFE1_9(s[299]);
initC_RESUNSAFE2_9(s[300]);
initC_RESUNSAFE3_9(s[301]);
initC_RESUNSAFE4_9(s[302]);
initC_RESUNSAFE5_9(s[303]);
initC_RESUNSAFE6_9(s[304]);
initC_RESUNSAFE7_9(s[305]);
initC_RESUNSAFE8_9(s[306]);
initC_RESUNSAFE9_9(s[307]);
initC_RESUNSAFE96_9(s[308]);
initC_RESUNSAFE97_9(s[309]);
initC_RESUNSAFE1_10(s[310]);
initC_RESUNSAFE2_10(s[311]);
initC_RESUNSAFE3_10(s[312]);
initC_RESUNSAFE4_10(s[313]);
initC_RESUNSAFE5_10(s[314]);
initC_RESUNSAFE6_10(s[315]);
initC_RESUNSAFE7_10(s[316]);
initC_RESUNSAFE8_10(s[317]);
initC_RESUNSAFE9_10(s[318]);
initC_RESUNSAFE96_10(s[319]);
initC_RESUNSAFE97_10(s[320]);
initC_RESUNSAFE1_11(s[321]);
initC_RESUNSAFE2_11(s[322]);
initC_RESUNSAFE3_11(s[323]);
initC_RESUNSAFE4_11(s[324]);
initC_RESUNSAFE5_11(s[325]);
initC_RESUNSAFE6_11(s[326]);
initC_RESUNSAFE7_11(s[327]);
initC_RESUNSAFE8_11(s[328]);
initC_RESUNSAFE9_11(s[329]);
initC_RESUNSAFE96_11(s[330]);
initC_RESUNSAFE97_11(s[331]);
initC_RESUNSAFE1_12(s[332]);
initC_RESUNSAFE2_12(s[333]);
initC_RESUNSAFE3_12(s[334]);
initC_RESUNSAFE4_12(s[335]);
initC_RESUNSAFE5_12(s[336]);
initC_RESUNSAFE6_12(s[337]);
initC_RESUNSAFE7_12(s[338]);
initC_RESUNSAFE8_12(s[339]);
initC_RESUNSAFE9_12(s[340]);
initC_RESUNSAFE96_12(s[341]);
initC_RESUNSAFE97_12(s[342]);
initC_AVOIDANCE1(s[343]);
initC_AVOIDANCE2(s[344]);
initC_AVOIDANCE3(s[345]);
initC_AVOIDANCE4(s[346]);
initC_AVOIDANCE5(s[347]);
initC_AVOIDANCE6(s[348]);
initC_AVOIDANCE7(s[349]);
initC_AVOIDANCE8(s[350]);
initC_AVOIDANCE9(s[351]);
initC_AVOIDANCE10(s[352]);
initC_AVOIDANCE11(s[353]);
initC_AVOIDANCE96(s[354]);
initC_AVOIDANCE97(s[355]);
initC_AVOIDANCEO_CODE(s[356]);
initC_RESAVOID1_1(s[357]);
initC_RESAVOID2_1(s[358]);
initC_RESAVOID3_1(s[359]);
initC_RESAVOID4_1(s[360]);
initC_RESAVOID5_1(s[361]);
initC_RESAVOID6_1(s[362]);
initC_RESAVOID7_1(s[363]);
initC_RESAVOID8_1(s[364]);
initC_RESAVOID9_1(s[365]);
initC_RESAVOID96_1(s[366]);
initC_RESAVOID97_1(s[367]);
initC_RESAVOID1_2(s[368]);
initC_RESAVOID2_2(s[369]);
initC_RESAVOID3_2(s[370]);
initC_RESAVOID4_2(s[371]);
initC_RESAVOID5_2(s[372]);
initC_RESAVOID6_2(s[373]);
initC_RESAVOID7_2(s[374]);
initC_RESAVOID8_2(s[375]);
initC_RESAVOID9_2(s[376]);
initC_RESAVOID96_2(s[377]);
initC_RESAVOID97_2(s[378]);
initC_RESAVOID1_3(s[379]);
initC_RESAVOID2_3(s[380]);
initC_RESAVOID3_3(s[381]);
initC_RESAVOID4_3(s[382]);
initC_RESAVOID5_3(s[383]);
initC_RESAVOID6_3(s[384]);
initC_RESAVOID7_3(s[385]);
initC_RESAVOID8_3(s[386]);
initC_RESAVOID9_3(s[387]);
initC_RESAVOID96_3(s[388]);
initC_RESAVOID97_3(s[389]);
initC_RESAVOID1_4(s[390]);
initC_RESAVOID2_4(s[391]);
initC_RESAVOID3_4(s[392]);
initC_RESAVOID4_4(s[393]);
initC_RESAVOID5_4(s[394]);
initC_RESAVOID6_4(s[395]);
initC_RESAVOID7_4(s[396]);
initC_RESAVOID8_4(s[397]);
initC_RESAVOID9_4(s[398]);
initC_RESAVOID96_4(s[399]);
initC_RESAVOID97_4(s[400]);
initC_RESAVOID1_5(s[401]);
initC_RESAVOID2_5(s[402]);
initC_RESAVOID3_5(s[403]);
initC_RESAVOID4_5(s[404]);
initC_RESAVOID5_5(s[405]);
initC_RESAVOID6_5(s[406]);
initC_RESAVOID7_5(s[407]);
initC_RESAVOID8_5(s[408]);
initC_RESAVOID9_5(s[409]);
initC_RESAVOID96_5(s[410]);
initC_RESAVOID97_5(s[411]);
initC_RESAVOID1_6(s[412]);
initC_RESAVOID2_6(s[413]);
initC_RESAVOID3_6(s[414]);
initC_RESAVOID4_6(s[415]);
initC_RESAVOID5_6(s[416]);
initC_RESAVOID6_6(s[417]);
initC_RESAVOID7_6(s[418]);
initC_RESAVOID8_6(s[419]);
initC_RESAVOID9_6(s[420]);
initC_RESAVOID96_6(s[421]);
initC_RESAVOID97_6(s[422]);
initC_RESAVOID1_7(s[423]);
initC_RESAVOID2_7(s[424]);
initC_RESAVOID3_7(s[425]);
initC_RESAVOID4_7(s[426]);
initC_RESAVOID5_7(s[427]);
initC_RESAVOID6_7(s[428]);
initC_RESAVOID7_7(s[429]);
initC_RESAVOID8_7(s[430]);
initC_RESAVOID9_7(s[431]);
initC_RESAVOID96_7(s[432]);
initC_RESAVOID97_7(s[433]);
initC_RESAVOID1_8(s[434]);
initC_RESAVOID2_8(s[435]);
initC_RESAVOID3_8(s[436]);
initC_RESAVOID4_8(s[437]);
initC_RESAVOID5_8(s[438]);
initC_RESAVOID6_8(s[439]);
initC_RESAVOID7_8(s[440]);
initC_RESAVOID8_8(s[441]);
initC_RESAVOID9_8(s[442]);
initC_RESAVOID96_8(s[443]);
initC_RESAVOID97_8(s[444]);
initC_RESAVOID1_9(s[445]);
initC_RESAVOID2_9(s[446]);
initC_RESAVOID3_9(s[447]);
initC_RESAVOID4_9(s[448]);
initC_RESAVOID5_9(s[449]);
initC_RESAVOID6_9(s[450]);
initC_RESAVOID7_9(s[451]);
initC_RESAVOID8_9(s[452]);
initC_RESAVOID9_9(s[453]);
initC_RESAVOID96_9(s[454]);
initC_RESAVOID97_9(s[455]);
initC_RESAVOID1_10(s[456]);
initC_RESAVOID2_10(s[457]);
initC_RESAVOID3_10(s[458]);
initC_RESAVOID4_10(s[459]);
initC_RESAVOID5_10(s[460]);
initC_RESAVOID6_10(s[461]);
initC_RESAVOID7_10(s[462]);
initC_RESAVOID8_10(s[463]);
initC_RESAVOID9_10(s[464]);
initC_RESAVOID96_10(s[465]);
initC_RESAVOID97_10(s[466]);
initC_RESAVOID1_11(s[467]);
initC_RESAVOID2_11(s[468]);
initC_RESAVOID3_11(s[469]);
initC_RESAVOID4_11(s[470]);
initC_RESAVOID5_11(s[471]);
initC_RESAVOID6_11(s[472]);
initC_RESAVOID7_11(s[473]);
initC_RESAVOID8_11(s[474]);
initC_RESAVOID9_11(s[475]);
initC_RESAVOID96_11(s[476]);
initC_RESAVOID97_11(s[477]);
initC_RESAVOID1_12(s[478]);
initC_RESAVOID2_12(s[479]);
initC_RESAVOID3_12(s[480]);
initC_RESAVOID4_12(s[481]);
initC_RESAVOID5_12(s[482]);
initC_RESAVOID6_12(s[483]);
initC_RESAVOID7_12(s[484]);
initC_RESAVOID8_12(s[485]);
initC_RESAVOID9_12(s[486]);
initC_RESAVOID96_12(s[487]);
initC_RESAVOID97_12(s[488]);
initC_INSULTED1(s[489]);
initC_INSULTED2(s[490]);
initC_INSULTED3(s[491]);
initC_INSULTED4(s[492]);
initC_INSULTED5(s[493]);
initC_INSULTED6(s[494]);
initC_INSULTED7(s[495]);
initC_INSULTED8(s[496]);
initC_INSULTED9(s[497]);
initC_INSULTED10(s[498]);
initC_INSULTED11(s[499]);
initC_INSULTED96(s[500]);
initC_INSULTED97(s[501]);
initC_INSULTEDO_CODE(s[502]);
initC_RESINSULTED1_1(s[503]);
initC_RESINSULTED2_1(s[504]);
initC_RESINSULTED3_1(s[505]);
initC_RESINSULTED4_1(s[506]);
initC_RESINSULTED5_1(s[507]);
initC_RESINSULTED6_1(s[508]);
initC_RESINSULTED7_1(s[509]);
initC_RESINSULTED8_1(s[510]);
initC_RESINSULTED9_1(s[511]);
initC_RESINSULTED96_1(s[512]);
initC_RESINSULTED97_1(s[513]);
initC_RESINSULTED1_2(s[514]);
initC_RESINSULTED2_2(s[515]);
initC_RESINSULTED3_2(s[516]);
initC_RESINSULTED4_2(s[517]);
initC_RESINSULTED5_2(s[518]);
initC_RESINSULTED6_2(s[519]);
initC_RESINSULTED7_2(s[520]);
initC_RESINSULTED8_2(s[521]);
initC_RESINSULTED9_2(s[522]);
initC_RESINSULTED96_2(s[523]);
initC_RESINSULTED97_2(s[524]);
initC_RESINSULTED1_3(s[525]);
initC_RESINSULTED2_3(s[526]);
initC_RESINSULTED3_3(s[527]);
initC_RESINSULTED4_3(s[528]);
initC_RESINSULTED5_3(s[529]);
initC_RESINSULTED6_3(s[530]);
initC_RESINSULTED7_3(s[531]);
initC_RESINSULTED8_3(s[532]);
initC_RESINSULTED9_3(s[533]);
initC_RESINSULTED96_3(s[534]);
initC_RESINSULTED97_3(s[535]);
initC_RESINSULTED1_4(s[536]);
initC_RESINSULTED2_4(s[537]);
initC_RESINSULTED3_4(s[538]);
initC_RESINSULTED4_4(s[539]);
initC_RESINSULTED5_4(s[540]);
initC_RESINSULTED6_4(s[541]);
initC_RESINSULTED7_4(s[542]);
initC_RESINSULTED8_4(s[543]);
initC_RESINSULTED9_4(s[544]);
initC_RESINSULTED96_4(s[545]);
initC_RESINSULTED97_4(s[546]);
initC_RESINSULTED1_5(s[547]);
initC_RESINSULTED2_5(s[548]);
initC_RESINSULTED3_5(s[549]);
initC_RESINSULTED4_5(s[550]);
initC_RESINSULTED5_5(s[551]);
initC_RESINSULTED6_5(s[552]);
initC_RESINSULTED7_5(s[553]);
initC_RESINSULTED8_5(s[554]);
initC_RESINSULTED9_5(s[555]);
initC_RESINSULTED96_5(s[556]);
initC_RESINSULTED97_5(s[557]);
initC_RESINSULTED1_6(s[558]);
initC_RESINSULTED2_6(s[559]);
initC_RESINSULTED3_6(s[560]);
initC_RESINSULTED4_6(s[561]);
initC_RESINSULTED5_6(s[562]);
initC_RESINSULTED6_6(s[563]);
initC_RESINSULTED7_6(s[564]);
initC_RESINSULTED8_6(s[565]);
initC_RESINSULTED9_6(s[566]);
initC_RESINSULTED96_6(s[567]);
initC_RESINSULTED97_6(s[568]);
initC_RESINSULTED1_7(s[569]);
initC_RESINSULTED2_7(s[570]);
initC_RESINSULTED3_7(s[571]);
initC_RESINSULTED4_7(s[572]);
initC_RESINSULTED5_7(s[573]);
initC_RESINSULTED6_7(s[574]);
initC_RESINSULTED7_7(s[575]);
initC_RESINSULTED8_7(s[576]);
initC_RESINSULTED9_7(s[577]);
initC_RESINSULTED96_7(s[578]);
initC_RESINSULTED97_7(s[579]);
initC_RESINSULTED1_8(s[580]);
initC_RESINSULTED2_8(s[581]);
initC_RESINSULTED3_8(s[582]);
initC_RESINSULTED4_8(s[583]);
initC_RESINSULTED5_8(s[584]);
initC_RESINSULTED6_8(s[585]);
initC_RESINSULTED7_8(s[586]);
initC_RESINSULTED8_8(s[587]);
initC_RESINSULTED9_8(s[588]);
initC_RESINSULTED96_8(s[589]);
initC_RESINSULTED97_8(s[590]);
initC_RESINSULTED1_9(s[591]);
initC_RESINSULTED2_9(s[592]);
initC_RESINSULTED3_9(s[593]);
initC_RESINSULTED4_9(s[594]);
initC_RESINSULTED5_9(s[595]);
initC_RESINSULTED6_9(s[596]);
initC_RESINSULTED7_9(s[597]);
initC_RESINSULTED8_9(s[598]);
initC_RESINSULTED9_9(s[599]);
initC_RESINSULTED96_9(s[600]);
initC_RESINSULTED97_9(s[601]);
initC_RESINSULTED1_10(s[602]);
initC_RESINSULTED2_10(s[603]);
initC_RESINSULTED3_10(s[604]);
initC_RESINSULTED4_10(s[605]);
initC_RESINSULTED5_10(s[606]);
initC_RESINSULTED6_10(s[607]);
initC_RESINSULTED7_10(s[608]);
initC_RESINSULTED8_10(s[609]);
initC_RESINSULTED9_10(s[610]);
initC_RESINSULTED96_10(s[611]);
initC_RESINSULTED97_10(s[612]);
initC_RESINSULTED1_11(s[613]);
initC_RESINSULTED2_11(s[614]);
initC_RESINSULTED3_11(s[615]);
initC_RESINSULTED4_11(s[616]);
initC_RESINSULTED5_11(s[617]);
initC_RESINSULTED6_11(s[618]);
initC_RESINSULTED7_11(s[619]);
initC_RESINSULTED8_11(s[620]);
initC_RESINSULTED9_11(s[621]);
initC_RESINSULTED96_11(s[622]);
initC_RESINSULTED97_11(s[623]);
initC_RESINSULTED1_12(s[624]);
initC_RESINSULTED2_12(s[625]);
initC_RESINSULTED3_12(s[626]);
initC_RESINSULTED4_12(s[627]);
initC_RESINSULTED5_12(s[628]);
initC_RESINSULTED6_12(s[629]);
initC_RESINSULTED7_12(s[630]);
initC_RESINSULTED8_12(s[631]);
initC_RESINSULTED9_12(s[632]);
initC_RESINSULTED96_12(s[633]);
initC_RESINSULTED97_12(s[634]);
initC_ATTACKED1(s[635]);
initC_ATTACKED2(s[636]);
initC_ATTACKED3(s[637]);
initC_ATTACKED4(s[638]);
initC_ATTACKED5(s[639]);
initC_ATTACKED6(s[640]);
initC_ATTACKED7(s[641]);
initC_ATTACKED8(s[642]);
initC_ATTACKED9(s[643]);
initC_ATTACKED10(s[644]);
initC_ATTACKED11(s[645]);
initC_ATTACKED96(s[646]);
initC_ATTACKED97(s[647]);
initC_ATTACKEDO_CODE(s[648]);
initC_RESATTACKED1_1(s[649]);
initC_RESATTACKED2_1(s[650]);
initC_RESATTACKED3_1(s[651]);
initC_RESATTACKED4_1(s[652]);
initC_RESATTACKED5_1(s[653]);
initC_RESATTACKED6_1(s[654]);
initC_RESATTACKED7_1(s[655]);
initC_RESATTACKED8_1(s[656]);
initC_RESATTACKED9_1(s[657]);
initC_RESATTACKED96_1(s[658]);
initC_RESATTACKED97_1(s[659]);
initC_RESATTACKED1_2(s[660]);
initC_RESATTACKED2_2(s[661]);
initC_RESATTACKED3_2(s[662]);
initC_RESATTACKED4_2(s[663]);
initC_RESATTACKED5_2(s[664]);
initC_RESATTACKED6_2(s[665]);
initC_RESATTACKED7_2(s[666]);
initC_RESATTACKED8_2(s[667]);
initC_RESATTACKED9_2(s[668]);
initC_RESATTACKED96_2(s[669]);
initC_RESATTACKED97_2(s[670]);
initC_RESATTACKED1_3(s[671]);
initC_RESATTACKED2_3(s[672]);
initC_RESATTACKED3_3(s[673]);
initC_RESATTACKED4_3(s[674]);
initC_RESATTACKED5_3(s[675]);
initC_RESATTACKED6_3(s[676]);
initC_RESATTACKED7_3(s[677]);
initC_RESATTACKED8_3(s[678]);
initC_RESATTACKED9_3(s[679]);
initC_RESATTACKED96_3(s[680]);
initC_RESATTACKED97_3(s[681]);
initC_RESATTACKED1_4(s[682]);
initC_RESATTACKED2_4(s[683]);
initC_RESATTACKED3_4(s[684]);
initC_RESATTACKED4_4(s[685]);
initC_RESATTACKED5_4(s[686]);
initC_RESATTACKED6_4(s[687]);
initC_RESATTACKED7_4(s[688]);
initC_RESATTACKED8_4(s[689]);
initC_RESATTACKED9_4(s[690]);
initC_RESATTACKED96_4(s[691]);
initC_RESATTACKED97_4(s[692]);
initC_RESATTACKED1_5(s[693]);
initC_RESATTACKED2_5(s[694]);
initC_RESATTACKED3_5(s[695]);
initC_RESATTACKED4_5(s[696]);
initC_RESATTACKED5_5(s[697]);
initC_RESATTACKED6_5(s[698]);
initC_RESATTACKED7_5(s[699]);
initC_RESATTACKED8_5(s[700]);
initC_RESATTACKED9_5(s[701]);
initC_RESATTACKED96_5(s[702]);
initC_RESATTACKED97_5(s[703]);
initC_RESATTACKED1_6(s[704]);
initC_RESATTACKED2_6(s[705]);
initC_RESATTACKED3_6(s[706]);
initC_RESATTACKED4_6(s[707]);
initC_RESATTACKED5_6(s[708]);
initC_RESATTACKED6_6(s[709]);
initC_RESATTACKED7_6(s[710]);
initC_RESATTACKED8_6(s[711]);
initC_RESATTACKED9_6(s[712]);
initC_RESATTACKED96_6(s[713]);
initC_RESATTACKED97_6(s[714]);
initC_RESATTACKED1_7(s[715]);
initC_RESATTACKED2_7(s[716]);
initC_RESATTACKED3_7(s[717]);
initC_RESATTACKED4_7(s[718]);
initC_RESATTACKED5_7(s[719]);
initC_RESATTACKED6_7(s[720]);
initC_RESATTACKED7_7(s[721]);
initC_RESATTACKED8_7(s[722]);
initC_RESATTACKED9_7(s[723]);
initC_RESATTACKED96_7(s[724]);
initC_RESATTACKED97_7(s[725]);
initC_RESATTACKED1_8(s[726]);
initC_RESATTACKED2_8(s[727]);
initC_RESATTACKED3_8(s[728]);
initC_RESATTACKED4_8(s[729]);
initC_RESATTACKED5_8(s[730]);
initC_RESATTACKED6_8(s[731]);
initC_RESATTACKED7_8(s[732]);
initC_RESATTACKED8_8(s[733]);
initC_RESATTACKED9_8(s[734]);
initC_RESATTACKED96_8(s[735]);
initC_RESATTACKED97_8(s[736]);
initC_RESATTACKED1_9(s[737]);
initC_RESATTACKED2_9(s[738]);
initC_RESATTACKED3_9(s[739]);
initC_RESATTACKED4_9(s[740]);
initC_RESATTACKED5_9(s[741]);
initC_RESATTACKED6_9(s[742]);
initC_RESATTACKED7_9(s[743]);
initC_RESATTACKED8_9(s[744]);
initC_RESATTACKED9_9(s[745]);
initC_RESATTACKED96_9(s[746]);
initC_RESATTACKED97_9(s[747]);
initC_RESATTACKED1_10(s[748]);
initC_RESATTACKED2_10(s[749]);
initC_RESATTACKED3_10(s[750]);
initC_RESATTACKED4_10(s[751]);
initC_RESATTACKED5_10(s[752]);
initC_RESATTACKED6_10(s[753]);
initC_RESATTACKED7_10(s[754]);
initC_RESATTACKED8_10(s[755]);
initC_RESATTACKED9_10(s[756]);
initC_RESATTACKED96_10(s[757]);
initC_RESATTACKED97_10(s[758]);
initC_RESATTACKED1_11(s[759]);
initC_RESATTACKED2_11(s[760]);
initC_RESATTACKED3_11(s[761]);
initC_RESATTACKED4_11(s[762]);
initC_RESATTACKED5_11(s[763]);
initC_RESATTACKED6_11(s[764]);
initC_RESATTACKED7_11(s[765]);
initC_RESATTACKED8_11(s[766]);
initC_RESATTACKED9_11(s[767]);
initC_RESATTACKED96_11(s[768]);
initC_RESATTACKED97_11(s[769]);
initC_RESATTACKED1_12(s[770]);
initC_RESATTACKED2_12(s[771]);
initC_RESATTACKED3_12(s[772]);
initC_RESATTACKED4_12(s[773]);
initC_RESATTACKED5_12(s[774]);
initC_RESATTACKED6_12(s[775]);
initC_RESATTACKED7_12(s[776]);
initC_RESATTACKED8_12(s[777]);
initC_RESATTACKED9_12(s[778]);
initC_RESATTACKED96_12(s[779]);
initC_RESATTACKED97_12(s[780]);
initC_LLKNBRD(s[781]);
initC_LOCSERAP(s[782]);
initC_LOCSERAS(s[783]);
initC_LOCSERB(s[784]);
initC_LOCSERD(s[785]);
initC_LOCSERE(s[786]);
initC_SERVACC(s[787]);
initC_SERVACCY1(s[788]);
initC_SERVACCY2(s[789]);
initC_SERVACCY3(s[790]);
initC_SERVACCY4(s[791]);
initC_SERVACCY5(s[792]);
initC_SERVACCY6(s[793]);
initC_SERVACCY7(s[794]);
initC_SERVACCY8(s[795]);
initC_SERVACCY9(s[796]);
initC_SERVACCY10(s[797]);
initC_SERVACCY11(s[798]);
initC_SERVACCY12(s[799]);
initC_SERVACCY13(s[800]);
initC_SERVACCY14(s[801]);
initC_SERVACCY15(s[802]);
initC_SERVACCY97(s[803]);
initC_LOCSERC(s[804]);
initC_SATTRANSY1(s[805]);
initC_SATTRANSY2(s[806]);
initC_SATTRANSY3(s[807]);
initC_SATTRANSY4(s[808]);
initC_SATTRANSY5(s[809]);
initC_SATTRANSY6(s[810]);
initC_SATTRANSY7(s[811]);
initC_SATTRANSY8(s[812]);
initC_SATTRANSY9(s[813]);
initC_SATTRANSY10(s[814]);
initC_SATTRANSY97(s[815]);
initC_NBRCOH1(s[816]);
initC_NBRCOH2(s[817]);
initC_NBRCOH3(s[818]);
initC_NBRCOH4(s[819]);
initC_CRWORA(s[820]);
initC_CRWORB(s[821]);
initC_CRDARK(s[822]);
initC_HOOD15(s[823]);
initC_SIMAGE(s[824]);
initC_SIMRACE(s[825]);
initC_SIMEDUC(s[826]);
initC_SIMJOB(s[827]);
initC_SIMINC(s[828]);
initC_SIMAREA(s[829]);
initC_SIMFAM(s[830]);
initC_CLOSENUM(s[831]);
initC_SOCWEB(s[832]);
initC_NETCHT(s[833]);
initC_VISFRNDS(s[834]);
initC_VISFRNDSY1(s[835]);
initC_VISFRNDSY2(s[836]);
initC_VISFRNDSY3(s[837]);
initC_VISFRNDSY4(s[838]);
initC_VISFRNDSY5(s[839]);
initC_VISFRNDSY6(s[840]);
initC_VISFRNDSY7(s[841]);
initC_VISFRNDSY8(s[842]);
initC_VISFRNDSY9(s[843]);
initC_VISFRNDSY10(s[844]);
initC_VISFRNDSY11(s[845]);
initC_VISFRNDSY12(s[846]);
initC_VISFRNDSY13(s[847]);
initC_VISFRNDSY14(s[848]);
initC_VISFRNDSY97(s[849]);
initC_NETSX_1(s[850]);
initC_NETWR_1(s[851]);
initC_NETRL_1(s[852]);
initC_NETAG_1(s[853]);
initC_NETKN_1(s[854]);
initC_NETPH_1(s[855]);
initC_NETLV_1(s[856]);
initC_NETJB_1(s[857]);
initC_NETET_1(s[858]);
initC_NETMET_1(s[859]);
initC_NETWEB_1(s[860]);
initC_NETTALK1_1(s[861]);
initC_NETTALK2_1(s[862]);
initC_NETTALK3_1(s[863]);
initC_NETTALK4_1(s[864]);
initC_NETTALK5_1(s[865]);
initC_NETTALK6_1(s[866]);
initC_NETTALK7_1(s[867]);
initC_NETTALK8_1(s[868]);
initC_NETTALK9_1(s[869]);
initC_NETTALK10_1(s[870]);
initC_NETTALK11_1(s[871]);
initC_NETTALK12_1(s[872]);
initC_NETTALK13_1(s[873]);
initC_NETTALK97_1(s[874]);
initC_NETTALK96_1(s[875]);
initC_NETDO1_1(s[876]);
initC_NETDO2_1(s[877]);
initC_NETDO3_1(s[878]);
initC_NETDO4_1(s[879]);
initC_NETDO5_1(s[880]);
initC_NETDO6_1(s[881]);
initC_NETDO7_1(s[882]);
initC_NETDO8_1(s[883]);
initC_NETDO9_1(s[884]);
initC_NETDO10_1(s[885]);
initC_NETDO97_1(s[886]);
initC_NETDO96_1(s[887]);
initC_NETSX_2(s[888]);
initC_NETWR_2(s[889]);
initC_NETRL_2(s[890]);
initC_NETAG_2(s[891]);
initC_NETKN_2(s[892]);
initC_NETPH_2(s[893]);
initC_NETLV_2(s[894]);
initC_NETJB_2(s[895]);
initC_NETET_2(s[896]);
initC_NETMET_2(s[897]);
initC_NETWEB_2(s[898]);
initC_NETTALK1_2(s[899]);
initC_NETTALK2_2(s[900]);
initC_NETTALK3_2(s[901]);
initC_NETTALK4_2(s[902]);
initC_NETTALK5_2(s[903]);
initC_NETTALK6_2(s[904]);
initC_NETTALK7_2(s[905]);
initC_NETTALK8_2(s[906]);
initC_NETTALK9_2(s[907]);
initC_NETTALK10_2(s[908]);
initC_NETTALK11_2(s[909]);
initC_NETTALK12_2(s[910]);
initC_NETTALK13_2(s[911]);
initC_NETTALK97_2(s[912]);
initC_NETTALK96_2(s[913]);
initC_NETDO1_2(s[914]);
initC_NETDO2_2(s[915]);
initC_NETDO3_2(s[916]);
initC_NETDO4_2(s[917]);
initC_NETDO5_2(s[918]);
initC_NETDO6_2(s[919]);
initC_NETDO7_2(s[920]);
initC_NETDO8_2(s[921]);
initC_NETDO9_2(s[922]);
initC_NETDO10_2(s[923]);
initC_NETDO97_2(s[924]);
initC_NETDO96_2(s[925]);
initC_NETSX_3(s[926]);
initC_NETWR_3(s[927]);
initC_NETRL_3(s[928]);
initC_NETAG_3(s[929]);
initC_NETKN_3(s[930]);
initC_NETPH_3(s[931]);
initC_NETLV_3(s[932]);
initC_NETJB_3(s[933]);
initC_NETET_3(s[934]);
initC_NETMET_3(s[935]);
initC_NETWEB_3(s[936]);
initC_NETTALK1_3(s[937]);
initC_NETTALK2_3(s[938]);
initC_NETTALK3_3(s[939]);
initC_NETTALK4_3(s[940]);
initC_NETTALK5_3(s[941]);
initC_NETTALK6_3(s[942]);
initC_NETTALK7_3(s[943]);
initC_NETTALK8_3(s[944]);
initC_NETTALK9_3(s[945]);
initC_NETTALK10_3(s[946]);
initC_NETTALK11_3(s[947]);
initC_NETTALK12_3(s[948]);
initC_NETTALK13_3(s[949]);
initC_NETTALK97_3(s[950]);
initC_NETTALK96_3(s[951]);
initC_NETDO1_3(s[952]);
initC_NETDO2_3(s[953]);
initC_NETDO3_3(s[954]);
initC_NETDO4_3(s[955]);
initC_NETDO5_3(s[956]);
initC_NETDO6_3(s[957]);
initC_NETDO7_3(s[958]);
initC_NETDO8_3(s[959]);
initC_NETDO9_3(s[960]);
initC_NETDO10_3(s[961]);
initC_NETDO97_3(s[962]);
initC_NETDO96_3(s[963]);
initC_ORG(s[964]);
initC_ORGM1(s[965]);
initC_ORGM2(s[966]);
initC_ORGM3(s[967]);
initC_ORGM4(s[968]);
initC_ORGM5(s[969]);
initC_ORGM6(s[970]);
initC_ORGM7(s[971]);
initC_ORGM8(s[972]);
initC_ORGM9(s[973]);
initC_ORGM10(s[974]);
initC_ORGM11(s[975]);
initC_ORGM12(s[976]);
initC_ORGM13(s[977]);
initC_ORGM14(s[978]);
initC_ORGM15(s[979]);
initC_ORGM16(s[980]);
initC_ORGM96(s[981]);
initC_ORGA1(s[982]);
initC_ORGA2(s[983]);
initC_ORGA3(s[984]);
initC_ORGA4(s[985]);
initC_ORGA5(s[986]);
initC_ORGA6(s[987]);
initC_ORGA7(s[988]);
initC_ORGA8(s[989]);
initC_ORGA9(s[990]);
initC_ORGA10(s[991]);
initC_ORGA11(s[992]);
initC_ORGA12(s[993]);
initC_ORGA13(s[994]);
initC_ORGA14(s[995]);
initC_ORGA15(s[996]);
initC_ORGA16(s[997]);
initC_ORGA96(s[998]);
initC_ORGMT1(s[999]);
initC_ORGMT2(s[1000]);
initC_ORGMT3(s[1001]);
initC_ORGMT4(s[1002]);
initC_ORGMT5(s[1003]);
initC_ORGMT6(s[1004]);
initC_ORGMT7(s[1005]);
initC_ORGMT8(s[1006]);
initC_ORGMT9(s[1007]);
initC_ORGMT10(s[1008]);
initC_ORGMT11(s[1009]);
initC_ORGMT12(s[1010]);
initC_ORGMT13(s[1011]);
initC_ORGMT14(s[1012]);
initC_ORGMT15(s[1013]);
initC_ORGMT16(s[1014]);
initC_ORGMT96(s[1015]);
initC_ORGAT1(s[1016]);
initC_ORGAT2(s[1017]);
initC_ORGAT3(s[1018]);
initC_ORGAT4(s[1019]);
initC_ORGAT5(s[1020]);
initC_ORGAT6(s[1021]);
initC_ORGAT7(s[1022]);
initC_ORGAT8(s[1023]);
initC_ORGAT9(s[1024]);
initC_ORGAT10(s[1025]);
initC_ORGAT11(s[1026]);
initC_ORGAT12(s[1027]);
initC_ORGAT13(s[1028]);
initC_ORGAT14(s[1029]);
initC_ORGAT15(s[1030]);
initC_ORGAT16(s[1031]);
initC_ORGAT96(s[1032]);
initC_SF1(s[1033]);
initC_HEALTH(s[1034]);
initC_HOSPC1(s[1035]);
initC_HOSPDC1(s[1036]);
initC_HOSPC2(s[1037]);
initC_HOSPDC2(s[1038]);
initC_HOSPC3(s[1039]);
initC_HOSPDC3(s[1040]);
initC_HOSPC4(s[1041]);
initC_HOSPDC4(s[1042]);
initC_HOSPC5(s[1043]);
initC_HOSPDC5(s[1044]);
initC_HOSPC6(s[1045]);
initC_HOSPDC6(s[1046]);
initC_HOSPC7(s[1047]);
initC_HOSPDC7(s[1048]);
initC_HOSPC8(s[1049]);
initC_HOSPDC8(s[1050]);
initC_DISDIF1(s[1051]);
initC_DISDIF2(s[1052]);
initC_DISDIF3(s[1053]);
initC_DISDIF4(s[1054]);
initC_DISDIF5(s[1055]);
initC_DISDIF6(s[1056]);
initC_DISDIF7(s[1057]);
initC_DISDIF8(s[1058]);
initC_DISDIF9(s[1059]);
initC_DISDIF10(s[1060]);
initC_DISDIF11(s[1061]);
initC_DISDIF12(s[1062]);
initC_DISDIF96(s[1063]);
initC_HCOND1(s[1064]);
initC_HCOND2(s[1065]);
initC_HCOND3(s[1066]);
initC_HCOND4(s[1067]);
initC_HCOND5(s[1068]);
initC_HCOND6(s[1069]);
initC_HCOND7(s[1070]);
initC_HCOND8(s[1071]);
initC_HCOND9(s[1072]);
initC_HCOND10(s[1073]);
initC_HCOND11(s[1074]);
initC_HCOND12(s[1075]);
initC_HCOND13(s[1076]);
initC_HCOND14(s[1077]);
initC_HCOND15(s[1078]);
initC_HCOND16(s[1079]);
initC_HCOND17(s[1080]);
initC_HCOND96(s[1081]);
initC_HCONDS01(s[1082]);
initC_HCONDS02(s[1083]);
initC_HCONDS03(s[1084]);
initC_HCONDS04(s[1085]);
initC_HCONDS05(s[1086]);
initC_HCONDS08(s[1087]);
initC_HCONDS09(s[1088]);
initC_HCONDS10(s[1089]);
initC_HCONDS11(s[1090]);
initC_HCONDS12(s[1091]);
initC_HCONDS13(s[1092]);
initC_HCONDS14(s[1093]);
initC_HCONDS15(s[1094]);
initC_HCONDS16(s[1095]);
initC_HCONDS17(s[1096]);
initC_HCONDA01(s[1097]);
initC_HCONDA02(s[1098]);
initC_HCONDA03(s[1099]);
initC_HCONDA04(s[1100]);
initC_HCONDA05(s[1101]);
initC_HCONDA06(s[1102]);
initC_HCONDA07(s[1103]);
initC_HCONDA08(s[1104]);
initC_HCONDA09(s[1105]);
initC_HCONDA10(s[1106]);
initC_HCONDA11(s[1107]);
initC_HCONDA12(s[1108]);
initC_HCONDA13(s[1109]);
initC_HCONDA14(s[1110]);
initC_HCONDA15(s[1111]);
initC_HCONDA16(s[1112]);
initC_HCONDA17(s[1113]);
initC_AIDHH(s[1114]);
initC_AIDHUA1(s[1115]);
initC_AIDHUA2(s[1116]);
initC_AIDHUA3(s[1117]);
initC_AIDHUA4(s[1118]);
initC_AIDHUA5(s[1119]);
initC_AIDHUA6(s[1120]);
initC_AIDHUA7(s[1121]);
initC_AIDHUA8(s[1122]);
initC_AIDHUA9(s[1123]);
initC_AIDHUA10(s[1124]);
initC_AIDHUA11(s[1125]);
initC_AIDHUA12(s[1126]);
initC_AIDHUA13(s[1127]);
initC_AIDHUA14(s[1128]);
initC_AIDHUA15(s[1129]);
initC_AIDHUA16(s[1130]);
initC_AIDXHH(s[1131]);
initC_NAIDXHH(s[1132]);
initC_AIDHU1(s[1133]);
initC_AIDHU2(s[1134]);
initC_AIDHRS(s[1135]);
initC_AIDEFT(s[1136]);
initC_LCOHNPI(s[1137]);
initC_COH1BM(s[1138]);
initC_COH1BY(s[1139]);
initC_COH1MR(s[1140]);
initC_COH1EM(s[1141]);
initC_COH1EY(s[1142]);
initC_NMAR(s[1143]);
initC_LMAR1M(s[1144]);
initC_LMAR1Y(s[1145]);
initC_LADOPT(s[1146]);
initC_LNADOPT(s[1147]);
initC_LPRNT(s[1148]);
initC_LNPRNT(s[1149]);
initC_CH1BY4(s[1150]);
initC_ADCTS(s[1151]);
initC_MOVY11(s[1152]);
initC_MOVY12(s[1153]);
initC_MOVY13(s[1154]);
initC_MOVY14(s[1155]);
initC_MOVY15(s[1156]);
initC_MOVY16(s[1157]);
initC_FAMILY(s[1158]);
initC_EDUCATION(s[1159]);
initC_MEMPLOY(s[1160]);
initC_HOUSING(s[1161]);
initC_AREA(s[1162]);
initC_MOVEOTH_CODE(s[1163]);
initC_MOVDIR(s[1164]);
initC_PLNOWM(s[1165]);
initC_PLNOWY4(s[1166]);
initC_RELUP(s[1167]);
initC_MSTATSAM(s[1168]);
initC_LWWRONG(s[1169]);
initC_MSTATSAMN(s[1170]);
initC_MSTATCH1(s[1171]);
initC_STATCM1(s[1172]);
initC_STATCY41(s[1173]);
initC_DIVCHK1(s[1174]);
initC_DIVFIN1(s[1175]);
initC_DVM1(s[1176]);
initC_DVY41(s[1177]);
initC_CMLSTAT1(s[1178]);
initC_MSTATCH2(s[1179]);
initC_STATCM2(s[1180]);
initC_STATCY42(s[1181]);
initC_DIVCHK2(s[1182]);
initC_DIVFIN2(s[1183]);
initC_DVM2(s[1184]);
initC_DVY42(s[1185]);
initC_CMLSTAT2(s[1186]);
initC_COHAB(s[1187]);
initC_COHABN(s[1188]);
initC_LMCBM1(s[1189]);
initC_LMCBY41(s[1190]);
initC_CURRPART1(s[1191]);
initC_LMSPM1(s[1192]);
initC_LMSPY41(s[1193]);
initC_LMCBM2(s[1194]);
initC_LMCBY42(s[1195]);
initC_CURRPART2(s[1196]);
initC_LMSPM2(s[1197]);
initC_LMSPY42(s[1198]);
initC_LMCBM3(s[1199]);
initC_LMCBY43(s[1200]);
initC_CURRPART3(s[1201]);
initC_LMSPM3(s[1202]);
initC_LMSPY43(s[1203]);
initC_FATHER(s[1204]);
initC_NCHILD(s[1205]);
initC_PREG(s[1206]);
initC_PREGM1(s[1207]);
initC_PREGY41(s[1208]);
initC_PREGFERT1(s[1209]);
initC_INVITRO1(s[1210]);
initC_PREGOUT1(s[1211]);
initC_PREGEND1(s[1212]);
initC_ENDMNTH1(s[1213]);
initC_PREGSMOKE1(s[1214]);
initC_SMKMNTH11(s[1215]);
initC_SMKMNTH21(s[1216]);
initC_SMKMNTH31(s[1217]);
initC_PREGSMK11(s[1218]);
initC_PREGSMK21(s[1219]);
initC_PREGSMK31(s[1220]);
initC_AEDROF1(s[1221]);
initC_AEPUWK1(s[1222]);
initC_AEPUDA1(s[1223]);
initC_LCHMULTI1(s[1224]);
initC_PREGM2(s[1225]);
initC_PREGY42(s[1226]);
initC_PREGFERT2(s[1227]);
initC_INVITRO2(s[1228]);
initC_PREGOUT2(s[1229]);
initC_PREGEND2(s[1230]);
initC_ENDMNTH2(s[1231]);
initC_PREGSMOKE2(s[1232]);
initC_SMKMNTH12(s[1233]);
initC_SMKMNTH22(s[1234]);
initC_SMKMNTH32(s[1235]);
initC_PREGSMK12(s[1236]);
initC_PREGSMK22(s[1237]);
initC_PREGSMK32(s[1238]);
initC_AEDROF2(s[1239]);
initC_AEPUWK2(s[1240]);
initC_AEPUDA2(s[1241]);
initC_LCHMULTI2(s[1242]);
initC_PREGM3(s[1243]);
initC_PREGY43(s[1244]);
initC_PREGFERT3(s[1245]);
initC_INVITRO3(s[1246]);
initC_PREGOUT3(s[1247]);
initC_PREGEND3(s[1248]);
initC_ENDMNTH3(s[1249]);
initC_PREGSMOKE3(s[1250]);
initC_SMKMNTH13(s[1251]);
initC_SMKMNTH23(s[1252]);
initC_SMKMNTH33(s[1253]);
initC_PREGSMK13(s[1254]);
initC_PREGSMK23(s[1255]);
initC_PREGSMK33(s[1256]);
initC_AEDROF3(s[1257]);
initC_AEPUWK3(s[1258]);
initC_AEPUDA3(s[1259]);
initC_LCHMULTI3(s[1260]);
initC_NNEWBORN(s[1261]);
initC_HCONDNO1(s[1262]);
initC_HCONDNS1(s[1263]);
initC_HCONDNO2(s[1264]);
initC_HCONDNS2(s[1265]);
initC_HCONDNO3(s[1266]);
initC_HCONDNS3(s[1267]);
initC_HCONDNO4(s[1268]);
initC_HCONDNS4(s[1269]);
initC_HCONDNO5(s[1270]);
initC_HCONDNS5(s[1271]);
initC_HCONDNO6(s[1272]);
initC_HCONDNS6(s[1273]);
initC_HCONDNO7(s[1274]);
initC_HCONDNS7(s[1275]);
initC_HCONDNO8(s[1276]);
initC_HCONDNS8(s[1277]);
initC_HCONDN1(s[1278]);
initC_HCONDN2(s[1279]);
initC_HCONDN3(s[1280]);
initC_HCONDN4(s[1281]);
initC_HCONDN5(s[1282]);
initC_HCONDN6(s[1283]);
initC_HCONDN7(s[1284]);
initC_HCONDN8(s[1285]);
initC_HCONDN9(s[1286]);
initC_HCONDN10(s[1287]);
initC_HCONDN11(s[1288]);
initC_HCONDN12(s[1289]);
initC_HCONDN13(s[1290]);
initC_HCONDN14(s[1291]);
initC_HCONDN15(s[1292]);
initC_HCONDN16(s[1293]);
initC_HCONDN17(s[1294]);
initC_HCONDN96(s[1295]);
initC_HCONDE6(s[1296]);
initC_HCONDE7(s[1297]);
initC_HCONDE96(s[1298]);
initC_HCONDEA6(s[1299]);
initC_HCONDEA7(s[1300]);
initC_CONTFT(s[1301]);
initC_FTENDM(s[1302]);
initC_FTENDY4(s[1303]);
initC_FTEDANY(s[1304]);
initC_FTQUALS(s[1305]);
initC_FTEDSTARTM1(s[1306]);
initC_FTEDSTARTY41(s[1307]);
initC_FTEDEND1(s[1308]);
initC_FT2ENDM1(s[1309]);
initC_FT2ENDY41(s[1310]);
initC_FTEDMOR1(s[1311]);
initC_FTEDSTARTM2(s[1312]);
initC_FTEDSTARTY42(s[1313]);
initC_FTEDEND2(s[1314]);
initC_FT2ENDM2(s[1315]);
initC_FT2ENDY42(s[1316]);
initC_FTEDMOR2(s[1317]);
initC_FTEDSTARTM3(s[1318]);
initC_FTEDSTARTY43(s[1319]);
initC_FTEDEND3(s[1320]);
initC_FT2ENDM3(s[1321]);
initC_FT2ENDY43(s[1322]);
initC_FTEDMOR3(s[1323]);
initC_FTEDSTARTM4(s[1324]);
initC_FTEDSTARTY44(s[1325]);
initC_FTEDEND4(s[1326]);
initC_FT2ENDM4(s[1327]);
initC_FT2ENDY44(s[1328]);
initC_FTEDMOR4(s[1329]);
initC_QUALNEW1(s[1330]);
initC_QUALNEW2(s[1331]);
initC_QUALNE(s[1332]);
initC_QUALNEW4(s[1333]);
initC_QUALNEW5(s[1334]);
initC_QUALNEW6(s[1335]);
initC_QUALNEW7(s[1336]);
initC_QUALNEW8(s[1337]);
initC_QUALNEW9(s[1338]);
initC_QUALNEW10(s[1339]);
initC_QUALNEW11(s[1340]);
initC_QUALNEW13(s[1341]);
initC_QUALNEW15(s[1342]);
initC_QUALNEW16(s[1343]);
initC_QUALNEW17(s[1344]);
initC_QUALNEW18(s[1345]);
initC_QUALNEW19(s[1346]);
initC_QUALNEW20(s[1347]);
initC_QUALNEW21(s[1348]);
initC_QUALNEW22(s[1349]);
initC_QUALNEW23(s[1350]);
initC_QUALNEW24(s[1351]);
initC_QUALNEW25(s[1352]);
initC_QUALNEW26(s[1353]);
initC_QUALNEW27(s[1354]);
initC_QUALNEW28(s[1355]);
initC_QUALNEW29(s[1356]);
initC_QUALNEW30(s[1357]);
initC_QUALNEW31(s[1358]);
initC_TRAINANY(s[1359]);
initC_TRWHO1(s[1360]);
initC_TRAINDAYS1(s[1361]);
initC_TRAINHRS1(s[1362]);
initC_TRAINEND1(s[1363]);
initC_TRAINPURP11(s[1364]);
initC_TRAINPURP21(s[1365]);
initC_TRAINPURP31(s[1366]);
initC_TRAINPURP41(s[1367]);
initC_TRAINPURP51(s[1368]);
initC_TRAINPURP61(s[1369]);
initC_TRAINPURP71(s[1370]);
initC_TRAINQUAL1(s[1371]);
initC_TRWHO2(s[1372]);
initC_TRAINDAYS2(s[1373]);
initC_TRAINHRS2(s[1374]);
initC_TRAINEND2(s[1375]);
initC_TRAINPURP12(s[1376]);
initC_TRAINPURP22(s[1377]);
initC_TRAINPURP32(s[1378]);
initC_TRAINPURP42(s[1379]);
initC_TRAINPURP52(s[1380]);
initC_TRAINPURP62(s[1381]);
initC_TRAINPURP72(s[1382]);
initC_TRAINQUAL2(s[1383]);
initC_TRWHO3(s[1384]);
initC_TRAINDAYS3(s[1385]);
initC_TRAINHRS3(s[1386]);
initC_TRAINEND3(s[1387]);
initC_TRAINPURP13(s[1388]);
initC_TRAINPURP23(s[1389]);
initC_TRAINPURP33(s[1390]);
initC_TRAINPURP43(s[1391]);
initC_TRAINPURP53(s[1392]);
initC_TRAINPURP63(s[1393]);
initC_TRAINPURP73(s[1394]);
initC_TRAINQUAL3(s[1395]);
initC_TRAINN(s[1396]);
initC_TRQUAL1(s[1397]);
initC_TRQUAL2(s[1398]);
initC_TRQUAL3(s[1399]);
initC_TRQUAL4(s[1400]);
initC_TRQUAL5(s[1401]);
initC_TRQUAL6(s[1402]);
initC_TRQUAL7(s[1403]);
initC_TRQUAL8(s[1404]);
initC_TRQUAL9(s[1405]);
initC_TRQUAL10(s[1406]);
initC_TRQUAL11(s[1407]);
initC_TRQUAL13(s[1408]);
initC_TRQUAL15(s[1409]);
initC_TRQUAL16(s[1410]);
initC_TRQUAL17(s[1411]);
initC_TRQUAL18(s[1412]);
initC_TRQUAL19(s[1413]);
initC_TRQUAL20(s[1414]);
initC_TRQUAL21(s[1415]);
initC_TRQUAL22(s[1416]);
initC_TRQUAL23(s[1417]);
initC_TRQUAL24(s[1418]);
initC_TRQUAL25(s[1419]);
initC_TRQUAL26(s[1420]);
initC_TRQUAL27(s[1421]);
initC_TRQUAL28(s[1422]);
initC_TRQUAL29(s[1423]);
initC_TRQUAL30(s[1424]);
initC_TRQUAL31(s[1425]);
initC_NOTEMPCHK(s[1426]);
initC_EMPCHK(s[1427]);
initC_EMPSTENDD(s[1428]);
initC_EMPSTENDM(s[1429]);
initC_EMPSTENDY4(s[1430]);
initC_STENDREAS(s[1431]);
initC_NXTST(s[1432]);
initC_NEXT1(s[1433]);
initC_NEXTSTAT1(s[1434]);
initC_NEXTELSE1(s[1435]);
initC_CURRSTAT1(s[1436]);
initC_NEXTJOB1(s[1437]);
initC_CURRJOB1(s[1438]);
initC_JOBHOURS1(s[1439]);
initC_REASEND1(s[1440]);
initC_JBATT1(s[1441]);
initC_STATENDD1(s[1442]);
initC_STATENDM1(s[1443]);
initC_STATENDY41(s[1444]);
initC_NEXT2(s[1445]);
initC_NEXTSTAT2(s[1446]);
initC_NEXTELSE2(s[1447]);
initC_CURRSTAT2(s[1448]);
initC_NEXTJOB2(s[1449]);
initC_CURRJOB2(s[1450]);
initC_JOBHOURS2(s[1451]);
initC_REASEND2(s[1452]);
initC_JBATT2(s[1453]);
initC_STATENDD2(s[1454]);
initC_STATENDM2(s[1455]);
initC_STATENDY42(s[1456]);
initC_NEXT3(s[1457]);
initC_NEXTSTAT3(s[1458]);
initC_NEXTELSE3(s[1459]);
initC_CURRSTAT3(s[1460]);
initC_NEXTJOB3(s[1461]);
initC_CURRJOB3(s[1462]);
initC_JOBHOURS3(s[1463]);
initC_REASEND3(s[1464]);
initC_JBATT3(s[1465]);
initC_STATENDD3(s[1466]);
initC_STATENDM3(s[1467]);
initC_STATENDY43(s[1468]);
initC_NEXT4(s[1469]);
initC_NEXTSTAT4(s[1470]);
initC_NEXTELSE4(s[1471]);
initC_CURRSTAT4(s[1472]);
initC_NEXTJOB4(s[1473]);
initC_CURRJOB4(s[1474]);
initC_JOBHOURS4(s[1475]);
initC_REASEND4(s[1476]);
initC_JBATT4(s[1477]);
initC_STATENDD4(s[1478]);
initC_STATENDM4(s[1479]);
initC_STATENDY44(s[1480]);
initC_NEXT5(s[1481]);
initC_NEXTSTAT5(s[1482]);
initC_NEXTELSE5(s[1483]);
initC_CURRSTAT5(s[1484]);
initC_NEXTJOB5(s[1485]);
initC_CURRJOB5(s[1486]);
initC_JOBHOURS5(s[1487]);
initC_REASEND5(s[1488]);
initC_JBATT5(s[1489]);
initC_STATENDD5(s[1490]);
initC_STATENDM5(s[1491]);
initC_STATENDY45(s[1492]);
initC_NEXT6(s[1493]);
initC_NEXTSTAT6(s[1494]);
initC_NEXTELSE6(s[1495]);
initC_CURRSTAT6(s[1496]);
initC_NEXTJOB6(s[1497]);
initC_CURRJOB6(s[1498]);
initC_JOBHOURS6(s[1499]);
initC_REASEND6(s[1500]);
initC_JBATT6(s[1501]);
initC_STATENDD6(s[1502]);
initC_STATENDM6(s[1503]);
initC_STATENDY46(s[1504]);
initC_NEXT7(s[1505]);
initC_NEXTSTAT7(s[1506]);
initC_NEXTELSE7(s[1507]);
initC_CURRSTAT7(s[1508]);
initC_NEXTJOB7(s[1509]);
initC_CURRJOB7(s[1510]);
initC_JOBHOURS7(s[1511]);
initC_REASEND7(s[1512]);
initC_JBATT7(s[1513]);
initC_STATENDD7(s[1514]);
initC_STATENDM7(s[1515]);
initC_STATENDY47(s[1516]);
initC_NEXT8(s[1517]);
initC_NEXTSTAT8(s[1518]);
initC_NEXTELSE8(s[1519]);
initC_CURRSTAT8(s[1520]);
initC_NEXTJOB8(s[1521]);
initC_CURRJOB8(s[1522]);
initC_JOBHOURS8(s[1523]);
initC_REASEND8(s[1524]);
initC_JBATT8(s[1525]);
initC_STATENDD8(s[1526]);
initC_STATENDM8(s[1527]);
initC_STATENDY48(s[1528]);
initC_NEXT9(s[1529]);
initC_NEXTSTAT9(s[1530]);
initC_NEXTELSE9(s[1531]);
initC_CURRSTAT9(s[1532]);
initC_NEXTJOB9(s[1533]);
initC_CURRJOB9(s[1534]);
initC_JOBHOURS9(s[1535]);
initC_REASEND9(s[1536]);
initC_JBATT9(s[1537]);
initC_STATENDD9(s[1538]);
initC_STATENDM9(s[1539]);
initC_STATENDY49(s[1540]);
initC_NXTSTELSE(s[1541]);
initC_CSTAT(s[1542]);
initC_NXTSTENDD(s[1543]);
initC_NXTSTENDM(s[1544]);
initC_NXTSTENDY4(s[1545]);
initC_JBSAMR(s[1546]);
initC_WKPLSAM(s[1547]);
initC_SAMEJOB(s[1548]);
initC_MATLV(s[1549]);
initC_MATLVSTD(s[1550]);
initC_MATLVSTM(s[1551]);
initC_MATLVSTY4(s[1552]);
initC_MATLVENDD(s[1553]);
initC_MATLVENDM(s[1554]);
initC_MATLVENDY4(s[1555]);
initC_JBENDD(s[1556]);
initC_JBENDM(s[1557]);
initC_JBENDY4(s[1558]);
initC_JBENDREAS(s[1559]);
initC_CJOB(s[1560]);
initC_NXTJBHRS(s[1561]);
initC_NXTJBES(s[1562]);
initC_NXTJBENDD(s[1563]);
initC_NXTJBENDM(s[1564]);
initC_NXTJBENDY4(s[1565]);
initC_CJBATT(s[1566]);
initC_JBHAS(s[1567]);
initC_JBOFF(s[1568]);
initC_JBOFFY(s[1569]);
initC_JBTERM1(s[1570]);
initC_JBTERM2(s[1571]);
initC_JBSIC07CHK(s[1572]);
initC_JBSOC00CHK(s[1573]);
initC_JBSEMPCHK(s[1574]);
initC_JBSEMP(s[1575]);
initC_JBBGDATY(s[1576]);
initC_JBBGDATM(s[1577]);
initC_JBBGDATD(s[1578]);
initC_JBBGD(s[1579]);
initC_JBBGM(s[1580]);
initC_JBBGY(s[1581]);
initC_JBMNGRCHK(s[1582]);
initC_JBMNGR(s[1583]);
initC_JBSIZECHK(s[1584]);
initC_JBSIZE(s[1585]);
initC_JBSECT(s[1586]);
initC_JBSECTPUB(s[1587]);
initC_JBHRS(s[1588]);
initC_JBOT(s[1589]);
initC_JBOTPD(s[1590]);
initC_PAYGWC(s[1591]);
initC_PAYNWC(s[1592]);
initC_PAYUSL(s[1593]);
initC_PAYU(s[1594]);
initC_PAYUWC(s[1595]);
initC_PAYUG(s[1596]);
initC_PAYTYP(s[1597]);
initC_OVTPAY(s[1598]);
initC_EXTNSA(s[1599]);
initC_EXTRATE(s[1600]);
initC_EXTREST(s[1601]);
initC_BASNSA(s[1602]);
initC_BASRATE(s[1603]);
initC_BASREST(s[1604]);
initC_OVTNSA(s[1605]);
initC_OVTRATE(s[1606]);
initC_OVTREST(s[1607]);
initC_JBPL(s[1608]);
initC_JBTTWT(s[1609]);
initC_WORKTRAV(s[1610]);
initC_JSBOSS(s[1611]);
initC_JSSIZE(s[1612]);
initC_JSHRS(s[1613]);
initC_JSTYPEB(s[1614]);
initC_JSACCS(s[1615]);
initC_JSPART(s[1616]);
initC_JSPRBM(s[1617]);
initC_JSPRBY4(s[1618]);
initC_JSPREM(s[1619]);
initC_JSPREY4(s[1620]);
initC_JSPRLS(s[1621]);
initC_JSPRTX(s[1622]);
initC_JSPRNI(s[1623]);
initC_JSPAYU(s[1624]);
initC_JSPAYW(s[1625]);
initC_JSPYTX(s[1626]);
initC_JSPYNI(s[1627]);
initC_JSPL(s[1628]);
initC_JSTTWT(s[1629]);
initC_JSTTWTB(s[1630]);
initC_JSWORKTRAV(s[1631]);
initC_JBSAT(s[1632]);
initC_JULK4WK(s[1633]);
initC_JULKJB(s[1634]);
initC_JUBGN(s[1635]);
initC_JULK4X1(s[1636]);
initC_JULK4X2(s[1637]);
initC_JULK4X3(s[1638]);
initC_JULK4X4(s[1639]);
initC_JULK4X5(s[1640]);
initC_JULK4X6(s[1641]);
initC_JULK4X96(s[1642]);
initC_JBHAD(s[1643]);
initC_JLENDM(s[1644]);
initC_JLENDY(s[1645]);
initC_JLSEMP(s[1646]);
initC_JLBOSS(s[1647]);
initC_JLMNGR(s[1648]);
initC_JLSIZE(s[1649]);
initC_EPROSH(s[1650]);
initC_MLFUTR(s[1651]);
initC_MLRNOT1(s[1652]);
initC_MLRNOT2(s[1653]);
initC_MLRNOT3(s[1654]);
initC_MLRNOT4(s[1655]);
initC_MLRNOT5(s[1656]);
initC_MLRNOT6(s[1657]);
initC_MLRNOT7(s[1658]);
initC_MLRNOT8(s[1659]);
initC_MLRNOT9(s[1660]);
initC_MLRNOT10(s[1661]);
initC_MLRNOT11(s[1662]);
initC_MLRNOT12(s[1663]);
initC_MLRNOT13(s[1664]);
initC_MLRNOT97(s[1665]);
initC_MLAGST(s[1666]);
initC_MLAGSTU(s[1667]);
initC_MLWKFPT(s[1668]);
initC_MATLEAVE(s[1669]);
initC_J2HAS(s[1670]);
initC_J2SEMP(s[1671]);
initC_J2HRS(s[1672]);
initC_J2PAY(s[1673]);
initC_JOBLOOK(s[1674]);
initC_JOBDENY(s[1675]);
initC_RESJOBDENY1(s[1676]);
initC_RESJOBDENY2(s[1677]);
initC_RESJOBDENY3(s[1678]);
initC_RESJOBDENY4(s[1679]);
initC_RESJOBDENY5(s[1680]);
initC_RESJOBDENY6(s[1681]);
initC_RESJOBDENY7(s[1682]);
initC_RESJOBDENY8(s[1683]);
initC_RESJOBDENY9(s[1684]);
initC_RESJOBDENY96(s[1685]);
initC_RESJOBDENY97(s[1686]);
initC_EED12(s[1687]);
initC_PROMODENY(s[1688]);
initC_RESPROMDENY1(s[1689]);
initC_RESPROMDENY2(s[1690]);
initC_RESPROMDENY3(s[1691]);
initC_RESPROMDENY4(s[1692]);
initC_RESPROMDENY5(s[1693]);
initC_RESPROMDENY6(s[1694]);
initC_RESPROMDENY7(s[1695]);
initC_RESPROMDENY8(s[1696]);
initC_RESPROMDENY9(s[1697]);
initC_RESPROMDENY96(s[1698]);
initC_RESPROMDENY97(s[1699]);
initC_TRAINDENY(s[1700]);
initC_RESTRAINDENY1(s[1701]);
initC_RESTRAINDENY2(s[1702]);
initC_RESTRAINDENY3(s[1703]);
initC_RESTRAINDENY4(s[1704]);
initC_RESTRAINDENY5(s[1705]);
initC_RESTRAINDENY6(s[1706]);
initC_RESTRAINDENY7(s[1707]);
initC_RESTRAINDENY8(s[1708]);
initC_RESTRAINDENY9(s[1709]);
initC_RESTRAINDENY96(s[1710]);
initC_RESTRAINDENY97(s[1711]);
initC_DISEFFECTS1(s[1712]);
initC_DISEFFECTS2(s[1713]);
initC_DISEFFECTS3(s[1714]);
initC_DISEFFECTS4(s[1715]);
initC_DISEFFECTS5(s[1716]);
initC_CCARE(s[1717]);
initC_CCWORK(s[1718]);
initC_LVREL1(s[1719]);
initC_LVREL9(s[1720]);
initC_LVREL2(s[1721]);
initC_LVREL10(s[1722]);
initC_LVREL3(s[1723]);
initC_LVREL4(s[1724]);
initC_LVREL5(s[1725]);
initC_LVREL6(s[1726]);
initC_LVREL7(s[1727]);
initC_LVREL8(s[1728]);
initC_LVREL96(s[1729]);
initC_MAMOSTCON(s[1730]);
initC_PAMOSTCON(s[1731]);
initC_MAAGE(s[1732]);
initC_PAAGE(s[1733]);
initC_NRELS1(s[1734]);
initC_NRELS2(s[1735]);
initC_NRELS3(s[1736]);
initC_NRELS4(s[1737]);
initC_NRELS5(s[1738]);
initC_NRELS6(s[1739]);
initC_PARMAR(s[1740]);
initC_MALONE(s[1741]);
initC_PALONE(s[1742]);
initC_OHCH16(s[1743]);
initC_SEEKID(s[1744]);
initC_WEKID(s[1745]);
initC_FARKID(s[1746]);
initC_RELKID(s[1747]);
initC_MASEE(s[1748]);
initC_MACON(s[1749]);
initC_MAFAR(s[1750]);
initC_PASEE(s[1751]);
initC_PACON(s[1752]);
initC_PAFAR(s[1753]);
initC_PAAID1(s[1754]);
initC_PAAID2(s[1755]);
initC_PAAID3(s[1756]);
initC_PAAID4(s[1757]);
initC_PAAID5(s[1758]);
initC_PAAID6(s[1759]);
initC_PAAID7(s[1760]);
initC_PAAID8(s[1761]);
initC_PAAID96(s[1762]);
initC_PAAID97(s[1763]);
initC_PAIDU1(s[1764]);
initC_PAIDU2(s[1765]);
initC_PAIDU3(s[1766]);
initC_PAIDU4(s[1767]);
initC_PAIDU5(s[1768]);
initC_PAIDU6(s[1769]);
initC_PAIDU7(s[1770]);
initC_PAIDU8(s[1771]);
initC_PAIDU96(s[1772]);
initC_PAIDU97(s[1773]);
initC_CHSEE(s[1774]);
initC_CHCON(s[1775]);
initC_CHFAR(s[1776]);
initC_CHAID1(s[1777]);
initC_CHAID2(s[1778]);
initC_CHAID3(s[1779]);
initC_CHAID4(s[1780]);
initC_CHAID5(s[1781]);
initC_CHAID6(s[1782]);
initC_CHAID7(s[1783]);
initC_CHAID8(s[1784]);
initC_CHAID96(s[1785]);
initC_CHAID97(s[1786]);
initC_CAIDU1(s[1787]);
initC_CAIDU2(s[1788]);
initC_CAIDU3(s[1789]);
initC_CAIDU4(s[1790]);
initC_CAIDU5(s[1791]);
initC_CAIDU6(s[1792]);
initC_CAIDU7(s[1793]);
initC_CAIDU8(s[1794]);
initC_CAIDU96(s[1795]);
initC_CAIDU97(s[1796]);
initC_KIDSPT(s[1797]);
initC_FTEXV(s[1798]);
initC_FTEXW(s[1799]);
initC_VISFAM(s[1800]);
initC_VISFAMY1(s[1801]);
initC_VISFAMY2(s[1802]);
initC_VISFAMY3(s[1803]);
initC_VISFAMY4(s[1804]);
initC_VISFAMY5(s[1805]);
initC_VISFAMY6(s[1806]);
initC_VISFAMY7(s[1807]);
initC_VISFAMY8(s[1808]);
initC_VISFAMY9(s[1809]);
initC_VISFAMY10(s[1810]);
initC_VISFAMY11(s[1811]);
initC_VISFAMY12(s[1812]);
initC_VISFAMY13(s[1813]);
initC_VISFAMY14(s[1814]);
initC_VISFAMY15(s[1815]);
initC_VISFAMY97(s[1816]);
initC_PARCHILD(s[1817]);
initC_HLPHMWK(s[1818]);
initC_LEVELIMP(s[1819]);
initC_APVOCIMP(s[1820]);
initC_KID2UNI01(s[1821]);
initC_KID2UNI02(s[1822]);
initC_KID2UNI03(s[1823]);
initC_KID2UNI04(s[1824]);
initC_KID2UNI05(s[1825]);
initC_KID2UNI06(s[1826]);
initC_KID2UNI07(s[1827]);
initC_KID2UNI08(s[1828]);
initC_KID2UNI09(s[1829]);
initC_KID2UNI10(s[1830]);
initC_KID2UNI11(s[1831]);
initC_KID2UNI12(s[1832]);
initC_KID2UNI13(s[1833]);
initC_KID2UNI14(s[1834]);
initC_KID2UNI15(s[1835]);
initC_KID2UNI16(s[1836]);
initC_SOCIALKID(s[1837]);
initC_DINNER(s[1838]);
initC_QUARREL(s[1839]);
initC_TALKMATTER(s[1840]);
initC_RULESKID(s[1841]);
initC_PYENRL(s[1842]);
initC_PRAISEKID(s[1843]);
initC_SLAPKID(s[1844]);
initC_CUDDLEKID(s[1845]);
initC_YELLKID(s[1846]);
initC_BTYPE1(s[1847]);
initC_BTYPE2(s[1848]);
initC_BTYPE3(s[1849]);
initC_BTYPE4(s[1850]);
initC_BTYPE5(s[1851]);
initC_BTYPE6(s[1852]);
initC_BTYPE7(s[1853]);
initC_BTYPE8(s[1854]);
initC_BTYPE9(s[1855]);
initC_BTYPE10(s[1856]);
initC_BTYPE11(s[1857]);
initC_BTYPE12(s[1858]);
initC_BTYPE13(s[1859]);
initC_BTYPE14(s[1860]);
initC_BTYPE96(s[1861]);
initC_BENUNEMP1(s[1862]);
initC_BENUNEMP2(s[1863]);
initC_BENUNEMP3(s[1864]);
initC_BENUNEMP4(s[1865]);
initC_BENUNEMP5(s[1866]);
initC_BENUNEMP6(s[1867]);
initC_BENUNEMP7(s[1868]);
initC_BENUNEMP96(s[1869]);
initC_BENDIS1(s[1870]);
initC_BENDIS2(s[1871]);
initC_BENDIS3(s[1872]);
initC_BENDIS4(s[1873]);
initC_BENDIS5(s[1874]);
initC_BENDIS6(s[1875]);
initC_BENDIS7(s[1876]);
initC_BENDIS8(s[1877]);
initC_BENDIS9(s[1878]);
initC_BENDIS10(s[1879]);
initC_BENDIS12(s[1880]);
initC_BENDIS13(s[1881]);
initC_BENDIS14(s[1882]);
initC_BENDIS15(s[1883]);
initC_BENDIS16(s[1884]);
initC_BENDIS96(s[1885]);
initC_BENDIS97(s[1886]);
initC_BENPEN1(s[1887]);
initC_BENPEN2(s[1888]);
initC_BENPEN3(s[1889]);
initC_BENPEN4(s[1890]);
initC_BENPEN5(s[1891]);
initC_BENPEN6(s[1892]);
initC_BENPEN7(s[1893]);
initC_BENPEN8(s[1894]);
initC_BENPEN9(s[1895]);
initC_BENPEN10(s[1896]);
initC_BENPEN11(s[1897]);
initC_BENPEN12(s[1898]);
initC_BENPEN13(s[1899]);
initC_BENPEN96(s[1900]);
initC_NISERPS(s[1901]);
initC_BENCB(s[1902]);
initC_BENCTC(s[1903]);
initC_BENFAM1(s[1904]);
initC_BENFAM2(s[1905]);
initC_BENFAM3(s[1906]);
initC_BENFAM4(s[1907]);
initC_BENFAM5(s[1908]);
initC_BENFAM6(s[1909]);
initC_BENFAM7(s[1910]);
initC_BENFAM8(s[1911]);
initC_BENFAM9(s[1912]);
initC_BENFAM10(s[1913]);
initC_BENFAM96(s[1914]);
initC_BENTAX1(s[1915]);
initC_BENTAX2(s[1916]);
initC_BENTAX3(s[1917]);
initC_BENTAX4(s[1918]);
initC_BENTAX5(s[1919]);
initC_BENTAX6(s[1920]);
initC_BENTAX7(s[1921]);
initC_BENTAX8(s[1922]);
initC_BENTAX9(s[1923]);
initC_BENTAX10(s[1924]);
initC_BENTAX96(s[1925]);
initC_BENHOU1(s[1926]);
initC_BENHOU2(s[1927]);
initC_BENHOU3(s[1928]);
initC_BENHOU4(s[1929]);
initC_BENHOU5(s[1930]);
initC_BENHOU6(s[1931]);
initC_BENHOU7(s[1932]);
initC_BENHOU8(s[1933]);
initC_BENHOU9(s[1934]);
initC_BENHOU96(s[1935]);
initC_BENSTA1(s[1936]);
initC_BENSTA2(s[1937]);
initC_BENSTA3(s[1938]);
initC_BENSTA4(s[1939]);
initC_BENSTA5(s[1940]);
initC_BENSTA6(s[1941]);
initC_BENSTA7(s[1942]);
initC_BENSTA9(s[1943]);
initC_BENSTA10(s[1944]);
initC_BENSTA11(s[1945]);
initC_BENSTA12(s[1946]);
initC_BENSTA13(s[1947]);
initC_BENSTA96(s[1948]);
initC_BENSTA97(s[1949]);
initC_NFH01(s[1950]);
initC_NFH02(s[1951]);
initC_NFH03(s[1952]);
initC_NFH04(s[1953]);
initC_NFH05(s[1954]);
initC_NFH06(s[1955]);
initC_NFH07(s[1956]);
initC_NFH08(s[1957]);
initC_NFH09(s[1958]);
initC_NFH10(s[1959]);
initC_NFH11(s[1960]);
initC_NFH12(s[1961]);
initC_NFH13(s[1962]);
initC_NFH14(s[1963]);
initC_NFH15(s[1964]);
initC_NFH16(s[1965]);
initC_NFH17(s[1966]);
initC_NFH18(s[1967]);
initC_NFH19(s[1968]);
initC_NFH20(s[1969]);
initC_NFH21(s[1970]);
initC_NFH22(s[1971]);
initC_NFH23(s[1972]);
initC_NFH24(s[1973]);
initC_NFH25(s[1974]);
initC_NFH26(s[1975]);
initC_NFH27(s[1976]);
initC_NFH28(s[1977]);
initC_NFH29(s[1978]);
initC_NFH30(s[1979]);
initC_NFH31(s[1980]);
initC_NFH32(s[1981]);
initC_NFH33(s[1982]);
initC_NFH34(s[1983]);
initC_NFH35(s[1984]);
initC_NFH36(s[1985]);
initC_NFH37(s[1986]);
initC_NFH38(s[1987]);
initC_NFH39(s[1988]);
initC_FIYRDIA(s[1989]);
initC_FIYRDB1(s[1990]);
initC_FIYRDB2(s[1991]);
initC_FIYRDB3(s[1992]);
initC_FIYRDB4(s[1993]);
initC_FIYRDB5(s[1994]);
initC_FIYRDB6(s[1995]);
initC_FINNOW(s[1996]);
initC_FINFUT(s[1997]);
initC_CMROUTE(s[1998]);
initC_CSACALC(s[1999]);
initC_CSAPAYTO(s[2000]);
initC_CSACALCAM(s[2001]);
initC_CMCSAPER(s[2002]);
initC_CMCSAALL(s[2003]);
initC_CMCSAACT(s[2004]);
initC_CMCSAAM(s[2005]);
initC_CMCSAPR(s[2006]);
initC_CSARECPER(s[2007]);
initC_DCSATM(s[2008]);
initC_CMCSANIL1(s[2009]);
initC_CMCSANIL2(s[2010]);
initC_CMCSANIL3(s[2011]);
initC_CMCSANIL4(s[2012]);
initC_CMCSANIL5(s[2013]);
initC_CMCSANIL97(s[2014]);
initC_CMCORD(s[2015]);
initC_CMSAMEA(s[2016]);
initC_CMCORDAM(s[2017]);
initC_CMCORDPER(s[2018]);
initC_CMCORDALL(s[2019]);
initC_CMCORDREC(s[2020]);
initC_CMCORDRCAM(s[2021]);
initC_CMCORDRCPR(s[2022]);
initC_CORDRECPER(s[2023]);
initC_CMCORDTM(s[2024]);
initC_CMVOL(s[2025]);
initC_CMSAMEB(s[2026]);
initC_CMSAMEC(s[2027]);
initC_CMVOLAM(s[2028]);
initC_CMVOLPER(s[2029]);
initC_CMVOLALL(s[2030]);
initC_CMVOLREC(s[2031]);
initC_CMVOLRCAM(s[2032]);
initC_CMVOLRCPR(s[2033]);
initC_VOLRECPER(s[2034]);
initC_CMVOLTM(s[2035]);
initC_CMNIL1(s[2036]);
initC_CMNIL2(s[2037]);
initC_CMNIL3(s[2038]);
initC_CMNIL4(s[2039]);
initC_CMNIL5(s[2040]);
initC_CMNIL6(s[2041]);
initC_CMNIL7(s[2042]);
initC_CMNIL8(s[2043]);
initC_CMNIL9(s[2044]);
initC_CMNIL97(s[2045]);
initC_CMOTHPAY1(s[2046]);
initC_CMOTHPAY2(s[2047]);
initC_CMOTHPAY3(s[2048]);
initC_CMOTHPAY4(s[2049]);
initC_CMOTHPAY5(s[2050]);
initC_CMOTHPAY6(s[2051]);
initC_CMOTHPAY7(s[2052]);
initC_CMOTHPAY8(s[2053]);
initC_CMOTHPAY9(s[2054]);
initC_CMOTHPAY10(s[2055]);
initC_CMOTHPAY11(s[2056]);
initC_CMOTHPAY96(s[2057]);
initC_CMOTHPAY97(s[2058]);
initC_CMKNDEVR1(s[2059]);
initC_CMKNDEVR2(s[2060]);
initC_CMKNDEVR3(s[2061]);
initC_CMKNDEVR4(s[2062]);
initC_CMKNDEVR96(s[2063]);
initC_CMKNDEVR97(s[2064]);
initC_EXPREAM(s[2065]);
initC_EXSAME(s[2066]);
initC_RETCHK(s[2067]);
initC_AGERET(s[2068]);
initC_RTPRO1(s[2069]);
initC_RTPRO2(s[2070]);
initC_RTPRO3(s[2071]);
initC_RTPRO4(s[2072]);
initC_RTPRO5(s[2073]);
initC_RTPRO6(s[2074]);
initC_RTCON1(s[2075]);
initC_RTCON2(s[2076]);
initC_RTCON3(s[2077]);
initC_RTCON4(s[2078]);
initC_PENMEX(s[2079]);
initC_PPPEX(s[2080]);
initC_PPPEXM(s[2081]);
initC_SPPEN(s[2082]);
initC_RTEXPJB(s[2083]);
initC_RTFND1(s[2084]);
initC_RTFND2(s[2085]);
initC_RTFND3(s[2086]);
initC_RTFND4(s[2087]);
initC_RTFND5(s[2088]);
initC_RTFND6(s[2089]);
initC_RTFND7(s[2090]);
initC_RTFND8(s[2091]);
initC_RTFND9(s[2092]);
initC_RTFND10(s[2093]);
initC_RTFND96(s[2094]);
initC_RETAMT(s[2095]);
initC_RETSUF(s[2096]);
initC_MIGPLNS(s[2097]);
initC_MIGCNTRY(s[2098]);
initC_VOTE1(s[2099]);
initC_VOTE2(s[2100]);
initC_VOTE3(s[2101]);
initC_VOTE4(s[2102]);
initC_VOTE5(s[2103]);
initC_VOTE6(s[2104]);
initC_PERPOLINF(s[2105]);
initC_COLBENS1(s[2106]);
initC_COLBENS2(s[2107]);
initC_COLBENS3(s[2108]);
initC_COLBENS4(s[2109]);
initC_NICLBNS1(s[2110]);
initC_NICLBNS2(s[2111]);
initC_NICLBNS3(s[2112]);
initC_NICLBNS4(s[2113]);
initC_CIVICDUTY(s[2114]);
initC_POLCOST(s[2115]);
initC_VOTENORM(s[2116]);
initC_PERBFTS(s[2117]);
initC_GRPBFTS(s[2118]);
initC_VOTEINTENT(s[2119]);
initC_DEMORIENT(s[2120]);
initC_POLEFF1(s[2121]);
initC_POLEFF2(s[2122]);
initC_POLEFF3(s[2123]);
initC_POLEFF4(s[2124]);
initC_NEWSOURCE1(s[2125]);
initC_NEWSOURCE2(s[2126]);
initC_NEWSOURCE3(s[2127]);
initC_NEWSOURCE4(s[2128]);
initC_NEWSOURCE5(s[2129]);
initC_NEWSOURCE6(s[2130]);
initC_NEWSOURCE7(s[2131]);
initC_NEWSOURCE8(s[2132]);
initC_NEWSOURCE9(s[2133]);
initC_NEWSOURCE10(s[2134]);
initC_NEWSOURCE11(s[2135]);
initC_NEWSOURCE12(s[2136]);
initC_NEWSOURCE96(s[2137]);
initC_NEWSMAIN(s[2138]);
initC_PAPERM2(s[2139]);
initC_TVM2(s[2140]);
initC_NETM2(s[2141]);
initC_TVHOURS(s[2142]);
initC_SCAC(s[2143]);
initC_SCRF1(s[2144]);
initC_SCRF2(s[2145]);
initC_SCRF3(s[2146]);
initC_SCRF4(s[2147]);
initC_SCRF5(s[2148]);
initC_SCRF6(s[2149]);
initC_SCRF97(s[2150]);
initC_SCUN1(s[2151]);
initC_SCUN2(s[2152]);
initC_SCUN3(s[2153]);
initC_SCUN97(s[2154]);
initC_SCSF1(s[2155]);
initC_SCSF2A(s[2156]);
initC_SCSF2B(s[2157]);
initC_SCSF3A(s[2158]);
initC_SCSF3B(s[2159]);
initC_SCSF4A(s[2160]);
initC_SCSF4B(s[2161]);
initC_SCSF5(s[2162]);
initC_SCSF6A(s[2163]);
initC_SCSF6B(s[2164]);
initC_SCSF6C(s[2165]);
initC_SCSF7(s[2166]);
initC_SCGHQA(s[2167]);
initC_SCGHQB(s[2168]);
initC_SCGHQC(s[2169]);
initC_SCGHQD(s[2170]);
initC_SCGHQE(s[2171]);
initC_SCGHQF(s[2172]);
initC_SCGHQG(s[2173]);
initC_SCGHQH(s[2174]);
initC_SCGHQI(s[2175]);
initC_SCGHQJ(s[2176]);
initC_SCGHQK(s[2177]);
initC_SCGHQL(s[2178]);
initC_SCOPNGBHA(s[2179]);
initC_SCOPNGBHB(s[2180]);
initC_SCOPNGBHC(s[2181]);
initC_SCOPNGBHD(s[2182]);
initC_SCOPNGBHE(s[2183]);
initC_SCOPNGBHF(s[2184]);
initC_SCOPNGBHG(s[2185]);
initC_SCOPNGBHH(s[2186]);
initC_SCLFSAT1(s[2187]);
initC_SCLFSAT2(s[2188]);
initC_SCLFSAT7(s[2189]);
initC_SCLFSATO(s[2190]);
initC_SCPTRT5A1(s[2191]);
initC_SCPTRT5C1(s[2192]);
initC_SCPTRT5E1(s[2193]);
initC_SCPTRT5N1(s[2194]);
initC_SCPTRT5O1(s[2195]);
initC_SCPTRT5A2(s[2196]);
initC_SCPTRT5C2(s[2197]);
initC_SCPTRT5E2(s[2198]);
initC_SCPTRT5N2(s[2199]);
initC_SCPTRT5O2(s[2200]);
initC_SCPTRT5A3(s[2201]);
initC_SCPTRT5C3(s[2202]);
initC_SCPTRT5E3(s[2203]);
initC_SCPTRT5N3(s[2204]);
initC_SCPTRT5O3(s[2205]);
initC_SEXUOR(s[2206]);
initC_SCRELPAREI(s[2207]);
initC_SCRELPARCD(s[2208]);
initC_SCRELPARWT(s[2209]);
initC_SCRELPARDS(s[2210]);
initC_SCRELPARRG(s[2211]);
initC_SCRELPARAR(s[2212]);
initC_SCRELPARIR(s[2213]);
initC_SCRELPARKS(s[2214]);
initC_SCPAROUTINT(s[2215]);
initC_SCRELHAPPY(s[2216]);
initC_WHORUPRO(s[2217]);
initC_WHORUEDU(s[2218]);
initC_WHORURAC(s[2219]);
initC_WHORUPOL(s[2220]);
initC_WHORUFAM(s[2221]);
initC_WHORUSEX(s[2222]);
initC_WHORUAGE(s[2223]);
initC_EATLIVU(s[2224]);
initC_FAMSUP(s[2225]);
initC_UPSET(s[2226]);
initC_LATE(s[2227]);
initC_SIBHIT(s[2228]);
initC_SIBSTEAL(s[2229]);
initC_SIBVERAB(s[2230]);
initC_SIBTEASE(s[2231]);
initC_HITSIB(s[2232]);
initC_STEALSIB(s[2233]);
initC_VERABSIB(s[2234]);
initC_TEASESIB(s[2235]);
initC_ARGM(s[2236]);
initC_ARGF(s[2237]);
initC_TLKM(s[2238]);
initC_TLKF(s[2239]);
initC_PARSCH(s[2240]);
initC_PAREVE(s[2241]);
initC_HASSTEP(s[2242]);
initC_STEPREL(s[2243]);
initC_YAJBSRV1(s[2244]);
initC_YAJBSRV2(s[2245]);
initC_YAJBSRV3(s[2246]);
initC_YAJBSRV4(s[2247]);
initC_YAJBSRV5(s[2248]);
initC_YAJBSRV6(s[2249]);
initC_YAJBSRV7(s[2250]);
initC_YAJBSRV96(s[2251]);
initC_FRPBULLI(s[2252]);
initC_FROBULLI(s[2253]);
initC_FRPBULLY(s[2254]);
initC_FROBULLY(s[2255]);
initC_EVRSMO(s[2256]);
initC_SMOFRQ(s[2257]);
initC_EVRALC(s[2258]);
initC_DKLM(s[2259]);
initC_FIVEALCDR(s[2260]);
initC_DRNK4W(s[2261]);
initC_DRGSOL(s[2262]);
initC_DRGMJ(s[2263]);
initC_DRGOTH(s[2264]);
initC_FRDRG(s[2265]);
initC_NCRR1(s[2266]);
initC_NCRRM(s[2267]);
initC_NCRRY4(s[2268]);
initC_NCRR3(s[2269]);
initC_NCRR4(s[2270]);
initC_NCRR5(s[2271]);
initC_NCRR6(s[2272]);
initC_NCRR8(s[2273]);
initC_NCRR9(s[2274]);
initC_NCRR11(s[2275]);
initC_NCRR12(s[2276]);
initC_CASIEND(s[2277]);
initC_LENINDINTV(s[2278]);
initC_FEDNTO_CODE(s[2279]);
initC_NETM2O_CODE(s[2280]);
initC_SCRX_CODE(s[2281]);
initC_SCUX_CODE(s[2282]);
initC_RHLAND_CODE(s[2283]);
initC_RPHMOB_CODE(s[2284]);
initC_RPHWRK_CODE(s[2285]);
initC_REMAIL_CODE(s[2286]);
initC_CTADD1_CODE(s[2287]);
initC_CTADD2_CODE(s[2288]);
initC_CTTOWN_CODE(s[2289]);
initC_CTCNTY_CODE(s[2290]);
initC_CTPCODE_CODE(s[2291]);
initC_CTTEL1_CODE(s[2292]);
initC_CTTEL2_CODE(s[2293]);
initC_CTEMAIL_CODE(s[2294]);
initC_MARSTAT(s[2295]);
initC_LIVESP(s[2296]);
initC_LIVEWITH(s[2297]);
initC_EMPLOY(s[2298]);
initC_LINGUA(s[2299]);
initC_PS1(s[2300]);
initC_PS2(s[2301]);
initC_PS3(s[2302]);
initC_PS4(s[2303]);
initC_PS5(s[2304]);
initC_PS6(s[2305]);
initC_PS7(s[2306]);
initC_PS8(s[2307]);
initC_PS9(s[2308]);
initC_PS10(s[2309]);
initC_PS11(s[2310]);
initC_PS12(s[2311]);
initC_PS13(s[2312]);
initC_PS14(s[2313]);
initC_PS15(s[2314]);
initC_PS16(s[2315]);
initC_PS17(s[2316]);
initC_PS18(s[2317]);
initC_PS19(s[2318]);
initC_PS20(s[2319]);
initC_PS21(s[2320]);
initC_PS22(s[2321]);
initC_PS23(s[2322]);
initC_PS24(s[2323]);
initC_PS25(s[2324]);
initC_PS26(s[2325]);
initC_PS27(s[2326]);
initC_PS28(s[2327]);
initC_PS29(s[2328]);
initC_PS30(s[2329]);
initC_PS31(s[2330]);
initC_PS32(s[2331]);
initC_PSNUMCH(s[2332]);
initC_PRECOG(s[2333]);
initC_MEMPER(s[2334]);
initC_WRDRECPRE(s[2335]);
initC_WRCOMPPRE(s[2336]);
initC_COMIMMLS11(s[2337]);
initC_COMIMMLS12(s[2338]);
initC_COMIMMLS13(s[2339]);
initC_COMIMMLS14(s[2340]);
initC_COMIMMLS15(s[2341]);
initC_COMIMMLS16(s[2342]);
initC_COMIMMLS17(s[2343]);
initC_COMIMMLS18(s[2344]);
initC_COMIMMLS19(s[2345]);
initC_COMIMMLS110(s[2346]);
initC_COMIMMLS196(s[2347]);
initC_COMIMMLS21(s[2348]);
initC_COMIMMLS22(s[2349]);
initC_COMIMMLS23(s[2350]);
initC_COMIMMLS24(s[2351]);
initC_COMIMMLS25(s[2352]);
initC_COMIMMLS26(s[2353]);
initC_COMIMMLS27(s[2354]);
initC_COMIMMLS28(s[2355]);
initC_COMIMMLS29(s[2356]);
initC_COMIMMLS210(s[2357]);
initC_COMIMMLS296(s[2358]);
initC_COMIMMLS31(s[2359]);
initC_COMIMMLS32(s[2360]);
initC_COMIMMLS33(s[2361]);
initC_COMIMMLS34(s[2362]);
initC_COMIMMLS35(s[2363]);
initC_COMIMMLS36(s[2364]);
initC_COMIMMLS37(s[2365]);
initC_COMIMMLS38(s[2366]);
initC_COMIMMLS39(s[2367]);
initC_COMIMMLS310(s[2368]);
initC_COMIMMLS396(s[2369]);
initC_COMIMMLS41(s[2370]);
initC_COMIMMLS42(s[2371]);
initC_COMIMMLS43(s[2372]);
initC_COMIMMLS44(s[2373]);
initC_COMIMMLS45(s[2374]);
initC_COMIMMLS46(s[2375]);
initC_COMIMMLS47(s[2376]);
initC_COMIMMLS48(s[2377]);
initC_COMIMMLS49(s[2378]);
initC_COMIMMLS410(s[2379]);
initC_COMIMMLS496(s[2380]);
initC_WRINTPRE(s[2381]);
initC_INTIMMLS11(s[2382]);
initC_INTIMMLS12(s[2383]);
initC_INTIMMLS13(s[2384]);
initC_INTIMMLS14(s[2385]);
initC_INTIMMLS15(s[2386]);
initC_INTIMMLS16(s[2387]);
initC_INTIMMLS17(s[2388]);
initC_INTIMMLS18(s[2389]);
initC_INTIMMLS19(s[2390]);
initC_INTIMMLS110(s[2391]);
initC_INTIMMLS196(s[2392]);
initC_INTIMMLS21(s[2393]);
initC_INTIMMLS22(s[2394]);
initC_INTIMMLS23(s[2395]);
initC_INTIMMLS24(s[2396]);
initC_INTIMMLS25(s[2397]);
initC_INTIMMLS26(s[2398]);
initC_INTIMMLS27(s[2399]);
initC_INTIMMLS28(s[2400]);
initC_INTIMMLS29(s[2401]);
initC_INTIMMLS210(s[2402]);
initC_INTIMMLS296(s[2403]);
initC_INTIMMLS31(s[2404]);
initC_INTIMMLS32(s[2405]);
initC_INTIMMLS33(s[2406]);
initC_INTIMMLS34(s[2407]);
initC_INTIMMLS35(s[2408]);
initC_INTIMMLS36(s[2409]);
initC_INTIMMLS37(s[2410]);
initC_INTIMMLS38(s[2411]);
initC_INTIMMLS39(s[2412]);
initC_INTIMMLS310(s[2413]);
initC_INTIMMLS396(s[2414]);
initC_INTIMMLS41(s[2415]);
initC_INTIMMLS42(s[2416]);
initC_INTIMMLS43(s[2417]);
initC_INTIMMLS44(s[2418]);
initC_INTIMMLS45(s[2419]);
initC_INTIMMLS46(s[2420]);
initC_INTIMMLS47(s[2421]);
initC_INTIMMLS48(s[2422]);
initC_INTIMMLS49(s[2423]);
initC_INTIMMLS410(s[2424]);
initC_INTIMMLS496(s[2425]);
initC_SUB7_1(s[2426]);
initC_SUB7_2(s[2427]);
initC_SUB7_3(s[2428]);
initC_SUB7_4(s[2429]);
initC_SUB7_5(s[2430]);
initC_NS200PRE(s[2431]);
initC_NS240(s[2432]);
initC_NS241(s[2433]);
initC_NS242(s[2434]);
initC_NS201G1(s[2435]);
initC_NS202H1(s[2436]);
initC_NS203I1(s[2437]);
initC_NS216C(s[2438]);
initC_NS204A1(s[2439]);
initC_NS205B1(s[2440]);
initC_NS206C1(s[2441]);
initC_NS207D1(s[2442]);
initC_NS208E1(s[2443]);
initC_NS209F1(s[2444]);
initC_NS210J1(s[2445]);
initC_NS211K1(s[2446]);
initC_NS212L1(s[2447]);
initC_NS213M1(s[2448]);
initC_NS214N1(s[2449]);
initC_NS215O1(s[2450]);
initC_NS221G2(s[2451]);
initC_NS222H2(s[2452]);
initC_NS223I2(s[2453]);
initC_NS226C(s[2454]);
initC_NS224A2(s[2455]);
initC_NS225B2(s[2456]);
initC_NS226C2(s[2457]);
initC_NS227D2(s[2458]);
initC_NS228E2(s[2459]);
initC_NS229F2(s[2460]);
initC_NS230J2(s[2461]);
initC_NS231K2(s[2462]);
initC_NS232L2(s[2463]);
initC_NS233M2(s[2464]);
initC_NS234N2(s[2465]);
initC_NS235O2(s[2466]);
initC_DELAYLS11(s[2467]);
initC_DELAYLS12(s[2468]);
initC_DELAYLS13(s[2469]);
initC_DELAYLS14(s[2470]);
initC_DELAYLS15(s[2471]);
initC_DELAYLS16(s[2472]);
initC_DELAYLS17(s[2473]);
initC_DELAYLS18(s[2474]);
initC_DELAYLS19(s[2475]);
initC_DELAYLS110(s[2476]);
initC_DELAYLS196(s[2477]);
initC_DELAYLS21(s[2478]);
initC_DELAYLS22(s[2479]);
initC_DELAYLS23(s[2480]);
initC_DELAYLS24(s[2481]);
initC_DELAYLS25(s[2482]);
initC_DELAYLS26(s[2483]);
initC_DELAYLS27(s[2484]);
initC_DELAYLS28(s[2485]);
initC_DELAYLS29(s[2486]);
initC_DELAYLS210(s[2487]);
initC_DELAYLS296(s[2488]);
initC_DELAYLS31(s[2489]);
initC_DELAYLS32(s[2490]);
initC_DELAYLS33(s[2491]);
initC_DELAYLS34(s[2492]);
initC_DELAYLS35(s[2493]);
initC_DELAYLS36(s[2494]);
initC_DELAYLS37(s[2495]);
initC_DELAYLS38(s[2496]);
initC_DELAYLS39(s[2497]);
initC_DELAYLS310(s[2498]);
initC_DELAYLS396(s[2499]);
initC_DELAYLS41(s[2500]);
initC_DELAYLS42(s[2501]);
initC_DELAYLS43(s[2502]);
initC_DELAYLS44(s[2503]);
initC_DELAYLS45(s[2504]);
initC_DELAYLS46(s[2505]);
initC_DELAYLS47(s[2506]);
initC_DELAYLS48(s[2507]);
initC_DELAYLS49(s[2508]);
initC_DELAYLS410(s[2509]);
initC_DELAYLS496(s[2510]);
initC_VFPRE(s[2511]);
initC_VFTCTW(s[2512]);
initC_NUABPRE(s[2513]);
initC_NASOFA(s[2514]);
initC_NADISEASE(s[2515]);
initC_NACAR(s[2516]);
initC_NADRINK(s[2517]);
initC_NALOTTERY(s[2518]);
initC_NAINTEREST(s[2519]);
initC_COGDIST(s[2520]);
initC_COGEND(s[2521]);
initC_HEARCOMPUTER(s[2522]);
initC_READTEST(s[2523]);
initC_WORDS1(s[2524]);
initC_WORDS2(s[2525]);
initC_WORDS3(s[2526]);
initC_WORDS4(s[2527]);
initC_VFCT(s[2528]);
initC_MEMCONT11(s[2529]);
initC_MEMCONT12(s[2530]);
initC_MEMCONT13(s[2531]);
initC_MEMCONT21(s[2532]);
initC_MEMCONT22(s[2533]);
initC_MEMCONT23(s[2534]);
initC_MEMCONT24(s[2535]);
initC_MEMCONT25(s[2536]);
initC_MEMCONT26(s[2537]);
initC_MEMCONT27(s[2538]);
initC_MEMCONT28(s[2539]);
initC_MEMCONT29(s[2540]);
initC_MEMCONT210(s[2541]);
initC_MEMCONT211(s[2542]);
initC_MEMCONT212(s[2543]);
initC_MEMCONT213(s[2544]);
initC_MEMCONT214(s[2545]);
initC_MEMCONT215(s[2546]);
initC_MEMCONT216(s[2547]);
initC_MEMCONT3(s[2548]);
initC_MEMPROB1(s[2549]);
initC_MEMPROB2(s[2550]);
initC_MEMPROB3(s[2551]);
initC_MEMPROB4(s[2552]);
initC_MEMAID(s[2553]);
initC_IMMSTOP1(s[2554]);
initC_IMMSTOP2(s[2555]);
initC_IMMSTOP3(s[2556]);
initC_IMMSTOP4(s[2557]);
initC_IMMSTOP5(s[2558]);
initC_IMMSTOP6(s[2559]);
initC_IMMSTOP7(s[2560]);
initC_IMMSTOP8(s[2561]);
initC_IMMSTOP97(s[2562]);
initC_SEVENSPAP(s[2563]);
initC_SUBCONT11(s[2564]);
initC_SUBCONT12(s[2565]);
initC_SUBCONT13(s[2566]);
initC_SUBCONT21(s[2567]);
initC_SUBCONT22(s[2568]);
initC_SUBCONT23(s[2569]);
initC_SUBCONT24(s[2570]);
initC_SUBCONT25(s[2571]);
initC_SUBCONT26(s[2572]);
initC_SUBCONT27(s[2573]);
initC_SUBCONT28(s[2574]);
initC_SUBCONT29(s[2575]);
initC_SUBCONT210(s[2576]);
initC_SUBCONT211(s[2577]);
initC_SUBCONT212(s[2578]);
initC_SUBCONT213(s[2579]);
initC_SUBCONT214(s[2580]);
initC_SUBCONT215(s[2581]);
initC_SUBCONT216(s[2582]);
initC_SUBCONT3(s[2583]);
initC_SUB7STOP1(s[2584]);
initC_SUB7STOP2(s[2585]);
initC_SUB7STOP3(s[2586]);
initC_SUB7STOP4(s[2587]);
initC_SUB7STOP5(s[2588]);
initC_SUB7STOP6(s[2589]);
initC_SUB7STOP7(s[2590]);
initC_SUB7STOP8(s[2591]);
initC_SUB7STOP97(s[2592]);
initC_NSCONT11(s[2593]);
initC_NSCONT12(s[2594]);
initC_NSCONT13(s[2595]);
initC_NSCONT21(s[2596]);
initC_NSCONT22(s[2597]);
initC_NSCONT23(s[2598]);
initC_NSCONT24(s[2599]);
initC_NSCONT25(s[2600]);
initC_NSCONT26(s[2601]);
initC_NSCONT27(s[2602]);
initC_NSCONT28(s[2603]);
initC_NSCONT29(s[2604]);
initC_NSCONT210(s[2605]);
initC_NSCONT211(s[2606]);
initC_NSCONT212(s[2607]);
initC_NSCONT213(s[2608]);
initC_NSCONT214(s[2609]);
initC_NSCONT215(s[2610]);
initC_NSCONT216(s[2611]);
initC_NSCONT3(s[2612]);
initC_NSSTOP1(s[2613]);
initC_NSSTOP2(s[2614]);
initC_NSSTOP3(s[2615]);
initC_NSSTOP4(s[2616]);
initC_NSSTOP5(s[2617]);
initC_NSSTOP6(s[2618]);
initC_NSSTOP7(s[2619]);
initC_NSSTOP8(s[2620]);
initC_NSSTOP97(s[2621]);
initC_DMEMCONT11(s[2622]);
initC_DMEMCONT12(s[2623]);
initC_DMEMCONT13(s[2624]);
initC_DMEMCONT21(s[2625]);
initC_DMEMCONT22(s[2626]);
initC_DMEMCONT23(s[2627]);
initC_DMEMCONT24(s[2628]);
initC_DMEMCONT25(s[2629]);
initC_DMEMCONT26(s[2630]);
initC_DMEMCONT27(s[2631]);
initC_DMEMCONT28(s[2632]);
initC_DMEMCONT29(s[2633]);
initC_DMEMCONT210(s[2634]);
initC_DMEMCONT211(s[2635]);
initC_DMEMCONT212(s[2636]);
initC_DMEMCONT213(s[2637]);
initC_DMEMCONT214(s[2638]);
initC_DMEMCONT215(s[2639]);
initC_DMEMCONT216(s[2640]);
initC_DMEMCONT3(s[2641]);
initC_DELAYSTOP1(s[2642]);
initC_DELAYSTOP2(s[2643]);
initC_DELAYSTOP3(s[2644]);
initC_DELAYSTOP4(s[2645]);
initC_DELAYSTOP5(s[2646]);
initC_DELAYSTOP6(s[2647]);
initC_DELAYSTOP7(s[2648]);
initC_DELAYSTOP8(s[2649]);
initC_DELAYSTOP97(s[2650]);
initC_VFCONT11(s[2651]);
initC_VFCONT12(s[2652]);
initC_VFCONT13(s[2653]);
initC_VFCONT21(s[2654]);
initC_VFCONT22(s[2655]);
initC_VFCONT23(s[2656]);
initC_VFCONT24(s[2657]);
initC_VFCONT25(s[2658]);
initC_VFCONT26(s[2659]);
initC_VFCONT27(s[2660]);
initC_VFCONT28(s[2661]);
initC_VFCONT29(s[2662]);
initC_VFCONT210(s[2663]);
initC_VFCONT211(s[2664]);
initC_VFCONT212(s[2665]);
initC_VFCONT213(s[2666]);
initC_VFCONT214(s[2667]);
initC_VFCONT215(s[2668]);
initC_VFCONT216(s[2669]);
initC_VFCONT3(s[2670]);
initC_VFSTOP1(s[2671]);
initC_VFSTOP2(s[2672]);
initC_VFSTOP3(s[2673]);
initC_VFSTOP4(s[2674]);
initC_VFSTOP5(s[2675]);
initC_VFSTOP6(s[2676]);
initC_VFSTOP7(s[2677]);
initC_VFSTOP8(s[2678]);
initC_VFSTOP97(s[2679]);
initC_NACONT11(s[2680]);
initC_NACONT12(s[2681]);
initC_NACONT13(s[2682]);
initC_NACONT21(s[2683]);
initC_NACONT22(s[2684]);
initC_NACONT23(s[2685]);
initC_NACONT24(s[2686]);
initC_NACONT25(s[2687]);
initC_NACONT26(s[2688]);
initC_NACONT27(s[2689]);
initC_NACONT28(s[2690]);
initC_NACONT29(s[2691]);
initC_NACONT210(s[2692]);
initC_NACONT211(s[2693]);
initC_NACONT212(s[2694]);
initC_NACONT213(s[2695]);
initC_NACONT214(s[2696]);
initC_NACONT215(s[2697]);
initC_NACONT216(s[2698]);
initC_NACONT3(s[2699]);
initC_NASTOP1(s[2700]);
initC_NASTOP2(s[2701]);
initC_NASTOP3(s[2702]);
initC_NASTOP4(s[2703]);
initC_NASTOP5(s[2704]);
initC_NASTOP6(s[2705]);
initC_NASTOP7(s[2706]);
initC_NASTOP8(s[2707]);
initC_NASTOP97(s[2708]);
initC_LICENG(s[2709]);
initC_LICTRANS(s[2710]);
initC_LICWHO(s[2711]);
initC_CLANGAB(s[2712]);
initC_IVCOOP(s[2713]);
initC_SUSP(s[2714]);
initC_UNDQUS(s[2715]);
initC_IVPRSNT(s[2716]);
initC_IVINFNCE(s[2717]);
initC_IVAFFCT11(s[2718]);
initC_IVAFFCT12(s[2719]);
initC_IVAFFCT13(s[2720]);
initC_IVAFFCT14(s[2721]);
initC_IVAFFCT15(s[2722]);
initC_IVAFFCT17(s[2723]);
initC_IVAFFCT21(s[2724]);
initC_IVAFFCT22(s[2725]);
initC_IVAFFCT23(s[2726]);
initC_IVAFFCT27(s[2727]);
initC_IVAFFCT30(s[2728]);
initC_IVAFFCT97(s[2729]);
initC_IVLIENG(s[2730]);
initC_IVLITRANS(s[2731]);
initC_IVLIWHO(s[2732]);
initC_IVLIBAL(s[2733]);
initC_PREL(s[2734]);
initC_PREASON(s[2735]);
initC_PRIPN(s[2736]);
initC_PJULK4WK(s[2737]);
initC_PJBPTFT(s[2738]);
initC_PJSPTFT(s[2739]);
initC_PREARN(s[2740]);
initC_PREARNW(s[2741]);
initC_PREARNA(s[2742]);
initC_PBNFT1(s[2743]);
initC_PBNFT2(s[2744]);
initC_PBNFT3(s[2745]);
initC_PBNFT4(s[2746]);
initC_PBNFT5(s[2747]);
initC_PBNFT6(s[2748]);
initC_PBNFT7(s[2749]);
initC_PBNFT8(s[2750]);
initC_PBNFT9(s[2751]);
initC_PBNFT10(s[2752]);
initC_PBNFT11(s[2753]);
initC_PBNFT12(s[2754]);
initC_PBNFT96(s[2755]);
initC_NETUSE(s[2756]);
initC_PRFITB(s[2757]);
initC_PRFITBW(s[2758]);
initC_PRFITBA(s[2759]);
initC_HGBIOM(s[2760]);
initC_HGBIOF(s[2761]);
initC_RESPM16(s[2762]);
initC_RESPF16(s[2763]);
initC_HGADOPTM(s[2764]);
initC_HGADOPTF(s[2765]);
initC_HGPART(s[2766]);
initC_ORIGADD(s[2767]);
initC_INDMODE(s[2768]);
initC_ISTRTDATHH(s[2769]);
initC_ISTRTDATMM(s[2770]);
initC_ISTRTDATSS(s[2771]);
initC_IENDDATHH(s[2772]);
initC_IENDDATMM(s[2773]);
initC_IENDDATSS(s[2774]);
initC_J2PAY_IF(s[2775]);
initC_FIMNGRS_TC(s[2776]);
initC_FIMNGRS_DV(s[2777]);
initC_FIMNLABGRS_TC(s[2778]);
initC_FIMNLABGRS_DV(s[2779]);
initC_FIMNLABNET_TC(s[2780]);
initC_FIMNLABNET_DV(s[2781]);
initC_FIYRINVINC_TC(s[2782]);
initC_FIYRINVINC_DV(s[2783]);
initC_FIBENOTHR_TC(s[2784]);
initC_FIBENOTHR_DV(s[2785]);
initC_PAYGL(s[2786]);
initC_PAYNL(s[2787]);
initC_JSPRF(s[2788]);
initC_PAYGU_DV(s[2789]);
initC_PAYG_DV(s[2790]);
initC_PAYNU_DV(s[2791]);
initC_PAYN_DV(s[2792]);
initC_SEEARNGRS_DV(s[2793]);
initC_SEEARNNET_DV(s[2794]);
initC_J2PAY_DV(s[2795]);
initC_J2PAYNET_DV(s[2796]);
initC_PPSEX(s[2797]);
initC_FNPID(s[2798]);
initC_MNPID(s[2799]);
initC_PN1PID(s[2800]);
initC_PN1PNO(s[2801]);
initC_PN1SEX(s[2802]);
initC_PN2PID(s[2803]);
initC_PN2PNO(s[2804]);
initC_PN2SEX(s[2805]);
initC_PNS1PID(s[2806]);
initC_PNS1PNO(s[2807]);
initC_PNS1SEX(s[2808]);
initC_PNS2PID(s[2809]);
initC_PNS2PNO(s[2810]);
initC_PNS2SEX(s[2811]);
initC_GRFPID(s[2812]);
initC_GRMPID(s[2813]);
initC_FF_IVLOLW(s[2814]);
initC_FF_EVERINT(s[2815]);
initC_FF_JBSTAT(s[2816]);
initC_FF_EMPLW(s[2817]);
initC_FF_TEL(s[2818]);
initC_FF_JBSEMP(s[2819]);
initC_FF_JBMNGR(s[2820]);
initC_FF_JBSIZE(s[2821]);
initC_FF_OPRLG(s[2822]);
initC_FF_OPRLG0(s[2823]);
initC_FF_OPRLG0NI(s[2824]);
initC_FF_UKBORN(s[2825]);
initC_FF_YR2UK4(s[2826]);
initC_FF_BENTYPE01(s[2827]);
initC_FF_BENTYPE02(s[2828]);
initC_FF_BENTYPE03(s[2829]);
initC_FF_BENTYPE04(s[2830]);
initC_FF_BENTYPE05(s[2831]);
initC_FF_BENTYPE06(s[2832]);
initC_FF_BENTYPE07(s[2833]);
initC_FF_BENTYPE08(s[2834]);
initC_FF_BENTYPE09(s[2835]);
initC_FF_BENTYPE10(s[2836]);
initC_FF_BENTYPE11(s[2837]);
initC_FF_BENTYPE12(s[2838]);
initC_FF_BENTYPE13(s[2839]);
initC_FF_BENTYPE14(s[2840]);
initC_FF_BENTYPE15(s[2841]);
initC_FF_BENTYPE16(s[2842]);
initC_FF_BENTYPE17(s[2843]);
initC_FF_BENTYPE18(s[2844]);
initC_FF_BENTYPE19(s[2845]);
initC_FF_BENTYPE20(s[2846]);
initC_FF_BENTYPE21(s[2847]);
initC_FF_BENTYPE22(s[2848]);
initC_FF_BENTYPE23(s[2849]);
initC_FF_BENTYPE24(s[2850]);
initC_FF_BENTYPE25(s[2851]);
initC_FF_BENTYPE26(s[2852]);
initC_FF_BENTYPE27(s[2853]);
initC_FF_BENTYPE28(s[2854]);
initC_FF_BENTYPE29(s[2855]);
initC_FF_BENTYPE30(s[2856]);
initC_FF_BENTYPE31(s[2857]);
initC_FF_BENTYPE32(s[2858]);
initC_FF_BENTYPE33(s[2859]);
initC_FF_BENTYPE34(s[2860]);
initC_FF_BENTYPE35(s[2861]);
initC_FF_BENTYPE36(s[2862]);
initC_FF_BENTYPE37(s[2863]);
initC_FF_BENTYPE38(s[2864]);
initC_FF_BENTYPE39(s[2865]);
initC_FF_IVINTLANG(s[2866]);
initC_SEX_DV(s[2867]);
initC_AGE_DV(s[2868]);
initC_ETHN_DV(s[2869]);
initC_FIMNMISC_DV(s[2870]);
initC_FIMNPRBEN_DV(s[2871]);
initC_FIMNINVNET_DV(s[2872]);
initC_FIMNPEN_DV(s[2873]);
initC_FIMNSBEN_DV(s[2874]);
initC_FIMNNET_DV(s[2875]);
initC_INTDATD_DV(s[2876]);
initC_INTDATM_DV(s[2877]);
initC_INTDATY_DV(s[2878]);
initC_DOBY_DV(s[2879]);
initC_PENSIONER_DV(s[2880]);
initC_NPN_DV(s[2881]);
initC_NPNS_DV(s[2882]);
initC_NGRP_DV(s[2883]);
initC_NNSIB_DV(s[2884]);
initC_NNSSIB_DV(s[2885]);
initC_NPENSIONER_DV(s[2886]);
initC_JBSOCGR_DV(s[2887]);
initC_NBRSNCI_DV(s[2888]);
initC_NBRCOH_DV(s[2889]);
initC_NBRCOHDK_DV(s[2890]);
initC_SCDASSAT_DV(s[2891]);
initC_COUNTRY(s[2892]);
initC_GOR_DV(s[2893]);
initC_URBAN_DV(s[2894]);
initC_HHRESP_DV(s[2895]);
initC_XTRA5MIN_DV(s[2896]);
initC_XTRA5MINOSM_DV(s[2897]);
initC_AGEGR5_DV(s[2898]);
initC_AGEGR10_DV(s[2899]);
initC_AGEGR13_DV(s[2900]);
initC_LIVESP_DV(s[2901]);
initC_COHAB_DV(s[2902]);
initC_SINGLE_DV(s[2903]);
initC_MASTAT_DV(s[2904]);
initC_HHTYPE_DV(s[2905]);
initC_BUNO_DV(s[2906]);
initC_DEPCHL_DV(s[2907]);
initC_NCHILD_DV(s[2908]);
initC_NDEPCHL_DV(s[2909]);
initC_RESPM16_DV(s[2910]);
initC_RESPF16_DV(s[2911]);
initC_RACH16_DV(s[2912]);
initC_HRPID(s[2913]);
initC_HRPNO(s[2914]);
initC_PPID(s[2915]);
initC_PPNO(s[2916]);
initC_SPPID(s[2917]);
initC_SPPNO(s[2918]);
initC_FNPNO(s[2919]);
initC_FNSPID(s[2920]);
initC_FNSPNO(s[2921]);
initC_MNPNO(s[2922]);
initC_MNSPID(s[2923]);
initC_MNSPNO(s[2924]);
initC_GRFPNO(s[2925]);
initC_GRMPNO(s[2926]);
initC_QFHIGH_DV(s[2927]);
initC_NQFHIGH_DV(s[2928]);
initC_QFHIGHFL_DV(s[2929]);
initC_HIQUAL_DV(s[2930]);
initC_NHIQUAL_DV(s[2931]);
initC_NNMPSP_DV(s[2932]);
initC_NMPSP_DV(s[2933]);
initC_NUNMPSP_DV(s[2934]);
initC_JBFT_DV(s[2935]);
initC_JBSOC00_CC(s[2936]);
initC_JBSOC10_CC(s[2937]);
initC_JBSIC07_CC(s[2938]);
initC_JBIINDB_DV(s[2939]);
initC_JBES2000(s[2940]);
initC_JBSEG_DV(s[2941]);
initC_JBRGSC_DV(s[2942]);
initC_JBNSSEC_DV(s[2943]);
initC_JBNSSEC8_DV(s[2944]);
initC_JBNSSEC5_DV(s[2945]);
initC_JBNSSEC3_DV(s[2946]);
initC_JBISCO88_CC(s[2947]);
initC_JLSOC00_CC(s[2948]);
initC_JLSOC10_CC(s[2949]);
initC_JLSIC07_CC(s[2950]);
initC_JLIINDB_DV(s[2951]);
initC_JLES2000(s[2952]);
initC_JLSEG_DV(s[2953]);
initC_JLRGSC_DV(s[2954]);
initC_JLNSSEC_DV(s[2955]);
initC_JLNSSEC8_DV(s[2956]);
initC_JLNSSEC5_DV(s[2957]);
initC_JLNSSEC3_DV(s[2958]);
initC_JLISCO88_CC(s[2959]);
initC_PASOC90_CC(s[2960]);
initC_PASOC00_CC(s[2961]);
initC_PASOC10_CC(s[2962]);
initC_PANSSEC5_DV(s[2963]);
initC_MASOC90_CC(s[2964]);
initC_MASOC00_CC(s[2965]);
initC_MASOC10_CC(s[2966]);
initC_MANSSEC5_DV(s[2967]);
initC_J1SOC90_CC(s[2968]);
initC_J1SOC00_CC(s[2969]);
initC_J1SOC10_CC(s[2970]);
initC_J1NSSEC5_DV(s[2971]);
initC_J2SOC90_CC(s[2972]);
initC_J2SOC00_CC(s[2973]);
initC_J2SOC10_CC(s[2974]);
initC_J2NSSEC5_DV(s[2975]);
initC_YASOC90_CC(s[2976]);
initC_YASOC00_CC(s[2977]);
initC_YASOC10_CC(s[2978]);
initC_YANSSEC5_DV(s[2979]);
initC_SCGHQ1_DV(s[2980]);
initC_SCGHQ2_DV(s[2981]);
initC_SF12PCS_DV(s[2982]);
initC_SF12MCS_DV(s[2983]);
initC_BIG5A_DV(s[2984]);
initC_BIG5C_DV(s[2985]);
initC_BIG5E_DV(s[2986]);
initC_BIG5N_DV(s[2987]);
initC_BIG5O_DV(s[2988]);
initC_PSDQA_DV(s[2989]);
initC_PSDQB_DV(s[2990]);
initC_PSDQC_DV(s[2991]);
initC_SCFLAG_DV(s[2992]);
initC_ATTACKED_DV(s[2993]);
initC_AVOIDED_DV(s[2994]);
initC_INSULTED_DV(s[2995]);
initC_UNSAFE_DV(s[2996]);
initC_CGSRMEM_DV(s[2997]);
initC_CGSRMEM2_DV(s[2998]);
initC_CGWRI1_DV(s[2999]);
initC_CGWRI2_DV(s[3000]);
initC_CGWRI3_DV(s[3001]);
initC_CGWRI4_DV(s[3002]);
initC_CGWRI_DV(s[3003]);
initC_CGIVWRI1_DV(s[3004]);
initC_CGWRD_DV(s[3005]);
initC_CGIVWRD1_DV(s[3006]);
initC_CGS7CS_DV(s[3007]);
initC_CGS7N_DV(s[3008]);
initC_CGS7CA_DV(s[3009]);
initC_CGIVS71_DV(s[3010]);
initC_CGNS1A_DV(s[3011]);
initC_CGNS1B_DV(s[3012]);
initC_CGNS2A_DV(s[3013]);
initC_CGNS2B_DV(s[3014]);
initC_CGNS1SC6_DV(s[3015]);
initC_CGNS1SC10_DV(s[3016]);
initC_CGNS2SC6_DV(s[3017]);
initC_CGNS2SC10_DV(s[3018]);
initC_CGIVNS1_DV(s[3019]);
initC_CGVFC_DV(s[3020]);
initC_CGVFW_DV(s[3021]);
initC_CGIVVF1_DV(s[3022]);
initC_CGNA_DV(s[3023]);
initC_CGIVNA1_DV(s[3024]);
initC_PAYU_DV(s[3025]);
initC_PAYGU_IF(s[3026]);
initC_PAYNU_IF(s[3027]);
initC_SEEARNGRS_IF(s[3028]);
initC_FIYRINVINC_IF(s[3029]);
initC_FIBENOTHR_IF(s[3030]);
initC_FIMNLABGRS_IF(s[3031]);
initC_FIMNGRS_IF(s[3032]);
initC_INDIN91_LW(s[3033]);
initC_INDIN01_LW(s[3034]);
initC_INDPXUS_LW(s[3035]);
initC_INDINUS_LW(s[3036]);
initC_INDSCUS_LW(s[3037]);
initC_IND5MUS_LW(s[3038]);
initC_INDPXUB_LW(s[3039]);
initC_INDINUB_LW(s[3040]);
initC_INDSCUB_LW(s[3041]);
initC_INDNS91_LW(s[3042]);
initC_INDBD91_LW(s[3043]);
initC_INDNSUB_LW(s[3044]);
initC_INDBDUB_LW(s[3045]);
initC_INDPXUB_XW(s[3046]);
initC_INDINUB_XW(s[3047]);
initC_INDSCUB_XW(s[3048]);
initC_IND5MUS_XW(s[3049]);
initC_RACEL_DV(s[3050]);
}
}
